
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001aba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000214  00800060  00001aba  00001b4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000019f  00800274  00800274  00001d62  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001dc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000afc  00000000  00000000  00001e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c3  00000000  00000000  00002958  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b9  00000000  00000000  0000301b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  000036d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000418  00000000  00000000  000038d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000061d  00000000  00000000  00003ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00004305  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 9c 01 	jmp	0x338	; 0x338 <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_11>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_13>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	ea eb       	ldi	r30, 0xBA	; 186
     1a6:	fa e1       	ldi	r31, 0x1A	; 26
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a4 37       	cpi	r26, 0x74	; 116
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	24 e0       	ldi	r18, 0x04	; 4
     1b6:	a4 e7       	ldi	r26, 0x74	; 116
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a3 31       	cpi	r26, 0x13	; 19
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <main>
     1c8:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <getChar>:
    while(c!='S') {
        c=getChar();
    }
    for(int i=0; i<12; ++i)
        getChar(); //flush ServedClient out of read buffer
}
     1d0:	e0 91 77 02 	lds	r30, 0x0277	; 0x800277 <rx_ReadPos>
     1d4:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <rx_WritePos>
     1d8:	e8 17       	cp	r30, r24
     1da:	69 f0       	breq	.+26     	; 0x1f6 <getChar+0x26>
     1dc:	91 e0       	ldi	r25, 0x01	; 1
     1de:	9e 0f       	add	r25, r30
     1e0:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <rx_ReadPos>
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	ea 5f       	subi	r30, 0xFA	; 250
     1e8:	fc 4f       	sbci	r31, 0xFC	; 252
     1ea:	80 81       	ld	r24, Z
     1ec:	99 23       	and	r25, r25
     1ee:	24 f4       	brge	.+8      	; 0x1f8 <getChar+0x28>
     1f0:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <rx_ReadPos>
     1f4:	08 95       	ret
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	08 95       	ret

000001fa <__vector_11>:
     1fa:	1f 92       	push	r1
     1fc:	0f 92       	push	r0
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	0f 92       	push	r0
     202:	11 24       	eor	r1, r1
     204:	8f 93       	push	r24
     206:	9f 93       	push	r25
     208:	ef 93       	push	r30
     20a:	ff 93       	push	r31
     20c:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <rx_WritePos>
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	8e 0f       	add	r24, r30
     214:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <rx_WritePos>
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	9c b1       	in	r25, 0x0c	; 12
     21c:	ea 5f       	subi	r30, 0xFA	; 250
     21e:	fc 4f       	sbci	r31, 0xFC	; 252
     220:	90 83       	st	Z, r25
     222:	88 23       	and	r24, r24
     224:	14 f4       	brge	.+4      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
     226:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <rx_WritePos>
     22a:	ff 91       	pop	r31
     22c:	ef 91       	pop	r30
     22e:	9f 91       	pop	r25
     230:	8f 91       	pop	r24
     232:	0f 90       	pop	r0
     234:	0f be       	out	0x3f, r0	; 63
     236:	0f 90       	pop	r0
     238:	1f 90       	pop	r1
     23a:	18 95       	reti

0000023c <appendSerial>:
     23c:	e0 91 74 02 	lds	r30, 0x0274	; 0x800274 <__data_end>
     240:	91 e0       	ldi	r25, 0x01	; 1
     242:	9e 0f       	add	r25, r30
     244:	90 93 74 02 	sts	0x0274, r25	; 0x800274 <__data_end>
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	ea 57       	subi	r30, 0x7A	; 122
     24c:	fc 4f       	sbci	r31, 0xFC	; 252
     24e:	80 83       	st	Z, r24
     250:	99 23       	and	r25, r25
     252:	14 f4       	brge	.+4      	; 0x258 <appendSerial+0x1c>
     254:	10 92 74 02 	sts	0x0274, r1	; 0x800274 <__data_end>
     258:	08 95       	ret

0000025a <__vector_13>:
     25a:	1f 92       	push	r1
     25c:	0f 92       	push	r0
     25e:	0f b6       	in	r0, 0x3f	; 63
     260:	0f 92       	push	r0
     262:	11 24       	eor	r1, r1
     264:	8f 93       	push	r24
     266:	ef 93       	push	r30
     268:	ff 93       	push	r31
     26a:	e0 91 75 02 	lds	r30, 0x0275	; 0x800275 <tx_ReadPos>
     26e:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <__data_end>
     272:	e8 17       	cp	r30, r24
     274:	49 f0       	breq	.+18     	; 0x288 <__vector_13+0x2e>
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	8e 0f       	add	r24, r30
     27a:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <tx_ReadPos>
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ea 57       	subi	r30, 0x7A	; 122
     282:	fc 4f       	sbci	r31, 0xFC	; 252
     284:	80 81       	ld	r24, Z
     286:	8c b9       	out	0x0c, r24	; 12
     288:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <tx_ReadPos>
     28c:	88 23       	and	r24, r24
     28e:	14 f4       	brge	.+4      	; 0x294 <__vector_13+0x3a>
     290:	10 92 75 02 	sts	0x0275, r1	; 0x800275 <tx_ReadPos>
     294:	ff 91       	pop	r31
     296:	ef 91       	pop	r30
     298:	8f 91       	pop	r24
     29a:	0f 90       	pop	r0
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	0f 90       	pop	r0
     2a0:	1f 90       	pop	r1
     2a2:	18 95       	reti

000002a4 <serialWrite>:
     2a4:	1f 93       	push	r17
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	ec 01       	movw	r28, r24
     2ac:	10 e0       	ldi	r17, 0x00	; 0
     2ae:	07 c0       	rjmp	.+14     	; 0x2be <serialWrite+0x1a>
     2b0:	fe 01       	movw	r30, r28
     2b2:	e8 0f       	add	r30, r24
     2b4:	f9 1f       	adc	r31, r25
     2b6:	80 81       	ld	r24, Z
     2b8:	0e 94 1e 01 	call	0x23c	; 0x23c <appendSerial>
     2bc:	1f 5f       	subi	r17, 0xFF	; 255
     2be:	81 2f       	mov	r24, r17
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	fe 01       	movw	r30, r28
     2c4:	01 90       	ld	r0, Z+
     2c6:	00 20       	and	r0, r0
     2c8:	e9 f7       	brne	.-6      	; 0x2c4 <serialWrite+0x20>
     2ca:	31 97       	sbiw	r30, 0x01	; 1
     2cc:	ec 1b       	sub	r30, r28
     2ce:	fd 0b       	sbc	r31, r29
     2d0:	8e 17       	cp	r24, r30
     2d2:	9f 07       	cpc	r25, r31
     2d4:	68 f3       	brcs	.-38     	; 0x2b0 <serialWrite+0xc>
     2d6:	5d 99       	sbic	0x0b, 5	; 11
     2d8:	1c b8       	out	0x0c, r1	; 12
     2da:	df 91       	pop	r29
     2dc:	cf 91       	pop	r28
     2de:	1f 91       	pop	r17
     2e0:	08 95       	ret

000002e2 <sendCommand>:
     2e2:	0f 93       	push	r16
     2e4:	1f 93       	push	r17
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	8c 01       	movw	r16, r24
     2ec:	0e 94 52 01 	call	0x2a4	; 0x2a4 <serialWrite>
     2f0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     2f4:	11 c0       	rjmp	.+34     	; 0x318 <sendCommand+0x36>
     2f6:	86 34       	cpi	r24, 0x46	; 70
     2f8:	69 f4       	brne	.+26     	; 0x314 <sendCommand+0x32>
     2fa:	04 c0       	rjmp	.+8      	; 0x304 <sendCommand+0x22>
     2fc:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     300:	21 96       	adiw	r28, 0x01	; 1
     302:	02 c0       	rjmp	.+4      	; 0x308 <sendCommand+0x26>
     304:	c0 e0       	ldi	r28, 0x00	; 0
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c5 30       	cpi	r28, 0x05	; 5
     30a:	d1 05       	cpc	r29, r1
     30c:	bc f3       	brlt	.-18     	; 0x2fc <sendCommand+0x1a>
     30e:	c8 01       	movw	r24, r16
     310:	0e 94 52 01 	call	0x2a4	; 0x2a4 <serialWrite>
     314:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     318:	83 35       	cpi	r24, 0x53	; 83
     31a:	69 f7       	brne	.-38     	; 0x2f6 <sendCommand+0x14>
     31c:	c0 e0       	ldi	r28, 0x00	; 0
     31e:	d0 e0       	ldi	r29, 0x00	; 0
     320:	03 c0       	rjmp	.+6      	; 0x328 <sendCommand+0x46>
     322:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     326:	21 96       	adiw	r28, 0x01	; 1
     328:	c8 30       	cpi	r28, 0x08	; 8
     32a:	d1 05       	cpc	r29, r1
     32c:	d4 f3       	brlt	.-12     	; 0x322 <sendCommand+0x40>
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	08 95       	ret

00000338 <__vector_8>:

ISR(TIMER1_OVF_vect) {
     338:	1f 92       	push	r1
     33a:	0f 92       	push	r0
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	0f 92       	push	r0
     340:	11 24       	eor	r1, r1
     342:	8f 92       	push	r8
     344:	9f 92       	push	r9
     346:	af 92       	push	r10
     348:	bf 92       	push	r11
     34a:	cf 92       	push	r12
     34c:	df 92       	push	r13
     34e:	ef 92       	push	r14
     350:	ff 92       	push	r15
     352:	0f 93       	push	r16
     354:	1f 93       	push	r17
     356:	2f 93       	push	r18
     358:	3f 93       	push	r19
     35a:	4f 93       	push	r20
     35c:	5f 93       	push	r21
     35e:	6f 93       	push	r22
     360:	7f 93       	push	r23
     362:	8f 93       	push	r24
     364:	9f 93       	push	r25
     366:	af 93       	push	r26
     368:	bf 93       	push	r27
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	ef 93       	push	r30
     370:	ff 93       	push	r31
    int counter =0;


    

    if(!first) {
     372:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <first>
     376:	81 11       	cpse	r24, r1
     378:	1d c2       	rjmp	.+1082   	; 0x7b4 <__stack+0x355>
     37a:	c1 2c       	mov	r12, r1
     37c:	d1 2c       	mov	r13, r1
     37e:	c0 e0       	ldi	r28, 0x00	; 0
     380:	d0 e0       	ldi	r29, 0x00	; 0
     382:	02 c1       	rjmp	.+516    	; 0x588 <__stack+0x129>
            failed=false;
            /*strcpy(string_to_send, "ESP:ssid:\"Sens_Board");
            itoa(k, conv_buffer, 10);
            strcat(string_to_send, conv_buffer);
            strcat(string_to_send, "\"\n");*/
            sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k);
     384:	df 92       	push	r13
     386:	cf 92       	push	r12
     388:	80 e6       	ldi	r24, 0x60	; 96
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	9f 93       	push	r25
     38e:	8f 93       	push	r24
     390:	84 e8       	ldi	r24, 0x84	; 132
     392:	92 e0       	ldi	r25, 0x02	; 2
     394:	9f 93       	push	r25
     396:	8f 93       	push	r24
     398:	0e 94 26 0b 	call	0x164c	; 0x164c <sprintf>
            sendCommand(string_to_send);
     39c:	84 e8       	ldi	r24, 0x84	; 132
     39e:	92 e0       	ldi	r25, 0x02	; 2
     3a0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     3a4:	80 e2       	ldi	r24, 0x20	; 32
     3a6:	e9 e7       	ldi	r30, 0x79	; 121
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	a4 e8       	ldi	r26, 0x84	; 132
     3ac:	b2 e0       	ldi	r27, 0x02	; 2
     3ae:	01 90       	ld	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	8a 95       	dec	r24
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <__vector_8+0x76>
            sendCommand(string_to_send);
     3b6:	84 e8       	ldi	r24, 0x84	; 132
     3b8:	92 e0       	ldi	r25, 0x02	; 2
     3ba:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[request]\n");
     3be:	89 e2       	ldi	r24, 0x29	; 41
     3c0:	e9 e9       	ldi	r30, 0x99	; 153
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	a4 e8       	ldi	r26, 0x84	; 132
     3c6:	b2 e0       	ldi	r27, 0x02	; 2
     3c8:	01 90       	ld	r0, Z+
     3ca:	0d 92       	st	X+, r0
     3cc:	8a 95       	dec	r24
     3ce:	e1 f7       	brne	.-8      	; 0x3c8 <__vector_8+0x90>
            sendCommand(string_to_send);
     3d0:	84 e8       	ldi	r24, 0x84	; 132
     3d2:	92 e0       	ldi	r25, 0x02	; 2
     3d4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     3d8:	87 e2       	ldi	r24, 0x27	; 39
     3da:	e2 ec       	ldi	r30, 0xC2	; 194
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	a4 e8       	ldi	r26, 0x84	; 132
     3e0:	b2 e0       	ldi	r27, 0x02	; 2
     3e2:	01 90       	ld	r0, Z+
     3e4:	0d 92       	st	X+, r0
     3e6:	8a 95       	dec	r24
     3e8:	e1 f7       	brne	.-8      	; 0x3e2 <__vector_8+0xaa>
            sendCommand(string_to_send);
     3ea:	84 e8       	ldi	r24, 0x84	; 132
     3ec:	92 e0       	ldi	r25, 0x02	; 2
     3ee:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
            strcpy(string_to_send, "ESP:connect\n");
     3f2:	8d e0       	ldi	r24, 0x0D	; 13
     3f4:	e9 ee       	ldi	r30, 0xE9	; 233
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	a4 e8       	ldi	r26, 0x84	; 132
     3fa:	b2 e0       	ldi	r27, 0x02	; 2
     3fc:	01 90       	ld	r0, Z+
     3fe:	0d 92       	st	X+, r0
     400:	8a 95       	dec	r24
     402:	e1 f7       	brne	.-8      	; 0x3fc <__vector_8+0xc4>
            sendCommand(string_to_send);
     404:	84 e8       	ldi	r24, 0x84	; 132
     406:	92 e0       	ldi	r25, 0x02	; 2
     408:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
            strcpy(string_to_send, "ESP:clientTransmit\n");
     40c:	84 e1       	ldi	r24, 0x14	; 20
     40e:	e6 ef       	ldi	r30, 0xF6	; 246
     410:	f0 e0       	ldi	r31, 0x00	; 0
     412:	a4 e8       	ldi	r26, 0x84	; 132
     414:	b2 e0       	ldi	r27, 0x02	; 2
     416:	01 90       	ld	r0, Z+
     418:	0d 92       	st	X+, r0
     41a:	8a 95       	dec	r24
     41c:	e1 f7       	brne	.-8      	; 0x416 <__DATA_REGION_LENGTH__+0x16>
            sendCommand(string_to_send);
     41e:	84 e8       	ldi	r24, 0x84	; 132
     420:	92 e0       	ldi	r25, 0x02	; 2
     422:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
            strcpy(string_to_send, "ESP:getAllValues\n");
     426:	82 e1       	ldi	r24, 0x12	; 18
     428:	ea e0       	ldi	r30, 0x0A	; 10
     42a:	f1 e0       	ldi	r31, 0x01	; 1
     42c:	a4 e8       	ldi	r26, 0x84	; 132
     42e:	b2 e0       	ldi	r27, 0x02	; 2
     430:	01 90       	ld	r0, Z+
     432:	0d 92       	st	X+, r0
     434:	8a 95       	dec	r24
     436:	e1 f7       	brne	.-8      	; 0x430 <__DATA_REGION_LENGTH__+0x30>
            serialWrite(string_to_send);
     438:	84 e8       	ldi	r24, 0x84	; 132
     43a:	92 e0       	ldi	r25, 0x02	; 2
     43c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <serialWrite>
            //c=getChar();
            while(getChar() != '"' && !failed) { //scan input till you find ". The number will follow
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
     44a:	0f 90       	pop	r0
     44c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     450:	82 32       	cpi	r24, 0x22	; 34
     452:	e1 f7       	brne	.-8      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
               // c = getChar();
            }
            c=getChar(); //read most significant digit
     454:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            if(c=='F')
     458:	86 34       	cpi	r24, 0x46	; 70
     45a:	11 f0       	breq	.+4      	; 0x460 <__stack+0x1>

    

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
            failed=false;
     45c:	10 e0       	ldi	r17, 0x00	; 0
     45e:	0c c0       	rjmp	.+24     	; 0x478 <__stack+0x19>
            while(getChar() != '"' && !failed) { //scan input till you find ". The number will follow
               // c = getChar();
            }
            c=getChar(); //read most significant digit
            if(c=='F')
                failed=true;
     460:	11 e0       	ldi	r17, 0x01	; 1
     462:	0a c0       	rjmp	.+20     	; 0x478 <__stack+0x19>
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     464:	7e 01       	movw	r14, r28
     466:	9f ef       	ldi	r25, 0xFF	; 255
     468:	e9 1a       	sub	r14, r25
     46a:	f9 0a       	sbc	r15, r25
     46c:	c7 5f       	subi	r28, 0xF7	; 247
     46e:	db 4f       	sbci	r29, 0xFB	; 251
     470:	88 83       	st	Y, r24
                c = getChar();
     472:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            }
            c=getChar(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     476:	e7 01       	movw	r28, r14
               // c = getChar();
            }
            c=getChar(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
     478:	82 32       	cpi	r24, 0x22	; 34
     47a:	11 f0       	breq	.+4      	; 0x480 <__stack+0x21>
     47c:	11 23       	and	r17, r17
     47e:	91 f3       	breq	.-28     	; 0x464 <__stack+0x5>
                conv_buffer[counter++]=c;
                c = getChar();
            }
            c = getChar(); // also flush '\n' out of read buffer
     480:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            if(!failed){ 
     484:	11 11       	cpse	r17, r1
     486:	2e c0       	rjmp	.+92     	; 0x4e4 <__stack+0x85>
     488:	25 e0       	ldi	r18, 0x05	; 5
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	0c c0       	rjmp	.+24     	; 0x4a6 <__stack+0x47>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     48e:	f9 01       	movw	r30, r18
     490:	e8 1b       	sub	r30, r24
     492:	f9 0b       	sbc	r31, r25
     494:	e7 5f       	subi	r30, 0xF7	; 247
     496:	fb 4f       	sbci	r31, 0xFB	; 251
     498:	80 81       	ld	r24, Z
     49a:	f9 01       	movw	r30, r18
     49c:	e7 5f       	subi	r30, 0xF7	; 247
     49e:	fb 4f       	sbci	r31, 0xFB	; 251
     4a0:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = getChar();
            }
            c = getChar(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     4a2:	21 50       	subi	r18, 0x01	; 1
     4a4:	31 09       	sbc	r19, r1
     4a6:	86 e0       	ldi	r24, 0x06	; 6
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	8c 1b       	sub	r24, r28
     4ac:	9d 0b       	sbc	r25, r29
     4ae:	28 17       	cp	r18, r24
     4b0:	39 07       	cpc	r19, r25
     4b2:	6c f7       	brge	.-38     	; 0x48e <__stack+0x2f>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	07 c0       	rjmp	.+14     	; 0x4c8 <__stack+0x69>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     4ba:	f9 01       	movw	r30, r18
     4bc:	e7 5f       	subi	r30, 0xF7	; 247
     4be:	fb 4f       	sbci	r31, 0xFB	; 251
     4c0:	40 e3       	ldi	r20, 0x30	; 48
     4c2:	40 83       	st	Z, r20
            c = getChar(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     4c4:	2f 5f       	subi	r18, 0xFF	; 255
     4c6:	3f 4f       	sbci	r19, 0xFF	; 255
     4c8:	28 17       	cp	r18, r24
     4ca:	39 07       	cpc	r19, r25
     4cc:	b4 f3       	brlt	.-20     	; 0x4ba <__stack+0x5b>
                    conv_buffer[i] = '0';
                }
                moistures[k]=atoi(conv_buffer);
     4ce:	89 e0       	ldi	r24, 0x09	; 9
     4d0:	94 e0       	ldi	r25, 0x04	; 4
     4d2:	0e 94 d6 09 	call	0x13ac	; 0x13ac <atoi>
     4d6:	f6 01       	movw	r30, r12
     4d8:	ee 0f       	add	r30, r30
     4da:	ff 1f       	adc	r31, r31
     4dc:	e4 58       	subi	r30, 0x84	; 132
     4de:	fd 4f       	sbci	r31, 0xFD	; 253
     4e0:	91 83       	std	Z+1, r25	; 0x01
     4e2:	80 83       	st	Z, r24
            }
            

            //c=getChar();
            while(getChar() != '"' && !failed) {
     4e4:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
     4e8:	82 32       	cpi	r24, 0x22	; 34
     4ea:	11 f0       	breq	.+4      	; 0x4f0 <__stack+0x91>
     4ec:	11 23       	and	r17, r17
     4ee:	d1 f3       	breq	.-12     	; 0x4e4 <__stack+0x85>
                //c = getChar();
            }
            c = getChar();
     4f0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            if(c=='F')
     4f4:	86 34       	cpi	r24, 0x46	; 70
     4f6:	61 f4       	brne	.+24     	; 0x510 <__stack+0xb1>
                failed=true;
     4f8:	11 e0       	ldi	r17, 0x01	; 1
     4fa:	0a c0       	rjmp	.+20     	; 0x510 <__stack+0xb1>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     4fc:	7e 01       	movw	r14, r28
     4fe:	ef ef       	ldi	r30, 0xFF	; 255
     500:	ee 1a       	sub	r14, r30
     502:	fe 0a       	sbc	r15, r30
     504:	c7 5f       	subi	r28, 0xF7	; 247
     506:	db 4f       	sbci	r29, 0xFB	; 251
     508:	88 83       	st	Y, r24
                c = getChar();
     50a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            }
            c = getChar();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     50e:	e7 01       	movw	r28, r14
                //c = getChar();
            }
            c = getChar();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     510:	82 32       	cpi	r24, 0x22	; 34
     512:	11 f0       	breq	.+4      	; 0x518 <__stack+0xb9>
     514:	11 23       	and	r17, r17
     516:	91 f3       	breq	.-28     	; 0x4fc <__stack+0x9d>
                conv_buffer[counter++]=c;
                c = getChar();
            }
            c = getChar(); // also flush '\n' out of read buffer
     518:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <getChar>
            if(!failed){
     51c:	11 11       	cpse	r17, r1
     51e:	31 c0       	rjmp	.+98     	; 0x582 <__stack+0x123>
     520:	25 e0       	ldi	r18, 0x05	; 5
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	0c c0       	rjmp	.+24     	; 0x53e <__stack+0xdf>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     526:	f9 01       	movw	r30, r18
     528:	e8 1b       	sub	r30, r24
     52a:	f9 0b       	sbc	r31, r25
     52c:	e7 5f       	subi	r30, 0xF7	; 247
     52e:	fb 4f       	sbci	r31, 0xFB	; 251
     530:	80 81       	ld	r24, Z
     532:	f9 01       	movw	r30, r18
     534:	e7 5f       	subi	r30, 0xF7	; 247
     536:	fb 4f       	sbci	r31, 0xFB	; 251
     538:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = getChar();
            }
            c = getChar(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     53a:	21 50       	subi	r18, 0x01	; 1
     53c:	31 09       	sbc	r19, r1
     53e:	86 e0       	ldi	r24, 0x06	; 6
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	8c 1b       	sub	r24, r28
     544:	9d 0b       	sbc	r25, r29
     546:	28 17       	cp	r18, r24
     548:	39 07       	cpc	r19, r25
     54a:	6c f7       	brge	.-38     	; 0x526 <__stack+0xc7>
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	07 c0       	rjmp	.+14     	; 0x560 <__stack+0x101>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     552:	f9 01       	movw	r30, r18
     554:	e7 5f       	subi	r30, 0xF7	; 247
     556:	fb 4f       	sbci	r31, 0xFB	; 251
     558:	40 e3       	ldi	r20, 0x30	; 48
     55a:	40 83       	st	Z, r20
            c = getChar(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     55c:	2f 5f       	subi	r18, 0xFF	; 255
     55e:	3f 4f       	sbci	r19, 0xFF	; 255
     560:	28 17       	cp	r18, r24
     562:	39 07       	cpc	r19, r25
     564:	b4 f3       	brlt	.-20     	; 0x552 <__stack+0xf3>
                    conv_buffer[i] = '0';
                }
                temperatures[k]=atof(conv_buffer);
     566:	89 e0       	ldi	r24, 0x09	; 9
     568:	94 e0       	ldi	r25, 0x04	; 4
     56a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <atof>
     56e:	86 01       	movw	r16, r12
     570:	00 0f       	add	r16, r16
     572:	11 1f       	adc	r17, r17
     574:	0a 5f       	subi	r16, 0xFA	; 250
     576:	1b 4f       	sbci	r17, 0xFB	; 251
     578:	0e 94 ed 04 	call	0x9da	; 0x9da <__fixsfsi>
     57c:	f8 01       	movw	r30, r16
     57e:	71 83       	std	Z+1, r23	; 0x01
     580:	60 83       	st	Z, r22


    

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
     582:	ff ef       	ldi	r31, 0xFF	; 255
     584:	cf 1a       	sub	r12, r31
     586:	df 0a       	sbc	r13, r31
     588:	1c 14       	cp	r1, r12
     58a:	1d 04       	cpc	r1, r13
     58c:	0c f0       	brlt	.+2      	; 0x590 <__stack+0x131>
     58e:	fa ce       	rjmp	.-524    	; 0x384 <__vector_8+0x4c>
                }
                temperatures[k]=atof(conv_buffer);
            }
            
        }
        tmp_avg=0.0;
     590:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <tmp_avg>
     594:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <tmp_avg+0x1>
     598:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <tmp_avg+0x2>
     59c:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <tmp_avg+0x3>
        moist_avg=0;
     5a0:	10 92 05 03 	sts	0x0305, r1	; 0x800305 <moist_avg+0x1>
     5a4:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <moist_avg>
        for(int i=0; i<sensor_boards; ++i) {
     5a8:	c0 e0       	ldi	r28, 0x00	; 0
     5aa:	d0 e0       	ldi	r29, 0x00	; 0
     5ac:	32 c0       	rjmp	.+100    	; 0x612 <__stack+0x1b3>
            moist_avg += moistures[i];
     5ae:	ce 01       	movw	r24, r28
     5b0:	88 0f       	add	r24, r24
     5b2:	99 1f       	adc	r25, r25
     5b4:	fc 01       	movw	r30, r24
     5b6:	e4 58       	subi	r30, 0x84	; 132
     5b8:	fd 4f       	sbci	r31, 0xFD	; 253
     5ba:	20 81       	ld	r18, Z
     5bc:	31 81       	ldd	r19, Z+1	; 0x01
     5be:	40 91 04 03 	lds	r20, 0x0304	; 0x800304 <moist_avg>
     5c2:	50 91 05 03 	lds	r21, 0x0305	; 0x800305 <moist_avg+0x1>
     5c6:	24 0f       	add	r18, r20
     5c8:	35 1f       	adc	r19, r21
     5ca:	30 93 05 03 	sts	0x0305, r19	; 0x800305 <moist_avg+0x1>
     5ce:	20 93 04 03 	sts	0x0304, r18	; 0x800304 <moist_avg>
            tmp_avg += temperatures[i];
     5d2:	fc 01       	movw	r30, r24
     5d4:	ea 5f       	subi	r30, 0xFA	; 250
     5d6:	fb 4f       	sbci	r31, 0xFB	; 251
     5d8:	60 81       	ld	r22, Z
     5da:	71 81       	ldd	r23, Z+1	; 0x01
     5dc:	07 2e       	mov	r0, r23
     5de:	00 0c       	add	r0, r0
     5e0:	88 0b       	sbc	r24, r24
     5e2:	99 0b       	sbc	r25, r25
     5e4:	0e 94 25 05 	call	0xa4a	; 0xa4a <__floatsisf>
     5e8:	9b 01       	movw	r18, r22
     5ea:	ac 01       	movw	r20, r24
     5ec:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <tmp_avg>
     5f0:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <tmp_avg+0x1>
     5f4:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <tmp_avg+0x2>
     5f8:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <tmp_avg+0x3>
     5fc:	0e 94 81 04 	call	0x902	; 0x902 <__addsf3>
     600:	60 93 78 02 	sts	0x0278, r22	; 0x800278 <tmp_avg>
     604:	70 93 79 02 	sts	0x0279, r23	; 0x800279 <tmp_avg+0x1>
     608:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <tmp_avg+0x2>
     60c:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <tmp_avg+0x3>
            }
            
        }
        tmp_avg=0.0;
        moist_avg=0;
        for(int i=0; i<sensor_boards; ++i) {
     610:	21 96       	adiw	r28, 0x01	; 1
     612:	1c 16       	cp	r1, r28
     614:	1d 06       	cpc	r1, r29
     616:	5c f6       	brge	.-106    	; 0x5ae <__stack+0x14f>
            moist_avg += moistures[i];
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
     618:	e0 90 04 03 	lds	r14, 0x0304	; 0x800304 <moist_avg>
     61c:	f0 90 05 03 	lds	r15, 0x0305	; 0x800305 <moist_avg+0x1>
        tmp_avg /= sensor_boards;
     620:	80 90 78 02 	lds	r8, 0x0278	; 0x800278 <tmp_avg>
     624:	90 90 79 02 	lds	r9, 0x0279	; 0x800279 <tmp_avg+0x1>
     628:	a0 90 7a 02 	lds	r10, 0x027A	; 0x80027a <tmp_avg+0x2>
     62c:	b0 90 7b 02 	lds	r11, 0x027B	; 0x80027b <tmp_avg+0x3>

        for(int i=0; i<sensor_boards; ++i) {
     630:	c0 e0       	ldi	r28, 0x00	; 0
     632:	d0 e0       	ldi	r29, 0x00	; 0
     634:	42 c0       	rjmp	.+132    	; 0x6ba <__stack+0x25b>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     636:	ce 01       	movw	r24, r28
     638:	88 0f       	add	r24, r24
     63a:	99 1f       	adc	r25, r25
     63c:	fc 01       	movw	r30, r24
     63e:	e4 58       	subi	r30, 0x84	; 132
     640:	fd 4f       	sbci	r31, 0xFD	; 253
     642:	20 81       	ld	r18, Z
     644:	31 81       	ldd	r19, Z+1	; 0x01
     646:	2e 19       	sub	r18, r14
     648:	3f 09       	sbc	r19, r15
     64a:	22 9f       	mul	r18, r18
     64c:	a0 01       	movw	r20, r0
     64e:	23 9f       	mul	r18, r19
     650:	50 0d       	add	r21, r0
     652:	50 0d       	add	r21, r0
     654:	11 24       	eor	r1, r1
     656:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <moist_var>
     65a:	30 91 7f 02 	lds	r19, 0x027F	; 0x80027f <moist_var+0x1>
     65e:	24 0f       	add	r18, r20
     660:	35 1f       	adc	r19, r21
     662:	30 93 7f 02 	sts	0x027F, r19	; 0x80027f <moist_var+0x1>
     666:	20 93 7e 02 	sts	0x027E, r18	; 0x80027e <moist_var>
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     66a:	fc 01       	movw	r30, r24
     66c:	ea 5f       	subi	r30, 0xFA	; 250
     66e:	fb 4f       	sbci	r31, 0xFB	; 251
     670:	60 81       	ld	r22, Z
     672:	71 81       	ldd	r23, Z+1	; 0x01
     674:	07 2e       	mov	r0, r23
     676:	00 0c       	add	r0, r0
     678:	88 0b       	sbc	r24, r24
     67a:	99 0b       	sbc	r25, r25
     67c:	0e 94 25 05 	call	0xa4a	; 0xa4a <__floatsisf>
     680:	a5 01       	movw	r20, r10
     682:	94 01       	movw	r18, r8
     684:	0e 94 80 04 	call	0x900	; 0x900 <__subsf3>
     688:	9b 01       	movw	r18, r22
     68a:	ac 01       	movw	r20, r24
     68c:	0e 94 b1 05 	call	0xb62	; 0xb62 <__mulsf3>
     690:	9b 01       	movw	r18, r22
     692:	ac 01       	movw	r20, r24
     694:	60 91 80 02 	lds	r22, 0x0280	; 0x800280 <tmp_var_f>
     698:	70 91 81 02 	lds	r23, 0x0281	; 0x800281 <tmp_var_f+0x1>
     69c:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <tmp_var_f+0x2>
     6a0:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <tmp_var_f+0x3>
     6a4:	0e 94 81 04 	call	0x902	; 0x902 <__addsf3>
     6a8:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <tmp_var_f>
     6ac:	70 93 81 02 	sts	0x0281, r23	; 0x800281 <tmp_var_f+0x1>
     6b0:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <tmp_var_f+0x2>
     6b4:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <tmp_var_f+0x3>
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
        tmp_avg /= sensor_boards;

        for(int i=0; i<sensor_boards; ++i) {
     6b8:	21 96       	adiw	r28, 0x01	; 1
     6ba:	1c 16       	cp	r1, r28
     6bc:	1d 06       	cpc	r1, r29
     6be:	0c f0       	brlt	.+2      	; 0x6c2 <__stack+0x263>
     6c0:	ba cf       	rjmp	.-140    	; 0x636 <__stack+0x1d7>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
        }
        moist_var /= sensor_boards;
        tmp_var_f /= sensor_boards;
     6c2:	60 91 80 02 	lds	r22, 0x0280	; 0x800280 <tmp_var_f>
     6c6:	70 91 81 02 	lds	r23, 0x0281	; 0x800281 <tmp_var_f+0x1>
     6ca:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <tmp_var_f+0x2>
     6ce:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <tmp_var_f+0x3>
        tmp_var = (int)tmp_var_f;
     6d2:	0e 94 ed 04 	call	0x9da	; 0x9da <__fixsfsi>
     6d6:	70 93 10 04 	sts	0x0410, r23	; 0x800410 <tmp_var+0x1>
     6da:	60 93 0f 04 	sts	0x040F, r22	; 0x80040f <tmp_var>

        strcpy(string_to_send, "ESP:ssid:\"Middle_Board1\"\n");
     6de:	c4 e8       	ldi	r28, 0x84	; 132
     6e0:	d2 e0       	ldi	r29, 0x02	; 2
     6e2:	8a e1       	ldi	r24, 0x1A	; 26
     6e4:	ec e1       	ldi	r30, 0x1C	; 28
     6e6:	f1 e0       	ldi	r31, 0x01	; 1
     6e8:	de 01       	movw	r26, r28
     6ea:	01 90       	ld	r0, Z+
     6ec:	0d 92       	st	X+, r0
     6ee:	8a 95       	dec	r24
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <__stack+0x28b>
        sendCommand(string_to_send);
     6f2:	ce 01       	movw	r24, r28
     6f4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

        /*itoa(moist_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg\"[%d]\n", moist_avg);
     6f8:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <moist_avg+0x1>
     6fc:	8f 93       	push	r24
     6fe:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <moist_avg>
     702:	8f 93       	push	r24
     704:	86 e3       	ldi	r24, 0x36	; 54
     706:	91 e0       	ldi	r25, 0x01	; 1
     708:	9f 93       	push	r25
     70a:	8f 93       	push	r24
     70c:	df 93       	push	r29
     70e:	cf 93       	push	r28
     710:	0e 94 26 0b 	call	0x164c	; 0x164c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     714:	ce 01       	movw	r24, r28
     716:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

        /*itoa(tmp_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[%.1f]\n", tmp_avg);
     71a:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <tmp_avg+0x3>
     71e:	8f 93       	push	r24
     720:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <tmp_avg+0x2>
     724:	8f 93       	push	r24
     726:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <tmp_avg+0x1>
     72a:	8f 93       	push	r24
     72c:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <tmp_avg>
     730:	8f 93       	push	r24
     732:	87 e5       	ldi	r24, 0x57	; 87
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	9f 93       	push	r25
     738:	8f 93       	push	r24
     73a:	df 93       	push	r29
     73c:	cf 93       	push	r28
     73e:	0e 94 26 0b 	call	0x164c	; 0x164c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     742:	ce 01       	movw	r24, r28
     744:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
        /*itoa(moist_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_var\"[%d]\n", moist_var);
     748:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <moist_var+0x1>
     74c:	8f 93       	push	r24
     74e:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <moist_var>
     752:	8f 93       	push	r24
     754:	88 e7       	ldi	r24, 0x78	; 120
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	9f 93       	push	r25
     75a:	8f 93       	push	r24
     75c:	df 93       	push	r29
     75e:	cf 93       	push	r28
     760:	0e 94 26 0b 	call	0x164c	; 0x164c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     764:	ce 01       	movw	r24, r28
     766:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

        /*itoa(tmp_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var\"[%d]\n", tmp_var);
     76a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <tmp_var+0x1>
     76e:	8f 93       	push	r24
     770:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <tmp_var>
     774:	8f 93       	push	r24
     776:	89 e9       	ldi	r24, 0x99	; 153
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	9f 93       	push	r25
     77c:	8f 93       	push	r24
     77e:	df 93       	push	r29
     780:	cf 93       	push	r28
     782:	0e 94 26 0b 	call	0x164c	; 0x164c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     786:	ce 01       	movw	r24, r28
     788:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

        strcpy(string_to_send, "ESP:APStart\n");
     78c:	8d e0       	ldi	r24, 0x0D	; 13
     78e:	e8 eb       	ldi	r30, 0xB8	; 184
     790:	f1 e0       	ldi	r31, 0x01	; 1
     792:	de 01       	movw	r26, r28
     794:	01 90       	ld	r0, Z+
     796:	0d 92       	st	X+, r0
     798:	8a 95       	dec	r24
     79a:	e1 f7       	brne	.-8      	; 0x794 <__stack+0x335>
        sendCommand(string_to_send);
     79c:	ce 01       	movw	r24, r28
     79e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>
     7a2:	8d b7       	in	r24, 0x3d	; 61
     7a4:	9e b7       	in	r25, 0x3e	; 62
     7a6:	4a 96       	adiw	r24, 0x1a	; 26
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	9e bf       	out	0x3e, r25	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	8d bf       	out	0x3d, r24	; 61
     7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <__stack+0x359>

     
    }
    else
        first=false;
     7b4:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <first>

    TCNT1 = 3036;
     7b8:	8c ed       	ldi	r24, 0xDC	; 220
     7ba:	9b e0       	ldi	r25, 0x0B	; 11
     7bc:	9d bd       	out	0x2d, r25	; 45
     7be:	8c bd       	out	0x2c, r24	; 44
}
     7c0:	ff 91       	pop	r31
     7c2:	ef 91       	pop	r30
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	bf 91       	pop	r27
     7ca:	af 91       	pop	r26
     7cc:	9f 91       	pop	r25
     7ce:	8f 91       	pop	r24
     7d0:	7f 91       	pop	r23
     7d2:	6f 91       	pop	r22
     7d4:	5f 91       	pop	r21
     7d6:	4f 91       	pop	r20
     7d8:	3f 91       	pop	r19
     7da:	2f 91       	pop	r18
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	ff 90       	pop	r15
     7e2:	ef 90       	pop	r14
     7e4:	df 90       	pop	r13
     7e6:	cf 90       	pop	r12
     7e8:	bf 90       	pop	r11
     7ea:	af 90       	pop	r10
     7ec:	9f 90       	pop	r9
     7ee:	8f 90       	pop	r8
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <main>:


int main(){
    UBRRH = (ubrr_content >> 8); //set USART Baud Rate Register
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	80 bd       	out	0x20, r24	; 32
    UBRRL = ubrr_content;
     7fe:	92 e6       	ldi	r25, 0x62	; 98
     800:	99 b9       	out	0x09, r25	; 9

    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable
    first=true;
     802:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <first>
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
     806:	88 ed       	ldi	r24, 0xD8	; 216
     808:	8a b9       	out	0x0a, r24	; 10
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)
     80a:	86 e0       	ldi	r24, 0x06	; 6
     80c:	80 bd       	out	0x20, r24	; 32

    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	0e c0       	rjmp	.+28     	; 0x830 <main+0x36>
        moistures[i]=0;
     814:	9c 01       	movw	r18, r24
     816:	22 0f       	add	r18, r18
     818:	33 1f       	adc	r19, r19
     81a:	f9 01       	movw	r30, r18
     81c:	e4 58       	subi	r30, 0x84	; 132
     81e:	fd 4f       	sbci	r31, 0xFD	; 253
     820:	11 82       	std	Z+1, r1	; 0x01
     822:	10 82       	st	Z, r1
        temperatures[i]=0;
     824:	f9 01       	movw	r30, r18
     826:	ea 5f       	subi	r30, 0xFA	; 250
     828:	fb 4f       	sbci	r31, 0xFB	; 251
     82a:	11 82       	std	Z+1, r1	; 0x01
     82c:	10 82       	st	Z, r1
    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable
    first=true;
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)

    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	18 16       	cp	r1, r24
     832:	19 06       	cpc	r1, r25
     834:	7c f7       	brge	.-34     	; 0x814 <main+0x1a>
        moistures[i]=0;
        temperatures[i]=0;
    }

    strcpy(string_to_send, "ESP:restart\n");
     836:	8d e0       	ldi	r24, 0x0D	; 13
     838:	e5 ec       	ldi	r30, 0xC5	; 197
     83a:	f1 e0       	ldi	r31, 0x01	; 1
     83c:	a4 e8       	ldi	r26, 0x84	; 132
     83e:	b2 e0       	ldi	r27, 0x02	; 2
     840:	01 90       	ld	r0, Z+
     842:	0d 92       	st	X+, r0
     844:	8a 95       	dec	r24
     846:	e1 f7       	brne	.-8      	; 0x840 <main+0x46>
    sendCommand(string_to_send);
     848:	84 e8       	ldi	r24, 0x84	; 132
     84a:	92 e0       	ldi	r25, 0x02	; 2
     84c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_Sensor\"\n");
     850:	8e e1       	ldi	r24, 0x1E	; 30
     852:	e2 ed       	ldi	r30, 0xD2	; 210
     854:	f1 e0       	ldi	r31, 0x01	; 1
     856:	a4 e8       	ldi	r26, 0x84	; 132
     858:	b2 e0       	ldi	r27, 0x02	; 2
     85a:	01 90       	ld	r0, Z+
     85c:	0d 92       	st	X+, r0
     85e:	8a 95       	dec	r24
     860:	e1 f7       	brne	.-8      	; 0x85a <main+0x60>
    sendCommand(string_to_send);
     862:	84 e8       	ldi	r24, 0x84	; 132
     864:	92 e0       	ldi	r25, 0x02	; 2
     866:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
     86a:	8c e1       	ldi	r24, 0x1C	; 28
     86c:	e0 ef       	ldi	r30, 0xF0	; 240
     86e:	f1 e0       	ldi	r31, 0x01	; 1
     870:	a4 e8       	ldi	r26, 0x84	; 132
     872:	b2 e0       	ldi	r27, 0x02	; 2
     874:	01 90       	ld	r0, Z+
     876:	0d 92       	st	X+, r0
     878:	8a 95       	dec	r24
     87a:	e1 f7       	brne	.-8      	; 0x874 <main+0x7a>
    sendCommand(string_to_send);
     87c:	84 e8       	ldi	r24, 0x84	; 132
     87e:	92 e0       	ldi	r25, 0x02	; 2
     880:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_avg\"\n");
     884:	8b e1       	ldi	r24, 0x1B	; 27
     886:	ec e0       	ldi	r30, 0x0C	; 12
     888:	f2 e0       	ldi	r31, 0x02	; 2
     88a:	a4 e8       	ldi	r26, 0x84	; 132
     88c:	b2 e0       	ldi	r27, 0x02	; 2
     88e:	01 90       	ld	r0, Z+
     890:	0d 92       	st	X+, r0
     892:	8a 95       	dec	r24
     894:	e1 f7       	brne	.-8      	; 0x88e <main+0x94>
    sendCommand(string_to_send);
     896:	84 e8       	ldi	r24, 0x84	; 132
     898:	92 e0       	ldi	r25, 0x02	; 2
     89a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_avg\"\n");
     89e:	89 e1       	ldi	r24, 0x19	; 25
     8a0:	e7 e2       	ldi	r30, 0x27	; 39
     8a2:	f2 e0       	ldi	r31, 0x02	; 2
     8a4:	a4 e8       	ldi	r26, 0x84	; 132
     8a6:	b2 e0       	ldi	r27, 0x02	; 2
     8a8:	01 90       	ld	r0, Z+
     8aa:	0d 92       	st	X+, r0
     8ac:	8a 95       	dec	r24
     8ae:	e1 f7       	brne	.-8      	; 0x8a8 <main+0xae>
    sendCommand(string_to_send);
     8b0:	84 e8       	ldi	r24, 0x84	; 132
     8b2:	92 e0       	ldi	r25, 0x02	; 2
     8b4:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_var\"\n");
     8b8:	8b e1       	ldi	r24, 0x1B	; 27
     8ba:	e0 e4       	ldi	r30, 0x40	; 64
     8bc:	f2 e0       	ldi	r31, 0x02	; 2
     8be:	a4 e8       	ldi	r26, 0x84	; 132
     8c0:	b2 e0       	ldi	r27, 0x02	; 2
     8c2:	01 90       	ld	r0, Z+
     8c4:	0d 92       	st	X+, r0
     8c6:	8a 95       	dec	r24
     8c8:	e1 f7       	brne	.-8      	; 0x8c2 <main+0xc8>
    sendCommand(string_to_send);
     8ca:	84 e8       	ldi	r24, 0x84	; 132
     8cc:	92 e0       	ldi	r25, 0x02	; 2
     8ce:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_var\"\n");
     8d2:	89 e1       	ldi	r24, 0x19	; 25
     8d4:	eb e5       	ldi	r30, 0x5B	; 91
     8d6:	f2 e0       	ldi	r31, 0x02	; 2
     8d8:	a4 e8       	ldi	r26, 0x84	; 132
     8da:	b2 e0       	ldi	r27, 0x02	; 2
     8dc:	01 90       	ld	r0, Z+
     8de:	0d 92       	st	X+, r0
     8e0:	8a 95       	dec	r24
     8e2:	e1 f7       	brne	.-8      	; 0x8dc <main+0xe2>
    sendCommand(string_to_send);
     8e4:	84 e8       	ldi	r24, 0x84	; 132
     8e6:	92 e0       	ldi	r25, 0x02	; 2
     8e8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <sendCommand>


    TCCR1B = 0x05; //CK/1024
     8ec:	85 e0       	ldi	r24, 0x05	; 5
     8ee:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8 seconds
     8f0:	8c ed       	ldi	r24, 0xDC	; 220
     8f2:	9b e0       	ldi	r25, 0x0B	; 11
     8f4:	9d bd       	out	0x2d, r25	; 45
     8f6:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     8f8:	84 e0       	ldi	r24, 0x04	; 4
     8fa:	89 bf       	out	0x39, r24	; 57
    sei();
     8fc:	78 94       	sei
     8fe:	ff cf       	rjmp	.-2      	; 0x8fe <main+0x104>

00000900 <__subsf3>:
     900:	50 58       	subi	r21, 0x80	; 128

00000902 <__addsf3>:
     902:	bb 27       	eor	r27, r27
     904:	aa 27       	eor	r26, r26
     906:	0e 94 98 04 	call	0x930	; 0x930 <__addsf3x>
     90a:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_round>
     90e:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscA>
     912:	38 f0       	brcs	.+14     	; 0x922 <__addsf3+0x20>
     914:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscB>
     918:	20 f0       	brcs	.+8      	; 0x922 <__addsf3+0x20>
     91a:	39 f4       	brne	.+14     	; 0x92a <__addsf3+0x28>
     91c:	9f 3f       	cpi	r25, 0xFF	; 255
     91e:	19 f4       	brne	.+6      	; 0x926 <__addsf3+0x24>
     920:	26 f4       	brtc	.+8      	; 0x92a <__addsf3+0x28>
     922:	0c 94 66 05 	jmp	0xacc	; 0xacc <__fp_nan>
     926:	0e f4       	brtc	.+2      	; 0x92a <__addsf3+0x28>
     928:	e0 95       	com	r30
     92a:	e7 fb       	bst	r30, 7
     92c:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__fp_inf>

00000930 <__addsf3x>:
     930:	e9 2f       	mov	r30, r25
     932:	0e 94 88 05 	call	0xb10	; 0xb10 <__fp_split3>
     936:	58 f3       	brcs	.-42     	; 0x90e <__addsf3+0xc>
     938:	ba 17       	cp	r27, r26
     93a:	62 07       	cpc	r22, r18
     93c:	73 07       	cpc	r23, r19
     93e:	84 07       	cpc	r24, r20
     940:	95 07       	cpc	r25, r21
     942:	20 f0       	brcs	.+8      	; 0x94c <__addsf3x+0x1c>
     944:	79 f4       	brne	.+30     	; 0x964 <__addsf3x+0x34>
     946:	a6 f5       	brtc	.+104    	; 0x9b0 <__addsf3x+0x80>
     948:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__fp_zero>
     94c:	0e f4       	brtc	.+2      	; 0x950 <__addsf3x+0x20>
     94e:	e0 95       	com	r30
     950:	0b 2e       	mov	r0, r27
     952:	ba 2f       	mov	r27, r26
     954:	a0 2d       	mov	r26, r0
     956:	0b 01       	movw	r0, r22
     958:	b9 01       	movw	r22, r18
     95a:	90 01       	movw	r18, r0
     95c:	0c 01       	movw	r0, r24
     95e:	ca 01       	movw	r24, r20
     960:	a0 01       	movw	r20, r0
     962:	11 24       	eor	r1, r1
     964:	ff 27       	eor	r31, r31
     966:	59 1b       	sub	r21, r25
     968:	99 f0       	breq	.+38     	; 0x990 <__addsf3x+0x60>
     96a:	59 3f       	cpi	r21, 0xF9	; 249
     96c:	50 f4       	brcc	.+20     	; 0x982 <__addsf3x+0x52>
     96e:	50 3e       	cpi	r21, 0xE0	; 224
     970:	68 f1       	brcs	.+90     	; 0x9cc <__addsf3x+0x9c>
     972:	1a 16       	cp	r1, r26
     974:	f0 40       	sbci	r31, 0x00	; 0
     976:	a2 2f       	mov	r26, r18
     978:	23 2f       	mov	r18, r19
     97a:	34 2f       	mov	r19, r20
     97c:	44 27       	eor	r20, r20
     97e:	58 5f       	subi	r21, 0xF8	; 248
     980:	f3 cf       	rjmp	.-26     	; 0x968 <__addsf3x+0x38>
     982:	46 95       	lsr	r20
     984:	37 95       	ror	r19
     986:	27 95       	ror	r18
     988:	a7 95       	ror	r26
     98a:	f0 40       	sbci	r31, 0x00	; 0
     98c:	53 95       	inc	r21
     98e:	c9 f7       	brne	.-14     	; 0x982 <__addsf3x+0x52>
     990:	7e f4       	brtc	.+30     	; 0x9b0 <__addsf3x+0x80>
     992:	1f 16       	cp	r1, r31
     994:	ba 0b       	sbc	r27, r26
     996:	62 0b       	sbc	r22, r18
     998:	73 0b       	sbc	r23, r19
     99a:	84 0b       	sbc	r24, r20
     99c:	ba f0       	brmi	.+46     	; 0x9cc <__addsf3x+0x9c>
     99e:	91 50       	subi	r25, 0x01	; 1
     9a0:	a1 f0       	breq	.+40     	; 0x9ca <__addsf3x+0x9a>
     9a2:	ff 0f       	add	r31, r31
     9a4:	bb 1f       	adc	r27, r27
     9a6:	66 1f       	adc	r22, r22
     9a8:	77 1f       	adc	r23, r23
     9aa:	88 1f       	adc	r24, r24
     9ac:	c2 f7       	brpl	.-16     	; 0x99e <__addsf3x+0x6e>
     9ae:	0e c0       	rjmp	.+28     	; 0x9cc <__addsf3x+0x9c>
     9b0:	ba 0f       	add	r27, r26
     9b2:	62 1f       	adc	r22, r18
     9b4:	73 1f       	adc	r23, r19
     9b6:	84 1f       	adc	r24, r20
     9b8:	48 f4       	brcc	.+18     	; 0x9cc <__addsf3x+0x9c>
     9ba:	87 95       	ror	r24
     9bc:	77 95       	ror	r23
     9be:	67 95       	ror	r22
     9c0:	b7 95       	ror	r27
     9c2:	f7 95       	ror	r31
     9c4:	9e 3f       	cpi	r25, 0xFE	; 254
     9c6:	08 f0       	brcs	.+2      	; 0x9ca <__addsf3x+0x9a>
     9c8:	b0 cf       	rjmp	.-160    	; 0x92a <__addsf3+0x28>
     9ca:	93 95       	inc	r25
     9cc:	88 0f       	add	r24, r24
     9ce:	08 f0       	brcs	.+2      	; 0x9d2 <__addsf3x+0xa2>
     9d0:	99 27       	eor	r25, r25
     9d2:	ee 0f       	add	r30, r30
     9d4:	97 95       	ror	r25
     9d6:	87 95       	ror	r24
     9d8:	08 95       	ret

000009da <__fixsfsi>:
     9da:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__fixunssfsi>
     9de:	68 94       	set
     9e0:	b1 11       	cpse	r27, r1
     9e2:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_szero>
     9e6:	08 95       	ret

000009e8 <__fixunssfsi>:
     9e8:	0e 94 90 05 	call	0xb20	; 0xb20 <__fp_splitA>
     9ec:	88 f0       	brcs	.+34     	; 0xa10 <__fixunssfsi+0x28>
     9ee:	9f 57       	subi	r25, 0x7F	; 127
     9f0:	98 f0       	brcs	.+38     	; 0xa18 <__fixunssfsi+0x30>
     9f2:	b9 2f       	mov	r27, r25
     9f4:	99 27       	eor	r25, r25
     9f6:	b7 51       	subi	r27, 0x17	; 23
     9f8:	b0 f0       	brcs	.+44     	; 0xa26 <__fixunssfsi+0x3e>
     9fa:	e1 f0       	breq	.+56     	; 0xa34 <__fixunssfsi+0x4c>
     9fc:	66 0f       	add	r22, r22
     9fe:	77 1f       	adc	r23, r23
     a00:	88 1f       	adc	r24, r24
     a02:	99 1f       	adc	r25, r25
     a04:	1a f0       	brmi	.+6      	; 0xa0c <__fixunssfsi+0x24>
     a06:	ba 95       	dec	r27
     a08:	c9 f7       	brne	.-14     	; 0x9fc <__fixunssfsi+0x14>
     a0a:	14 c0       	rjmp	.+40     	; 0xa34 <__fixunssfsi+0x4c>
     a0c:	b1 30       	cpi	r27, 0x01	; 1
     a0e:	91 f0       	breq	.+36     	; 0xa34 <__fixunssfsi+0x4c>
     a10:	0e 94 aa 05 	call	0xb54	; 0xb54 <__fp_zero>
     a14:	b1 e0       	ldi	r27, 0x01	; 1
     a16:	08 95       	ret
     a18:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__fp_zero>
     a1c:	67 2f       	mov	r22, r23
     a1e:	78 2f       	mov	r23, r24
     a20:	88 27       	eor	r24, r24
     a22:	b8 5f       	subi	r27, 0xF8	; 248
     a24:	39 f0       	breq	.+14     	; 0xa34 <__fixunssfsi+0x4c>
     a26:	b9 3f       	cpi	r27, 0xF9	; 249
     a28:	cc f3       	brlt	.-14     	; 0xa1c <__fixunssfsi+0x34>
     a2a:	86 95       	lsr	r24
     a2c:	77 95       	ror	r23
     a2e:	67 95       	ror	r22
     a30:	b3 95       	inc	r27
     a32:	d9 f7       	brne	.-10     	; 0xa2a <__fixunssfsi+0x42>
     a34:	3e f4       	brtc	.+14     	; 0xa44 <__fixunssfsi+0x5c>
     a36:	90 95       	com	r25
     a38:	80 95       	com	r24
     a3a:	70 95       	com	r23
     a3c:	61 95       	neg	r22
     a3e:	7f 4f       	sbci	r23, 0xFF	; 255
     a40:	8f 4f       	sbci	r24, 0xFF	; 255
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	08 95       	ret

00000a46 <__floatunsisf>:
     a46:	e8 94       	clt
     a48:	09 c0       	rjmp	.+18     	; 0xa5c <__floatsisf+0x12>

00000a4a <__floatsisf>:
     a4a:	97 fb       	bst	r25, 7
     a4c:	3e f4       	brtc	.+14     	; 0xa5c <__floatsisf+0x12>
     a4e:	90 95       	com	r25
     a50:	80 95       	com	r24
     a52:	70 95       	com	r23
     a54:	61 95       	neg	r22
     a56:	7f 4f       	sbci	r23, 0xFF	; 255
     a58:	8f 4f       	sbci	r24, 0xFF	; 255
     a5a:	9f 4f       	sbci	r25, 0xFF	; 255
     a5c:	99 23       	and	r25, r25
     a5e:	a9 f0       	breq	.+42     	; 0xa8a <__floatsisf+0x40>
     a60:	f9 2f       	mov	r31, r25
     a62:	96 e9       	ldi	r25, 0x96	; 150
     a64:	bb 27       	eor	r27, r27
     a66:	93 95       	inc	r25
     a68:	f6 95       	lsr	r31
     a6a:	87 95       	ror	r24
     a6c:	77 95       	ror	r23
     a6e:	67 95       	ror	r22
     a70:	b7 95       	ror	r27
     a72:	f1 11       	cpse	r31, r1
     a74:	f8 cf       	rjmp	.-16     	; 0xa66 <__floatsisf+0x1c>
     a76:	fa f4       	brpl	.+62     	; 0xab6 <__floatsisf+0x6c>
     a78:	bb 0f       	add	r27, r27
     a7a:	11 f4       	brne	.+4      	; 0xa80 <__floatsisf+0x36>
     a7c:	60 ff       	sbrs	r22, 0
     a7e:	1b c0       	rjmp	.+54     	; 0xab6 <__floatsisf+0x6c>
     a80:	6f 5f       	subi	r22, 0xFF	; 255
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	8f 4f       	sbci	r24, 0xFF	; 255
     a86:	9f 4f       	sbci	r25, 0xFF	; 255
     a88:	16 c0       	rjmp	.+44     	; 0xab6 <__floatsisf+0x6c>
     a8a:	88 23       	and	r24, r24
     a8c:	11 f0       	breq	.+4      	; 0xa92 <__floatsisf+0x48>
     a8e:	96 e9       	ldi	r25, 0x96	; 150
     a90:	11 c0       	rjmp	.+34     	; 0xab4 <__floatsisf+0x6a>
     a92:	77 23       	and	r23, r23
     a94:	21 f0       	breq	.+8      	; 0xa9e <__floatsisf+0x54>
     a96:	9e e8       	ldi	r25, 0x8E	; 142
     a98:	87 2f       	mov	r24, r23
     a9a:	76 2f       	mov	r23, r22
     a9c:	05 c0       	rjmp	.+10     	; 0xaa8 <__floatsisf+0x5e>
     a9e:	66 23       	and	r22, r22
     aa0:	71 f0       	breq	.+28     	; 0xabe <__floatsisf+0x74>
     aa2:	96 e8       	ldi	r25, 0x86	; 134
     aa4:	86 2f       	mov	r24, r22
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	2a f0       	brmi	.+10     	; 0xab6 <__floatsisf+0x6c>
     aac:	9a 95       	dec	r25
     aae:	66 0f       	add	r22, r22
     ab0:	77 1f       	adc	r23, r23
     ab2:	88 1f       	adc	r24, r24
     ab4:	da f7       	brpl	.-10     	; 0xaac <__floatsisf+0x62>
     ab6:	88 0f       	add	r24, r24
     ab8:	96 95       	lsr	r25
     aba:	87 95       	ror	r24
     abc:	97 f9       	bld	r25, 7
     abe:	08 95       	ret

00000ac0 <__fp_inf>:
     ac0:	97 f9       	bld	r25, 7
     ac2:	9f 67       	ori	r25, 0x7F	; 127
     ac4:	80 e8       	ldi	r24, 0x80	; 128
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	60 e0       	ldi	r22, 0x00	; 0
     aca:	08 95       	ret

00000acc <__fp_nan>:
     acc:	9f ef       	ldi	r25, 0xFF	; 255
     ace:	80 ec       	ldi	r24, 0xC0	; 192
     ad0:	08 95       	ret

00000ad2 <__fp_pscA>:
     ad2:	00 24       	eor	r0, r0
     ad4:	0a 94       	dec	r0
     ad6:	16 16       	cp	r1, r22
     ad8:	17 06       	cpc	r1, r23
     ada:	18 06       	cpc	r1, r24
     adc:	09 06       	cpc	r0, r25
     ade:	08 95       	ret

00000ae0 <__fp_pscB>:
     ae0:	00 24       	eor	r0, r0
     ae2:	0a 94       	dec	r0
     ae4:	12 16       	cp	r1, r18
     ae6:	13 06       	cpc	r1, r19
     ae8:	14 06       	cpc	r1, r20
     aea:	05 06       	cpc	r0, r21
     aec:	08 95       	ret

00000aee <__fp_round>:
     aee:	09 2e       	mov	r0, r25
     af0:	03 94       	inc	r0
     af2:	00 0c       	add	r0, r0
     af4:	11 f4       	brne	.+4      	; 0xafa <__fp_round+0xc>
     af6:	88 23       	and	r24, r24
     af8:	52 f0       	brmi	.+20     	; 0xb0e <__fp_round+0x20>
     afa:	bb 0f       	add	r27, r27
     afc:	40 f4       	brcc	.+16     	; 0xb0e <__fp_round+0x20>
     afe:	bf 2b       	or	r27, r31
     b00:	11 f4       	brne	.+4      	; 0xb06 <__fp_round+0x18>
     b02:	60 ff       	sbrs	r22, 0
     b04:	04 c0       	rjmp	.+8      	; 0xb0e <__fp_round+0x20>
     b06:	6f 5f       	subi	r22, 0xFF	; 255
     b08:	7f 4f       	sbci	r23, 0xFF	; 255
     b0a:	8f 4f       	sbci	r24, 0xFF	; 255
     b0c:	9f 4f       	sbci	r25, 0xFF	; 255
     b0e:	08 95       	ret

00000b10 <__fp_split3>:
     b10:	57 fd       	sbrc	r21, 7
     b12:	90 58       	subi	r25, 0x80	; 128
     b14:	44 0f       	add	r20, r20
     b16:	55 1f       	adc	r21, r21
     b18:	59 f0       	breq	.+22     	; 0xb30 <__fp_splitA+0x10>
     b1a:	5f 3f       	cpi	r21, 0xFF	; 255
     b1c:	71 f0       	breq	.+28     	; 0xb3a <__fp_splitA+0x1a>
     b1e:	47 95       	ror	r20

00000b20 <__fp_splitA>:
     b20:	88 0f       	add	r24, r24
     b22:	97 fb       	bst	r25, 7
     b24:	99 1f       	adc	r25, r25
     b26:	61 f0       	breq	.+24     	; 0xb40 <__fp_splitA+0x20>
     b28:	9f 3f       	cpi	r25, 0xFF	; 255
     b2a:	79 f0       	breq	.+30     	; 0xb4a <__fp_splitA+0x2a>
     b2c:	87 95       	ror	r24
     b2e:	08 95       	ret
     b30:	12 16       	cp	r1, r18
     b32:	13 06       	cpc	r1, r19
     b34:	14 06       	cpc	r1, r20
     b36:	55 1f       	adc	r21, r21
     b38:	f2 cf       	rjmp	.-28     	; 0xb1e <__fp_split3+0xe>
     b3a:	46 95       	lsr	r20
     b3c:	f1 df       	rcall	.-30     	; 0xb20 <__fp_splitA>
     b3e:	08 c0       	rjmp	.+16     	; 0xb50 <__fp_splitA+0x30>
     b40:	16 16       	cp	r1, r22
     b42:	17 06       	cpc	r1, r23
     b44:	18 06       	cpc	r1, r24
     b46:	99 1f       	adc	r25, r25
     b48:	f1 cf       	rjmp	.-30     	; 0xb2c <__fp_splitA+0xc>
     b4a:	86 95       	lsr	r24
     b4c:	71 05       	cpc	r23, r1
     b4e:	61 05       	cpc	r22, r1
     b50:	08 94       	sec
     b52:	08 95       	ret

00000b54 <__fp_zero>:
     b54:	e8 94       	clt

00000b56 <__fp_szero>:
     b56:	bb 27       	eor	r27, r27
     b58:	66 27       	eor	r22, r22
     b5a:	77 27       	eor	r23, r23
     b5c:	cb 01       	movw	r24, r22
     b5e:	97 f9       	bld	r25, 7
     b60:	08 95       	ret

00000b62 <__mulsf3>:
     b62:	0e 94 c4 05 	call	0xb88	; 0xb88 <__mulsf3x>
     b66:	0c 94 77 05 	jmp	0xaee	; 0xaee <__fp_round>
     b6a:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscA>
     b6e:	38 f0       	brcs	.+14     	; 0xb7e <__mulsf3+0x1c>
     b70:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_pscB>
     b74:	20 f0       	brcs	.+8      	; 0xb7e <__mulsf3+0x1c>
     b76:	95 23       	and	r25, r21
     b78:	11 f0       	breq	.+4      	; 0xb7e <__mulsf3+0x1c>
     b7a:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__fp_inf>
     b7e:	0c 94 66 05 	jmp	0xacc	; 0xacc <__fp_nan>
     b82:	11 24       	eor	r1, r1
     b84:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_szero>

00000b88 <__mulsf3x>:
     b88:	0e 94 88 05 	call	0xb10	; 0xb10 <__fp_split3>
     b8c:	70 f3       	brcs	.-36     	; 0xb6a <__mulsf3+0x8>

00000b8e <__mulsf3_pse>:
     b8e:	95 9f       	mul	r25, r21
     b90:	c1 f3       	breq	.-16     	; 0xb82 <__mulsf3+0x20>
     b92:	95 0f       	add	r25, r21
     b94:	50 e0       	ldi	r21, 0x00	; 0
     b96:	55 1f       	adc	r21, r21
     b98:	62 9f       	mul	r22, r18
     b9a:	f0 01       	movw	r30, r0
     b9c:	72 9f       	mul	r23, r18
     b9e:	bb 27       	eor	r27, r27
     ba0:	f0 0d       	add	r31, r0
     ba2:	b1 1d       	adc	r27, r1
     ba4:	63 9f       	mul	r22, r19
     ba6:	aa 27       	eor	r26, r26
     ba8:	f0 0d       	add	r31, r0
     baa:	b1 1d       	adc	r27, r1
     bac:	aa 1f       	adc	r26, r26
     bae:	64 9f       	mul	r22, r20
     bb0:	66 27       	eor	r22, r22
     bb2:	b0 0d       	add	r27, r0
     bb4:	a1 1d       	adc	r26, r1
     bb6:	66 1f       	adc	r22, r22
     bb8:	82 9f       	mul	r24, r18
     bba:	22 27       	eor	r18, r18
     bbc:	b0 0d       	add	r27, r0
     bbe:	a1 1d       	adc	r26, r1
     bc0:	62 1f       	adc	r22, r18
     bc2:	73 9f       	mul	r23, r19
     bc4:	b0 0d       	add	r27, r0
     bc6:	a1 1d       	adc	r26, r1
     bc8:	62 1f       	adc	r22, r18
     bca:	83 9f       	mul	r24, r19
     bcc:	a0 0d       	add	r26, r0
     bce:	61 1d       	adc	r22, r1
     bd0:	22 1f       	adc	r18, r18
     bd2:	74 9f       	mul	r23, r20
     bd4:	33 27       	eor	r19, r19
     bd6:	a0 0d       	add	r26, r0
     bd8:	61 1d       	adc	r22, r1
     bda:	23 1f       	adc	r18, r19
     bdc:	84 9f       	mul	r24, r20
     bde:	60 0d       	add	r22, r0
     be0:	21 1d       	adc	r18, r1
     be2:	82 2f       	mov	r24, r18
     be4:	76 2f       	mov	r23, r22
     be6:	6a 2f       	mov	r22, r26
     be8:	11 24       	eor	r1, r1
     bea:	9f 57       	subi	r25, 0x7F	; 127
     bec:	50 40       	sbci	r21, 0x00	; 0
     bee:	9a f0       	brmi	.+38     	; 0xc16 <__mulsf3_pse+0x88>
     bf0:	f1 f0       	breq	.+60     	; 0xc2e <__mulsf3_pse+0xa0>
     bf2:	88 23       	and	r24, r24
     bf4:	4a f0       	brmi	.+18     	; 0xc08 <__mulsf3_pse+0x7a>
     bf6:	ee 0f       	add	r30, r30
     bf8:	ff 1f       	adc	r31, r31
     bfa:	bb 1f       	adc	r27, r27
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	88 1f       	adc	r24, r24
     c02:	91 50       	subi	r25, 0x01	; 1
     c04:	50 40       	sbci	r21, 0x00	; 0
     c06:	a9 f7       	brne	.-22     	; 0xbf2 <__mulsf3_pse+0x64>
     c08:	9e 3f       	cpi	r25, 0xFE	; 254
     c0a:	51 05       	cpc	r21, r1
     c0c:	80 f0       	brcs	.+32     	; 0xc2e <__mulsf3_pse+0xa0>
     c0e:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__fp_inf>
     c12:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_szero>
     c16:	5f 3f       	cpi	r21, 0xFF	; 255
     c18:	e4 f3       	brlt	.-8      	; 0xc12 <__mulsf3_pse+0x84>
     c1a:	98 3e       	cpi	r25, 0xE8	; 232
     c1c:	d4 f3       	brlt	.-12     	; 0xc12 <__mulsf3_pse+0x84>
     c1e:	86 95       	lsr	r24
     c20:	77 95       	ror	r23
     c22:	67 95       	ror	r22
     c24:	b7 95       	ror	r27
     c26:	f7 95       	ror	r31
     c28:	e7 95       	ror	r30
     c2a:	9f 5f       	subi	r25, 0xFF	; 255
     c2c:	c1 f7       	brne	.-16     	; 0xc1e <__mulsf3_pse+0x90>
     c2e:	fe 2b       	or	r31, r30
     c30:	88 0f       	add	r24, r24
     c32:	91 1d       	adc	r25, r1
     c34:	96 95       	lsr	r25
     c36:	87 95       	ror	r24
     c38:	97 f9       	bld	r25, 7
     c3a:	08 95       	ret

00000c3c <vfprintf>:
     c3c:	a0 e1       	ldi	r26, 0x10	; 16
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	e4 e2       	ldi	r30, 0x24	; 36
     c42:	f6 e0       	ldi	r31, 0x06	; 6
     c44:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__prologue_saves__>
     c48:	7c 01       	movw	r14, r24
     c4a:	1b 01       	movw	r2, r22
     c4c:	6a 01       	movw	r12, r20
     c4e:	fc 01       	movw	r30, r24
     c50:	17 82       	std	Z+7, r1	; 0x07
     c52:	16 82       	std	Z+6, r1	; 0x06
     c54:	83 81       	ldd	r24, Z+3	; 0x03
     c56:	81 ff       	sbrs	r24, 1
     c58:	44 c3       	rjmp	.+1672   	; 0x12e2 <vfprintf+0x6a6>
     c5a:	9e 01       	movw	r18, r28
     c5c:	2f 5f       	subi	r18, 0xFF	; 255
     c5e:	3f 4f       	sbci	r19, 0xFF	; 255
     c60:	39 01       	movw	r6, r18
     c62:	f7 01       	movw	r30, r14
     c64:	93 81       	ldd	r25, Z+3	; 0x03
     c66:	f1 01       	movw	r30, r2
     c68:	93 fd       	sbrc	r25, 3
     c6a:	85 91       	lpm	r24, Z+
     c6c:	93 ff       	sbrs	r25, 3
     c6e:	81 91       	ld	r24, Z+
     c70:	1f 01       	movw	r2, r30
     c72:	88 23       	and	r24, r24
     c74:	09 f4       	brne	.+2      	; 0xc78 <vfprintf+0x3c>
     c76:	31 c3       	rjmp	.+1634   	; 0x12da <vfprintf+0x69e>
     c78:	85 32       	cpi	r24, 0x25	; 37
     c7a:	39 f4       	brne	.+14     	; 0xc8a <vfprintf+0x4e>
     c7c:	93 fd       	sbrc	r25, 3
     c7e:	85 91       	lpm	r24, Z+
     c80:	93 ff       	sbrs	r25, 3
     c82:	81 91       	ld	r24, Z+
     c84:	1f 01       	movw	r2, r30
     c86:	85 32       	cpi	r24, 0x25	; 37
     c88:	39 f4       	brne	.+14     	; 0xc98 <vfprintf+0x5c>
     c8a:	b7 01       	movw	r22, r14
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     c92:	56 01       	movw	r10, r12
     c94:	65 01       	movw	r12, r10
     c96:	e5 cf       	rjmp	.-54     	; 0xc62 <vfprintf+0x26>
     c98:	10 e0       	ldi	r17, 0x00	; 0
     c9a:	51 2c       	mov	r5, r1
     c9c:	91 2c       	mov	r9, r1
     c9e:	ff e1       	ldi	r31, 0x1F	; 31
     ca0:	f9 15       	cp	r31, r9
     ca2:	d8 f0       	brcs	.+54     	; 0xcda <vfprintf+0x9e>
     ca4:	8b 32       	cpi	r24, 0x2B	; 43
     ca6:	79 f0       	breq	.+30     	; 0xcc6 <vfprintf+0x8a>
     ca8:	38 f4       	brcc	.+14     	; 0xcb8 <vfprintf+0x7c>
     caa:	80 32       	cpi	r24, 0x20	; 32
     cac:	79 f0       	breq	.+30     	; 0xccc <vfprintf+0x90>
     cae:	83 32       	cpi	r24, 0x23	; 35
     cb0:	a1 f4       	brne	.+40     	; 0xcda <vfprintf+0x9e>
     cb2:	f9 2d       	mov	r31, r9
     cb4:	f0 61       	ori	r31, 0x10	; 16
     cb6:	2e c0       	rjmp	.+92     	; 0xd14 <vfprintf+0xd8>
     cb8:	8d 32       	cpi	r24, 0x2D	; 45
     cba:	61 f0       	breq	.+24     	; 0xcd4 <vfprintf+0x98>
     cbc:	80 33       	cpi	r24, 0x30	; 48
     cbe:	69 f4       	brne	.+26     	; 0xcda <vfprintf+0x9e>
     cc0:	29 2d       	mov	r18, r9
     cc2:	21 60       	ori	r18, 0x01	; 1
     cc4:	2d c0       	rjmp	.+90     	; 0xd20 <vfprintf+0xe4>
     cc6:	39 2d       	mov	r19, r9
     cc8:	32 60       	ori	r19, 0x02	; 2
     cca:	93 2e       	mov	r9, r19
     ccc:	89 2d       	mov	r24, r9
     cce:	84 60       	ori	r24, 0x04	; 4
     cd0:	98 2e       	mov	r9, r24
     cd2:	2a c0       	rjmp	.+84     	; 0xd28 <vfprintf+0xec>
     cd4:	e9 2d       	mov	r30, r9
     cd6:	e8 60       	ori	r30, 0x08	; 8
     cd8:	15 c0       	rjmp	.+42     	; 0xd04 <vfprintf+0xc8>
     cda:	97 fc       	sbrc	r9, 7
     cdc:	2d c0       	rjmp	.+90     	; 0xd38 <vfprintf+0xfc>
     cde:	20 ed       	ldi	r18, 0xD0	; 208
     ce0:	28 0f       	add	r18, r24
     ce2:	2a 30       	cpi	r18, 0x0A	; 10
     ce4:	88 f4       	brcc	.+34     	; 0xd08 <vfprintf+0xcc>
     ce6:	96 fe       	sbrs	r9, 6
     ce8:	06 c0       	rjmp	.+12     	; 0xcf6 <vfprintf+0xba>
     cea:	3a e0       	ldi	r19, 0x0A	; 10
     cec:	13 9f       	mul	r17, r19
     cee:	20 0d       	add	r18, r0
     cf0:	11 24       	eor	r1, r1
     cf2:	12 2f       	mov	r17, r18
     cf4:	19 c0       	rjmp	.+50     	; 0xd28 <vfprintf+0xec>
     cf6:	8a e0       	ldi	r24, 0x0A	; 10
     cf8:	58 9e       	mul	r5, r24
     cfa:	20 0d       	add	r18, r0
     cfc:	11 24       	eor	r1, r1
     cfe:	52 2e       	mov	r5, r18
     d00:	e9 2d       	mov	r30, r9
     d02:	e0 62       	ori	r30, 0x20	; 32
     d04:	9e 2e       	mov	r9, r30
     d06:	10 c0       	rjmp	.+32     	; 0xd28 <vfprintf+0xec>
     d08:	8e 32       	cpi	r24, 0x2E	; 46
     d0a:	31 f4       	brne	.+12     	; 0xd18 <vfprintf+0xdc>
     d0c:	96 fc       	sbrc	r9, 6
     d0e:	e5 c2       	rjmp	.+1482   	; 0x12da <vfprintf+0x69e>
     d10:	f9 2d       	mov	r31, r9
     d12:	f0 64       	ori	r31, 0x40	; 64
     d14:	9f 2e       	mov	r9, r31
     d16:	08 c0       	rjmp	.+16     	; 0xd28 <vfprintf+0xec>
     d18:	8c 36       	cpi	r24, 0x6C	; 108
     d1a:	21 f4       	brne	.+8      	; 0xd24 <vfprintf+0xe8>
     d1c:	29 2d       	mov	r18, r9
     d1e:	20 68       	ori	r18, 0x80	; 128
     d20:	92 2e       	mov	r9, r18
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <vfprintf+0xec>
     d24:	88 36       	cpi	r24, 0x68	; 104
     d26:	41 f4       	brne	.+16     	; 0xd38 <vfprintf+0xfc>
     d28:	f1 01       	movw	r30, r2
     d2a:	93 fd       	sbrc	r25, 3
     d2c:	85 91       	lpm	r24, Z+
     d2e:	93 ff       	sbrs	r25, 3
     d30:	81 91       	ld	r24, Z+
     d32:	1f 01       	movw	r2, r30
     d34:	81 11       	cpse	r24, r1
     d36:	b3 cf       	rjmp	.-154    	; 0xc9e <vfprintf+0x62>
     d38:	9b eb       	ldi	r25, 0xBB	; 187
     d3a:	98 0f       	add	r25, r24
     d3c:	93 30       	cpi	r25, 0x03	; 3
     d3e:	20 f4       	brcc	.+8      	; 0xd48 <vfprintf+0x10c>
     d40:	99 2d       	mov	r25, r9
     d42:	90 61       	ori	r25, 0x10	; 16
     d44:	80 5e       	subi	r24, 0xE0	; 224
     d46:	07 c0       	rjmp	.+14     	; 0xd56 <vfprintf+0x11a>
     d48:	9b e9       	ldi	r25, 0x9B	; 155
     d4a:	98 0f       	add	r25, r24
     d4c:	93 30       	cpi	r25, 0x03	; 3
     d4e:	08 f0       	brcs	.+2      	; 0xd52 <vfprintf+0x116>
     d50:	66 c1       	rjmp	.+716    	; 0x101e <vfprintf+0x3e2>
     d52:	99 2d       	mov	r25, r9
     d54:	9f 7e       	andi	r25, 0xEF	; 239
     d56:	96 ff       	sbrs	r25, 6
     d58:	16 e0       	ldi	r17, 0x06	; 6
     d5a:	9f 73       	andi	r25, 0x3F	; 63
     d5c:	99 2e       	mov	r9, r25
     d5e:	85 36       	cpi	r24, 0x65	; 101
     d60:	19 f4       	brne	.+6      	; 0xd68 <vfprintf+0x12c>
     d62:	90 64       	ori	r25, 0x40	; 64
     d64:	99 2e       	mov	r9, r25
     d66:	08 c0       	rjmp	.+16     	; 0xd78 <vfprintf+0x13c>
     d68:	86 36       	cpi	r24, 0x66	; 102
     d6a:	21 f4       	brne	.+8      	; 0xd74 <vfprintf+0x138>
     d6c:	39 2f       	mov	r19, r25
     d6e:	30 68       	ori	r19, 0x80	; 128
     d70:	93 2e       	mov	r9, r19
     d72:	02 c0       	rjmp	.+4      	; 0xd78 <vfprintf+0x13c>
     d74:	11 11       	cpse	r17, r1
     d76:	11 50       	subi	r17, 0x01	; 1
     d78:	97 fe       	sbrs	r9, 7
     d7a:	07 c0       	rjmp	.+14     	; 0xd8a <vfprintf+0x14e>
     d7c:	1c 33       	cpi	r17, 0x3C	; 60
     d7e:	50 f4       	brcc	.+20     	; 0xd94 <vfprintf+0x158>
     d80:	44 24       	eor	r4, r4
     d82:	43 94       	inc	r4
     d84:	41 0e       	add	r4, r17
     d86:	27 e0       	ldi	r18, 0x07	; 7
     d88:	0b c0       	rjmp	.+22     	; 0xda0 <vfprintf+0x164>
     d8a:	18 30       	cpi	r17, 0x08	; 8
     d8c:	38 f0       	brcs	.+14     	; 0xd9c <vfprintf+0x160>
     d8e:	27 e0       	ldi	r18, 0x07	; 7
     d90:	17 e0       	ldi	r17, 0x07	; 7
     d92:	05 c0       	rjmp	.+10     	; 0xd9e <vfprintf+0x162>
     d94:	27 e0       	ldi	r18, 0x07	; 7
     d96:	9c e3       	ldi	r25, 0x3C	; 60
     d98:	49 2e       	mov	r4, r25
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <vfprintf+0x164>
     d9c:	21 2f       	mov	r18, r17
     d9e:	41 2c       	mov	r4, r1
     da0:	56 01       	movw	r10, r12
     da2:	84 e0       	ldi	r24, 0x04	; 4
     da4:	a8 0e       	add	r10, r24
     da6:	b1 1c       	adc	r11, r1
     da8:	f6 01       	movw	r30, r12
     daa:	60 81       	ld	r22, Z
     dac:	71 81       	ldd	r23, Z+1	; 0x01
     dae:	82 81       	ldd	r24, Z+2	; 0x02
     db0:	93 81       	ldd	r25, Z+3	; 0x03
     db2:	04 2d       	mov	r16, r4
     db4:	a3 01       	movw	r20, r6
     db6:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__ftoa_engine>
     dba:	6c 01       	movw	r12, r24
     dbc:	f9 81       	ldd	r31, Y+1	; 0x01
     dbe:	fc 87       	std	Y+12, r31	; 0x0c
     dc0:	f0 ff       	sbrs	r31, 0
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <vfprintf+0x18c>
     dc4:	f3 ff       	sbrs	r31, 3
     dc6:	06 c0       	rjmp	.+12     	; 0xdd4 <vfprintf+0x198>
     dc8:	91 fc       	sbrc	r9, 1
     dca:	06 c0       	rjmp	.+12     	; 0xdd8 <vfprintf+0x19c>
     dcc:	92 fe       	sbrs	r9, 2
     dce:	06 c0       	rjmp	.+12     	; 0xddc <vfprintf+0x1a0>
     dd0:	00 e2       	ldi	r16, 0x20	; 32
     dd2:	05 c0       	rjmp	.+10     	; 0xdde <vfprintf+0x1a2>
     dd4:	0d e2       	ldi	r16, 0x2D	; 45
     dd6:	03 c0       	rjmp	.+6      	; 0xdde <vfprintf+0x1a2>
     dd8:	0b e2       	ldi	r16, 0x2B	; 43
     dda:	01 c0       	rjmp	.+2      	; 0xdde <vfprintf+0x1a2>
     ddc:	00 e0       	ldi	r16, 0x00	; 0
     dde:	8c 85       	ldd	r24, Y+12	; 0x0c
     de0:	8c 70       	andi	r24, 0x0C	; 12
     de2:	19 f0       	breq	.+6      	; 0xdea <vfprintf+0x1ae>
     de4:	01 11       	cpse	r16, r1
     de6:	5a c2       	rjmp	.+1204   	; 0x129c <vfprintf+0x660>
     de8:	9b c2       	rjmp	.+1334   	; 0x1320 <vfprintf+0x6e4>
     dea:	97 fe       	sbrs	r9, 7
     dec:	10 c0       	rjmp	.+32     	; 0xe0e <vfprintf+0x1d2>
     dee:	4c 0c       	add	r4, r12
     df0:	fc 85       	ldd	r31, Y+12	; 0x0c
     df2:	f4 ff       	sbrs	r31, 4
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <vfprintf+0x1c2>
     df6:	8a 81       	ldd	r24, Y+2	; 0x02
     df8:	81 33       	cpi	r24, 0x31	; 49
     dfa:	09 f4       	brne	.+2      	; 0xdfe <vfprintf+0x1c2>
     dfc:	4a 94       	dec	r4
     dfe:	14 14       	cp	r1, r4
     e00:	74 f5       	brge	.+92     	; 0xe5e <vfprintf+0x222>
     e02:	28 e0       	ldi	r18, 0x08	; 8
     e04:	24 15       	cp	r18, r4
     e06:	78 f5       	brcc	.+94     	; 0xe66 <vfprintf+0x22a>
     e08:	88 e0       	ldi	r24, 0x08	; 8
     e0a:	48 2e       	mov	r4, r24
     e0c:	2c c0       	rjmp	.+88     	; 0xe66 <vfprintf+0x22a>
     e0e:	96 fc       	sbrc	r9, 6
     e10:	2a c0       	rjmp	.+84     	; 0xe66 <vfprintf+0x22a>
     e12:	81 2f       	mov	r24, r17
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	8c 15       	cp	r24, r12
     e18:	9d 05       	cpc	r25, r13
     e1a:	9c f0       	brlt	.+38     	; 0xe42 <vfprintf+0x206>
     e1c:	3c ef       	ldi	r19, 0xFC	; 252
     e1e:	c3 16       	cp	r12, r19
     e20:	3f ef       	ldi	r19, 0xFF	; 255
     e22:	d3 06       	cpc	r13, r19
     e24:	74 f0       	brlt	.+28     	; 0xe42 <vfprintf+0x206>
     e26:	89 2d       	mov	r24, r9
     e28:	80 68       	ori	r24, 0x80	; 128
     e2a:	98 2e       	mov	r9, r24
     e2c:	0a c0       	rjmp	.+20     	; 0xe42 <vfprintf+0x206>
     e2e:	e2 e0       	ldi	r30, 0x02	; 2
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	ec 0f       	add	r30, r28
     e34:	fd 1f       	adc	r31, r29
     e36:	e1 0f       	add	r30, r17
     e38:	f1 1d       	adc	r31, r1
     e3a:	80 81       	ld	r24, Z
     e3c:	80 33       	cpi	r24, 0x30	; 48
     e3e:	19 f4       	brne	.+6      	; 0xe46 <vfprintf+0x20a>
     e40:	11 50       	subi	r17, 0x01	; 1
     e42:	11 11       	cpse	r17, r1
     e44:	f4 cf       	rjmp	.-24     	; 0xe2e <vfprintf+0x1f2>
     e46:	97 fe       	sbrs	r9, 7
     e48:	0e c0       	rjmp	.+28     	; 0xe66 <vfprintf+0x22a>
     e4a:	44 24       	eor	r4, r4
     e4c:	43 94       	inc	r4
     e4e:	41 0e       	add	r4, r17
     e50:	81 2f       	mov	r24, r17
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	c8 16       	cp	r12, r24
     e56:	d9 06       	cpc	r13, r25
     e58:	2c f4       	brge	.+10     	; 0xe64 <vfprintf+0x228>
     e5a:	1c 19       	sub	r17, r12
     e5c:	04 c0       	rjmp	.+8      	; 0xe66 <vfprintf+0x22a>
     e5e:	44 24       	eor	r4, r4
     e60:	43 94       	inc	r4
     e62:	01 c0       	rjmp	.+2      	; 0xe66 <vfprintf+0x22a>
     e64:	10 e0       	ldi	r17, 0x00	; 0
     e66:	97 fe       	sbrs	r9, 7
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <vfprintf+0x23a>
     e6a:	1c 14       	cp	r1, r12
     e6c:	1d 04       	cpc	r1, r13
     e6e:	34 f4       	brge	.+12     	; 0xe7c <vfprintf+0x240>
     e70:	c6 01       	movw	r24, r12
     e72:	01 96       	adiw	r24, 0x01	; 1
     e74:	05 c0       	rjmp	.+10     	; 0xe80 <vfprintf+0x244>
     e76:	85 e0       	ldi	r24, 0x05	; 5
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <vfprintf+0x244>
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	01 11       	cpse	r16, r1
     e82:	01 96       	adiw	r24, 0x01	; 1
     e84:	11 23       	and	r17, r17
     e86:	31 f0       	breq	.+12     	; 0xe94 <vfprintf+0x258>
     e88:	21 2f       	mov	r18, r17
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	2f 5f       	subi	r18, 0xFF	; 255
     e8e:	3f 4f       	sbci	r19, 0xFF	; 255
     e90:	82 0f       	add	r24, r18
     e92:	93 1f       	adc	r25, r19
     e94:	25 2d       	mov	r18, r5
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	82 17       	cp	r24, r18
     e9a:	93 07       	cpc	r25, r19
     e9c:	14 f4       	brge	.+4      	; 0xea2 <vfprintf+0x266>
     e9e:	58 1a       	sub	r5, r24
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <vfprintf+0x268>
     ea2:	51 2c       	mov	r5, r1
     ea4:	89 2d       	mov	r24, r9
     ea6:	89 70       	andi	r24, 0x09	; 9
     ea8:	49 f4       	brne	.+18     	; 0xebc <vfprintf+0x280>
     eaa:	55 20       	and	r5, r5
     eac:	39 f0       	breq	.+14     	; 0xebc <vfprintf+0x280>
     eae:	b7 01       	movw	r22, r14
     eb0:	80 e2       	ldi	r24, 0x20	; 32
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     eb8:	5a 94       	dec	r5
     eba:	f7 cf       	rjmp	.-18     	; 0xeaa <vfprintf+0x26e>
     ebc:	00 23       	and	r16, r16
     ebe:	29 f0       	breq	.+10     	; 0xeca <vfprintf+0x28e>
     ec0:	b7 01       	movw	r22, r14
     ec2:	80 2f       	mov	r24, r16
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     eca:	93 fc       	sbrc	r9, 3
     ecc:	09 c0       	rjmp	.+18     	; 0xee0 <vfprintf+0x2a4>
     ece:	55 20       	and	r5, r5
     ed0:	39 f0       	breq	.+14     	; 0xee0 <vfprintf+0x2a4>
     ed2:	b7 01       	movw	r22, r14
     ed4:	80 e3       	ldi	r24, 0x30	; 48
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     edc:	5a 94       	dec	r5
     ede:	f7 cf       	rjmp	.-18     	; 0xece <vfprintf+0x292>
     ee0:	97 fe       	sbrs	r9, 7
     ee2:	4c c0       	rjmp	.+152    	; 0xf7c <vfprintf+0x340>
     ee4:	46 01       	movw	r8, r12
     ee6:	d7 fe       	sbrs	r13, 7
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <vfprintf+0x2b2>
     eea:	81 2c       	mov	r8, r1
     eec:	91 2c       	mov	r9, r1
     eee:	c6 01       	movw	r24, r12
     ef0:	88 19       	sub	r24, r8
     ef2:	99 09       	sbc	r25, r9
     ef4:	f3 01       	movw	r30, r6
     ef6:	e8 0f       	add	r30, r24
     ef8:	f9 1f       	adc	r31, r25
     efa:	fe 87       	std	Y+14, r31	; 0x0e
     efc:	ed 87       	std	Y+13, r30	; 0x0d
     efe:	96 01       	movw	r18, r12
     f00:	24 19       	sub	r18, r4
     f02:	31 09       	sbc	r19, r1
     f04:	38 8b       	std	Y+16, r19	; 0x10
     f06:	2f 87       	std	Y+15, r18	; 0x0f
     f08:	01 2f       	mov	r16, r17
     f0a:	10 e0       	ldi	r17, 0x00	; 0
     f0c:	11 95       	neg	r17
     f0e:	01 95       	neg	r16
     f10:	11 09       	sbc	r17, r1
     f12:	3f ef       	ldi	r19, 0xFF	; 255
     f14:	83 16       	cp	r8, r19
     f16:	93 06       	cpc	r9, r19
     f18:	29 f4       	brne	.+10     	; 0xf24 <vfprintf+0x2e8>
     f1a:	b7 01       	movw	r22, r14
     f1c:	8e e2       	ldi	r24, 0x2E	; 46
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     f24:	c8 14       	cp	r12, r8
     f26:	d9 04       	cpc	r13, r9
     f28:	4c f0       	brlt	.+18     	; 0xf3c <vfprintf+0x300>
     f2a:	8f 85       	ldd	r24, Y+15	; 0x0f
     f2c:	98 89       	ldd	r25, Y+16	; 0x10
     f2e:	88 15       	cp	r24, r8
     f30:	99 05       	cpc	r25, r9
     f32:	24 f4       	brge	.+8      	; 0xf3c <vfprintf+0x300>
     f34:	ed 85       	ldd	r30, Y+13	; 0x0d
     f36:	fe 85       	ldd	r31, Y+14	; 0x0e
     f38:	81 81       	ldd	r24, Z+1	; 0x01
     f3a:	01 c0       	rjmp	.+2      	; 0xf3e <vfprintf+0x302>
     f3c:	80 e3       	ldi	r24, 0x30	; 48
     f3e:	f1 e0       	ldi	r31, 0x01	; 1
     f40:	8f 1a       	sub	r8, r31
     f42:	91 08       	sbc	r9, r1
     f44:	2d 85       	ldd	r18, Y+13	; 0x0d
     f46:	3e 85       	ldd	r19, Y+14	; 0x0e
     f48:	2f 5f       	subi	r18, 0xFF	; 255
     f4a:	3f 4f       	sbci	r19, 0xFF	; 255
     f4c:	3e 87       	std	Y+14, r19	; 0x0e
     f4e:	2d 87       	std	Y+13, r18	; 0x0d
     f50:	80 16       	cp	r8, r16
     f52:	91 06       	cpc	r9, r17
     f54:	2c f0       	brlt	.+10     	; 0xf60 <vfprintf+0x324>
     f56:	b7 01       	movw	r22, r14
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     f5e:	d9 cf       	rjmp	.-78     	; 0xf12 <vfprintf+0x2d6>
     f60:	c8 14       	cp	r12, r8
     f62:	d9 04       	cpc	r13, r9
     f64:	41 f4       	brne	.+16     	; 0xf76 <vfprintf+0x33a>
     f66:	9a 81       	ldd	r25, Y+2	; 0x02
     f68:	96 33       	cpi	r25, 0x36	; 54
     f6a:	20 f4       	brcc	.+8      	; 0xf74 <vfprintf+0x338>
     f6c:	95 33       	cpi	r25, 0x35	; 53
     f6e:	19 f4       	brne	.+6      	; 0xf76 <vfprintf+0x33a>
     f70:	3c 85       	ldd	r19, Y+12	; 0x0c
     f72:	34 ff       	sbrs	r19, 4
     f74:	81 e3       	ldi	r24, 0x31	; 49
     f76:	b7 01       	movw	r22, r14
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	4e c0       	rjmp	.+156    	; 0x1018 <vfprintf+0x3dc>
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	81 33       	cpi	r24, 0x31	; 49
     f80:	19 f0       	breq	.+6      	; 0xf88 <vfprintf+0x34c>
     f82:	9c 85       	ldd	r25, Y+12	; 0x0c
     f84:	9f 7e       	andi	r25, 0xEF	; 239
     f86:	9c 87       	std	Y+12, r25	; 0x0c
     f88:	b7 01       	movw	r22, r14
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     f90:	11 11       	cpse	r17, r1
     f92:	05 c0       	rjmp	.+10     	; 0xf9e <vfprintf+0x362>
     f94:	94 fc       	sbrc	r9, 4
     f96:	18 c0       	rjmp	.+48     	; 0xfc8 <vfprintf+0x38c>
     f98:	85 e6       	ldi	r24, 0x65	; 101
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	17 c0       	rjmp	.+46     	; 0xfcc <vfprintf+0x390>
     f9e:	b7 01       	movw	r22, r14
     fa0:	8e e2       	ldi	r24, 0x2E	; 46
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     fa8:	1e 5f       	subi	r17, 0xFE	; 254
     faa:	82 e0       	ldi	r24, 0x02	; 2
     fac:	01 e0       	ldi	r16, 0x01	; 1
     fae:	08 0f       	add	r16, r24
     fb0:	f3 01       	movw	r30, r6
     fb2:	e8 0f       	add	r30, r24
     fb4:	f1 1d       	adc	r31, r1
     fb6:	80 81       	ld	r24, Z
     fb8:	b7 01       	movw	r22, r14
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     fc0:	80 2f       	mov	r24, r16
     fc2:	01 13       	cpse	r16, r17
     fc4:	f3 cf       	rjmp	.-26     	; 0xfac <vfprintf+0x370>
     fc6:	e6 cf       	rjmp	.-52     	; 0xf94 <vfprintf+0x358>
     fc8:	85 e4       	ldi	r24, 0x45	; 69
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	b7 01       	movw	r22, r14
     fce:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     fd2:	d7 fc       	sbrc	r13, 7
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0x3a6>
     fd6:	c1 14       	cp	r12, r1
     fd8:	d1 04       	cpc	r13, r1
     fda:	41 f4       	brne	.+16     	; 0xfec <vfprintf+0x3b0>
     fdc:	ec 85       	ldd	r30, Y+12	; 0x0c
     fde:	e4 ff       	sbrs	r30, 4
     fe0:	05 c0       	rjmp	.+10     	; 0xfec <vfprintf+0x3b0>
     fe2:	d1 94       	neg	r13
     fe4:	c1 94       	neg	r12
     fe6:	d1 08       	sbc	r13, r1
     fe8:	8d e2       	ldi	r24, 0x2D	; 45
     fea:	01 c0       	rjmp	.+2      	; 0xfee <vfprintf+0x3b2>
     fec:	8b e2       	ldi	r24, 0x2B	; 43
     fee:	b7 01       	movw	r22, r14
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
     ff6:	80 e3       	ldi	r24, 0x30	; 48
     ff8:	2a e0       	ldi	r18, 0x0A	; 10
     ffa:	c2 16       	cp	r12, r18
     ffc:	d1 04       	cpc	r13, r1
     ffe:	2c f0       	brlt	.+10     	; 0x100a <vfprintf+0x3ce>
    1000:	8f 5f       	subi	r24, 0xFF	; 255
    1002:	fa e0       	ldi	r31, 0x0A	; 10
    1004:	cf 1a       	sub	r12, r31
    1006:	d1 08       	sbc	r13, r1
    1008:	f7 cf       	rjmp	.-18     	; 0xff8 <vfprintf+0x3bc>
    100a:	b7 01       	movw	r22, r14
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1012:	b7 01       	movw	r22, r14
    1014:	c6 01       	movw	r24, r12
    1016:	c0 96       	adiw	r24, 0x30	; 48
    1018:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    101c:	54 c1       	rjmp	.+680    	; 0x12c6 <vfprintf+0x68a>
    101e:	83 36       	cpi	r24, 0x63	; 99
    1020:	31 f0       	breq	.+12     	; 0x102e <vfprintf+0x3f2>
    1022:	83 37       	cpi	r24, 0x73	; 115
    1024:	79 f0       	breq	.+30     	; 0x1044 <vfprintf+0x408>
    1026:	83 35       	cpi	r24, 0x53	; 83
    1028:	09 f0       	breq	.+2      	; 0x102c <vfprintf+0x3f0>
    102a:	56 c0       	rjmp	.+172    	; 0x10d8 <vfprintf+0x49c>
    102c:	20 c0       	rjmp	.+64     	; 0x106e <vfprintf+0x432>
    102e:	56 01       	movw	r10, r12
    1030:	32 e0       	ldi	r19, 0x02	; 2
    1032:	a3 0e       	add	r10, r19
    1034:	b1 1c       	adc	r11, r1
    1036:	f6 01       	movw	r30, r12
    1038:	80 81       	ld	r24, Z
    103a:	89 83       	std	Y+1, r24	; 0x01
    103c:	01 e0       	ldi	r16, 0x01	; 1
    103e:	10 e0       	ldi	r17, 0x00	; 0
    1040:	63 01       	movw	r12, r6
    1042:	12 c0       	rjmp	.+36     	; 0x1068 <vfprintf+0x42c>
    1044:	56 01       	movw	r10, r12
    1046:	f2 e0       	ldi	r31, 0x02	; 2
    1048:	af 0e       	add	r10, r31
    104a:	b1 1c       	adc	r11, r1
    104c:	f6 01       	movw	r30, r12
    104e:	c0 80       	ld	r12, Z
    1050:	d1 80       	ldd	r13, Z+1	; 0x01
    1052:	96 fe       	sbrs	r9, 6
    1054:	03 c0       	rjmp	.+6      	; 0x105c <vfprintf+0x420>
    1056:	61 2f       	mov	r22, r17
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <vfprintf+0x424>
    105c:	6f ef       	ldi	r22, 0xFF	; 255
    105e:	7f ef       	ldi	r23, 0xFF	; 255
    1060:	c6 01       	movw	r24, r12
    1062:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <strnlen>
    1066:	8c 01       	movw	r16, r24
    1068:	f9 2d       	mov	r31, r9
    106a:	ff 77       	andi	r31, 0x7F	; 127
    106c:	14 c0       	rjmp	.+40     	; 0x1096 <vfprintf+0x45a>
    106e:	56 01       	movw	r10, r12
    1070:	22 e0       	ldi	r18, 0x02	; 2
    1072:	a2 0e       	add	r10, r18
    1074:	b1 1c       	adc	r11, r1
    1076:	f6 01       	movw	r30, r12
    1078:	c0 80       	ld	r12, Z
    107a:	d1 80       	ldd	r13, Z+1	; 0x01
    107c:	96 fe       	sbrs	r9, 6
    107e:	03 c0       	rjmp	.+6      	; 0x1086 <vfprintf+0x44a>
    1080:	61 2f       	mov	r22, r17
    1082:	70 e0       	ldi	r23, 0x00	; 0
    1084:	02 c0       	rjmp	.+4      	; 0x108a <vfprintf+0x44e>
    1086:	6f ef       	ldi	r22, 0xFF	; 255
    1088:	7f ef       	ldi	r23, 0xFF	; 255
    108a:	c6 01       	movw	r24, r12
    108c:	0e 94 cc 0a 	call	0x1598	; 0x1598 <strnlen_P>
    1090:	8c 01       	movw	r16, r24
    1092:	f9 2d       	mov	r31, r9
    1094:	f0 68       	ori	r31, 0x80	; 128
    1096:	9f 2e       	mov	r9, r31
    1098:	f3 fd       	sbrc	r31, 3
    109a:	1a c0       	rjmp	.+52     	; 0x10d0 <vfprintf+0x494>
    109c:	85 2d       	mov	r24, r5
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	08 17       	cp	r16, r24
    10a2:	19 07       	cpc	r17, r25
    10a4:	a8 f4       	brcc	.+42     	; 0x10d0 <vfprintf+0x494>
    10a6:	b7 01       	movw	r22, r14
    10a8:	80 e2       	ldi	r24, 0x20	; 32
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    10b0:	5a 94       	dec	r5
    10b2:	f4 cf       	rjmp	.-24     	; 0x109c <vfprintf+0x460>
    10b4:	f6 01       	movw	r30, r12
    10b6:	97 fc       	sbrc	r9, 7
    10b8:	85 91       	lpm	r24, Z+
    10ba:	97 fe       	sbrs	r9, 7
    10bc:	81 91       	ld	r24, Z+
    10be:	6f 01       	movw	r12, r30
    10c0:	b7 01       	movw	r22, r14
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    10c8:	51 10       	cpse	r5, r1
    10ca:	5a 94       	dec	r5
    10cc:	01 50       	subi	r16, 0x01	; 1
    10ce:	11 09       	sbc	r17, r1
    10d0:	01 15       	cp	r16, r1
    10d2:	11 05       	cpc	r17, r1
    10d4:	79 f7       	brne	.-34     	; 0x10b4 <vfprintf+0x478>
    10d6:	f7 c0       	rjmp	.+494    	; 0x12c6 <vfprintf+0x68a>
    10d8:	84 36       	cpi	r24, 0x64	; 100
    10da:	11 f0       	breq	.+4      	; 0x10e0 <vfprintf+0x4a4>
    10dc:	89 36       	cpi	r24, 0x69	; 105
    10de:	61 f5       	brne	.+88     	; 0x1138 <vfprintf+0x4fc>
    10e0:	56 01       	movw	r10, r12
    10e2:	97 fe       	sbrs	r9, 7
    10e4:	09 c0       	rjmp	.+18     	; 0x10f8 <vfprintf+0x4bc>
    10e6:	24 e0       	ldi	r18, 0x04	; 4
    10e8:	a2 0e       	add	r10, r18
    10ea:	b1 1c       	adc	r11, r1
    10ec:	f6 01       	movw	r30, r12
    10ee:	60 81       	ld	r22, Z
    10f0:	71 81       	ldd	r23, Z+1	; 0x01
    10f2:	82 81       	ldd	r24, Z+2	; 0x02
    10f4:	93 81       	ldd	r25, Z+3	; 0x03
    10f6:	0a c0       	rjmp	.+20     	; 0x110c <vfprintf+0x4d0>
    10f8:	f2 e0       	ldi	r31, 0x02	; 2
    10fa:	af 0e       	add	r10, r31
    10fc:	b1 1c       	adc	r11, r1
    10fe:	f6 01       	movw	r30, r12
    1100:	60 81       	ld	r22, Z
    1102:	71 81       	ldd	r23, Z+1	; 0x01
    1104:	07 2e       	mov	r0, r23
    1106:	00 0c       	add	r0, r0
    1108:	88 0b       	sbc	r24, r24
    110a:	99 0b       	sbc	r25, r25
    110c:	f9 2d       	mov	r31, r9
    110e:	ff 76       	andi	r31, 0x6F	; 111
    1110:	9f 2e       	mov	r9, r31
    1112:	97 ff       	sbrs	r25, 7
    1114:	09 c0       	rjmp	.+18     	; 0x1128 <vfprintf+0x4ec>
    1116:	90 95       	com	r25
    1118:	80 95       	com	r24
    111a:	70 95       	com	r23
    111c:	61 95       	neg	r22
    111e:	7f 4f       	sbci	r23, 0xFF	; 255
    1120:	8f 4f       	sbci	r24, 0xFF	; 255
    1122:	9f 4f       	sbci	r25, 0xFF	; 255
    1124:	f0 68       	ori	r31, 0x80	; 128
    1126:	9f 2e       	mov	r9, r31
    1128:	2a e0       	ldi	r18, 0x0A	; 10
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	a3 01       	movw	r20, r6
    112e:	0e 94 48 0b 	call	0x1690	; 0x1690 <__ultoa_invert>
    1132:	c8 2e       	mov	r12, r24
    1134:	c6 18       	sub	r12, r6
    1136:	3f c0       	rjmp	.+126    	; 0x11b6 <vfprintf+0x57a>
    1138:	09 2d       	mov	r16, r9
    113a:	85 37       	cpi	r24, 0x75	; 117
    113c:	21 f4       	brne	.+8      	; 0x1146 <vfprintf+0x50a>
    113e:	0f 7e       	andi	r16, 0xEF	; 239
    1140:	2a e0       	ldi	r18, 0x0A	; 10
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	1d c0       	rjmp	.+58     	; 0x1180 <vfprintf+0x544>
    1146:	09 7f       	andi	r16, 0xF9	; 249
    1148:	8f 36       	cpi	r24, 0x6F	; 111
    114a:	91 f0       	breq	.+36     	; 0x1170 <vfprintf+0x534>
    114c:	18 f4       	brcc	.+6      	; 0x1154 <vfprintf+0x518>
    114e:	88 35       	cpi	r24, 0x58	; 88
    1150:	59 f0       	breq	.+22     	; 0x1168 <vfprintf+0x52c>
    1152:	c3 c0       	rjmp	.+390    	; 0x12da <vfprintf+0x69e>
    1154:	80 37       	cpi	r24, 0x70	; 112
    1156:	19 f0       	breq	.+6      	; 0x115e <vfprintf+0x522>
    1158:	88 37       	cpi	r24, 0x78	; 120
    115a:	11 f0       	breq	.+4      	; 0x1160 <vfprintf+0x524>
    115c:	be c0       	rjmp	.+380    	; 0x12da <vfprintf+0x69e>
    115e:	00 61       	ori	r16, 0x10	; 16
    1160:	04 ff       	sbrs	r16, 4
    1162:	09 c0       	rjmp	.+18     	; 0x1176 <vfprintf+0x53a>
    1164:	04 60       	ori	r16, 0x04	; 4
    1166:	07 c0       	rjmp	.+14     	; 0x1176 <vfprintf+0x53a>
    1168:	94 fe       	sbrs	r9, 4
    116a:	08 c0       	rjmp	.+16     	; 0x117c <vfprintf+0x540>
    116c:	06 60       	ori	r16, 0x06	; 6
    116e:	06 c0       	rjmp	.+12     	; 0x117c <vfprintf+0x540>
    1170:	28 e0       	ldi	r18, 0x08	; 8
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	05 c0       	rjmp	.+10     	; 0x1180 <vfprintf+0x544>
    1176:	20 e1       	ldi	r18, 0x10	; 16
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <vfprintf+0x544>
    117c:	20 e1       	ldi	r18, 0x10	; 16
    117e:	32 e0       	ldi	r19, 0x02	; 2
    1180:	56 01       	movw	r10, r12
    1182:	07 ff       	sbrs	r16, 7
    1184:	09 c0       	rjmp	.+18     	; 0x1198 <vfprintf+0x55c>
    1186:	84 e0       	ldi	r24, 0x04	; 4
    1188:	a8 0e       	add	r10, r24
    118a:	b1 1c       	adc	r11, r1
    118c:	f6 01       	movw	r30, r12
    118e:	60 81       	ld	r22, Z
    1190:	71 81       	ldd	r23, Z+1	; 0x01
    1192:	82 81       	ldd	r24, Z+2	; 0x02
    1194:	93 81       	ldd	r25, Z+3	; 0x03
    1196:	08 c0       	rjmp	.+16     	; 0x11a8 <vfprintf+0x56c>
    1198:	f2 e0       	ldi	r31, 0x02	; 2
    119a:	af 0e       	add	r10, r31
    119c:	b1 1c       	adc	r11, r1
    119e:	f6 01       	movw	r30, r12
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	a3 01       	movw	r20, r6
    11aa:	0e 94 48 0b 	call	0x1690	; 0x1690 <__ultoa_invert>
    11ae:	c8 2e       	mov	r12, r24
    11b0:	c6 18       	sub	r12, r6
    11b2:	0f 77       	andi	r16, 0x7F	; 127
    11b4:	90 2e       	mov	r9, r16
    11b6:	96 fe       	sbrs	r9, 6
    11b8:	0b c0       	rjmp	.+22     	; 0x11d0 <vfprintf+0x594>
    11ba:	09 2d       	mov	r16, r9
    11bc:	0e 7f       	andi	r16, 0xFE	; 254
    11be:	c1 16       	cp	r12, r17
    11c0:	50 f4       	brcc	.+20     	; 0x11d6 <vfprintf+0x59a>
    11c2:	94 fe       	sbrs	r9, 4
    11c4:	0a c0       	rjmp	.+20     	; 0x11da <vfprintf+0x59e>
    11c6:	92 fc       	sbrc	r9, 2
    11c8:	08 c0       	rjmp	.+16     	; 0x11da <vfprintf+0x59e>
    11ca:	09 2d       	mov	r16, r9
    11cc:	0e 7e       	andi	r16, 0xEE	; 238
    11ce:	05 c0       	rjmp	.+10     	; 0x11da <vfprintf+0x59e>
    11d0:	dc 2c       	mov	r13, r12
    11d2:	09 2d       	mov	r16, r9
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <vfprintf+0x5a0>
    11d6:	dc 2c       	mov	r13, r12
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <vfprintf+0x5a0>
    11da:	d1 2e       	mov	r13, r17
    11dc:	04 ff       	sbrs	r16, 4
    11de:	0d c0       	rjmp	.+26     	; 0x11fa <vfprintf+0x5be>
    11e0:	fe 01       	movw	r30, r28
    11e2:	ec 0d       	add	r30, r12
    11e4:	f1 1d       	adc	r31, r1
    11e6:	80 81       	ld	r24, Z
    11e8:	80 33       	cpi	r24, 0x30	; 48
    11ea:	11 f4       	brne	.+4      	; 0x11f0 <vfprintf+0x5b4>
    11ec:	09 7e       	andi	r16, 0xE9	; 233
    11ee:	09 c0       	rjmp	.+18     	; 0x1202 <vfprintf+0x5c6>
    11f0:	02 ff       	sbrs	r16, 2
    11f2:	06 c0       	rjmp	.+12     	; 0x1200 <vfprintf+0x5c4>
    11f4:	d3 94       	inc	r13
    11f6:	d3 94       	inc	r13
    11f8:	04 c0       	rjmp	.+8      	; 0x1202 <vfprintf+0x5c6>
    11fa:	80 2f       	mov	r24, r16
    11fc:	86 78       	andi	r24, 0x86	; 134
    11fe:	09 f0       	breq	.+2      	; 0x1202 <vfprintf+0x5c6>
    1200:	d3 94       	inc	r13
    1202:	03 fd       	sbrc	r16, 3
    1204:	11 c0       	rjmp	.+34     	; 0x1228 <vfprintf+0x5ec>
    1206:	00 ff       	sbrs	r16, 0
    1208:	06 c0       	rjmp	.+12     	; 0x1216 <vfprintf+0x5da>
    120a:	1c 2d       	mov	r17, r12
    120c:	d5 14       	cp	r13, r5
    120e:	80 f4       	brcc	.+32     	; 0x1230 <vfprintf+0x5f4>
    1210:	15 0d       	add	r17, r5
    1212:	1d 19       	sub	r17, r13
    1214:	0d c0       	rjmp	.+26     	; 0x1230 <vfprintf+0x5f4>
    1216:	d5 14       	cp	r13, r5
    1218:	58 f4       	brcc	.+22     	; 0x1230 <vfprintf+0x5f4>
    121a:	b7 01       	movw	r22, r14
    121c:	80 e2       	ldi	r24, 0x20	; 32
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1224:	d3 94       	inc	r13
    1226:	f7 cf       	rjmp	.-18     	; 0x1216 <vfprintf+0x5da>
    1228:	d5 14       	cp	r13, r5
    122a:	10 f4       	brcc	.+4      	; 0x1230 <vfprintf+0x5f4>
    122c:	5d 18       	sub	r5, r13
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <vfprintf+0x5f6>
    1230:	51 2c       	mov	r5, r1
    1232:	04 ff       	sbrs	r16, 4
    1234:	10 c0       	rjmp	.+32     	; 0x1256 <vfprintf+0x61a>
    1236:	b7 01       	movw	r22, r14
    1238:	80 e3       	ldi	r24, 0x30	; 48
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1240:	02 ff       	sbrs	r16, 2
    1242:	17 c0       	rjmp	.+46     	; 0x1272 <vfprintf+0x636>
    1244:	01 fd       	sbrc	r16, 1
    1246:	03 c0       	rjmp	.+6      	; 0x124e <vfprintf+0x612>
    1248:	88 e7       	ldi	r24, 0x78	; 120
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	02 c0       	rjmp	.+4      	; 0x1252 <vfprintf+0x616>
    124e:	88 e5       	ldi	r24, 0x58	; 88
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	b7 01       	movw	r22, r14
    1254:	0c c0       	rjmp	.+24     	; 0x126e <vfprintf+0x632>
    1256:	80 2f       	mov	r24, r16
    1258:	86 78       	andi	r24, 0x86	; 134
    125a:	59 f0       	breq	.+22     	; 0x1272 <vfprintf+0x636>
    125c:	01 ff       	sbrs	r16, 1
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <vfprintf+0x628>
    1260:	8b e2       	ldi	r24, 0x2B	; 43
    1262:	01 c0       	rjmp	.+2      	; 0x1266 <vfprintf+0x62a>
    1264:	80 e2       	ldi	r24, 0x20	; 32
    1266:	07 fd       	sbrc	r16, 7
    1268:	8d e2       	ldi	r24, 0x2D	; 45
    126a:	b7 01       	movw	r22, r14
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1272:	c1 16       	cp	r12, r17
    1274:	38 f4       	brcc	.+14     	; 0x1284 <vfprintf+0x648>
    1276:	b7 01       	movw	r22, r14
    1278:	80 e3       	ldi	r24, 0x30	; 48
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1280:	11 50       	subi	r17, 0x01	; 1
    1282:	f7 cf       	rjmp	.-18     	; 0x1272 <vfprintf+0x636>
    1284:	ca 94       	dec	r12
    1286:	f3 01       	movw	r30, r6
    1288:	ec 0d       	add	r30, r12
    128a:	f1 1d       	adc	r31, r1
    128c:	80 81       	ld	r24, Z
    128e:	b7 01       	movw	r22, r14
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1296:	c1 10       	cpse	r12, r1
    1298:	f5 cf       	rjmp	.-22     	; 0x1284 <vfprintf+0x648>
    129a:	15 c0       	rjmp	.+42     	; 0x12c6 <vfprintf+0x68a>
    129c:	f4 e0       	ldi	r31, 0x04	; 4
    129e:	f5 15       	cp	r31, r5
    12a0:	60 f5       	brcc	.+88     	; 0x12fa <vfprintf+0x6be>
    12a2:	84 e0       	ldi	r24, 0x04	; 4
    12a4:	58 1a       	sub	r5, r24
    12a6:	93 fe       	sbrs	r9, 3
    12a8:	1f c0       	rjmp	.+62     	; 0x12e8 <vfprintf+0x6ac>
    12aa:	01 11       	cpse	r16, r1
    12ac:	27 c0       	rjmp	.+78     	; 0x12fc <vfprintf+0x6c0>
    12ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    12b0:	23 ff       	sbrs	r18, 3
    12b2:	2a c0       	rjmp	.+84     	; 0x1308 <vfprintf+0x6cc>
    12b4:	04 e5       	ldi	r16, 0x54	; 84
    12b6:	10 e0       	ldi	r17, 0x00	; 0
    12b8:	39 2d       	mov	r19, r9
    12ba:	30 71       	andi	r19, 0x10	; 16
    12bc:	93 2e       	mov	r9, r19
    12be:	f8 01       	movw	r30, r16
    12c0:	84 91       	lpm	r24, Z
    12c2:	81 11       	cpse	r24, r1
    12c4:	24 c0       	rjmp	.+72     	; 0x130e <vfprintf+0x6d2>
    12c6:	55 20       	and	r5, r5
    12c8:	09 f4       	brne	.+2      	; 0x12cc <vfprintf+0x690>
    12ca:	e4 cc       	rjmp	.-1592   	; 0xc94 <vfprintf+0x58>
    12cc:	b7 01       	movw	r22, r14
    12ce:	80 e2       	ldi	r24, 0x20	; 32
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    12d6:	5a 94       	dec	r5
    12d8:	f6 cf       	rjmp	.-20     	; 0x12c6 <vfprintf+0x68a>
    12da:	f7 01       	movw	r30, r14
    12dc:	86 81       	ldd	r24, Z+6	; 0x06
    12de:	97 81       	ldd	r25, Z+7	; 0x07
    12e0:	26 c0       	rjmp	.+76     	; 0x132e <vfprintf+0x6f2>
    12e2:	8f ef       	ldi	r24, 0xFF	; 255
    12e4:	9f ef       	ldi	r25, 0xFF	; 255
    12e6:	23 c0       	rjmp	.+70     	; 0x132e <vfprintf+0x6f2>
    12e8:	b7 01       	movw	r22, r14
    12ea:	80 e2       	ldi	r24, 0x20	; 32
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    12f2:	5a 94       	dec	r5
    12f4:	51 10       	cpse	r5, r1
    12f6:	f8 cf       	rjmp	.-16     	; 0x12e8 <vfprintf+0x6ac>
    12f8:	d8 cf       	rjmp	.-80     	; 0x12aa <vfprintf+0x66e>
    12fa:	51 2c       	mov	r5, r1
    12fc:	b7 01       	movw	r22, r14
    12fe:	80 2f       	mov	r24, r16
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    1306:	d3 cf       	rjmp	.-90     	; 0x12ae <vfprintf+0x672>
    1308:	08 e5       	ldi	r16, 0x58	; 88
    130a:	10 e0       	ldi	r17, 0x00	; 0
    130c:	d5 cf       	rjmp	.-86     	; 0x12b8 <vfprintf+0x67c>
    130e:	91 10       	cpse	r9, r1
    1310:	80 52       	subi	r24, 0x20	; 32
    1312:	b7 01       	movw	r22, r14
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <fputc>
    131a:	0f 5f       	subi	r16, 0xFF	; 255
    131c:	1f 4f       	sbci	r17, 0xFF	; 255
    131e:	cf cf       	rjmp	.-98     	; 0x12be <vfprintf+0x682>
    1320:	23 e0       	ldi	r18, 0x03	; 3
    1322:	25 15       	cp	r18, r5
    1324:	10 f4       	brcc	.+4      	; 0x132a <vfprintf+0x6ee>
    1326:	83 e0       	ldi	r24, 0x03	; 3
    1328:	bd cf       	rjmp	.-134    	; 0x12a4 <vfprintf+0x668>
    132a:	51 2c       	mov	r5, r1
    132c:	c0 cf       	rjmp	.-128    	; 0x12ae <vfprintf+0x672>
    132e:	60 96       	adiw	r28, 0x10	; 16
    1330:	e2 e1       	ldi	r30, 0x12	; 18
    1332:	0c 94 b7 09 	jmp	0x136e	; 0x136e <__epilogue_restores__>

00001336 <__prologue_saves__>:
    1336:	2f 92       	push	r2
    1338:	3f 92       	push	r3
    133a:	4f 92       	push	r4
    133c:	5f 92       	push	r5
    133e:	6f 92       	push	r6
    1340:	7f 92       	push	r7
    1342:	8f 92       	push	r8
    1344:	9f 92       	push	r9
    1346:	af 92       	push	r10
    1348:	bf 92       	push	r11
    134a:	cf 92       	push	r12
    134c:	df 92       	push	r13
    134e:	ef 92       	push	r14
    1350:	ff 92       	push	r15
    1352:	0f 93       	push	r16
    1354:	1f 93       	push	r17
    1356:	cf 93       	push	r28
    1358:	df 93       	push	r29
    135a:	cd b7       	in	r28, 0x3d	; 61
    135c:	de b7       	in	r29, 0x3e	; 62
    135e:	ca 1b       	sub	r28, r26
    1360:	db 0b       	sbc	r29, r27
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	de bf       	out	0x3e, r29	; 62
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	cd bf       	out	0x3d, r28	; 61
    136c:	09 94       	ijmp

0000136e <__epilogue_restores__>:
    136e:	2a 88       	ldd	r2, Y+18	; 0x12
    1370:	39 88       	ldd	r3, Y+17	; 0x11
    1372:	48 88       	ldd	r4, Y+16	; 0x10
    1374:	5f 84       	ldd	r5, Y+15	; 0x0f
    1376:	6e 84       	ldd	r6, Y+14	; 0x0e
    1378:	7d 84       	ldd	r7, Y+13	; 0x0d
    137a:	8c 84       	ldd	r8, Y+12	; 0x0c
    137c:	9b 84       	ldd	r9, Y+11	; 0x0b
    137e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1380:	b9 84       	ldd	r11, Y+9	; 0x09
    1382:	c8 84       	ldd	r12, Y+8	; 0x08
    1384:	df 80       	ldd	r13, Y+7	; 0x07
    1386:	ee 80       	ldd	r14, Y+6	; 0x06
    1388:	fd 80       	ldd	r15, Y+5	; 0x05
    138a:	0c 81       	ldd	r16, Y+4	; 0x04
    138c:	1b 81       	ldd	r17, Y+3	; 0x03
    138e:	aa 81       	ldd	r26, Y+2	; 0x02
    1390:	b9 81       	ldd	r27, Y+1	; 0x01
    1392:	ce 0f       	add	r28, r30
    1394:	d1 1d       	adc	r29, r1
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	0f be       	out	0x3f, r0	; 63
    139e:	cd bf       	out	0x3d, r28	; 61
    13a0:	ed 01       	movw	r28, r26
    13a2:	08 95       	ret

000013a4 <atof>:
    13a4:	66 27       	eor	r22, r22
    13a6:	77 27       	eor	r23, r23
    13a8:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <strtod>

000013ac <atoi>:
    13ac:	fc 01       	movw	r30, r24
    13ae:	88 27       	eor	r24, r24
    13b0:	99 27       	eor	r25, r25
    13b2:	e8 94       	clt
    13b4:	21 91       	ld	r18, Z+
    13b6:	20 32       	cpi	r18, 0x20	; 32
    13b8:	e9 f3       	breq	.-6      	; 0x13b4 <atoi+0x8>
    13ba:	29 30       	cpi	r18, 0x09	; 9
    13bc:	10 f0       	brcs	.+4      	; 0x13c2 <atoi+0x16>
    13be:	2e 30       	cpi	r18, 0x0E	; 14
    13c0:	c8 f3       	brcs	.-14     	; 0x13b4 <atoi+0x8>
    13c2:	2b 32       	cpi	r18, 0x2B	; 43
    13c4:	41 f0       	breq	.+16     	; 0x13d6 <atoi+0x2a>
    13c6:	2d 32       	cpi	r18, 0x2D	; 45
    13c8:	39 f4       	brne	.+14     	; 0x13d8 <atoi+0x2c>
    13ca:	68 94       	set
    13cc:	04 c0       	rjmp	.+8      	; 0x13d6 <atoi+0x2a>
    13ce:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__mulhi_const_10>
    13d2:	82 0f       	add	r24, r18
    13d4:	91 1d       	adc	r25, r1
    13d6:	21 91       	ld	r18, Z+
    13d8:	20 53       	subi	r18, 0x30	; 48
    13da:	2a 30       	cpi	r18, 0x0A	; 10
    13dc:	c0 f3       	brcs	.-16     	; 0x13ce <atoi+0x22>
    13de:	1e f4       	brtc	.+6      	; 0x13e6 <atoi+0x3a>
    13e0:	90 95       	com	r25
    13e2:	81 95       	neg	r24
    13e4:	9f 4f       	sbci	r25, 0xFF	; 255
    13e6:	08 95       	ret

000013e8 <__ftoa_engine>:
    13e8:	28 30       	cpi	r18, 0x08	; 8
    13ea:	08 f0       	brcs	.+2      	; 0x13ee <__ftoa_engine+0x6>
    13ec:	27 e0       	ldi	r18, 0x07	; 7
    13ee:	33 27       	eor	r19, r19
    13f0:	da 01       	movw	r26, r20
    13f2:	99 0f       	add	r25, r25
    13f4:	31 1d       	adc	r19, r1
    13f6:	87 fd       	sbrc	r24, 7
    13f8:	91 60       	ori	r25, 0x01	; 1
    13fa:	00 96       	adiw	r24, 0x00	; 0
    13fc:	61 05       	cpc	r22, r1
    13fe:	71 05       	cpc	r23, r1
    1400:	39 f4       	brne	.+14     	; 0x1410 <__ftoa_engine+0x28>
    1402:	32 60       	ori	r19, 0x02	; 2
    1404:	2e 5f       	subi	r18, 0xFE	; 254
    1406:	3d 93       	st	X+, r19
    1408:	30 e3       	ldi	r19, 0x30	; 48
    140a:	2a 95       	dec	r18
    140c:	e1 f7       	brne	.-8      	; 0x1406 <__ftoa_engine+0x1e>
    140e:	08 95       	ret
    1410:	9f 3f       	cpi	r25, 0xFF	; 255
    1412:	30 f0       	brcs	.+12     	; 0x1420 <__ftoa_engine+0x38>
    1414:	80 38       	cpi	r24, 0x80	; 128
    1416:	71 05       	cpc	r23, r1
    1418:	61 05       	cpc	r22, r1
    141a:	09 f0       	breq	.+2      	; 0x141e <__ftoa_engine+0x36>
    141c:	3c 5f       	subi	r19, 0xFC	; 252
    141e:	3c 5f       	subi	r19, 0xFC	; 252
    1420:	3d 93       	st	X+, r19
    1422:	91 30       	cpi	r25, 0x01	; 1
    1424:	08 f0       	brcs	.+2      	; 0x1428 <__ftoa_engine+0x40>
    1426:	80 68       	ori	r24, 0x80	; 128
    1428:	91 1d       	adc	r25, r1
    142a:	df 93       	push	r29
    142c:	cf 93       	push	r28
    142e:	1f 93       	push	r17
    1430:	0f 93       	push	r16
    1432:	ff 92       	push	r15
    1434:	ef 92       	push	r14
    1436:	19 2f       	mov	r17, r25
    1438:	98 7f       	andi	r25, 0xF8	; 248
    143a:	96 95       	lsr	r25
    143c:	e9 2f       	mov	r30, r25
    143e:	96 95       	lsr	r25
    1440:	96 95       	lsr	r25
    1442:	e9 0f       	add	r30, r25
    1444:	ff 27       	eor	r31, r31
    1446:	ea 54       	subi	r30, 0x4A	; 74
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	99 27       	eor	r25, r25
    144c:	33 27       	eor	r19, r19
    144e:	ee 24       	eor	r14, r14
    1450:	ff 24       	eor	r15, r15
    1452:	a7 01       	movw	r20, r14
    1454:	e7 01       	movw	r28, r14
    1456:	05 90       	lpm	r0, Z+
    1458:	08 94       	sec
    145a:	07 94       	ror	r0
    145c:	28 f4       	brcc	.+10     	; 0x1468 <__ftoa_engine+0x80>
    145e:	36 0f       	add	r19, r22
    1460:	e7 1e       	adc	r14, r23
    1462:	f8 1e       	adc	r15, r24
    1464:	49 1f       	adc	r20, r25
    1466:	51 1d       	adc	r21, r1
    1468:	66 0f       	add	r22, r22
    146a:	77 1f       	adc	r23, r23
    146c:	88 1f       	adc	r24, r24
    146e:	99 1f       	adc	r25, r25
    1470:	06 94       	lsr	r0
    1472:	a1 f7       	brne	.-24     	; 0x145c <__ftoa_engine+0x74>
    1474:	05 90       	lpm	r0, Z+
    1476:	07 94       	ror	r0
    1478:	28 f4       	brcc	.+10     	; 0x1484 <__ftoa_engine+0x9c>
    147a:	e7 0e       	add	r14, r23
    147c:	f8 1e       	adc	r15, r24
    147e:	49 1f       	adc	r20, r25
    1480:	56 1f       	adc	r21, r22
    1482:	c1 1d       	adc	r28, r1
    1484:	77 0f       	add	r23, r23
    1486:	88 1f       	adc	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	66 1f       	adc	r22, r22
    148c:	06 94       	lsr	r0
    148e:	a1 f7       	brne	.-24     	; 0x1478 <__ftoa_engine+0x90>
    1490:	05 90       	lpm	r0, Z+
    1492:	07 94       	ror	r0
    1494:	28 f4       	brcc	.+10     	; 0x14a0 <__ftoa_engine+0xb8>
    1496:	f8 0e       	add	r15, r24
    1498:	49 1f       	adc	r20, r25
    149a:	56 1f       	adc	r21, r22
    149c:	c7 1f       	adc	r28, r23
    149e:	d1 1d       	adc	r29, r1
    14a0:	88 0f       	add	r24, r24
    14a2:	99 1f       	adc	r25, r25
    14a4:	66 1f       	adc	r22, r22
    14a6:	77 1f       	adc	r23, r23
    14a8:	06 94       	lsr	r0
    14aa:	a1 f7       	brne	.-24     	; 0x1494 <__ftoa_engine+0xac>
    14ac:	05 90       	lpm	r0, Z+
    14ae:	07 94       	ror	r0
    14b0:	20 f4       	brcc	.+8      	; 0x14ba <__ftoa_engine+0xd2>
    14b2:	49 0f       	add	r20, r25
    14b4:	56 1f       	adc	r21, r22
    14b6:	c7 1f       	adc	r28, r23
    14b8:	d8 1f       	adc	r29, r24
    14ba:	99 0f       	add	r25, r25
    14bc:	66 1f       	adc	r22, r22
    14be:	77 1f       	adc	r23, r23
    14c0:	88 1f       	adc	r24, r24
    14c2:	06 94       	lsr	r0
    14c4:	a9 f7       	brne	.-22     	; 0x14b0 <__ftoa_engine+0xc8>
    14c6:	84 91       	lpm	r24, Z
    14c8:	10 95       	com	r17
    14ca:	17 70       	andi	r17, 0x07	; 7
    14cc:	41 f0       	breq	.+16     	; 0x14de <__ftoa_engine+0xf6>
    14ce:	d6 95       	lsr	r29
    14d0:	c7 95       	ror	r28
    14d2:	57 95       	ror	r21
    14d4:	47 95       	ror	r20
    14d6:	f7 94       	ror	r15
    14d8:	e7 94       	ror	r14
    14da:	1a 95       	dec	r17
    14dc:	c1 f7       	brne	.-16     	; 0x14ce <__ftoa_engine+0xe6>
    14de:	ec e5       	ldi	r30, 0x5C	; 92
    14e0:	f0 e0       	ldi	r31, 0x00	; 0
    14e2:	68 94       	set
    14e4:	15 90       	lpm	r1, Z+
    14e6:	15 91       	lpm	r17, Z+
    14e8:	35 91       	lpm	r19, Z+
    14ea:	65 91       	lpm	r22, Z+
    14ec:	95 91       	lpm	r25, Z+
    14ee:	05 90       	lpm	r0, Z+
    14f0:	7f e2       	ldi	r23, 0x2F	; 47
    14f2:	73 95       	inc	r23
    14f4:	e1 18       	sub	r14, r1
    14f6:	f1 0a       	sbc	r15, r17
    14f8:	43 0b       	sbc	r20, r19
    14fa:	56 0b       	sbc	r21, r22
    14fc:	c9 0b       	sbc	r28, r25
    14fe:	d0 09       	sbc	r29, r0
    1500:	c0 f7       	brcc	.-16     	; 0x14f2 <__ftoa_engine+0x10a>
    1502:	e1 0c       	add	r14, r1
    1504:	f1 1e       	adc	r15, r17
    1506:	43 1f       	adc	r20, r19
    1508:	56 1f       	adc	r21, r22
    150a:	c9 1f       	adc	r28, r25
    150c:	d0 1d       	adc	r29, r0
    150e:	7e f4       	brtc	.+30     	; 0x152e <__ftoa_engine+0x146>
    1510:	70 33       	cpi	r23, 0x30	; 48
    1512:	11 f4       	brne	.+4      	; 0x1518 <__ftoa_engine+0x130>
    1514:	8a 95       	dec	r24
    1516:	e6 cf       	rjmp	.-52     	; 0x14e4 <__ftoa_engine+0xfc>
    1518:	e8 94       	clt
    151a:	01 50       	subi	r16, 0x01	; 1
    151c:	30 f0       	brcs	.+12     	; 0x152a <__ftoa_engine+0x142>
    151e:	08 0f       	add	r16, r24
    1520:	0a f4       	brpl	.+2      	; 0x1524 <__ftoa_engine+0x13c>
    1522:	00 27       	eor	r16, r16
    1524:	02 17       	cp	r16, r18
    1526:	08 f4       	brcc	.+2      	; 0x152a <__ftoa_engine+0x142>
    1528:	20 2f       	mov	r18, r16
    152a:	23 95       	inc	r18
    152c:	02 2f       	mov	r16, r18
    152e:	7a 33       	cpi	r23, 0x3A	; 58
    1530:	28 f0       	brcs	.+10     	; 0x153c <__ftoa_engine+0x154>
    1532:	79 e3       	ldi	r23, 0x39	; 57
    1534:	7d 93       	st	X+, r23
    1536:	2a 95       	dec	r18
    1538:	e9 f7       	brne	.-6      	; 0x1534 <__ftoa_engine+0x14c>
    153a:	10 c0       	rjmp	.+32     	; 0x155c <__ftoa_engine+0x174>
    153c:	7d 93       	st	X+, r23
    153e:	2a 95       	dec	r18
    1540:	89 f6       	brne	.-94     	; 0x14e4 <__ftoa_engine+0xfc>
    1542:	06 94       	lsr	r0
    1544:	97 95       	ror	r25
    1546:	67 95       	ror	r22
    1548:	37 95       	ror	r19
    154a:	17 95       	ror	r17
    154c:	17 94       	ror	r1
    154e:	e1 18       	sub	r14, r1
    1550:	f1 0a       	sbc	r15, r17
    1552:	43 0b       	sbc	r20, r19
    1554:	56 0b       	sbc	r21, r22
    1556:	c9 0b       	sbc	r28, r25
    1558:	d0 09       	sbc	r29, r0
    155a:	98 f0       	brcs	.+38     	; 0x1582 <__ftoa_engine+0x19a>
    155c:	23 95       	inc	r18
    155e:	7e 91       	ld	r23, -X
    1560:	73 95       	inc	r23
    1562:	7a 33       	cpi	r23, 0x3A	; 58
    1564:	08 f0       	brcs	.+2      	; 0x1568 <__ftoa_engine+0x180>
    1566:	70 e3       	ldi	r23, 0x30	; 48
    1568:	7c 93       	st	X, r23
    156a:	20 13       	cpse	r18, r16
    156c:	b8 f7       	brcc	.-18     	; 0x155c <__ftoa_engine+0x174>
    156e:	7e 91       	ld	r23, -X
    1570:	70 61       	ori	r23, 0x10	; 16
    1572:	7d 93       	st	X+, r23
    1574:	30 f0       	brcs	.+12     	; 0x1582 <__ftoa_engine+0x19a>
    1576:	83 95       	inc	r24
    1578:	71 e3       	ldi	r23, 0x31	; 49
    157a:	7d 93       	st	X+, r23
    157c:	70 e3       	ldi	r23, 0x30	; 48
    157e:	2a 95       	dec	r18
    1580:	e1 f7       	brne	.-8      	; 0x157a <__ftoa_engine+0x192>
    1582:	11 24       	eor	r1, r1
    1584:	ef 90       	pop	r14
    1586:	ff 90       	pop	r15
    1588:	0f 91       	pop	r16
    158a:	1f 91       	pop	r17
    158c:	cf 91       	pop	r28
    158e:	df 91       	pop	r29
    1590:	99 27       	eor	r25, r25
    1592:	87 fd       	sbrc	r24, 7
    1594:	90 95       	com	r25
    1596:	08 95       	ret

00001598 <strnlen_P>:
    1598:	fc 01       	movw	r30, r24
    159a:	05 90       	lpm	r0, Z+
    159c:	61 50       	subi	r22, 0x01	; 1
    159e:	70 40       	sbci	r23, 0x00	; 0
    15a0:	01 10       	cpse	r0, r1
    15a2:	d8 f7       	brcc	.-10     	; 0x159a <strnlen_P+0x2>
    15a4:	80 95       	com	r24
    15a6:	90 95       	com	r25
    15a8:	8e 0f       	add	r24, r30
    15aa:	9f 1f       	adc	r25, r31
    15ac:	08 95       	ret

000015ae <strnlen>:
    15ae:	fc 01       	movw	r30, r24
    15b0:	61 50       	subi	r22, 0x01	; 1
    15b2:	70 40       	sbci	r23, 0x00	; 0
    15b4:	01 90       	ld	r0, Z+
    15b6:	01 10       	cpse	r0, r1
    15b8:	d8 f7       	brcc	.-10     	; 0x15b0 <strnlen+0x2>
    15ba:	80 95       	com	r24
    15bc:	90 95       	com	r25
    15be:	8e 0f       	add	r24, r30
    15c0:	9f 1f       	adc	r25, r31
    15c2:	08 95       	ret

000015c4 <__mulhi_const_10>:
    15c4:	7a e0       	ldi	r23, 0x0A	; 10
    15c6:	97 9f       	mul	r25, r23
    15c8:	90 2d       	mov	r25, r0
    15ca:	87 9f       	mul	r24, r23
    15cc:	80 2d       	mov	r24, r0
    15ce:	91 0d       	add	r25, r1
    15d0:	11 24       	eor	r1, r1
    15d2:	08 95       	ret

000015d4 <fputc>:
    15d4:	0f 93       	push	r16
    15d6:	1f 93       	push	r17
    15d8:	cf 93       	push	r28
    15da:	df 93       	push	r29
    15dc:	fb 01       	movw	r30, r22
    15de:	23 81       	ldd	r18, Z+3	; 0x03
    15e0:	21 fd       	sbrc	r18, 1
    15e2:	03 c0       	rjmp	.+6      	; 0x15ea <fputc+0x16>
    15e4:	8f ef       	ldi	r24, 0xFF	; 255
    15e6:	9f ef       	ldi	r25, 0xFF	; 255
    15e8:	2c c0       	rjmp	.+88     	; 0x1642 <fputc+0x6e>
    15ea:	22 ff       	sbrs	r18, 2
    15ec:	16 c0       	rjmp	.+44     	; 0x161a <fputc+0x46>
    15ee:	46 81       	ldd	r20, Z+6	; 0x06
    15f0:	57 81       	ldd	r21, Z+7	; 0x07
    15f2:	24 81       	ldd	r18, Z+4	; 0x04
    15f4:	35 81       	ldd	r19, Z+5	; 0x05
    15f6:	42 17       	cp	r20, r18
    15f8:	53 07       	cpc	r21, r19
    15fa:	44 f4       	brge	.+16     	; 0x160c <fputc+0x38>
    15fc:	a0 81       	ld	r26, Z
    15fe:	b1 81       	ldd	r27, Z+1	; 0x01
    1600:	9d 01       	movw	r18, r26
    1602:	2f 5f       	subi	r18, 0xFF	; 255
    1604:	3f 4f       	sbci	r19, 0xFF	; 255
    1606:	31 83       	std	Z+1, r19	; 0x01
    1608:	20 83       	st	Z, r18
    160a:	8c 93       	st	X, r24
    160c:	26 81       	ldd	r18, Z+6	; 0x06
    160e:	37 81       	ldd	r19, Z+7	; 0x07
    1610:	2f 5f       	subi	r18, 0xFF	; 255
    1612:	3f 4f       	sbci	r19, 0xFF	; 255
    1614:	37 83       	std	Z+7, r19	; 0x07
    1616:	26 83       	std	Z+6, r18	; 0x06
    1618:	14 c0       	rjmp	.+40     	; 0x1642 <fputc+0x6e>
    161a:	8b 01       	movw	r16, r22
    161c:	ec 01       	movw	r28, r24
    161e:	fb 01       	movw	r30, r22
    1620:	00 84       	ldd	r0, Z+8	; 0x08
    1622:	f1 85       	ldd	r31, Z+9	; 0x09
    1624:	e0 2d       	mov	r30, r0
    1626:	09 95       	icall
    1628:	89 2b       	or	r24, r25
    162a:	e1 f6       	brne	.-72     	; 0x15e4 <fputc+0x10>
    162c:	d8 01       	movw	r26, r16
    162e:	16 96       	adiw	r26, 0x06	; 6
    1630:	8d 91       	ld	r24, X+
    1632:	9c 91       	ld	r25, X
    1634:	17 97       	sbiw	r26, 0x07	; 7
    1636:	01 96       	adiw	r24, 0x01	; 1
    1638:	17 96       	adiw	r26, 0x07	; 7
    163a:	9c 93       	st	X, r25
    163c:	8e 93       	st	-X, r24
    163e:	16 97       	sbiw	r26, 0x06	; 6
    1640:	ce 01       	movw	r24, r28
    1642:	df 91       	pop	r29
    1644:	cf 91       	pop	r28
    1646:	1f 91       	pop	r17
    1648:	0f 91       	pop	r16
    164a:	08 95       	ret

0000164c <sprintf>:
    164c:	ae e0       	ldi	r26, 0x0E	; 14
    164e:	b0 e0       	ldi	r27, 0x00	; 0
    1650:	ec e2       	ldi	r30, 0x2C	; 44
    1652:	fb e0       	ldi	r31, 0x0B	; 11
    1654:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__prologue_saves__+0x1c>
    1658:	0d 89       	ldd	r16, Y+21	; 0x15
    165a:	1e 89       	ldd	r17, Y+22	; 0x16
    165c:	86 e0       	ldi	r24, 0x06	; 6
    165e:	8c 83       	std	Y+4, r24	; 0x04
    1660:	1a 83       	std	Y+2, r17	; 0x02
    1662:	09 83       	std	Y+1, r16	; 0x01
    1664:	8f ef       	ldi	r24, 0xFF	; 255
    1666:	9f e7       	ldi	r25, 0x7F	; 127
    1668:	9e 83       	std	Y+6, r25	; 0x06
    166a:	8d 83       	std	Y+5, r24	; 0x05
    166c:	ae 01       	movw	r20, r28
    166e:	47 5e       	subi	r20, 0xE7	; 231
    1670:	5f 4f       	sbci	r21, 0xFF	; 255
    1672:	6f 89       	ldd	r22, Y+23	; 0x17
    1674:	78 8d       	ldd	r23, Y+24	; 0x18
    1676:	ce 01       	movw	r24, r28
    1678:	01 96       	adiw	r24, 0x01	; 1
    167a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <vfprintf>
    167e:	ef 81       	ldd	r30, Y+7	; 0x07
    1680:	f8 85       	ldd	r31, Y+8	; 0x08
    1682:	e0 0f       	add	r30, r16
    1684:	f1 1f       	adc	r31, r17
    1686:	10 82       	st	Z, r1
    1688:	2e 96       	adiw	r28, 0x0e	; 14
    168a:	e4 e0       	ldi	r30, 0x04	; 4
    168c:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__epilogue_restores__+0x1c>

00001690 <__ultoa_invert>:
    1690:	fa 01       	movw	r30, r20
    1692:	aa 27       	eor	r26, r26
    1694:	28 30       	cpi	r18, 0x08	; 8
    1696:	51 f1       	breq	.+84     	; 0x16ec <__ultoa_invert+0x5c>
    1698:	20 31       	cpi	r18, 0x10	; 16
    169a:	81 f1       	breq	.+96     	; 0x16fc <__ultoa_invert+0x6c>
    169c:	e8 94       	clt
    169e:	6f 93       	push	r22
    16a0:	6e 7f       	andi	r22, 0xFE	; 254
    16a2:	6e 5f       	subi	r22, 0xFE	; 254
    16a4:	7f 4f       	sbci	r23, 0xFF	; 255
    16a6:	8f 4f       	sbci	r24, 0xFF	; 255
    16a8:	9f 4f       	sbci	r25, 0xFF	; 255
    16aa:	af 4f       	sbci	r26, 0xFF	; 255
    16ac:	b1 e0       	ldi	r27, 0x01	; 1
    16ae:	3e d0       	rcall	.+124    	; 0x172c <__ultoa_invert+0x9c>
    16b0:	b4 e0       	ldi	r27, 0x04	; 4
    16b2:	3c d0       	rcall	.+120    	; 0x172c <__ultoa_invert+0x9c>
    16b4:	67 0f       	add	r22, r23
    16b6:	78 1f       	adc	r23, r24
    16b8:	89 1f       	adc	r24, r25
    16ba:	9a 1f       	adc	r25, r26
    16bc:	a1 1d       	adc	r26, r1
    16be:	68 0f       	add	r22, r24
    16c0:	79 1f       	adc	r23, r25
    16c2:	8a 1f       	adc	r24, r26
    16c4:	91 1d       	adc	r25, r1
    16c6:	a1 1d       	adc	r26, r1
    16c8:	6a 0f       	add	r22, r26
    16ca:	71 1d       	adc	r23, r1
    16cc:	81 1d       	adc	r24, r1
    16ce:	91 1d       	adc	r25, r1
    16d0:	a1 1d       	adc	r26, r1
    16d2:	20 d0       	rcall	.+64     	; 0x1714 <__ultoa_invert+0x84>
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <__ultoa_invert+0x48>
    16d6:	68 94       	set
    16d8:	3f 91       	pop	r19
    16da:	2a e0       	ldi	r18, 0x0A	; 10
    16dc:	26 9f       	mul	r18, r22
    16de:	11 24       	eor	r1, r1
    16e0:	30 19       	sub	r19, r0
    16e2:	30 5d       	subi	r19, 0xD0	; 208
    16e4:	31 93       	st	Z+, r19
    16e6:	de f6       	brtc	.-74     	; 0x169e <__ultoa_invert+0xe>
    16e8:	cf 01       	movw	r24, r30
    16ea:	08 95       	ret
    16ec:	46 2f       	mov	r20, r22
    16ee:	47 70       	andi	r20, 0x07	; 7
    16f0:	40 5d       	subi	r20, 0xD0	; 208
    16f2:	41 93       	st	Z+, r20
    16f4:	b3 e0       	ldi	r27, 0x03	; 3
    16f6:	0f d0       	rcall	.+30     	; 0x1716 <__ultoa_invert+0x86>
    16f8:	c9 f7       	brne	.-14     	; 0x16ec <__ultoa_invert+0x5c>
    16fa:	f6 cf       	rjmp	.-20     	; 0x16e8 <__ultoa_invert+0x58>
    16fc:	46 2f       	mov	r20, r22
    16fe:	4f 70       	andi	r20, 0x0F	; 15
    1700:	40 5d       	subi	r20, 0xD0	; 208
    1702:	4a 33       	cpi	r20, 0x3A	; 58
    1704:	18 f0       	brcs	.+6      	; 0x170c <__ultoa_invert+0x7c>
    1706:	49 5d       	subi	r20, 0xD9	; 217
    1708:	31 fd       	sbrc	r19, 1
    170a:	40 52       	subi	r20, 0x20	; 32
    170c:	41 93       	st	Z+, r20
    170e:	02 d0       	rcall	.+4      	; 0x1714 <__ultoa_invert+0x84>
    1710:	a9 f7       	brne	.-22     	; 0x16fc <__ultoa_invert+0x6c>
    1712:	ea cf       	rjmp	.-44     	; 0x16e8 <__ultoa_invert+0x58>
    1714:	b4 e0       	ldi	r27, 0x04	; 4
    1716:	a6 95       	lsr	r26
    1718:	97 95       	ror	r25
    171a:	87 95       	ror	r24
    171c:	77 95       	ror	r23
    171e:	67 95       	ror	r22
    1720:	ba 95       	dec	r27
    1722:	c9 f7       	brne	.-14     	; 0x1716 <__ultoa_invert+0x86>
    1724:	00 97       	sbiw	r24, 0x00	; 0
    1726:	61 05       	cpc	r22, r1
    1728:	71 05       	cpc	r23, r1
    172a:	08 95       	ret
    172c:	9b 01       	movw	r18, r22
    172e:	ac 01       	movw	r20, r24
    1730:	0a 2e       	mov	r0, r26
    1732:	06 94       	lsr	r0
    1734:	57 95       	ror	r21
    1736:	47 95       	ror	r20
    1738:	37 95       	ror	r19
    173a:	27 95       	ror	r18
    173c:	ba 95       	dec	r27
    173e:	c9 f7       	brne	.-14     	; 0x1732 <__ultoa_invert+0xa2>
    1740:	62 0f       	add	r22, r18
    1742:	73 1f       	adc	r23, r19
    1744:	84 1f       	adc	r24, r20
    1746:	95 1f       	adc	r25, r21
    1748:	a0 1d       	adc	r26, r0
    174a:	08 95       	ret

0000174c <strtod>:
    174c:	a0 e0       	ldi	r26, 0x00	; 0
    174e:	b0 e0       	ldi	r27, 0x00	; 0
    1750:	ec ea       	ldi	r30, 0xAC	; 172
    1752:	fb e0       	ldi	r31, 0x0B	; 11
    1754:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__prologue_saves__+0xc>
    1758:	ec 01       	movw	r28, r24
    175a:	6b 01       	movw	r12, r22
    175c:	61 15       	cp	r22, r1
    175e:	71 05       	cpc	r23, r1
    1760:	19 f0       	breq	.+6      	; 0x1768 <strtod+0x1c>
    1762:	fb 01       	movw	r30, r22
    1764:	91 83       	std	Z+1, r25	; 0x01
    1766:	80 83       	st	Z, r24
    1768:	7e 01       	movw	r14, r28
    176a:	ff ef       	ldi	r31, 0xFF	; 255
    176c:	ef 1a       	sub	r14, r31
    176e:	ff 0a       	sbc	r15, r31
    1770:	08 81       	ld	r16, Y
    1772:	80 2f       	mov	r24, r16
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <isspace>
    177a:	89 2b       	or	r24, r25
    177c:	11 f0       	breq	.+4      	; 0x1782 <strtod+0x36>
    177e:	e7 01       	movw	r28, r14
    1780:	f3 cf       	rjmp	.-26     	; 0x1768 <strtod+0x1c>
    1782:	0d 32       	cpi	r16, 0x2D	; 45
    1784:	39 f4       	brne	.+14     	; 0x1794 <strtod+0x48>
    1786:	7e 01       	movw	r14, r28
    1788:	82 e0       	ldi	r24, 0x02	; 2
    178a:	e8 0e       	add	r14, r24
    178c:	f1 1c       	adc	r15, r1
    178e:	09 81       	ldd	r16, Y+1	; 0x01
    1790:	11 e0       	ldi	r17, 0x01	; 1
    1792:	08 c0       	rjmp	.+16     	; 0x17a4 <strtod+0x58>
    1794:	0b 32       	cpi	r16, 0x2B	; 43
    1796:	29 f4       	brne	.+10     	; 0x17a2 <strtod+0x56>
    1798:	7e 01       	movw	r14, r28
    179a:	92 e0       	ldi	r25, 0x02	; 2
    179c:	e9 0e       	add	r14, r25
    179e:	f1 1c       	adc	r15, r1
    17a0:	09 81       	ldd	r16, Y+1	; 0x01
    17a2:	10 e0       	ldi	r17, 0x00	; 0
    17a4:	e7 01       	movw	r28, r14
    17a6:	21 97       	sbiw	r28, 0x01	; 1
    17a8:	43 e0       	ldi	r20, 0x03	; 3
    17aa:	50 e0       	ldi	r21, 0x00	; 0
    17ac:	6e e5       	ldi	r22, 0x5E	; 94
    17ae:	71 e0       	ldi	r23, 0x01	; 1
    17b0:	ce 01       	movw	r24, r28
    17b2:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    17b6:	89 2b       	or	r24, r25
    17b8:	c1 f4       	brne	.+48     	; 0x17ea <strtod+0x9e>
    17ba:	23 96       	adiw	r28, 0x03	; 3
    17bc:	45 e0       	ldi	r20, 0x05	; 5
    17be:	50 e0       	ldi	r21, 0x00	; 0
    17c0:	69 e5       	ldi	r22, 0x59	; 89
    17c2:	71 e0       	ldi	r23, 0x01	; 1
    17c4:	ce 01       	movw	r24, r28
    17c6:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    17ca:	89 2b       	or	r24, r25
    17cc:	09 f4       	brne	.+2      	; 0x17d0 <strtod+0x84>
    17ce:	25 96       	adiw	r28, 0x05	; 5
    17d0:	c1 14       	cp	r12, r1
    17d2:	d1 04       	cpc	r13, r1
    17d4:	19 f0       	breq	.+6      	; 0x17dc <strtod+0x90>
    17d6:	f6 01       	movw	r30, r12
    17d8:	d1 83       	std	Z+1, r29	; 0x01
    17da:	c0 83       	st	Z, r28
    17dc:	11 11       	cpse	r17, r1
    17de:	f6 c0       	rjmp	.+492    	; 0x19cc <strtod+0x280>
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	70 e0       	ldi	r23, 0x00	; 0
    17e4:	80 e8       	ldi	r24, 0x80	; 128
    17e6:	9f e7       	ldi	r25, 0x7F	; 127
    17e8:	fa c0       	rjmp	.+500    	; 0x19de <strtod+0x292>
    17ea:	43 e0       	ldi	r20, 0x03	; 3
    17ec:	50 e0       	ldi	r21, 0x00	; 0
    17ee:	66 e5       	ldi	r22, 0x56	; 86
    17f0:	71 e0       	ldi	r23, 0x01	; 1
    17f2:	ce 01       	movw	r24, r28
    17f4:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strncasecmp_P>
    17f8:	89 2b       	or	r24, r25
    17fa:	59 f4       	brne	.+22     	; 0x1812 <strtod+0xc6>
    17fc:	c1 14       	cp	r12, r1
    17fe:	d1 04       	cpc	r13, r1
    1800:	09 f4       	brne	.+2      	; 0x1804 <strtod+0xb8>
    1802:	e9 c0       	rjmp	.+466    	; 0x19d6 <strtod+0x28a>
    1804:	f2 e0       	ldi	r31, 0x02	; 2
    1806:	ef 0e       	add	r14, r31
    1808:	f1 1c       	adc	r15, r1
    180a:	f6 01       	movw	r30, r12
    180c:	f1 82       	std	Z+1, r15	; 0x01
    180e:	e0 82       	st	Z, r14
    1810:	e2 c0       	rjmp	.+452    	; 0x19d6 <strtod+0x28a>
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	a9 01       	movw	r20, r18
    1818:	c0 e0       	ldi	r28, 0x00	; 0
    181a:	d0 e0       	ldi	r29, 0x00	; 0
    181c:	f7 01       	movw	r30, r14
    181e:	80 ed       	ldi	r24, 0xD0	; 208
    1820:	a8 2e       	mov	r10, r24
    1822:	a0 0e       	add	r10, r16
    1824:	89 e0       	ldi	r24, 0x09	; 9
    1826:	8a 15       	cp	r24, r10
    1828:	30 f1       	brcs	.+76     	; 0x1876 <strtod+0x12a>
    182a:	91 2f       	mov	r25, r17
    182c:	92 60       	ori	r25, 0x02	; 2
    182e:	b9 2e       	mov	r11, r25
    1830:	81 2f       	mov	r24, r17
    1832:	88 70       	andi	r24, 0x08	; 8
    1834:	12 ff       	sbrs	r17, 2
    1836:	04 c0       	rjmp	.+8      	; 0x1840 <strtod+0xf4>
    1838:	81 11       	cpse	r24, r1
    183a:	24 c0       	rjmp	.+72     	; 0x1884 <strtod+0x138>
    183c:	21 96       	adiw	r28, 0x01	; 1
    183e:	22 c0       	rjmp	.+68     	; 0x1884 <strtod+0x138>
    1840:	81 11       	cpse	r24, r1
    1842:	21 97       	sbiw	r28, 0x01	; 1
    1844:	a5 e0       	ldi	r26, 0x05	; 5
    1846:	b0 e0       	ldi	r27, 0x00	; 0
    1848:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__muluhisi3>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	88 0f       	add	r24, r24
    1852:	99 1f       	adc	r25, r25
    1854:	aa 1f       	adc	r26, r26
    1856:	bb 1f       	adc	r27, r27
    1858:	9c 01       	movw	r18, r24
    185a:	ad 01       	movw	r20, r26
    185c:	2a 0d       	add	r18, r10
    185e:	31 1d       	adc	r19, r1
    1860:	41 1d       	adc	r20, r1
    1862:	51 1d       	adc	r21, r1
    1864:	28 39       	cpi	r18, 0x98	; 152
    1866:	89 e9       	ldi	r24, 0x99	; 153
    1868:	38 07       	cpc	r19, r24
    186a:	48 07       	cpc	r20, r24
    186c:	89 e1       	ldi	r24, 0x19	; 25
    186e:	58 07       	cpc	r21, r24
    1870:	48 f0       	brcs	.+18     	; 0x1884 <strtod+0x138>
    1872:	16 60       	ori	r17, 0x06	; 6
    1874:	06 c0       	rjmp	.+12     	; 0x1882 <strtod+0x136>
    1876:	9e ef       	ldi	r25, 0xFE	; 254
    1878:	a9 12       	cpse	r10, r25
    187a:	0a c0       	rjmp	.+20     	; 0x1890 <strtod+0x144>
    187c:	13 fd       	sbrc	r17, 3
    187e:	40 c0       	rjmp	.+128    	; 0x1900 <strtod+0x1b4>
    1880:	18 60       	ori	r17, 0x08	; 8
    1882:	b1 2e       	mov	r11, r17
    1884:	8f ef       	ldi	r24, 0xFF	; 255
    1886:	e8 1a       	sub	r14, r24
    1888:	f8 0a       	sbc	r15, r24
    188a:	00 81       	ld	r16, Z
    188c:	1b 2d       	mov	r17, r11
    188e:	c6 cf       	rjmp	.-116    	; 0x181c <strtod+0xd0>
    1890:	80 2f       	mov	r24, r16
    1892:	8f 7d       	andi	r24, 0xDF	; 223
    1894:	85 34       	cpi	r24, 0x45	; 69
    1896:	a1 f5       	brne	.+104    	; 0x1900 <strtod+0x1b4>
    1898:	80 81       	ld	r24, Z
    189a:	8d 32       	cpi	r24, 0x2D	; 45
    189c:	11 f4       	brne	.+4      	; 0x18a2 <strtod+0x156>
    189e:	10 61       	ori	r17, 0x10	; 16
    18a0:	06 c0       	rjmp	.+12     	; 0x18ae <strtod+0x162>
    18a2:	8b 32       	cpi	r24, 0x2B	; 43
    18a4:	21 f0       	breq	.+8      	; 0x18ae <strtod+0x162>
    18a6:	31 96       	adiw	r30, 0x01	; 1
    18a8:	61 e0       	ldi	r22, 0x01	; 1
    18aa:	70 e0       	ldi	r23, 0x00	; 0
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <strtod+0x16a>
    18ae:	81 81       	ldd	r24, Z+1	; 0x01
    18b0:	32 96       	adiw	r30, 0x02	; 2
    18b2:	62 e0       	ldi	r22, 0x02	; 2
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	80 53       	subi	r24, 0x30	; 48
    18b8:	8a 30       	cpi	r24, 0x0A	; 10
    18ba:	18 f0       	brcs	.+6      	; 0x18c2 <strtod+0x176>
    18bc:	e6 1b       	sub	r30, r22
    18be:	f7 0b       	sbc	r31, r23
    18c0:	1f c0       	rjmp	.+62     	; 0x1900 <strtod+0x1b4>
    18c2:	60 e0       	ldi	r22, 0x00	; 0
    18c4:	70 e0       	ldi	r23, 0x00	; 0
    18c6:	60 38       	cpi	r22, 0x80	; 128
    18c8:	9c e0       	ldi	r25, 0x0C	; 12
    18ca:	79 07       	cpc	r23, r25
    18cc:	5c f4       	brge	.+22     	; 0x18e4 <strtod+0x198>
    18ce:	db 01       	movw	r26, r22
    18d0:	aa 0f       	add	r26, r26
    18d2:	bb 1f       	adc	r27, r27
    18d4:	aa 0f       	add	r26, r26
    18d6:	bb 1f       	adc	r27, r27
    18d8:	6a 0f       	add	r22, r26
    18da:	7b 1f       	adc	r23, r27
    18dc:	66 0f       	add	r22, r22
    18de:	77 1f       	adc	r23, r23
    18e0:	68 0f       	add	r22, r24
    18e2:	71 1d       	adc	r23, r1
    18e4:	31 96       	adiw	r30, 0x01	; 1
    18e6:	df 01       	movw	r26, r30
    18e8:	11 97       	sbiw	r26, 0x01	; 1
    18ea:	8c 91       	ld	r24, X
    18ec:	80 53       	subi	r24, 0x30	; 48
    18ee:	8a 30       	cpi	r24, 0x0A	; 10
    18f0:	50 f3       	brcs	.-44     	; 0x18c6 <strtod+0x17a>
    18f2:	14 ff       	sbrs	r17, 4
    18f4:	03 c0       	rjmp	.+6      	; 0x18fc <strtod+0x1b0>
    18f6:	71 95       	neg	r23
    18f8:	61 95       	neg	r22
    18fa:	71 09       	sbc	r23, r1
    18fc:	c6 0f       	add	r28, r22
    18fe:	d7 1f       	adc	r29, r23
    1900:	11 ff       	sbrs	r17, 1
    1902:	08 c0       	rjmp	.+16     	; 0x1914 <strtod+0x1c8>
    1904:	c1 14       	cp	r12, r1
    1906:	d1 04       	cpc	r13, r1
    1908:	29 f0       	breq	.+10     	; 0x1914 <strtod+0x1c8>
    190a:	cf 01       	movw	r24, r30
    190c:	01 97       	sbiw	r24, 0x01	; 1
    190e:	f6 01       	movw	r30, r12
    1910:	91 83       	std	Z+1, r25	; 0x01
    1912:	80 83       	st	Z, r24
    1914:	ca 01       	movw	r24, r20
    1916:	b9 01       	movw	r22, r18
    1918:	0e 94 23 05 	call	0xa46	; 0xa46 <__floatunsisf>
    191c:	21 2f       	mov	r18, r17
    191e:	23 70       	andi	r18, 0x03	; 3
    1920:	23 30       	cpi	r18, 0x03	; 3
    1922:	19 f0       	breq	.+6      	; 0x192a <strtod+0x1de>
    1924:	4b 01       	movw	r8, r22
    1926:	5c 01       	movw	r10, r24
    1928:	06 c0       	rjmp	.+12     	; 0x1936 <strtod+0x1ea>
    192a:	4b 01       	movw	r8, r22
    192c:	5c 01       	movw	r10, r24
    192e:	b7 fa       	bst	r11, 7
    1930:	b0 94       	com	r11
    1932:	b7 f8       	bld	r11, 7
    1934:	b0 94       	com	r11
    1936:	20 e0       	ldi	r18, 0x00	; 0
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	a9 01       	movw	r20, r18
    193c:	c5 01       	movw	r24, r10
    193e:	b4 01       	movw	r22, r8
    1940:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__cmpsf2>
    1944:	88 23       	and	r24, r24
    1946:	09 f4       	brne	.+2      	; 0x194a <strtod+0x1fe>
    1948:	3e c0       	rjmp	.+124    	; 0x19c6 <strtod+0x27a>
    194a:	d7 ff       	sbrs	r29, 7
    194c:	06 c0       	rjmp	.+12     	; 0x195a <strtod+0x20e>
    194e:	d1 95       	neg	r29
    1950:	c1 95       	neg	r28
    1952:	d1 09       	sbc	r29, r1
    1954:	05 e7       	ldi	r16, 0x75	; 117
    1956:	11 e0       	ldi	r17, 0x01	; 1
    1958:	02 c0       	rjmp	.+4      	; 0x195e <strtod+0x212>
    195a:	0d e8       	ldi	r16, 0x8D	; 141
    195c:	11 e0       	ldi	r17, 0x01	; 1
    195e:	68 01       	movw	r12, r16
    1960:	f8 e1       	ldi	r31, 0x18	; 24
    1962:	cf 1a       	sub	r12, r31
    1964:	d1 08       	sbc	r13, r1
    1966:	90 e2       	ldi	r25, 0x20	; 32
    1968:	e9 2e       	mov	r14, r25
    196a:	f1 2c       	mov	r15, r1
    196c:	ce 15       	cp	r28, r14
    196e:	df 05       	cpc	r29, r15
    1970:	74 f0       	brlt	.+28     	; 0x198e <strtod+0x242>
    1972:	f8 01       	movw	r30, r16
    1974:	25 91       	lpm	r18, Z+
    1976:	35 91       	lpm	r19, Z+
    1978:	45 91       	lpm	r20, Z+
    197a:	54 91       	lpm	r21, Z
    197c:	c5 01       	movw	r24, r10
    197e:	b4 01       	movw	r22, r8
    1980:	0e 94 b1 05 	call	0xb62	; 0xb62 <__mulsf3>
    1984:	4b 01       	movw	r8, r22
    1986:	5c 01       	movw	r10, r24
    1988:	ce 19       	sub	r28, r14
    198a:	df 09       	sbc	r29, r15
    198c:	ef cf       	rjmp	.-34     	; 0x196c <strtod+0x220>
    198e:	04 50       	subi	r16, 0x04	; 4
    1990:	11 09       	sbc	r17, r1
    1992:	f5 94       	asr	r15
    1994:	e7 94       	ror	r14
    1996:	0c 15       	cp	r16, r12
    1998:	1d 05       	cpc	r17, r13
    199a:	41 f7       	brne	.-48     	; 0x196c <strtod+0x220>
    199c:	8a 2d       	mov	r24, r10
    199e:	88 0f       	add	r24, r24
    19a0:	8b 2d       	mov	r24, r11
    19a2:	88 1f       	adc	r24, r24
    19a4:	8f 3f       	cpi	r24, 0xFF	; 255
    19a6:	49 f0       	breq	.+18     	; 0x19ba <strtod+0x26e>
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	a9 01       	movw	r20, r18
    19ae:	c5 01       	movw	r24, r10
    19b0:	b4 01       	movw	r22, r8
    19b2:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__cmpsf2>
    19b6:	81 11       	cpse	r24, r1
    19b8:	06 c0       	rjmp	.+12     	; 0x19c6 <strtod+0x27a>
    19ba:	82 e2       	ldi	r24, 0x22	; 34
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <errno+0x1>
    19c2:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <errno>
    19c6:	c5 01       	movw	r24, r10
    19c8:	b4 01       	movw	r22, r8
    19ca:	09 c0       	rjmp	.+18     	; 0x19de <strtod+0x292>
    19cc:	60 e0       	ldi	r22, 0x00	; 0
    19ce:	70 e0       	ldi	r23, 0x00	; 0
    19d0:	80 e8       	ldi	r24, 0x80	; 128
    19d2:	9f ef       	ldi	r25, 0xFF	; 255
    19d4:	04 c0       	rjmp	.+8      	; 0x19de <strtod+0x292>
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	70 e0       	ldi	r23, 0x00	; 0
    19da:	80 ec       	ldi	r24, 0xC0	; 192
    19dc:	9f e7       	ldi	r25, 0x7F	; 127
    19de:	cd b7       	in	r28, 0x3d	; 61
    19e0:	de b7       	in	r29, 0x3e	; 62
    19e2:	ec e0       	ldi	r30, 0x0C	; 12
    19e4:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__epilogue_restores__+0xc>

000019e8 <isspace>:
    19e8:	91 11       	cpse	r25, r1
    19ea:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__ctype_isfalse>
    19ee:	80 32       	cpi	r24, 0x20	; 32
    19f0:	19 f0       	breq	.+6      	; 0x19f8 <isspace+0x10>
    19f2:	89 50       	subi	r24, 0x09	; 9
    19f4:	85 50       	subi	r24, 0x05	; 5
    19f6:	c8 f7       	brcc	.-14     	; 0x19ea <isspace+0x2>
    19f8:	08 95       	ret

000019fa <strncasecmp_P>:
    19fa:	fb 01       	movw	r30, r22
    19fc:	dc 01       	movw	r26, r24
    19fe:	41 50       	subi	r20, 0x01	; 1
    1a00:	50 40       	sbci	r21, 0x00	; 0
    1a02:	88 f0       	brcs	.+34     	; 0x1a26 <strncasecmp_P+0x2c>
    1a04:	8d 91       	ld	r24, X+
    1a06:	81 34       	cpi	r24, 0x41	; 65
    1a08:	1c f0       	brlt	.+6      	; 0x1a10 <strncasecmp_P+0x16>
    1a0a:	8b 35       	cpi	r24, 0x5B	; 91
    1a0c:	0c f4       	brge	.+2      	; 0x1a10 <strncasecmp_P+0x16>
    1a0e:	80 5e       	subi	r24, 0xE0	; 224
    1a10:	65 91       	lpm	r22, Z+
    1a12:	61 34       	cpi	r22, 0x41	; 65
    1a14:	1c f0       	brlt	.+6      	; 0x1a1c <strncasecmp_P+0x22>
    1a16:	6b 35       	cpi	r22, 0x5B	; 91
    1a18:	0c f4       	brge	.+2      	; 0x1a1c <strncasecmp_P+0x22>
    1a1a:	60 5e       	subi	r22, 0xE0	; 224
    1a1c:	86 1b       	sub	r24, r22
    1a1e:	61 11       	cpse	r22, r1
    1a20:	71 f3       	breq	.-36     	; 0x19fe <strncasecmp_P+0x4>
    1a22:	99 0b       	sbc	r25, r25
    1a24:	08 95       	ret
    1a26:	88 1b       	sub	r24, r24
    1a28:	fc cf       	rjmp	.-8      	; 0x1a22 <strncasecmp_P+0x28>

00001a2a <__cmpsf2>:
    1a2a:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <__fp_cmp>
    1a2e:	08 f4       	brcc	.+2      	; 0x1a32 <__cmpsf2+0x8>
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	08 95       	ret

00001a34 <__fp_cmp>:
    1a34:	99 0f       	add	r25, r25
    1a36:	00 08       	sbc	r0, r0
    1a38:	55 0f       	add	r21, r21
    1a3a:	aa 0b       	sbc	r26, r26
    1a3c:	e0 e8       	ldi	r30, 0x80	; 128
    1a3e:	fe ef       	ldi	r31, 0xFE	; 254
    1a40:	16 16       	cp	r1, r22
    1a42:	17 06       	cpc	r1, r23
    1a44:	e8 07       	cpc	r30, r24
    1a46:	f9 07       	cpc	r31, r25
    1a48:	c0 f0       	brcs	.+48     	; 0x1a7a <__fp_cmp+0x46>
    1a4a:	12 16       	cp	r1, r18
    1a4c:	13 06       	cpc	r1, r19
    1a4e:	e4 07       	cpc	r30, r20
    1a50:	f5 07       	cpc	r31, r21
    1a52:	98 f0       	brcs	.+38     	; 0x1a7a <__fp_cmp+0x46>
    1a54:	62 1b       	sub	r22, r18
    1a56:	73 0b       	sbc	r23, r19
    1a58:	84 0b       	sbc	r24, r20
    1a5a:	95 0b       	sbc	r25, r21
    1a5c:	39 f4       	brne	.+14     	; 0x1a6c <__fp_cmp+0x38>
    1a5e:	0a 26       	eor	r0, r26
    1a60:	61 f0       	breq	.+24     	; 0x1a7a <__fp_cmp+0x46>
    1a62:	23 2b       	or	r18, r19
    1a64:	24 2b       	or	r18, r20
    1a66:	25 2b       	or	r18, r21
    1a68:	21 f4       	brne	.+8      	; 0x1a72 <__fp_cmp+0x3e>
    1a6a:	08 95       	ret
    1a6c:	0a 26       	eor	r0, r26
    1a6e:	09 f4       	brne	.+2      	; 0x1a72 <__fp_cmp+0x3e>
    1a70:	a1 40       	sbci	r26, 0x01	; 1
    1a72:	a6 95       	lsr	r26
    1a74:	8f ef       	ldi	r24, 0xFF	; 255
    1a76:	81 1d       	adc	r24, r1
    1a78:	81 1d       	adc	r24, r1
    1a7a:	08 95       	ret

00001a7c <__ctype_isfalse>:
    1a7c:	99 27       	eor	r25, r25
    1a7e:	88 27       	eor	r24, r24

00001a80 <__ctype_istrue>:
    1a80:	08 95       	ret

00001a82 <__muluhisi3>:
    1a82:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__umulhisi3>
    1a86:	a5 9f       	mul	r26, r21
    1a88:	90 0d       	add	r25, r0
    1a8a:	b4 9f       	mul	r27, r20
    1a8c:	90 0d       	add	r25, r0
    1a8e:	a4 9f       	mul	r26, r20
    1a90:	80 0d       	add	r24, r0
    1a92:	91 1d       	adc	r25, r1
    1a94:	11 24       	eor	r1, r1
    1a96:	08 95       	ret

00001a98 <__umulhisi3>:
    1a98:	a2 9f       	mul	r26, r18
    1a9a:	b0 01       	movw	r22, r0
    1a9c:	b3 9f       	mul	r27, r19
    1a9e:	c0 01       	movw	r24, r0
    1aa0:	a3 9f       	mul	r26, r19
    1aa2:	70 0d       	add	r23, r0
    1aa4:	81 1d       	adc	r24, r1
    1aa6:	11 24       	eor	r1, r1
    1aa8:	91 1d       	adc	r25, r1
    1aaa:	b2 9f       	mul	r27, r18
    1aac:	70 0d       	add	r23, r0
    1aae:	81 1d       	adc	r24, r1
    1ab0:	11 24       	eor	r1, r1
    1ab2:	91 1d       	adc	r25, r1
    1ab4:	08 95       	ret

00001ab6 <_exit>:
    1ab6:	f8 94       	cli

00001ab8 <__stop_program>:
    1ab8:	ff cf       	rjmp	.-2      	; 0x1ab8 <__stop_program>
