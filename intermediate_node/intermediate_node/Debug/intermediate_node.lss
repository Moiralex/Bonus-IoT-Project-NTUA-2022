
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000232  00800060  00001a44  00001ad8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000019b  00800292  00800292  00001d0a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00001da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b47  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c8  00000000  00000000  00002943  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ca  00000000  00000000  0000300b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  000036d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000469  00000000  00000000  000038c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000067a  00000000  00000000  00003d29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000043a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e4 e4       	ldi	r30, 0x44	; 68
     1a6:	fa e1       	ldi	r31, 0x1A	; 26
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a2 39       	cpi	r26, 0x92	; 146
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	24 e0       	ldi	r18, 0x04	; 4
     1b6:	a2 e9       	ldi	r26, 0x92	; 146
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	ad 32       	cpi	r26, 0x2D	; 45
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 b4 03 	call	0x768	; 0x768 <main>
     1c8:	0c 94 20 0d 	jmp	0x1a40	; 0x1a40 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <usart_init>:
    while(c!='S') {
        c=usart_receive();
    }
    for(int i=0; i<12; ++i)
        usart_receive(); //flush ServedClient out of read buffer
}
     1d0:	1b b8       	out	0x0b, r1	; 11
     1d2:	28 e1       	ldi	r18, 0x18	; 24
     1d4:	2a b9       	out	0x0a, r18	; 10
     1d6:	90 bd       	out	0x20, r25	; 32
     1d8:	89 b9       	out	0x09, r24	; 9
     1da:	86 e8       	ldi	r24, 0x86	; 134
     1dc:	80 bd       	out	0x20, r24	; 32
     1de:	08 95       	ret

000001e0 <usart_transmit>:
     1e0:	5d 9b       	sbis	0x0b, 5	; 11
     1e2:	fe cf       	rjmp	.-4      	; 0x1e0 <usart_transmit>
     1e4:	8c b9       	out	0x0c, r24	; 12
     1e6:	08 95       	ret

000001e8 <usart_receive>:
     1e8:	5f 9b       	sbis	0x0b, 7	; 11
     1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <usart_receive>
     1ec:	8c b1       	in	r24, 0x0c	; 12
     1ee:	08 95       	ret

000001f0 <serialWrite>:
     1f0:	1f 93       	push	r17
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	ec 01       	movw	r28, r24
     1f8:	10 e0       	ldi	r17, 0x00	; 0
     1fa:	07 c0       	rjmp	.+14     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     1fc:	fe 01       	movw	r30, r28
     1fe:	e8 0f       	add	r30, r24
     200:	f9 1f       	adc	r31, r25
     202:	80 81       	ld	r24, Z
     204:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <usart_transmit>
     208:	1f 5f       	subi	r17, 0xFF	; 255
     20a:	81 2f       	mov	r24, r17
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	fe 01       	movw	r30, r28
     210:	01 90       	ld	r0, Z+
     212:	00 20       	and	r0, r0
     214:	e9 f7       	brne	.-6      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     216:	31 97       	sbiw	r30, 0x01	; 1
     218:	ec 1b       	sub	r30, r28
     21a:	fd 0b       	sbc	r31, r29
     21c:	8e 17       	cp	r24, r30
     21e:	9f 07       	cpc	r25, r31
     220:	68 f3       	brcs	.-38     	; 0x1fc <serialWrite+0xc>
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	08 95       	ret

0000022a <sendCommand>:
     22a:	0f 93       	push	r16
     22c:	1f 93       	push	r17
     22e:	cf 93       	push	r28
     230:	df 93       	push	r29
     232:	8c 01       	movw	r16, r24
     234:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     238:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     23c:	13 c0       	rjmp	.+38     	; 0x264 <sendCommand+0x3a>
     23e:	86 34       	cpi	r24, 0x46	; 70
     240:	79 f4       	brne	.+30     	; 0x260 <sendCommand+0x36>
     242:	04 c0       	rjmp	.+8      	; 0x24c <sendCommand+0x22>
     244:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     248:	21 96       	adiw	r28, 0x01	; 1
     24a:	02 c0       	rjmp	.+4      	; 0x250 <sendCommand+0x26>
     24c:	c0 e0       	ldi	r28, 0x00	; 0
     24e:	d0 e0       	ldi	r29, 0x00	; 0
     250:	c5 30       	cpi	r28, 0x05	; 5
     252:	d1 05       	cpc	r29, r1
     254:	bc f3       	brlt	.-18     	; 0x244 <sendCommand+0x1a>
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	88 bb       	out	0x18, r24	; 24
     25a:	c8 01       	movw	r24, r16
     25c:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     260:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     264:	83 35       	cpi	r24, 0x53	; 83
     266:	59 f7       	brne	.-42     	; 0x23e <sendCommand+0x14>
     268:	c0 e0       	ldi	r28, 0x00	; 0
     26a:	d0 e0       	ldi	r29, 0x00	; 0
     26c:	03 c0       	rjmp	.+6      	; 0x274 <sendCommand+0x4a>
     26e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     272:	21 96       	adiw	r28, 0x01	; 1
     274:	c8 30       	cpi	r28, 0x08	; 8
     276:	d1 05       	cpc	r29, r1
     278:	d4 f3       	brlt	.-12     	; 0x26e <sendCommand+0x44>
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	08 95       	ret

00000284 <__vector_8>:

ISR(TIMER1_OVF_vect) {
     284:	1f 92       	push	r1
     286:	0f 92       	push	r0
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	0f 92       	push	r0
     28c:	11 24       	eor	r1, r1
     28e:	cf 92       	push	r12
     290:	df 92       	push	r13
     292:	ef 92       	push	r14
     294:	ff 92       	push	r15
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	2f 93       	push	r18
     29c:	3f 93       	push	r19
     29e:	4f 93       	push	r20
     2a0:	5f 93       	push	r21
     2a2:	6f 93       	push	r22
     2a4:	7f 93       	push	r23
     2a6:	8f 93       	push	r24
     2a8:	9f 93       	push	r25
     2aa:	af 93       	push	r26
     2ac:	bf 93       	push	r27
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	ef 93       	push	r30
     2b4:	ff 93       	push	r31
    char c;
    bool failed;
    int counter =0;

    if(!first) {
     2b6:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <first>
     2ba:	81 11       	cpse	r24, r1
     2bc:	36 c2       	rjmp	.+1132   	; 0x72a <__stack+0x2cb>
     2be:	e1 2c       	mov	r14, r1
     2c0:	f1 2c       	mov	r15, r1
     2c2:	12 c1       	rjmp	.+548    	; 0x4e8 <__stack+0x89>
            failed=false;
            /*strcpy(string_to_send, "ESP:ssid:\"Sens_Board");
            itoa(k, conv_buffer, 10);
            strcat(string_to_send, conv_buffer);
            strcat(string_to_send, "\"\n");*/
            sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k);
     2c4:	ff 92       	push	r15
     2c6:	ef 92       	push	r14
     2c8:	80 e6       	ldi	r24, 0x60	; 96
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	9f 93       	push	r25
     2ce:	8f 93       	push	r24
     2d0:	8e e9       	ldi	r24, 0x9E	; 158
     2d2:	92 e0       	ldi	r25, 0x02	; 2
     2d4:	9f 93       	push	r25
     2d6:	8f 93       	push	r24
     2d8:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
            sendCommand(string_to_send);
     2dc:	8e e9       	ldi	r24, 0x9E	; 158
     2de:	92 e0       	ldi	r25, 0x02	; 2
     2e0:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     2e4:	80 e2       	ldi	r24, 0x20	; 32
     2e6:	e9 e7       	ldi	r30, 0x79	; 121
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	ae e9       	ldi	r26, 0x9E	; 158
     2ec:	b2 e0       	ldi	r27, 0x02	; 2
     2ee:	01 90       	ld	r0, Z+
     2f0:	0d 92       	st	X+, r0
     2f2:	8a 95       	dec	r24
     2f4:	e1 f7       	brne	.-8      	; 0x2ee <__vector_8+0x6a>
            sendCommand(string_to_send);
     2f6:	8e e9       	ldi	r24, 0x9E	; 158
     2f8:	92 e0       	ldi	r25, 0x02	; 2
     2fa:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[request]\n");
     2fe:	89 e2       	ldi	r24, 0x29	; 41
     300:	e9 e9       	ldi	r30, 0x99	; 153
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	ae e9       	ldi	r26, 0x9E	; 158
     306:	b2 e0       	ldi	r27, 0x02	; 2
     308:	01 90       	ld	r0, Z+
     30a:	0d 92       	st	X+, r0
     30c:	8a 95       	dec	r24
     30e:	e1 f7       	brne	.-8      	; 0x308 <__vector_8+0x84>
            sendCommand(string_to_send);
     310:	8e e9       	ldi	r24, 0x9E	; 158
     312:	92 e0       	ldi	r25, 0x02	; 2
     314:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     318:	87 e2       	ldi	r24, 0x27	; 39
     31a:	e2 ec       	ldi	r30, 0xC2	; 194
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	ae e9       	ldi	r26, 0x9E	; 158
     320:	b2 e0       	ldi	r27, 0x02	; 2
     322:	01 90       	ld	r0, Z+
     324:	0d 92       	st	X+, r0
     326:	8a 95       	dec	r24
     328:	e1 f7       	brne	.-8      	; 0x322 <__vector_8+0x9e>
            sendCommand(string_to_send);
     32a:	8e e9       	ldi	r24, 0x9E	; 158
     32c:	92 e0       	ldi	r25, 0x02	; 2
     32e:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:connect\n");
     332:	8d e0       	ldi	r24, 0x0D	; 13
     334:	e9 ee       	ldi	r30, 0xE9	; 233
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	ae e9       	ldi	r26, 0x9E	; 158
     33a:	b2 e0       	ldi	r27, 0x02	; 2
     33c:	01 90       	ld	r0, Z+
     33e:	0d 92       	st	X+, r0
     340:	8a 95       	dec	r24
     342:	e1 f7       	brne	.-8      	; 0x33c <__vector_8+0xb8>
            sendCommand(string_to_send);
     344:	8e e9       	ldi	r24, 0x9E	; 158
     346:	92 e0       	ldi	r25, 0x02	; 2
     348:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:clientTransmit\n");
     34c:	84 e1       	ldi	r24, 0x14	; 20
     34e:	e6 ef       	ldi	r30, 0xF6	; 246
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	ae e9       	ldi	r26, 0x9E	; 158
     354:	b2 e0       	ldi	r27, 0x02	; 2
     356:	01 90       	ld	r0, Z+
     358:	0d 92       	st	X+, r0
     35a:	8a 95       	dec	r24
     35c:	e1 f7       	brne	.-8      	; 0x356 <__vector_8+0xd2>
            sendCommand(string_to_send);
     35e:	8e e9       	ldi	r24, 0x9E	; 158
     360:	92 e0       	ldi	r25, 0x02	; 2
     362:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:getValue:\"Moist_Sensor\"\n");
     366:	8d e1       	ldi	r24, 0x1D	; 29
     368:	ea e0       	ldi	r30, 0x0A	; 10
     36a:	f1 e0       	ldi	r31, 0x01	; 1
     36c:	ae e9       	ldi	r26, 0x9E	; 158
     36e:	b2 e0       	ldi	r27, 0x02	; 2
     370:	01 90       	ld	r0, Z+
     372:	0d 92       	st	X+, r0
     374:	8a 95       	dec	r24
     376:	e1 f7       	brne	.-8      	; 0x370 <__vector_8+0xec>
            serialWrite(string_to_send);
     378:	8e e9       	ldi	r24, 0x9E	; 158
     37a:	92 e0       	ldi	r25, 0x02	; 2
     37c:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
            
            while(usart_receive() != '"' && !failed) { //scan input till you find ". The number will follow
     380:	0f 90       	pop	r0
     382:	0f 90       	pop	r0
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     390:	82 32       	cpi	r24, 0x22	; 34
     392:	e1 f7       	brne	.-8      	; 0x38c <__vector_8+0x108>
               
            }
            c=usart_receive(); //read most significant digit
     394:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     398:	86 34       	cpi	r24, 0x46	; 70
     39a:	11 f0       	breq	.+4      	; 0x3a0 <__vector_8+0x11c>
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
			counter = 0;
            failed=false;
     39c:	d1 2c       	mov	r13, r1
     39e:	02 c0       	rjmp	.+4      	; 0x3a4 <__vector_8+0x120>
            while(usart_receive() != '"' && !failed) { //scan input till you find ". The number will follow
               
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
     3a0:	dd 24       	eor	r13, r13
     3a2:	d3 94       	inc	r13
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
			counter = 0;
            failed=false;
     3a4:	c0 e0       	ldi	r28, 0x00	; 0
     3a6:	d0 e0       	ldi	r29, 0x00	; 0
     3a8:	09 c0       	rjmp	.+18     	; 0x3bc <__vector_8+0x138>
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     3aa:	8e 01       	movw	r16, r28
     3ac:	0f 5f       	subi	r16, 0xFF	; 255
     3ae:	1f 4f       	sbci	r17, 0xFF	; 255
     3b0:	cd 5d       	subi	r28, 0xDD	; 221
     3b2:	db 4f       	sbci	r29, 0xFB	; 251
     3b4:	88 83       	st	Y, r24
                c = usart_receive();
     3b6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     3ba:	e8 01       	movw	r28, r16
               
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
     3bc:	82 32       	cpi	r24, 0x22	; 34
     3be:	11 f0       	breq	.+4      	; 0x3c4 <__vector_8+0x140>
     3c0:	dd 20       	and	r13, r13
     3c2:	99 f3       	breq	.-26     	; 0x3aa <__vector_8+0x126>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     3c4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){ 
     3c8:	d1 10       	cpse	r13, r1
     3ca:	2e c0       	rjmp	.+92     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
     3cc:	25 e0       	ldi	r18, 0x05	; 5
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	0c c0       	rjmp	.+24     	; 0x3ea <__vector_8+0x166>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     3d2:	f9 01       	movw	r30, r18
     3d4:	e8 1b       	sub	r30, r24
     3d6:	f9 0b       	sbc	r31, r25
     3d8:	ed 5d       	subi	r30, 0xDD	; 221
     3da:	fb 4f       	sbci	r31, 0xFB	; 251
     3dc:	80 81       	ld	r24, Z
     3de:	f9 01       	movw	r30, r18
     3e0:	ed 5d       	subi	r30, 0xDD	; 221
     3e2:	fb 4f       	sbci	r31, 0xFB	; 251
     3e4:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     3e6:	21 50       	subi	r18, 0x01	; 1
     3e8:	31 09       	sbc	r19, r1
     3ea:	86 e0       	ldi	r24, 0x06	; 6
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	8c 1b       	sub	r24, r28
     3f0:	9d 0b       	sbc	r25, r29
     3f2:	28 17       	cp	r18, r24
     3f4:	39 07       	cpc	r19, r25
     3f6:	6c f7       	brge	.-38     	; 0x3d2 <__vector_8+0x14e>
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	07 c0       	rjmp	.+14     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     3fe:	f9 01       	movw	r30, r18
     400:	ed 5d       	subi	r30, 0xDD	; 221
     402:	fb 4f       	sbci	r31, 0xFB	; 251
     404:	40 e3       	ldi	r20, 0x30	; 48
     406:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     408:	2f 5f       	subi	r18, 0xFF	; 255
     40a:	3f 4f       	sbci	r19, 0xFF	; 255
     40c:	28 17       	cp	r18, r24
     40e:	39 07       	cpc	r19, r25
     410:	b4 f3       	brlt	.-20     	; 0x3fe <__vector_8+0x17a>
                    conv_buffer[i] = '0';
                }
                moistures[k]=atoi(conv_buffer);
     412:	83 e2       	ldi	r24, 0x23	; 35
     414:	94 e0       	ldi	r25, 0x04	; 4
     416:	0e 94 9b 09 	call	0x1336	; 0x1336 <atoi>
     41a:	f7 01       	movw	r30, r14
     41c:	ee 0f       	add	r30, r30
     41e:	ff 1f       	adc	r31, r31
     420:	ea 56       	subi	r30, 0x6A	; 106
     422:	fd 4f       	sbci	r31, 0xFD	; 253
     424:	91 83       	std	Z+1, r25	; 0x01
     426:	80 83       	st	Z, r24
            }
            
            strcpy(string_to_send, "ESP:getValue:\"Tmp_Sensor\"\n");
     428:	8b e1       	ldi	r24, 0x1B	; 27
     42a:	e7 e2       	ldi	r30, 0x27	; 39
     42c:	f1 e0       	ldi	r31, 0x01	; 1
     42e:	ae e9       	ldi	r26, 0x9E	; 158
     430:	b2 e0       	ldi	r27, 0x02	; 2
     432:	01 90       	ld	r0, Z+
     434:	0d 92       	st	X+, r0
     436:	8a 95       	dec	r24
     438:	e1 f7       	brne	.-8      	; 0x432 <__DATA_REGION_LENGTH__+0x32>
            serialWrite(string_to_send);
     43a:	8e e9       	ldi	r24, 0x9E	; 158
     43c:	92 e0       	ldi	r25, 0x02	; 2
     43e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>

            //c=getChar();
			counter = 0;
            while(usart_receive() != '"' && !failed) {
     442:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     446:	82 32       	cpi	r24, 0x22	; 34
     448:	11 f0       	breq	.+4      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     44a:	dd 20       	and	r13, r13
     44c:	d1 f3       	breq	.-12     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
                //c = getChar();
            }
            c = usart_receive();
     44e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     452:	86 34       	cpi	r24, 0x46	; 70
     454:	11 f4       	brne	.+4      	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
                failed=true;
     456:	dd 24       	eor	r13, r13
     458:	d3 94       	inc	r13
     45a:	c0 e0       	ldi	r28, 0x00	; 0
     45c:	d0 e0       	ldi	r29, 0x00	; 0
     45e:	09 c0       	rjmp	.+18     	; 0x472 <__stack+0x13>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     460:	8e 01       	movw	r16, r28
     462:	0f 5f       	subi	r16, 0xFF	; 255
     464:	1f 4f       	sbci	r17, 0xFF	; 255
     466:	cd 5d       	subi	r28, 0xDD	; 221
     468:	db 4f       	sbci	r29, 0xFB	; 251
     46a:	88 83       	st	Y, r24
                c = usart_receive();
     46c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            }
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     470:	e8 01       	movw	r28, r16
                //c = getChar();
            }
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     472:	82 32       	cpi	r24, 0x22	; 34
     474:	11 f0       	breq	.+4      	; 0x47a <__stack+0x1b>
     476:	dd 20       	and	r13, r13
     478:	99 f3       	breq	.-26     	; 0x460 <__stack+0x1>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     47a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){
     47e:	d1 10       	cpse	r13, r1
     480:	30 c0       	rjmp	.+96     	; 0x4e2 <__stack+0x83>
     482:	25 e0       	ldi	r18, 0x05	; 5
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	0c c0       	rjmp	.+24     	; 0x4a0 <__stack+0x41>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     488:	f9 01       	movw	r30, r18
     48a:	e8 1b       	sub	r30, r24
     48c:	f9 0b       	sbc	r31, r25
     48e:	ed 5d       	subi	r30, 0xDD	; 221
     490:	fb 4f       	sbci	r31, 0xFB	; 251
     492:	80 81       	ld	r24, Z
     494:	f9 01       	movw	r30, r18
     496:	ed 5d       	subi	r30, 0xDD	; 221
     498:	fb 4f       	sbci	r31, 0xFB	; 251
     49a:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     49c:	21 50       	subi	r18, 0x01	; 1
     49e:	31 09       	sbc	r19, r1
     4a0:	86 e0       	ldi	r24, 0x06	; 6
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	8c 1b       	sub	r24, r28
     4a6:	9d 0b       	sbc	r25, r29
     4a8:	28 17       	cp	r18, r24
     4aa:	39 07       	cpc	r19, r25
     4ac:	6c f7       	brge	.-38     	; 0x488 <__stack+0x29>
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <__stack+0x63>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     4b4:	f9 01       	movw	r30, r18
     4b6:	ed 5d       	subi	r30, 0xDD	; 221
     4b8:	fb 4f       	sbci	r31, 0xFB	; 251
     4ba:	40 e3       	ldi	r20, 0x30	; 48
     4bc:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     4be:	2f 5f       	subi	r18, 0xFF	; 255
     4c0:	3f 4f       	sbci	r19, 0xFF	; 255
     4c2:	28 17       	cp	r18, r24
     4c4:	39 07       	cpc	r19, r25
     4c6:	b4 f3       	brlt	.-20     	; 0x4b4 <__stack+0x55>
                    conv_buffer[i] = '0';
                }
                temperatures[k]=atof(conv_buffer);
     4c8:	83 e2       	ldi	r24, 0x23	; 35
     4ca:	94 e0       	ldi	r25, 0x04	; 4
     4cc:	0e 94 97 09 	call	0x132e	; 0x132e <atof>
     4d0:	e7 01       	movw	r28, r14
     4d2:	cc 0f       	add	r28, r28
     4d4:	dd 1f       	adc	r29, r29
     4d6:	c0 5e       	subi	r28, 0xE0	; 224
     4d8:	db 4f       	sbci	r29, 0xFB	; 251
     4da:	0e 94 b2 04 	call	0x964	; 0x964 <__fixsfsi>
     4de:	79 83       	std	Y+1, r23	; 0x01
     4e0:	68 83       	st	Y, r22
    char c;
    bool failed;
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
     4e2:	8f ef       	ldi	r24, 0xFF	; 255
     4e4:	e8 1a       	sub	r14, r24
     4e6:	f8 0a       	sbc	r15, r24
     4e8:	1e 14       	cp	r1, r14
     4ea:	1f 04       	cpc	r1, r15
     4ec:	0c f0       	brlt	.+2      	; 0x4f0 <__stack+0x91>
     4ee:	ea ce       	rjmp	.-556    	; 0x2c4 <__vector_8+0x40>
                }
                temperatures[k]=atof(conv_buffer);
            }
            
        }
        tmp_avg=0.0;
     4f0:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <__data_end>
     4f4:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <__data_end+0x1>
     4f8:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <__data_end+0x2>
     4fc:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <__data_end+0x3>
        moist_avg=0;
     500:	10 92 1f 03 	sts	0x031F, r1	; 0x80031f <moist_avg+0x1>
     504:	10 92 1e 03 	sts	0x031E, r1	; 0x80031e <moist_avg>
        for(int i=0; i<sensor_boards; ++i) {
     508:	c0 e0       	ldi	r28, 0x00	; 0
     50a:	d0 e0       	ldi	r29, 0x00	; 0
     50c:	32 c0       	rjmp	.+100    	; 0x572 <__stack+0x113>
            moist_avg += moistures[i];
     50e:	ce 01       	movw	r24, r28
     510:	88 0f       	add	r24, r24
     512:	99 1f       	adc	r25, r25
     514:	fc 01       	movw	r30, r24
     516:	ea 56       	subi	r30, 0x6A	; 106
     518:	fd 4f       	sbci	r31, 0xFD	; 253
     51a:	20 81       	ld	r18, Z
     51c:	31 81       	ldd	r19, Z+1	; 0x01
     51e:	40 91 1e 03 	lds	r20, 0x031E	; 0x80031e <moist_avg>
     522:	50 91 1f 03 	lds	r21, 0x031F	; 0x80031f <moist_avg+0x1>
     526:	24 0f       	add	r18, r20
     528:	35 1f       	adc	r19, r21
     52a:	30 93 1f 03 	sts	0x031F, r19	; 0x80031f <moist_avg+0x1>
     52e:	20 93 1e 03 	sts	0x031E, r18	; 0x80031e <moist_avg>
            tmp_avg += temperatures[i];
     532:	fc 01       	movw	r30, r24
     534:	e0 5e       	subi	r30, 0xE0	; 224
     536:	fb 4f       	sbci	r31, 0xFB	; 251
     538:	60 81       	ld	r22, Z
     53a:	71 81       	ldd	r23, Z+1	; 0x01
     53c:	07 2e       	mov	r0, r23
     53e:	00 0c       	add	r0, r0
     540:	88 0b       	sbc	r24, r24
     542:	99 0b       	sbc	r25, r25
     544:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__floatsisf>
     548:	9b 01       	movw	r18, r22
     54a:	ac 01       	movw	r20, r24
     54c:	60 91 92 02 	lds	r22, 0x0292	; 0x800292 <__data_end>
     550:	70 91 93 02 	lds	r23, 0x0293	; 0x800293 <__data_end+0x1>
     554:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end+0x2>
     558:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <__data_end+0x3>
     55c:	0e 94 46 04 	call	0x88c	; 0x88c <__addsf3>
     560:	60 93 92 02 	sts	0x0292, r22	; 0x800292 <__data_end>
     564:	70 93 93 02 	sts	0x0293, r23	; 0x800293 <__data_end+0x1>
     568:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <__data_end+0x2>
     56c:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <__data_end+0x3>
            }
            
        }
        tmp_avg=0.0;
        moist_avg=0;
        for(int i=0; i<sensor_boards; ++i) {
     570:	21 96       	adiw	r28, 0x01	; 1
     572:	1c 16       	cp	r1, r28
     574:	1d 06       	cpc	r1, r29
     576:	5c f6       	brge	.-106    	; 0x50e <__stack+0xaf>
            moist_avg += moistures[i];
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
     578:	00 91 1e 03 	lds	r16, 0x031E	; 0x80031e <moist_avg>
     57c:	10 91 1f 03 	lds	r17, 0x031F	; 0x80031f <moist_avg+0x1>
        tmp_avg /= sensor_boards;
     580:	c0 90 92 02 	lds	r12, 0x0292	; 0x800292 <__data_end>
     584:	d0 90 93 02 	lds	r13, 0x0293	; 0x800293 <__data_end+0x1>
     588:	e0 90 94 02 	lds	r14, 0x0294	; 0x800294 <__data_end+0x2>
     58c:	f0 90 95 02 	lds	r15, 0x0295	; 0x800295 <__data_end+0x3>

        for(int i=0; i<sensor_boards; ++i) {
     590:	c0 e0       	ldi	r28, 0x00	; 0
     592:	d0 e0       	ldi	r29, 0x00	; 0
     594:	42 c0       	rjmp	.+132    	; 0x61a <__stack+0x1bb>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     596:	ce 01       	movw	r24, r28
     598:	88 0f       	add	r24, r24
     59a:	99 1f       	adc	r25, r25
     59c:	fc 01       	movw	r30, r24
     59e:	ea 56       	subi	r30, 0x6A	; 106
     5a0:	fd 4f       	sbci	r31, 0xFD	; 253
     5a2:	20 81       	ld	r18, Z
     5a4:	31 81       	ldd	r19, Z+1	; 0x01
     5a6:	20 1b       	sub	r18, r16
     5a8:	31 0b       	sbc	r19, r17
     5aa:	22 9f       	mul	r18, r18
     5ac:	a0 01       	movw	r20, r0
     5ae:	23 9f       	mul	r18, r19
     5b0:	50 0d       	add	r21, r0
     5b2:	50 0d       	add	r21, r0
     5b4:	11 24       	eor	r1, r1
     5b6:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <moist_var>
     5ba:	30 91 99 02 	lds	r19, 0x0299	; 0x800299 <moist_var+0x1>
     5be:	24 0f       	add	r18, r20
     5c0:	35 1f       	adc	r19, r21
     5c2:	30 93 99 02 	sts	0x0299, r19	; 0x800299 <moist_var+0x1>
     5c6:	20 93 98 02 	sts	0x0298, r18	; 0x800298 <moist_var>
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     5ca:	fc 01       	movw	r30, r24
     5cc:	e0 5e       	subi	r30, 0xE0	; 224
     5ce:	fb 4f       	sbci	r31, 0xFB	; 251
     5d0:	60 81       	ld	r22, Z
     5d2:	71 81       	ldd	r23, Z+1	; 0x01
     5d4:	07 2e       	mov	r0, r23
     5d6:	00 0c       	add	r0, r0
     5d8:	88 0b       	sbc	r24, r24
     5da:	99 0b       	sbc	r25, r25
     5dc:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__floatsisf>
     5e0:	a7 01       	movw	r20, r14
     5e2:	96 01       	movw	r18, r12
     5e4:	0e 94 45 04 	call	0x88a	; 0x88a <__subsf3>
     5e8:	9b 01       	movw	r18, r22
     5ea:	ac 01       	movw	r20, r24
     5ec:	0e 94 76 05 	call	0xaec	; 0xaec <__mulsf3>
     5f0:	9b 01       	movw	r18, r22
     5f2:	ac 01       	movw	r20, r24
     5f4:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <tmp_var_f>
     5f8:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <tmp_var_f+0x1>
     5fc:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <tmp_var_f+0x2>
     600:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <tmp_var_f+0x3>
     604:	0e 94 46 04 	call	0x88c	; 0x88c <__addsf3>
     608:	60 93 9a 02 	sts	0x029A, r22	; 0x80029a <tmp_var_f>
     60c:	70 93 9b 02 	sts	0x029B, r23	; 0x80029b <tmp_var_f+0x1>
     610:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <tmp_var_f+0x2>
     614:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <tmp_var_f+0x3>
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
        tmp_avg /= sensor_boards;

        for(int i=0; i<sensor_boards; ++i) {
     618:	21 96       	adiw	r28, 0x01	; 1
     61a:	1c 16       	cp	r1, r28
     61c:	1d 06       	cpc	r1, r29
     61e:	0c f0       	brlt	.+2      	; 0x622 <__stack+0x1c3>
     620:	ba cf       	rjmp	.-140    	; 0x596 <__stack+0x137>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
        }
        moist_var /= sensor_boards;
        tmp_var_f /= sensor_boards;
     622:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <tmp_var_f>
     626:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <tmp_var_f+0x1>
     62a:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <tmp_var_f+0x2>
     62e:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <tmp_var_f+0x3>
        tmp_var = (int)tmp_var_f;
     632:	0e 94 b2 04 	call	0x964	; 0x964 <__fixsfsi>
     636:	70 93 2a 04 	sts	0x042A, r23	; 0x80042a <tmp_var+0x1>
     63a:	60 93 29 04 	sts	0x0429, r22	; 0x800429 <tmp_var>

        //strcpy(string_to_send, "ESP:ssid:\"Middle_Board1\"\n");
        //sendCommand(string_to_send);

        strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     63e:	ce e9       	ldi	r28, 0x9E	; 158
     640:	d2 e0       	ldi	r29, 0x02	; 2
     642:	87 e1       	ldi	r24, 0x17	; 23
     644:	e2 e4       	ldi	r30, 0x42	; 66
     646:	f1 e0       	ldi	r31, 0x01	; 1
     648:	de 01       	movw	r26, r28
     64a:	01 90       	ld	r0, Z+
     64c:	0d 92       	st	X+, r0
     64e:	8a 95       	dec	r24
     650:	e1 f7       	brne	.-8      	; 0x64a <__stack+0x1eb>
        sendCommand(string_to_send);
     652:	ce 01       	movw	r24, r28
     654:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     658:	80 e2       	ldi	r24, 0x20	; 32
     65a:	e9 e7       	ldi	r30, 0x79	; 121
     65c:	f0 e0       	ldi	r31, 0x00	; 0
     65e:	de 01       	movw	r26, r28
     660:	01 90       	ld	r0, Z+
     662:	0d 92       	st	X+, r0
     664:	8a 95       	dec	r24
     666:	e1 f7       	brne	.-8      	; 0x660 <__stack+0x201>
        sendCommand(string_to_send);
     668:	ce 01       	movw	r24, r28
     66a:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        /*itoa(moist_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg\"[%d]\n", moist_avg);
     66e:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <moist_avg+0x1>
     672:	8f 93       	push	r24
     674:	80 91 1e 03 	lds	r24, 0x031E	; 0x80031e <moist_avg>
     678:	8f 93       	push	r24
     67a:	89 e5       	ldi	r24, 0x59	; 89
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
     682:	df 93       	push	r29
     684:	cf 93       	push	r28
     686:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     68a:	ce 01       	movw	r24, r28
     68c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        /*itoa(tmp_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[%.1f]\n", tmp_avg);
     690:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <__data_end+0x3>
     694:	8f 93       	push	r24
     696:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <__data_end+0x2>
     69a:	8f 93       	push	r24
     69c:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <__data_end+0x1>
     6a0:	8f 93       	push	r24
     6a2:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <__data_end>
     6a6:	8f 93       	push	r24
     6a8:	8a e7       	ldi	r24, 0x7A	; 122
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	9f 93       	push	r25
     6ae:	8f 93       	push	r24
     6b0:	df 93       	push	r29
     6b2:	cf 93       	push	r28
     6b4:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     6b8:	ce 01       	movw	r24, r28
     6ba:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
        /*itoa(moist_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_var\"[%d]\n", moist_var);
     6be:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <moist_var+0x1>
     6c2:	8f 93       	push	r24
     6c4:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <moist_var>
     6c8:	8f 93       	push	r24
     6ca:	8b e9       	ldi	r24, 0x9B	; 155
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	9f 93       	push	r25
     6d0:	8f 93       	push	r24
     6d2:	df 93       	push	r29
     6d4:	cf 93       	push	r28
     6d6:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     6da:	ce 01       	movw	r24, r28
     6dc:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        /*itoa(tmp_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var\"[%d]\n", tmp_var);
     6e0:	80 91 2a 04 	lds	r24, 0x042A	; 0x80042a <tmp_var+0x1>
     6e4:	8f 93       	push	r24
     6e6:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <tmp_var>
     6ea:	8f 93       	push	r24
     6ec:	8c eb       	ldi	r24, 0xBC	; 188
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	9f 93       	push	r25
     6f2:	8f 93       	push	r24
     6f4:	df 93       	push	r29
     6f6:	cf 93       	push	r28
     6f8:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     6fc:	ce 01       	movw	r24, r28
     6fe:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        //strcpy(string_to_send, "ESP:APStart\n");
        //sendCommand(string_to_send);
		strcpy(string_to_send, "ESP:clientTransmit\n");
     702:	84 e1       	ldi	r24, 0x14	; 20
     704:	e6 ef       	ldi	r30, 0xF6	; 246
     706:	f0 e0       	ldi	r31, 0x00	; 0
     708:	de 01       	movw	r26, r28
     70a:	01 90       	ld	r0, Z+
     70c:	0d 92       	st	X+, r0
     70e:	8a 95       	dec	r24
     710:	e1 f7       	brne	.-8      	; 0x70a <__stack+0x2ab>
		sendCommand(string_to_send);
     712:	ce 01       	movw	r24, r28
     714:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
     718:	8d b7       	in	r24, 0x3d	; 61
     71a:	9e b7       	in	r25, 0x3e	; 62
     71c:	4a 96       	adiw	r24, 0x1a	; 26
     71e:	0f b6       	in	r0, 0x3f	; 63
     720:	f8 94       	cli
     722:	9e bf       	out	0x3e, r25	; 62
     724:	0f be       	out	0x3f, r0	; 63
     726:	8d bf       	out	0x3d, r24	; 61
     728:	02 c0       	rjmp	.+4      	; 0x72e <__stack+0x2cf>
     
    }
    else
        first=false;
     72a:	10 92 22 04 	sts	0x0422, r1	; 0x800422 <first>

    TCNT1 = 3036;
     72e:	8c ed       	ldi	r24, 0xDC	; 220
     730:	9b e0       	ldi	r25, 0x0B	; 11
     732:	9d bd       	out	0x2d, r25	; 45
     734:	8c bd       	out	0x2c, r24	; 44
}
     736:	ff 91       	pop	r31
     738:	ef 91       	pop	r30
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	bf 91       	pop	r27
     740:	af 91       	pop	r26
     742:	9f 91       	pop	r25
     744:	8f 91       	pop	r24
     746:	7f 91       	pop	r23
     748:	6f 91       	pop	r22
     74a:	5f 91       	pop	r21
     74c:	4f 91       	pop	r20
     74e:	3f 91       	pop	r19
     750:	2f 91       	pop	r18
     752:	1f 91       	pop	r17
     754:	0f 91       	pop	r16
     756:	ff 90       	pop	r15
     758:	ef 90       	pop	r14
     75a:	df 90       	pop	r13
     75c:	cf 90       	pop	r12
     75e:	0f 90       	pop	r0
     760:	0f be       	out	0x3f, r0	; 63
     762:	0f 90       	pop	r0
     764:	1f 90       	pop	r1
     766:	18 95       	reti

00000768 <main>:


int main(){
	first=true;
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	80 93 22 04 	sts	0x0422, r24	; 0x800422 <first>

    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
     76e:	83 e3       	ldi	r24, 0x33	; 51
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <usart_init>
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	0e c0       	rjmp	.+28     	; 0x798 <main+0x30>
        moistures[i]=0;
     77c:	9c 01       	movw	r18, r24
     77e:	22 0f       	add	r18, r18
     780:	33 1f       	adc	r19, r19
     782:	f9 01       	movw	r30, r18
     784:	ea 56       	subi	r30, 0x6A	; 106
     786:	fd 4f       	sbci	r31, 0xFD	; 253
     788:	11 82       	std	Z+1, r1	; 0x01
     78a:	10 82       	st	Z, r1
        temperatures[i]=0;
     78c:	f9 01       	movw	r30, r18
     78e:	e0 5e       	subi	r30, 0xE0	; 224
     790:	fb 4f       	sbci	r31, 0xFB	; 251
     792:	11 82       	std	Z+1, r1	; 0x01
     794:	10 82       	st	Z, r1
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     796:	01 96       	adiw	r24, 0x01	; 1
     798:	18 16       	cp	r1, r24
     79a:	19 06       	cpc	r1, r25
     79c:	7c f7       	brge	.-34     	; 0x77c <main+0x14>
        moistures[i]=0;
        temperatures[i]=0;
    }

    usart_transmit('\n');
     79e:	8a e0       	ldi	r24, 0x0A	; 10
     7a0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <usart_transmit>
    	
    strcpy(string_to_send, "ESP:restart\n");
     7a4:	8d e0       	ldi	r24, 0x0D	; 13
     7a6:	eb ed       	ldi	r30, 0xDB	; 219
     7a8:	f1 e0       	ldi	r31, 0x01	; 1
     7aa:	ae e9       	ldi	r26, 0x9E	; 158
     7ac:	b2 e0       	ldi	r27, 0x02	; 2
     7ae:	01 90       	ld	r0, Z+
     7b0:	0d 92       	st	X+, r0
     7b2:	8a 95       	dec	r24
     7b4:	e1 f7       	brne	.-8      	; 0x7ae <main+0x46>
    serialWrite(string_to_send);
     7b6:	8e e9       	ldi	r24, 0x9E	; 158
     7b8:	92 e0       	ldi	r25, 0x02	; 2
     7ba:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
    	
    usart_receive(); //wait until restart is complete
     7be:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
    while(UCSRA&(1<<RXC))
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <main+0x60>
    usart_receive();
     7c4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
    	
    strcpy(string_to_send, "ESP:restart\n");
    serialWrite(string_to_send);
    	
    usart_receive(); //wait until restart is complete
    while(UCSRA&(1<<RXC))
     7c8:	5f 99       	sbic	0x0b, 7	; 11
     7ca:	fc cf       	rjmp	.-8      	; 0x7c4 <main+0x5c>
    usart_receive();

    strcpy(string_to_send, "ESP:addSensor:\"Moist_Sensor\"\n");
     7cc:	ce e9       	ldi	r28, 0x9E	; 158
     7ce:	d2 e0       	ldi	r29, 0x02	; 2
     7d0:	8e e1       	ldi	r24, 0x1E	; 30
     7d2:	e8 ee       	ldi	r30, 0xE8	; 232
     7d4:	f1 e0       	ldi	r31, 0x01	; 1
     7d6:	de 01       	movw	r26, r28
     7d8:	01 90       	ld	r0, Z+
     7da:	0d 92       	st	X+, r0
     7dc:	8a 95       	dec	r24
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <main+0x70>
    sendCommand(string_to_send);
     7e0:	ce 01       	movw	r24, r28
     7e2:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
     7e6:	8c e1       	ldi	r24, 0x1C	; 28
     7e8:	e6 e0       	ldi	r30, 0x06	; 6
     7ea:	f2 e0       	ldi	r31, 0x02	; 2
     7ec:	de 01       	movw	r26, r28
     7ee:	01 90       	ld	r0, Z+
     7f0:	0d 92       	st	X+, r0
     7f2:	8a 95       	dec	r24
     7f4:	e1 f7       	brne	.-8      	; 0x7ee <main+0x86>
    sendCommand(string_to_send);
     7f6:	ce 01       	movw	r24, r28
     7f8:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor:\"Moist_avg%d\"\n", board_no);
     7fc:	1f 92       	push	r1
     7fe:	11 e0       	ldi	r17, 0x01	; 1
     800:	1f 93       	push	r17
     802:	82 e2       	ldi	r24, 0x22	; 34
     804:	92 e0       	ldi	r25, 0x02	; 2
     806:	9f 93       	push	r25
     808:	8f 93       	push	r24
     80a:	df 93       	push	r29
     80c:	cf 93       	push	r28
     80e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
    sendCommand(string_to_send);
     812:	ce 01       	movw	r24, r28
     814:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor:\"Tmp_avg%d\"\n", board_no);
     818:	1f 92       	push	r1
     81a:	1f 93       	push	r17
     81c:	8f e3       	ldi	r24, 0x3F	; 63
     81e:	92 e0       	ldi	r25, 0x02	; 2
     820:	9f 93       	push	r25
     822:	8f 93       	push	r24
     824:	df 93       	push	r29
     826:	cf 93       	push	r28
     828:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
    sendCommand(string_to_send);
     82c:	ce 01       	movw	r24, r28
     82e:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor:\"Moist_var%d\"\n", board_no);
     832:	1f 92       	push	r1
     834:	1f 93       	push	r17
     836:	8a e5       	ldi	r24, 0x5A	; 90
     838:	92 e0       	ldi	r25, 0x02	; 2
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	df 93       	push	r29
     840:	cf 93       	push	r28
     842:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
    sendCommand(string_to_send);
     846:	ce 01       	movw	r24, r28
     848:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor:\"Tmp_var%d\"\n", board_no);
     84c:	1f 92       	push	r1
     84e:	1f 93       	push	r17
     850:	87 e7       	ldi	r24, 0x77	; 119
     852:	92 e0       	ldi	r25, 0x02	; 2
     854:	9f 93       	push	r25
     856:	8f 93       	push	r24
     858:	df 93       	push	r29
     85a:	cf 93       	push	r28
     85c:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <sprintf>
    sendCommand(string_to_send);
     860:	ce 01       	movw	r24, r28
     862:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>


    TCCR1B = 0x05; //CK/1024
     866:	85 e0       	ldi	r24, 0x05	; 5
     868:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8 seconds
     86a:	8c ed       	ldi	r24, 0xDC	; 220
     86c:	9b e0       	ldi	r25, 0x0B	; 11
     86e:	9d bd       	out	0x2d, r25	; 45
     870:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     872:	84 e0       	ldi	r24, 0x04	; 4
     874:	89 bf       	out	0x39, r24	; 57
    sei();
     876:	78 94       	sei
     878:	8d b7       	in	r24, 0x3d	; 61
     87a:	9e b7       	in	r25, 0x3e	; 62
     87c:	48 96       	adiw	r24, 0x18	; 24
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	f8 94       	cli
     882:	9e bf       	out	0x3e, r25	; 62
     884:	0f be       	out	0x3f, r0	; 63
     886:	8d bf       	out	0x3d, r24	; 61
     888:	ff cf       	rjmp	.-2      	; 0x888 <main+0x120>

0000088a <__subsf3>:
     88a:	50 58       	subi	r21, 0x80	; 128

0000088c <__addsf3>:
     88c:	bb 27       	eor	r27, r27
     88e:	aa 27       	eor	r26, r26
     890:	0e 94 5d 04 	call	0x8ba	; 0x8ba <__addsf3x>
     894:	0c 94 3c 05 	jmp	0xa78	; 0xa78 <__fp_round>
     898:	0e 94 2e 05 	call	0xa5c	; 0xa5c <__fp_pscA>
     89c:	38 f0       	brcs	.+14     	; 0x8ac <__addsf3+0x20>
     89e:	0e 94 35 05 	call	0xa6a	; 0xa6a <__fp_pscB>
     8a2:	20 f0       	brcs	.+8      	; 0x8ac <__addsf3+0x20>
     8a4:	39 f4       	brne	.+14     	; 0x8b4 <__addsf3+0x28>
     8a6:	9f 3f       	cpi	r25, 0xFF	; 255
     8a8:	19 f4       	brne	.+6      	; 0x8b0 <__addsf3+0x24>
     8aa:	26 f4       	brtc	.+8      	; 0x8b4 <__addsf3+0x28>
     8ac:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_nan>
     8b0:	0e f4       	brtc	.+2      	; 0x8b4 <__addsf3+0x28>
     8b2:	e0 95       	com	r30
     8b4:	e7 fb       	bst	r30, 7
     8b6:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__fp_inf>

000008ba <__addsf3x>:
     8ba:	e9 2f       	mov	r30, r25
     8bc:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__fp_split3>
     8c0:	58 f3       	brcs	.-42     	; 0x898 <__addsf3+0xc>
     8c2:	ba 17       	cp	r27, r26
     8c4:	62 07       	cpc	r22, r18
     8c6:	73 07       	cpc	r23, r19
     8c8:	84 07       	cpc	r24, r20
     8ca:	95 07       	cpc	r25, r21
     8cc:	20 f0       	brcs	.+8      	; 0x8d6 <__addsf3x+0x1c>
     8ce:	79 f4       	brne	.+30     	; 0x8ee <__addsf3x+0x34>
     8d0:	a6 f5       	brtc	.+104    	; 0x93a <__addsf3x+0x80>
     8d2:	0c 94 6f 05 	jmp	0xade	; 0xade <__fp_zero>
     8d6:	0e f4       	brtc	.+2      	; 0x8da <__addsf3x+0x20>
     8d8:	e0 95       	com	r30
     8da:	0b 2e       	mov	r0, r27
     8dc:	ba 2f       	mov	r27, r26
     8de:	a0 2d       	mov	r26, r0
     8e0:	0b 01       	movw	r0, r22
     8e2:	b9 01       	movw	r22, r18
     8e4:	90 01       	movw	r18, r0
     8e6:	0c 01       	movw	r0, r24
     8e8:	ca 01       	movw	r24, r20
     8ea:	a0 01       	movw	r20, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	ff 27       	eor	r31, r31
     8f0:	59 1b       	sub	r21, r25
     8f2:	99 f0       	breq	.+38     	; 0x91a <__addsf3x+0x60>
     8f4:	59 3f       	cpi	r21, 0xF9	; 249
     8f6:	50 f4       	brcc	.+20     	; 0x90c <__addsf3x+0x52>
     8f8:	50 3e       	cpi	r21, 0xE0	; 224
     8fa:	68 f1       	brcs	.+90     	; 0x956 <__addsf3x+0x9c>
     8fc:	1a 16       	cp	r1, r26
     8fe:	f0 40       	sbci	r31, 0x00	; 0
     900:	a2 2f       	mov	r26, r18
     902:	23 2f       	mov	r18, r19
     904:	34 2f       	mov	r19, r20
     906:	44 27       	eor	r20, r20
     908:	58 5f       	subi	r21, 0xF8	; 248
     90a:	f3 cf       	rjmp	.-26     	; 0x8f2 <__addsf3x+0x38>
     90c:	46 95       	lsr	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	a7 95       	ror	r26
     914:	f0 40       	sbci	r31, 0x00	; 0
     916:	53 95       	inc	r21
     918:	c9 f7       	brne	.-14     	; 0x90c <__addsf3x+0x52>
     91a:	7e f4       	brtc	.+30     	; 0x93a <__addsf3x+0x80>
     91c:	1f 16       	cp	r1, r31
     91e:	ba 0b       	sbc	r27, r26
     920:	62 0b       	sbc	r22, r18
     922:	73 0b       	sbc	r23, r19
     924:	84 0b       	sbc	r24, r20
     926:	ba f0       	brmi	.+46     	; 0x956 <__addsf3x+0x9c>
     928:	91 50       	subi	r25, 0x01	; 1
     92a:	a1 f0       	breq	.+40     	; 0x954 <__addsf3x+0x9a>
     92c:	ff 0f       	add	r31, r31
     92e:	bb 1f       	adc	r27, r27
     930:	66 1f       	adc	r22, r22
     932:	77 1f       	adc	r23, r23
     934:	88 1f       	adc	r24, r24
     936:	c2 f7       	brpl	.-16     	; 0x928 <__addsf3x+0x6e>
     938:	0e c0       	rjmp	.+28     	; 0x956 <__addsf3x+0x9c>
     93a:	ba 0f       	add	r27, r26
     93c:	62 1f       	adc	r22, r18
     93e:	73 1f       	adc	r23, r19
     940:	84 1f       	adc	r24, r20
     942:	48 f4       	brcc	.+18     	; 0x956 <__addsf3x+0x9c>
     944:	87 95       	ror	r24
     946:	77 95       	ror	r23
     948:	67 95       	ror	r22
     94a:	b7 95       	ror	r27
     94c:	f7 95       	ror	r31
     94e:	9e 3f       	cpi	r25, 0xFE	; 254
     950:	08 f0       	brcs	.+2      	; 0x954 <__addsf3x+0x9a>
     952:	b0 cf       	rjmp	.-160    	; 0x8b4 <__addsf3+0x28>
     954:	93 95       	inc	r25
     956:	88 0f       	add	r24, r24
     958:	08 f0       	brcs	.+2      	; 0x95c <__addsf3x+0xa2>
     95a:	99 27       	eor	r25, r25
     95c:	ee 0f       	add	r30, r30
     95e:	97 95       	ror	r25
     960:	87 95       	ror	r24
     962:	08 95       	ret

00000964 <__fixsfsi>:
     964:	0e 94 b9 04 	call	0x972	; 0x972 <__fixunssfsi>
     968:	68 94       	set
     96a:	b1 11       	cpse	r27, r1
     96c:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_szero>
     970:	08 95       	ret

00000972 <__fixunssfsi>:
     972:	0e 94 55 05 	call	0xaaa	; 0xaaa <__fp_splitA>
     976:	88 f0       	brcs	.+34     	; 0x99a <__fixunssfsi+0x28>
     978:	9f 57       	subi	r25, 0x7F	; 127
     97a:	98 f0       	brcs	.+38     	; 0x9a2 <__fixunssfsi+0x30>
     97c:	b9 2f       	mov	r27, r25
     97e:	99 27       	eor	r25, r25
     980:	b7 51       	subi	r27, 0x17	; 23
     982:	b0 f0       	brcs	.+44     	; 0x9b0 <__fixunssfsi+0x3e>
     984:	e1 f0       	breq	.+56     	; 0x9be <__fixunssfsi+0x4c>
     986:	66 0f       	add	r22, r22
     988:	77 1f       	adc	r23, r23
     98a:	88 1f       	adc	r24, r24
     98c:	99 1f       	adc	r25, r25
     98e:	1a f0       	brmi	.+6      	; 0x996 <__fixunssfsi+0x24>
     990:	ba 95       	dec	r27
     992:	c9 f7       	brne	.-14     	; 0x986 <__fixunssfsi+0x14>
     994:	14 c0       	rjmp	.+40     	; 0x9be <__fixunssfsi+0x4c>
     996:	b1 30       	cpi	r27, 0x01	; 1
     998:	91 f0       	breq	.+36     	; 0x9be <__fixunssfsi+0x4c>
     99a:	0e 94 6f 05 	call	0xade	; 0xade <__fp_zero>
     99e:	b1 e0       	ldi	r27, 0x01	; 1
     9a0:	08 95       	ret
     9a2:	0c 94 6f 05 	jmp	0xade	; 0xade <__fp_zero>
     9a6:	67 2f       	mov	r22, r23
     9a8:	78 2f       	mov	r23, r24
     9aa:	88 27       	eor	r24, r24
     9ac:	b8 5f       	subi	r27, 0xF8	; 248
     9ae:	39 f0       	breq	.+14     	; 0x9be <__fixunssfsi+0x4c>
     9b0:	b9 3f       	cpi	r27, 0xF9	; 249
     9b2:	cc f3       	brlt	.-14     	; 0x9a6 <__fixunssfsi+0x34>
     9b4:	86 95       	lsr	r24
     9b6:	77 95       	ror	r23
     9b8:	67 95       	ror	r22
     9ba:	b3 95       	inc	r27
     9bc:	d9 f7       	brne	.-10     	; 0x9b4 <__fixunssfsi+0x42>
     9be:	3e f4       	brtc	.+14     	; 0x9ce <__fixunssfsi+0x5c>
     9c0:	90 95       	com	r25
     9c2:	80 95       	com	r24
     9c4:	70 95       	com	r23
     9c6:	61 95       	neg	r22
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	8f 4f       	sbci	r24, 0xFF	; 255
     9cc:	9f 4f       	sbci	r25, 0xFF	; 255
     9ce:	08 95       	ret

000009d0 <__floatunsisf>:
     9d0:	e8 94       	clt
     9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <__floatsisf+0x12>

000009d4 <__floatsisf>:
     9d4:	97 fb       	bst	r25, 7
     9d6:	3e f4       	brtc	.+14     	; 0x9e6 <__floatsisf+0x12>
     9d8:	90 95       	com	r25
     9da:	80 95       	com	r24
     9dc:	70 95       	com	r23
     9de:	61 95       	neg	r22
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	8f 4f       	sbci	r24, 0xFF	; 255
     9e4:	9f 4f       	sbci	r25, 0xFF	; 255
     9e6:	99 23       	and	r25, r25
     9e8:	a9 f0       	breq	.+42     	; 0xa14 <__floatsisf+0x40>
     9ea:	f9 2f       	mov	r31, r25
     9ec:	96 e9       	ldi	r25, 0x96	; 150
     9ee:	bb 27       	eor	r27, r27
     9f0:	93 95       	inc	r25
     9f2:	f6 95       	lsr	r31
     9f4:	87 95       	ror	r24
     9f6:	77 95       	ror	r23
     9f8:	67 95       	ror	r22
     9fa:	b7 95       	ror	r27
     9fc:	f1 11       	cpse	r31, r1
     9fe:	f8 cf       	rjmp	.-16     	; 0x9f0 <__floatsisf+0x1c>
     a00:	fa f4       	brpl	.+62     	; 0xa40 <__floatsisf+0x6c>
     a02:	bb 0f       	add	r27, r27
     a04:	11 f4       	brne	.+4      	; 0xa0a <__floatsisf+0x36>
     a06:	60 ff       	sbrs	r22, 0
     a08:	1b c0       	rjmp	.+54     	; 0xa40 <__floatsisf+0x6c>
     a0a:	6f 5f       	subi	r22, 0xFF	; 255
     a0c:	7f 4f       	sbci	r23, 0xFF	; 255
     a0e:	8f 4f       	sbci	r24, 0xFF	; 255
     a10:	9f 4f       	sbci	r25, 0xFF	; 255
     a12:	16 c0       	rjmp	.+44     	; 0xa40 <__floatsisf+0x6c>
     a14:	88 23       	and	r24, r24
     a16:	11 f0       	breq	.+4      	; 0xa1c <__floatsisf+0x48>
     a18:	96 e9       	ldi	r25, 0x96	; 150
     a1a:	11 c0       	rjmp	.+34     	; 0xa3e <__floatsisf+0x6a>
     a1c:	77 23       	and	r23, r23
     a1e:	21 f0       	breq	.+8      	; 0xa28 <__floatsisf+0x54>
     a20:	9e e8       	ldi	r25, 0x8E	; 142
     a22:	87 2f       	mov	r24, r23
     a24:	76 2f       	mov	r23, r22
     a26:	05 c0       	rjmp	.+10     	; 0xa32 <__floatsisf+0x5e>
     a28:	66 23       	and	r22, r22
     a2a:	71 f0       	breq	.+28     	; 0xa48 <__floatsisf+0x74>
     a2c:	96 e8       	ldi	r25, 0x86	; 134
     a2e:	86 2f       	mov	r24, r22
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	2a f0       	brmi	.+10     	; 0xa40 <__floatsisf+0x6c>
     a36:	9a 95       	dec	r25
     a38:	66 0f       	add	r22, r22
     a3a:	77 1f       	adc	r23, r23
     a3c:	88 1f       	adc	r24, r24
     a3e:	da f7       	brpl	.-10     	; 0xa36 <__floatsisf+0x62>
     a40:	88 0f       	add	r24, r24
     a42:	96 95       	lsr	r25
     a44:	87 95       	ror	r24
     a46:	97 f9       	bld	r25, 7
     a48:	08 95       	ret

00000a4a <__fp_inf>:
     a4a:	97 f9       	bld	r25, 7
     a4c:	9f 67       	ori	r25, 0x7F	; 127
     a4e:	80 e8       	ldi	r24, 0x80	; 128
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	08 95       	ret

00000a56 <__fp_nan>:
     a56:	9f ef       	ldi	r25, 0xFF	; 255
     a58:	80 ec       	ldi	r24, 0xC0	; 192
     a5a:	08 95       	ret

00000a5c <__fp_pscA>:
     a5c:	00 24       	eor	r0, r0
     a5e:	0a 94       	dec	r0
     a60:	16 16       	cp	r1, r22
     a62:	17 06       	cpc	r1, r23
     a64:	18 06       	cpc	r1, r24
     a66:	09 06       	cpc	r0, r25
     a68:	08 95       	ret

00000a6a <__fp_pscB>:
     a6a:	00 24       	eor	r0, r0
     a6c:	0a 94       	dec	r0
     a6e:	12 16       	cp	r1, r18
     a70:	13 06       	cpc	r1, r19
     a72:	14 06       	cpc	r1, r20
     a74:	05 06       	cpc	r0, r21
     a76:	08 95       	ret

00000a78 <__fp_round>:
     a78:	09 2e       	mov	r0, r25
     a7a:	03 94       	inc	r0
     a7c:	00 0c       	add	r0, r0
     a7e:	11 f4       	brne	.+4      	; 0xa84 <__fp_round+0xc>
     a80:	88 23       	and	r24, r24
     a82:	52 f0       	brmi	.+20     	; 0xa98 <__fp_round+0x20>
     a84:	bb 0f       	add	r27, r27
     a86:	40 f4       	brcc	.+16     	; 0xa98 <__fp_round+0x20>
     a88:	bf 2b       	or	r27, r31
     a8a:	11 f4       	brne	.+4      	; 0xa90 <__fp_round+0x18>
     a8c:	60 ff       	sbrs	r22, 0
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__fp_round+0x20>
     a90:	6f 5f       	subi	r22, 0xFF	; 255
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	8f 4f       	sbci	r24, 0xFF	; 255
     a96:	9f 4f       	sbci	r25, 0xFF	; 255
     a98:	08 95       	ret

00000a9a <__fp_split3>:
     a9a:	57 fd       	sbrc	r21, 7
     a9c:	90 58       	subi	r25, 0x80	; 128
     a9e:	44 0f       	add	r20, r20
     aa0:	55 1f       	adc	r21, r21
     aa2:	59 f0       	breq	.+22     	; 0xaba <__fp_splitA+0x10>
     aa4:	5f 3f       	cpi	r21, 0xFF	; 255
     aa6:	71 f0       	breq	.+28     	; 0xac4 <__fp_splitA+0x1a>
     aa8:	47 95       	ror	r20

00000aaa <__fp_splitA>:
     aaa:	88 0f       	add	r24, r24
     aac:	97 fb       	bst	r25, 7
     aae:	99 1f       	adc	r25, r25
     ab0:	61 f0       	breq	.+24     	; 0xaca <__fp_splitA+0x20>
     ab2:	9f 3f       	cpi	r25, 0xFF	; 255
     ab4:	79 f0       	breq	.+30     	; 0xad4 <__fp_splitA+0x2a>
     ab6:	87 95       	ror	r24
     ab8:	08 95       	ret
     aba:	12 16       	cp	r1, r18
     abc:	13 06       	cpc	r1, r19
     abe:	14 06       	cpc	r1, r20
     ac0:	55 1f       	adc	r21, r21
     ac2:	f2 cf       	rjmp	.-28     	; 0xaa8 <__fp_split3+0xe>
     ac4:	46 95       	lsr	r20
     ac6:	f1 df       	rcall	.-30     	; 0xaaa <__fp_splitA>
     ac8:	08 c0       	rjmp	.+16     	; 0xada <__fp_splitA+0x30>
     aca:	16 16       	cp	r1, r22
     acc:	17 06       	cpc	r1, r23
     ace:	18 06       	cpc	r1, r24
     ad0:	99 1f       	adc	r25, r25
     ad2:	f1 cf       	rjmp	.-30     	; 0xab6 <__fp_splitA+0xc>
     ad4:	86 95       	lsr	r24
     ad6:	71 05       	cpc	r23, r1
     ad8:	61 05       	cpc	r22, r1
     ada:	08 94       	sec
     adc:	08 95       	ret

00000ade <__fp_zero>:
     ade:	e8 94       	clt

00000ae0 <__fp_szero>:
     ae0:	bb 27       	eor	r27, r27
     ae2:	66 27       	eor	r22, r22
     ae4:	77 27       	eor	r23, r23
     ae6:	cb 01       	movw	r24, r22
     ae8:	97 f9       	bld	r25, 7
     aea:	08 95       	ret

00000aec <__mulsf3>:
     aec:	0e 94 89 05 	call	0xb12	; 0xb12 <__mulsf3x>
     af0:	0c 94 3c 05 	jmp	0xa78	; 0xa78 <__fp_round>
     af4:	0e 94 2e 05 	call	0xa5c	; 0xa5c <__fp_pscA>
     af8:	38 f0       	brcs	.+14     	; 0xb08 <__mulsf3+0x1c>
     afa:	0e 94 35 05 	call	0xa6a	; 0xa6a <__fp_pscB>
     afe:	20 f0       	brcs	.+8      	; 0xb08 <__mulsf3+0x1c>
     b00:	95 23       	and	r25, r21
     b02:	11 f0       	breq	.+4      	; 0xb08 <__mulsf3+0x1c>
     b04:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__fp_inf>
     b08:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_nan>
     b0c:	11 24       	eor	r1, r1
     b0e:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_szero>

00000b12 <__mulsf3x>:
     b12:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__fp_split3>
     b16:	70 f3       	brcs	.-36     	; 0xaf4 <__mulsf3+0x8>

00000b18 <__mulsf3_pse>:
     b18:	95 9f       	mul	r25, r21
     b1a:	c1 f3       	breq	.-16     	; 0xb0c <__mulsf3+0x20>
     b1c:	95 0f       	add	r25, r21
     b1e:	50 e0       	ldi	r21, 0x00	; 0
     b20:	55 1f       	adc	r21, r21
     b22:	62 9f       	mul	r22, r18
     b24:	f0 01       	movw	r30, r0
     b26:	72 9f       	mul	r23, r18
     b28:	bb 27       	eor	r27, r27
     b2a:	f0 0d       	add	r31, r0
     b2c:	b1 1d       	adc	r27, r1
     b2e:	63 9f       	mul	r22, r19
     b30:	aa 27       	eor	r26, r26
     b32:	f0 0d       	add	r31, r0
     b34:	b1 1d       	adc	r27, r1
     b36:	aa 1f       	adc	r26, r26
     b38:	64 9f       	mul	r22, r20
     b3a:	66 27       	eor	r22, r22
     b3c:	b0 0d       	add	r27, r0
     b3e:	a1 1d       	adc	r26, r1
     b40:	66 1f       	adc	r22, r22
     b42:	82 9f       	mul	r24, r18
     b44:	22 27       	eor	r18, r18
     b46:	b0 0d       	add	r27, r0
     b48:	a1 1d       	adc	r26, r1
     b4a:	62 1f       	adc	r22, r18
     b4c:	73 9f       	mul	r23, r19
     b4e:	b0 0d       	add	r27, r0
     b50:	a1 1d       	adc	r26, r1
     b52:	62 1f       	adc	r22, r18
     b54:	83 9f       	mul	r24, r19
     b56:	a0 0d       	add	r26, r0
     b58:	61 1d       	adc	r22, r1
     b5a:	22 1f       	adc	r18, r18
     b5c:	74 9f       	mul	r23, r20
     b5e:	33 27       	eor	r19, r19
     b60:	a0 0d       	add	r26, r0
     b62:	61 1d       	adc	r22, r1
     b64:	23 1f       	adc	r18, r19
     b66:	84 9f       	mul	r24, r20
     b68:	60 0d       	add	r22, r0
     b6a:	21 1d       	adc	r18, r1
     b6c:	82 2f       	mov	r24, r18
     b6e:	76 2f       	mov	r23, r22
     b70:	6a 2f       	mov	r22, r26
     b72:	11 24       	eor	r1, r1
     b74:	9f 57       	subi	r25, 0x7F	; 127
     b76:	50 40       	sbci	r21, 0x00	; 0
     b78:	9a f0       	brmi	.+38     	; 0xba0 <__mulsf3_pse+0x88>
     b7a:	f1 f0       	breq	.+60     	; 0xbb8 <__mulsf3_pse+0xa0>
     b7c:	88 23       	and	r24, r24
     b7e:	4a f0       	brmi	.+18     	; 0xb92 <__mulsf3_pse+0x7a>
     b80:	ee 0f       	add	r30, r30
     b82:	ff 1f       	adc	r31, r31
     b84:	bb 1f       	adc	r27, r27
     b86:	66 1f       	adc	r22, r22
     b88:	77 1f       	adc	r23, r23
     b8a:	88 1f       	adc	r24, r24
     b8c:	91 50       	subi	r25, 0x01	; 1
     b8e:	50 40       	sbci	r21, 0x00	; 0
     b90:	a9 f7       	brne	.-22     	; 0xb7c <__mulsf3_pse+0x64>
     b92:	9e 3f       	cpi	r25, 0xFE	; 254
     b94:	51 05       	cpc	r21, r1
     b96:	80 f0       	brcs	.+32     	; 0xbb8 <__mulsf3_pse+0xa0>
     b98:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__fp_inf>
     b9c:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_szero>
     ba0:	5f 3f       	cpi	r21, 0xFF	; 255
     ba2:	e4 f3       	brlt	.-8      	; 0xb9c <__mulsf3_pse+0x84>
     ba4:	98 3e       	cpi	r25, 0xE8	; 232
     ba6:	d4 f3       	brlt	.-12     	; 0xb9c <__mulsf3_pse+0x84>
     ba8:	86 95       	lsr	r24
     baa:	77 95       	ror	r23
     bac:	67 95       	ror	r22
     bae:	b7 95       	ror	r27
     bb0:	f7 95       	ror	r31
     bb2:	e7 95       	ror	r30
     bb4:	9f 5f       	subi	r25, 0xFF	; 255
     bb6:	c1 f7       	brne	.-16     	; 0xba8 <__mulsf3_pse+0x90>
     bb8:	fe 2b       	or	r31, r30
     bba:	88 0f       	add	r24, r24
     bbc:	91 1d       	adc	r25, r1
     bbe:	96 95       	lsr	r25
     bc0:	87 95       	ror	r24
     bc2:	97 f9       	bld	r25, 7
     bc4:	08 95       	ret

00000bc6 <vfprintf>:
     bc6:	a0 e1       	ldi	r26, 0x10	; 16
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e9 ee       	ldi	r30, 0xE9	; 233
     bcc:	f5 e0       	ldi	r31, 0x05	; 5
     bce:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <__prologue_saves__>
     bd2:	7c 01       	movw	r14, r24
     bd4:	1b 01       	movw	r2, r22
     bd6:	6a 01       	movw	r12, r20
     bd8:	fc 01       	movw	r30, r24
     bda:	17 82       	std	Z+7, r1	; 0x07
     bdc:	16 82       	std	Z+6, r1	; 0x06
     bde:	83 81       	ldd	r24, Z+3	; 0x03
     be0:	81 ff       	sbrs	r24, 1
     be2:	44 c3       	rjmp	.+1672   	; 0x126c <vfprintf+0x6a6>
     be4:	9e 01       	movw	r18, r28
     be6:	2f 5f       	subi	r18, 0xFF	; 255
     be8:	3f 4f       	sbci	r19, 0xFF	; 255
     bea:	39 01       	movw	r6, r18
     bec:	f7 01       	movw	r30, r14
     bee:	93 81       	ldd	r25, Z+3	; 0x03
     bf0:	f1 01       	movw	r30, r2
     bf2:	93 fd       	sbrc	r25, 3
     bf4:	85 91       	lpm	r24, Z+
     bf6:	93 ff       	sbrs	r25, 3
     bf8:	81 91       	ld	r24, Z+
     bfa:	1f 01       	movw	r2, r30
     bfc:	88 23       	and	r24, r24
     bfe:	09 f4       	brne	.+2      	; 0xc02 <vfprintf+0x3c>
     c00:	31 c3       	rjmp	.+1634   	; 0x1264 <vfprintf+0x69e>
     c02:	85 32       	cpi	r24, 0x25	; 37
     c04:	39 f4       	brne	.+14     	; 0xc14 <vfprintf+0x4e>
     c06:	93 fd       	sbrc	r25, 3
     c08:	85 91       	lpm	r24, Z+
     c0a:	93 ff       	sbrs	r25, 3
     c0c:	81 91       	ld	r24, Z+
     c0e:	1f 01       	movw	r2, r30
     c10:	85 32       	cpi	r24, 0x25	; 37
     c12:	39 f4       	brne	.+14     	; 0xc22 <vfprintf+0x5c>
     c14:	b7 01       	movw	r22, r14
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     c1c:	56 01       	movw	r10, r12
     c1e:	65 01       	movw	r12, r10
     c20:	e5 cf       	rjmp	.-54     	; 0xbec <vfprintf+0x26>
     c22:	10 e0       	ldi	r17, 0x00	; 0
     c24:	51 2c       	mov	r5, r1
     c26:	91 2c       	mov	r9, r1
     c28:	ff e1       	ldi	r31, 0x1F	; 31
     c2a:	f9 15       	cp	r31, r9
     c2c:	d8 f0       	brcs	.+54     	; 0xc64 <vfprintf+0x9e>
     c2e:	8b 32       	cpi	r24, 0x2B	; 43
     c30:	79 f0       	breq	.+30     	; 0xc50 <vfprintf+0x8a>
     c32:	38 f4       	brcc	.+14     	; 0xc42 <vfprintf+0x7c>
     c34:	80 32       	cpi	r24, 0x20	; 32
     c36:	79 f0       	breq	.+30     	; 0xc56 <vfprintf+0x90>
     c38:	83 32       	cpi	r24, 0x23	; 35
     c3a:	a1 f4       	brne	.+40     	; 0xc64 <vfprintf+0x9e>
     c3c:	f9 2d       	mov	r31, r9
     c3e:	f0 61       	ori	r31, 0x10	; 16
     c40:	2e c0       	rjmp	.+92     	; 0xc9e <vfprintf+0xd8>
     c42:	8d 32       	cpi	r24, 0x2D	; 45
     c44:	61 f0       	breq	.+24     	; 0xc5e <vfprintf+0x98>
     c46:	80 33       	cpi	r24, 0x30	; 48
     c48:	69 f4       	brne	.+26     	; 0xc64 <vfprintf+0x9e>
     c4a:	29 2d       	mov	r18, r9
     c4c:	21 60       	ori	r18, 0x01	; 1
     c4e:	2d c0       	rjmp	.+90     	; 0xcaa <vfprintf+0xe4>
     c50:	39 2d       	mov	r19, r9
     c52:	32 60       	ori	r19, 0x02	; 2
     c54:	93 2e       	mov	r9, r19
     c56:	89 2d       	mov	r24, r9
     c58:	84 60       	ori	r24, 0x04	; 4
     c5a:	98 2e       	mov	r9, r24
     c5c:	2a c0       	rjmp	.+84     	; 0xcb2 <vfprintf+0xec>
     c5e:	e9 2d       	mov	r30, r9
     c60:	e8 60       	ori	r30, 0x08	; 8
     c62:	15 c0       	rjmp	.+42     	; 0xc8e <vfprintf+0xc8>
     c64:	97 fc       	sbrc	r9, 7
     c66:	2d c0       	rjmp	.+90     	; 0xcc2 <vfprintf+0xfc>
     c68:	20 ed       	ldi	r18, 0xD0	; 208
     c6a:	28 0f       	add	r18, r24
     c6c:	2a 30       	cpi	r18, 0x0A	; 10
     c6e:	88 f4       	brcc	.+34     	; 0xc92 <vfprintf+0xcc>
     c70:	96 fe       	sbrs	r9, 6
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0xba>
     c74:	3a e0       	ldi	r19, 0x0A	; 10
     c76:	13 9f       	mul	r17, r19
     c78:	20 0d       	add	r18, r0
     c7a:	11 24       	eor	r1, r1
     c7c:	12 2f       	mov	r17, r18
     c7e:	19 c0       	rjmp	.+50     	; 0xcb2 <vfprintf+0xec>
     c80:	8a e0       	ldi	r24, 0x0A	; 10
     c82:	58 9e       	mul	r5, r24
     c84:	20 0d       	add	r18, r0
     c86:	11 24       	eor	r1, r1
     c88:	52 2e       	mov	r5, r18
     c8a:	e9 2d       	mov	r30, r9
     c8c:	e0 62       	ori	r30, 0x20	; 32
     c8e:	9e 2e       	mov	r9, r30
     c90:	10 c0       	rjmp	.+32     	; 0xcb2 <vfprintf+0xec>
     c92:	8e 32       	cpi	r24, 0x2E	; 46
     c94:	31 f4       	brne	.+12     	; 0xca2 <vfprintf+0xdc>
     c96:	96 fc       	sbrc	r9, 6
     c98:	e5 c2       	rjmp	.+1482   	; 0x1264 <vfprintf+0x69e>
     c9a:	f9 2d       	mov	r31, r9
     c9c:	f0 64       	ori	r31, 0x40	; 64
     c9e:	9f 2e       	mov	r9, r31
     ca0:	08 c0       	rjmp	.+16     	; 0xcb2 <vfprintf+0xec>
     ca2:	8c 36       	cpi	r24, 0x6C	; 108
     ca4:	21 f4       	brne	.+8      	; 0xcae <vfprintf+0xe8>
     ca6:	29 2d       	mov	r18, r9
     ca8:	20 68       	ori	r18, 0x80	; 128
     caa:	92 2e       	mov	r9, r18
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0xec>
     cae:	88 36       	cpi	r24, 0x68	; 104
     cb0:	41 f4       	brne	.+16     	; 0xcc2 <vfprintf+0xfc>
     cb2:	f1 01       	movw	r30, r2
     cb4:	93 fd       	sbrc	r25, 3
     cb6:	85 91       	lpm	r24, Z+
     cb8:	93 ff       	sbrs	r25, 3
     cba:	81 91       	ld	r24, Z+
     cbc:	1f 01       	movw	r2, r30
     cbe:	81 11       	cpse	r24, r1
     cc0:	b3 cf       	rjmp	.-154    	; 0xc28 <vfprintf+0x62>
     cc2:	9b eb       	ldi	r25, 0xBB	; 187
     cc4:	98 0f       	add	r25, r24
     cc6:	93 30       	cpi	r25, 0x03	; 3
     cc8:	20 f4       	brcc	.+8      	; 0xcd2 <vfprintf+0x10c>
     cca:	99 2d       	mov	r25, r9
     ccc:	90 61       	ori	r25, 0x10	; 16
     cce:	80 5e       	subi	r24, 0xE0	; 224
     cd0:	07 c0       	rjmp	.+14     	; 0xce0 <vfprintf+0x11a>
     cd2:	9b e9       	ldi	r25, 0x9B	; 155
     cd4:	98 0f       	add	r25, r24
     cd6:	93 30       	cpi	r25, 0x03	; 3
     cd8:	08 f0       	brcs	.+2      	; 0xcdc <vfprintf+0x116>
     cda:	66 c1       	rjmp	.+716    	; 0xfa8 <vfprintf+0x3e2>
     cdc:	99 2d       	mov	r25, r9
     cde:	9f 7e       	andi	r25, 0xEF	; 239
     ce0:	96 ff       	sbrs	r25, 6
     ce2:	16 e0       	ldi	r17, 0x06	; 6
     ce4:	9f 73       	andi	r25, 0x3F	; 63
     ce6:	99 2e       	mov	r9, r25
     ce8:	85 36       	cpi	r24, 0x65	; 101
     cea:	19 f4       	brne	.+6      	; 0xcf2 <vfprintf+0x12c>
     cec:	90 64       	ori	r25, 0x40	; 64
     cee:	99 2e       	mov	r9, r25
     cf0:	08 c0       	rjmp	.+16     	; 0xd02 <vfprintf+0x13c>
     cf2:	86 36       	cpi	r24, 0x66	; 102
     cf4:	21 f4       	brne	.+8      	; 0xcfe <vfprintf+0x138>
     cf6:	39 2f       	mov	r19, r25
     cf8:	30 68       	ori	r19, 0x80	; 128
     cfa:	93 2e       	mov	r9, r19
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x13c>
     cfe:	11 11       	cpse	r17, r1
     d00:	11 50       	subi	r17, 0x01	; 1
     d02:	97 fe       	sbrs	r9, 7
     d04:	07 c0       	rjmp	.+14     	; 0xd14 <vfprintf+0x14e>
     d06:	1c 33       	cpi	r17, 0x3C	; 60
     d08:	50 f4       	brcc	.+20     	; 0xd1e <vfprintf+0x158>
     d0a:	44 24       	eor	r4, r4
     d0c:	43 94       	inc	r4
     d0e:	41 0e       	add	r4, r17
     d10:	27 e0       	ldi	r18, 0x07	; 7
     d12:	0b c0       	rjmp	.+22     	; 0xd2a <vfprintf+0x164>
     d14:	18 30       	cpi	r17, 0x08	; 8
     d16:	38 f0       	brcs	.+14     	; 0xd26 <vfprintf+0x160>
     d18:	27 e0       	ldi	r18, 0x07	; 7
     d1a:	17 e0       	ldi	r17, 0x07	; 7
     d1c:	05 c0       	rjmp	.+10     	; 0xd28 <vfprintf+0x162>
     d1e:	27 e0       	ldi	r18, 0x07	; 7
     d20:	9c e3       	ldi	r25, 0x3C	; 60
     d22:	49 2e       	mov	r4, r25
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0x164>
     d26:	21 2f       	mov	r18, r17
     d28:	41 2c       	mov	r4, r1
     d2a:	56 01       	movw	r10, r12
     d2c:	84 e0       	ldi	r24, 0x04	; 4
     d2e:	a8 0e       	add	r10, r24
     d30:	b1 1c       	adc	r11, r1
     d32:	f6 01       	movw	r30, r12
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	04 2d       	mov	r16, r4
     d3e:	a3 01       	movw	r20, r6
     d40:	0e 94 b9 09 	call	0x1372	; 0x1372 <__ftoa_engine>
     d44:	6c 01       	movw	r12, r24
     d46:	f9 81       	ldd	r31, Y+1	; 0x01
     d48:	fc 87       	std	Y+12, r31	; 0x0c
     d4a:	f0 ff       	sbrs	r31, 0
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <vfprintf+0x18c>
     d4e:	f3 ff       	sbrs	r31, 3
     d50:	06 c0       	rjmp	.+12     	; 0xd5e <vfprintf+0x198>
     d52:	91 fc       	sbrc	r9, 1
     d54:	06 c0       	rjmp	.+12     	; 0xd62 <vfprintf+0x19c>
     d56:	92 fe       	sbrs	r9, 2
     d58:	06 c0       	rjmp	.+12     	; 0xd66 <vfprintf+0x1a0>
     d5a:	00 e2       	ldi	r16, 0x20	; 32
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <vfprintf+0x1a2>
     d5e:	0d e2       	ldi	r16, 0x2D	; 45
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <vfprintf+0x1a2>
     d62:	0b e2       	ldi	r16, 0x2B	; 43
     d64:	01 c0       	rjmp	.+2      	; 0xd68 <vfprintf+0x1a2>
     d66:	00 e0       	ldi	r16, 0x00	; 0
     d68:	8c 85       	ldd	r24, Y+12	; 0x0c
     d6a:	8c 70       	andi	r24, 0x0C	; 12
     d6c:	19 f0       	breq	.+6      	; 0xd74 <vfprintf+0x1ae>
     d6e:	01 11       	cpse	r16, r1
     d70:	5a c2       	rjmp	.+1204   	; 0x1226 <vfprintf+0x660>
     d72:	9b c2       	rjmp	.+1334   	; 0x12aa <vfprintf+0x6e4>
     d74:	97 fe       	sbrs	r9, 7
     d76:	10 c0       	rjmp	.+32     	; 0xd98 <vfprintf+0x1d2>
     d78:	4c 0c       	add	r4, r12
     d7a:	fc 85       	ldd	r31, Y+12	; 0x0c
     d7c:	f4 ff       	sbrs	r31, 4
     d7e:	04 c0       	rjmp	.+8      	; 0xd88 <vfprintf+0x1c2>
     d80:	8a 81       	ldd	r24, Y+2	; 0x02
     d82:	81 33       	cpi	r24, 0x31	; 49
     d84:	09 f4       	brne	.+2      	; 0xd88 <vfprintf+0x1c2>
     d86:	4a 94       	dec	r4
     d88:	14 14       	cp	r1, r4
     d8a:	74 f5       	brge	.+92     	; 0xde8 <vfprintf+0x222>
     d8c:	28 e0       	ldi	r18, 0x08	; 8
     d8e:	24 15       	cp	r18, r4
     d90:	78 f5       	brcc	.+94     	; 0xdf0 <vfprintf+0x22a>
     d92:	88 e0       	ldi	r24, 0x08	; 8
     d94:	48 2e       	mov	r4, r24
     d96:	2c c0       	rjmp	.+88     	; 0xdf0 <vfprintf+0x22a>
     d98:	96 fc       	sbrc	r9, 6
     d9a:	2a c0       	rjmp	.+84     	; 0xdf0 <vfprintf+0x22a>
     d9c:	81 2f       	mov	r24, r17
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	8c 15       	cp	r24, r12
     da2:	9d 05       	cpc	r25, r13
     da4:	9c f0       	brlt	.+38     	; 0xdcc <vfprintf+0x206>
     da6:	3c ef       	ldi	r19, 0xFC	; 252
     da8:	c3 16       	cp	r12, r19
     daa:	3f ef       	ldi	r19, 0xFF	; 255
     dac:	d3 06       	cpc	r13, r19
     dae:	74 f0       	brlt	.+28     	; 0xdcc <vfprintf+0x206>
     db0:	89 2d       	mov	r24, r9
     db2:	80 68       	ori	r24, 0x80	; 128
     db4:	98 2e       	mov	r9, r24
     db6:	0a c0       	rjmp	.+20     	; 0xdcc <vfprintf+0x206>
     db8:	e2 e0       	ldi	r30, 0x02	; 2
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	ec 0f       	add	r30, r28
     dbe:	fd 1f       	adc	r31, r29
     dc0:	e1 0f       	add	r30, r17
     dc2:	f1 1d       	adc	r31, r1
     dc4:	80 81       	ld	r24, Z
     dc6:	80 33       	cpi	r24, 0x30	; 48
     dc8:	19 f4       	brne	.+6      	; 0xdd0 <vfprintf+0x20a>
     dca:	11 50       	subi	r17, 0x01	; 1
     dcc:	11 11       	cpse	r17, r1
     dce:	f4 cf       	rjmp	.-24     	; 0xdb8 <vfprintf+0x1f2>
     dd0:	97 fe       	sbrs	r9, 7
     dd2:	0e c0       	rjmp	.+28     	; 0xdf0 <vfprintf+0x22a>
     dd4:	44 24       	eor	r4, r4
     dd6:	43 94       	inc	r4
     dd8:	41 0e       	add	r4, r17
     dda:	81 2f       	mov	r24, r17
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	c8 16       	cp	r12, r24
     de0:	d9 06       	cpc	r13, r25
     de2:	2c f4       	brge	.+10     	; 0xdee <vfprintf+0x228>
     de4:	1c 19       	sub	r17, r12
     de6:	04 c0       	rjmp	.+8      	; 0xdf0 <vfprintf+0x22a>
     de8:	44 24       	eor	r4, r4
     dea:	43 94       	inc	r4
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <vfprintf+0x22a>
     dee:	10 e0       	ldi	r17, 0x00	; 0
     df0:	97 fe       	sbrs	r9, 7
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <vfprintf+0x23a>
     df4:	1c 14       	cp	r1, r12
     df6:	1d 04       	cpc	r1, r13
     df8:	34 f4       	brge	.+12     	; 0xe06 <vfprintf+0x240>
     dfa:	c6 01       	movw	r24, r12
     dfc:	01 96       	adiw	r24, 0x01	; 1
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <vfprintf+0x244>
     e00:	85 e0       	ldi	r24, 0x05	; 5
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <vfprintf+0x244>
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	01 11       	cpse	r16, r1
     e0c:	01 96       	adiw	r24, 0x01	; 1
     e0e:	11 23       	and	r17, r17
     e10:	31 f0       	breq	.+12     	; 0xe1e <vfprintf+0x258>
     e12:	21 2f       	mov	r18, r17
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	2f 5f       	subi	r18, 0xFF	; 255
     e18:	3f 4f       	sbci	r19, 0xFF	; 255
     e1a:	82 0f       	add	r24, r18
     e1c:	93 1f       	adc	r25, r19
     e1e:	25 2d       	mov	r18, r5
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	82 17       	cp	r24, r18
     e24:	93 07       	cpc	r25, r19
     e26:	14 f4       	brge	.+4      	; 0xe2c <vfprintf+0x266>
     e28:	58 1a       	sub	r5, r24
     e2a:	01 c0       	rjmp	.+2      	; 0xe2e <vfprintf+0x268>
     e2c:	51 2c       	mov	r5, r1
     e2e:	89 2d       	mov	r24, r9
     e30:	89 70       	andi	r24, 0x09	; 9
     e32:	49 f4       	brne	.+18     	; 0xe46 <vfprintf+0x280>
     e34:	55 20       	and	r5, r5
     e36:	39 f0       	breq	.+14     	; 0xe46 <vfprintf+0x280>
     e38:	b7 01       	movw	r22, r14
     e3a:	80 e2       	ldi	r24, 0x20	; 32
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     e42:	5a 94       	dec	r5
     e44:	f7 cf       	rjmp	.-18     	; 0xe34 <vfprintf+0x26e>
     e46:	00 23       	and	r16, r16
     e48:	29 f0       	breq	.+10     	; 0xe54 <vfprintf+0x28e>
     e4a:	b7 01       	movw	r22, r14
     e4c:	80 2f       	mov	r24, r16
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     e54:	93 fc       	sbrc	r9, 3
     e56:	09 c0       	rjmp	.+18     	; 0xe6a <vfprintf+0x2a4>
     e58:	55 20       	and	r5, r5
     e5a:	39 f0       	breq	.+14     	; 0xe6a <vfprintf+0x2a4>
     e5c:	b7 01       	movw	r22, r14
     e5e:	80 e3       	ldi	r24, 0x30	; 48
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     e66:	5a 94       	dec	r5
     e68:	f7 cf       	rjmp	.-18     	; 0xe58 <vfprintf+0x292>
     e6a:	97 fe       	sbrs	r9, 7
     e6c:	4c c0       	rjmp	.+152    	; 0xf06 <vfprintf+0x340>
     e6e:	46 01       	movw	r8, r12
     e70:	d7 fe       	sbrs	r13, 7
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x2b2>
     e74:	81 2c       	mov	r8, r1
     e76:	91 2c       	mov	r9, r1
     e78:	c6 01       	movw	r24, r12
     e7a:	88 19       	sub	r24, r8
     e7c:	99 09       	sbc	r25, r9
     e7e:	f3 01       	movw	r30, r6
     e80:	e8 0f       	add	r30, r24
     e82:	f9 1f       	adc	r31, r25
     e84:	fe 87       	std	Y+14, r31	; 0x0e
     e86:	ed 87       	std	Y+13, r30	; 0x0d
     e88:	96 01       	movw	r18, r12
     e8a:	24 19       	sub	r18, r4
     e8c:	31 09       	sbc	r19, r1
     e8e:	38 8b       	std	Y+16, r19	; 0x10
     e90:	2f 87       	std	Y+15, r18	; 0x0f
     e92:	01 2f       	mov	r16, r17
     e94:	10 e0       	ldi	r17, 0x00	; 0
     e96:	11 95       	neg	r17
     e98:	01 95       	neg	r16
     e9a:	11 09       	sbc	r17, r1
     e9c:	3f ef       	ldi	r19, 0xFF	; 255
     e9e:	83 16       	cp	r8, r19
     ea0:	93 06       	cpc	r9, r19
     ea2:	29 f4       	brne	.+10     	; 0xeae <vfprintf+0x2e8>
     ea4:	b7 01       	movw	r22, r14
     ea6:	8e e2       	ldi	r24, 0x2E	; 46
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     eae:	c8 14       	cp	r12, r8
     eb0:	d9 04       	cpc	r13, r9
     eb2:	4c f0       	brlt	.+18     	; 0xec6 <vfprintf+0x300>
     eb4:	8f 85       	ldd	r24, Y+15	; 0x0f
     eb6:	98 89       	ldd	r25, Y+16	; 0x10
     eb8:	88 15       	cp	r24, r8
     eba:	99 05       	cpc	r25, r9
     ebc:	24 f4       	brge	.+8      	; 0xec6 <vfprintf+0x300>
     ebe:	ed 85       	ldd	r30, Y+13	; 0x0d
     ec0:	fe 85       	ldd	r31, Y+14	; 0x0e
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	01 c0       	rjmp	.+2      	; 0xec8 <vfprintf+0x302>
     ec6:	80 e3       	ldi	r24, 0x30	; 48
     ec8:	f1 e0       	ldi	r31, 0x01	; 1
     eca:	8f 1a       	sub	r8, r31
     ecc:	91 08       	sbc	r9, r1
     ece:	2d 85       	ldd	r18, Y+13	; 0x0d
     ed0:	3e 85       	ldd	r19, Y+14	; 0x0e
     ed2:	2f 5f       	subi	r18, 0xFF	; 255
     ed4:	3f 4f       	sbci	r19, 0xFF	; 255
     ed6:	3e 87       	std	Y+14, r19	; 0x0e
     ed8:	2d 87       	std	Y+13, r18	; 0x0d
     eda:	80 16       	cp	r8, r16
     edc:	91 06       	cpc	r9, r17
     ede:	2c f0       	brlt	.+10     	; 0xeea <vfprintf+0x324>
     ee0:	b7 01       	movw	r22, r14
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     ee8:	d9 cf       	rjmp	.-78     	; 0xe9c <vfprintf+0x2d6>
     eea:	c8 14       	cp	r12, r8
     eec:	d9 04       	cpc	r13, r9
     eee:	41 f4       	brne	.+16     	; 0xf00 <vfprintf+0x33a>
     ef0:	9a 81       	ldd	r25, Y+2	; 0x02
     ef2:	96 33       	cpi	r25, 0x36	; 54
     ef4:	20 f4       	brcc	.+8      	; 0xefe <vfprintf+0x338>
     ef6:	95 33       	cpi	r25, 0x35	; 53
     ef8:	19 f4       	brne	.+6      	; 0xf00 <vfprintf+0x33a>
     efa:	3c 85       	ldd	r19, Y+12	; 0x0c
     efc:	34 ff       	sbrs	r19, 4
     efe:	81 e3       	ldi	r24, 0x31	; 49
     f00:	b7 01       	movw	r22, r14
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	4e c0       	rjmp	.+156    	; 0xfa2 <vfprintf+0x3dc>
     f06:	8a 81       	ldd	r24, Y+2	; 0x02
     f08:	81 33       	cpi	r24, 0x31	; 49
     f0a:	19 f0       	breq	.+6      	; 0xf12 <vfprintf+0x34c>
     f0c:	9c 85       	ldd	r25, Y+12	; 0x0c
     f0e:	9f 7e       	andi	r25, 0xEF	; 239
     f10:	9c 87       	std	Y+12, r25	; 0x0c
     f12:	b7 01       	movw	r22, r14
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f1a:	11 11       	cpse	r17, r1
     f1c:	05 c0       	rjmp	.+10     	; 0xf28 <vfprintf+0x362>
     f1e:	94 fc       	sbrc	r9, 4
     f20:	18 c0       	rjmp	.+48     	; 0xf52 <vfprintf+0x38c>
     f22:	85 e6       	ldi	r24, 0x65	; 101
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	17 c0       	rjmp	.+46     	; 0xf56 <vfprintf+0x390>
     f28:	b7 01       	movw	r22, r14
     f2a:	8e e2       	ldi	r24, 0x2E	; 46
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f32:	1e 5f       	subi	r17, 0xFE	; 254
     f34:	82 e0       	ldi	r24, 0x02	; 2
     f36:	01 e0       	ldi	r16, 0x01	; 1
     f38:	08 0f       	add	r16, r24
     f3a:	f3 01       	movw	r30, r6
     f3c:	e8 0f       	add	r30, r24
     f3e:	f1 1d       	adc	r31, r1
     f40:	80 81       	ld	r24, Z
     f42:	b7 01       	movw	r22, r14
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f4a:	80 2f       	mov	r24, r16
     f4c:	01 13       	cpse	r16, r17
     f4e:	f3 cf       	rjmp	.-26     	; 0xf36 <vfprintf+0x370>
     f50:	e6 cf       	rjmp	.-52     	; 0xf1e <vfprintf+0x358>
     f52:	85 e4       	ldi	r24, 0x45	; 69
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	b7 01       	movw	r22, r14
     f58:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f5c:	d7 fc       	sbrc	r13, 7
     f5e:	06 c0       	rjmp	.+12     	; 0xf6c <vfprintf+0x3a6>
     f60:	c1 14       	cp	r12, r1
     f62:	d1 04       	cpc	r13, r1
     f64:	41 f4       	brne	.+16     	; 0xf76 <vfprintf+0x3b0>
     f66:	ec 85       	ldd	r30, Y+12	; 0x0c
     f68:	e4 ff       	sbrs	r30, 4
     f6a:	05 c0       	rjmp	.+10     	; 0xf76 <vfprintf+0x3b0>
     f6c:	d1 94       	neg	r13
     f6e:	c1 94       	neg	r12
     f70:	d1 08       	sbc	r13, r1
     f72:	8d e2       	ldi	r24, 0x2D	; 45
     f74:	01 c0       	rjmp	.+2      	; 0xf78 <vfprintf+0x3b2>
     f76:	8b e2       	ldi	r24, 0x2B	; 43
     f78:	b7 01       	movw	r22, r14
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f80:	80 e3       	ldi	r24, 0x30	; 48
     f82:	2a e0       	ldi	r18, 0x0A	; 10
     f84:	c2 16       	cp	r12, r18
     f86:	d1 04       	cpc	r13, r1
     f88:	2c f0       	brlt	.+10     	; 0xf94 <vfprintf+0x3ce>
     f8a:	8f 5f       	subi	r24, 0xFF	; 255
     f8c:	fa e0       	ldi	r31, 0x0A	; 10
     f8e:	cf 1a       	sub	r12, r31
     f90:	d1 08       	sbc	r13, r1
     f92:	f7 cf       	rjmp	.-18     	; 0xf82 <vfprintf+0x3bc>
     f94:	b7 01       	movw	r22, r14
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     f9c:	b7 01       	movw	r22, r14
     f9e:	c6 01       	movw	r24, r12
     fa0:	c0 96       	adiw	r24, 0x30	; 48
     fa2:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
     fa6:	54 c1       	rjmp	.+680    	; 0x1250 <vfprintf+0x68a>
     fa8:	83 36       	cpi	r24, 0x63	; 99
     faa:	31 f0       	breq	.+12     	; 0xfb8 <vfprintf+0x3f2>
     fac:	83 37       	cpi	r24, 0x73	; 115
     fae:	79 f0       	breq	.+30     	; 0xfce <vfprintf+0x408>
     fb0:	83 35       	cpi	r24, 0x53	; 83
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <vfprintf+0x3f0>
     fb4:	56 c0       	rjmp	.+172    	; 0x1062 <vfprintf+0x49c>
     fb6:	20 c0       	rjmp	.+64     	; 0xff8 <vfprintf+0x432>
     fb8:	56 01       	movw	r10, r12
     fba:	32 e0       	ldi	r19, 0x02	; 2
     fbc:	a3 0e       	add	r10, r19
     fbe:	b1 1c       	adc	r11, r1
     fc0:	f6 01       	movw	r30, r12
     fc2:	80 81       	ld	r24, Z
     fc4:	89 83       	std	Y+1, r24	; 0x01
     fc6:	01 e0       	ldi	r16, 0x01	; 1
     fc8:	10 e0       	ldi	r17, 0x00	; 0
     fca:	63 01       	movw	r12, r6
     fcc:	12 c0       	rjmp	.+36     	; 0xff2 <vfprintf+0x42c>
     fce:	56 01       	movw	r10, r12
     fd0:	f2 e0       	ldi	r31, 0x02	; 2
     fd2:	af 0e       	add	r10, r31
     fd4:	b1 1c       	adc	r11, r1
     fd6:	f6 01       	movw	r30, r12
     fd8:	c0 80       	ld	r12, Z
     fda:	d1 80       	ldd	r13, Z+1	; 0x01
     fdc:	96 fe       	sbrs	r9, 6
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <vfprintf+0x420>
     fe0:	61 2f       	mov	r22, r17
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <vfprintf+0x424>
     fe6:	6f ef       	ldi	r22, 0xFF	; 255
     fe8:	7f ef       	ldi	r23, 0xFF	; 255
     fea:	c6 01       	movw	r24, r12
     fec:	0e 94 9c 0a 	call	0x1538	; 0x1538 <strnlen>
     ff0:	8c 01       	movw	r16, r24
     ff2:	f9 2d       	mov	r31, r9
     ff4:	ff 77       	andi	r31, 0x7F	; 127
     ff6:	14 c0       	rjmp	.+40     	; 0x1020 <vfprintf+0x45a>
     ff8:	56 01       	movw	r10, r12
     ffa:	22 e0       	ldi	r18, 0x02	; 2
     ffc:	a2 0e       	add	r10, r18
     ffe:	b1 1c       	adc	r11, r1
    1000:	f6 01       	movw	r30, r12
    1002:	c0 80       	ld	r12, Z
    1004:	d1 80       	ldd	r13, Z+1	; 0x01
    1006:	96 fe       	sbrs	r9, 6
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x44a>
    100a:	61 2f       	mov	r22, r17
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x44e>
    1010:	6f ef       	ldi	r22, 0xFF	; 255
    1012:	7f ef       	ldi	r23, 0xFF	; 255
    1014:	c6 01       	movw	r24, r12
    1016:	0e 94 91 0a 	call	0x1522	; 0x1522 <strnlen_P>
    101a:	8c 01       	movw	r16, r24
    101c:	f9 2d       	mov	r31, r9
    101e:	f0 68       	ori	r31, 0x80	; 128
    1020:	9f 2e       	mov	r9, r31
    1022:	f3 fd       	sbrc	r31, 3
    1024:	1a c0       	rjmp	.+52     	; 0x105a <vfprintf+0x494>
    1026:	85 2d       	mov	r24, r5
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	08 17       	cp	r16, r24
    102c:	19 07       	cpc	r17, r25
    102e:	a8 f4       	brcc	.+42     	; 0x105a <vfprintf+0x494>
    1030:	b7 01       	movw	r22, r14
    1032:	80 e2       	ldi	r24, 0x20	; 32
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    103a:	5a 94       	dec	r5
    103c:	f4 cf       	rjmp	.-24     	; 0x1026 <vfprintf+0x460>
    103e:	f6 01       	movw	r30, r12
    1040:	97 fc       	sbrc	r9, 7
    1042:	85 91       	lpm	r24, Z+
    1044:	97 fe       	sbrs	r9, 7
    1046:	81 91       	ld	r24, Z+
    1048:	6f 01       	movw	r12, r30
    104a:	b7 01       	movw	r22, r14
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    1052:	51 10       	cpse	r5, r1
    1054:	5a 94       	dec	r5
    1056:	01 50       	subi	r16, 0x01	; 1
    1058:	11 09       	sbc	r17, r1
    105a:	01 15       	cp	r16, r1
    105c:	11 05       	cpc	r17, r1
    105e:	79 f7       	brne	.-34     	; 0x103e <vfprintf+0x478>
    1060:	f7 c0       	rjmp	.+494    	; 0x1250 <vfprintf+0x68a>
    1062:	84 36       	cpi	r24, 0x64	; 100
    1064:	11 f0       	breq	.+4      	; 0x106a <vfprintf+0x4a4>
    1066:	89 36       	cpi	r24, 0x69	; 105
    1068:	61 f5       	brne	.+88     	; 0x10c2 <vfprintf+0x4fc>
    106a:	56 01       	movw	r10, r12
    106c:	97 fe       	sbrs	r9, 7
    106e:	09 c0       	rjmp	.+18     	; 0x1082 <vfprintf+0x4bc>
    1070:	24 e0       	ldi	r18, 0x04	; 4
    1072:	a2 0e       	add	r10, r18
    1074:	b1 1c       	adc	r11, r1
    1076:	f6 01       	movw	r30, r12
    1078:	60 81       	ld	r22, Z
    107a:	71 81       	ldd	r23, Z+1	; 0x01
    107c:	82 81       	ldd	r24, Z+2	; 0x02
    107e:	93 81       	ldd	r25, Z+3	; 0x03
    1080:	0a c0       	rjmp	.+20     	; 0x1096 <vfprintf+0x4d0>
    1082:	f2 e0       	ldi	r31, 0x02	; 2
    1084:	af 0e       	add	r10, r31
    1086:	b1 1c       	adc	r11, r1
    1088:	f6 01       	movw	r30, r12
    108a:	60 81       	ld	r22, Z
    108c:	71 81       	ldd	r23, Z+1	; 0x01
    108e:	07 2e       	mov	r0, r23
    1090:	00 0c       	add	r0, r0
    1092:	88 0b       	sbc	r24, r24
    1094:	99 0b       	sbc	r25, r25
    1096:	f9 2d       	mov	r31, r9
    1098:	ff 76       	andi	r31, 0x6F	; 111
    109a:	9f 2e       	mov	r9, r31
    109c:	97 ff       	sbrs	r25, 7
    109e:	09 c0       	rjmp	.+18     	; 0x10b2 <vfprintf+0x4ec>
    10a0:	90 95       	com	r25
    10a2:	80 95       	com	r24
    10a4:	70 95       	com	r23
    10a6:	61 95       	neg	r22
    10a8:	7f 4f       	sbci	r23, 0xFF	; 255
    10aa:	8f 4f       	sbci	r24, 0xFF	; 255
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	f0 68       	ori	r31, 0x80	; 128
    10b0:	9f 2e       	mov	r9, r31
    10b2:	2a e0       	ldi	r18, 0x0A	; 10
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	a3 01       	movw	r20, r6
    10b8:	0e 94 0d 0b 	call	0x161a	; 0x161a <__ultoa_invert>
    10bc:	c8 2e       	mov	r12, r24
    10be:	c6 18       	sub	r12, r6
    10c0:	3f c0       	rjmp	.+126    	; 0x1140 <vfprintf+0x57a>
    10c2:	09 2d       	mov	r16, r9
    10c4:	85 37       	cpi	r24, 0x75	; 117
    10c6:	21 f4       	brne	.+8      	; 0x10d0 <vfprintf+0x50a>
    10c8:	0f 7e       	andi	r16, 0xEF	; 239
    10ca:	2a e0       	ldi	r18, 0x0A	; 10
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	1d c0       	rjmp	.+58     	; 0x110a <vfprintf+0x544>
    10d0:	09 7f       	andi	r16, 0xF9	; 249
    10d2:	8f 36       	cpi	r24, 0x6F	; 111
    10d4:	91 f0       	breq	.+36     	; 0x10fa <vfprintf+0x534>
    10d6:	18 f4       	brcc	.+6      	; 0x10de <vfprintf+0x518>
    10d8:	88 35       	cpi	r24, 0x58	; 88
    10da:	59 f0       	breq	.+22     	; 0x10f2 <vfprintf+0x52c>
    10dc:	c3 c0       	rjmp	.+390    	; 0x1264 <vfprintf+0x69e>
    10de:	80 37       	cpi	r24, 0x70	; 112
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <vfprintf+0x522>
    10e2:	88 37       	cpi	r24, 0x78	; 120
    10e4:	11 f0       	breq	.+4      	; 0x10ea <vfprintf+0x524>
    10e6:	be c0       	rjmp	.+380    	; 0x1264 <vfprintf+0x69e>
    10e8:	00 61       	ori	r16, 0x10	; 16
    10ea:	04 ff       	sbrs	r16, 4
    10ec:	09 c0       	rjmp	.+18     	; 0x1100 <vfprintf+0x53a>
    10ee:	04 60       	ori	r16, 0x04	; 4
    10f0:	07 c0       	rjmp	.+14     	; 0x1100 <vfprintf+0x53a>
    10f2:	94 fe       	sbrs	r9, 4
    10f4:	08 c0       	rjmp	.+16     	; 0x1106 <vfprintf+0x540>
    10f6:	06 60       	ori	r16, 0x06	; 6
    10f8:	06 c0       	rjmp	.+12     	; 0x1106 <vfprintf+0x540>
    10fa:	28 e0       	ldi	r18, 0x08	; 8
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	05 c0       	rjmp	.+10     	; 0x110a <vfprintf+0x544>
    1100:	20 e1       	ldi	r18, 0x10	; 16
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	02 c0       	rjmp	.+4      	; 0x110a <vfprintf+0x544>
    1106:	20 e1       	ldi	r18, 0x10	; 16
    1108:	32 e0       	ldi	r19, 0x02	; 2
    110a:	56 01       	movw	r10, r12
    110c:	07 ff       	sbrs	r16, 7
    110e:	09 c0       	rjmp	.+18     	; 0x1122 <vfprintf+0x55c>
    1110:	84 e0       	ldi	r24, 0x04	; 4
    1112:	a8 0e       	add	r10, r24
    1114:	b1 1c       	adc	r11, r1
    1116:	f6 01       	movw	r30, r12
    1118:	60 81       	ld	r22, Z
    111a:	71 81       	ldd	r23, Z+1	; 0x01
    111c:	82 81       	ldd	r24, Z+2	; 0x02
    111e:	93 81       	ldd	r25, Z+3	; 0x03
    1120:	08 c0       	rjmp	.+16     	; 0x1132 <vfprintf+0x56c>
    1122:	f2 e0       	ldi	r31, 0x02	; 2
    1124:	af 0e       	add	r10, r31
    1126:	b1 1c       	adc	r11, r1
    1128:	f6 01       	movw	r30, r12
    112a:	60 81       	ld	r22, Z
    112c:	71 81       	ldd	r23, Z+1	; 0x01
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	a3 01       	movw	r20, r6
    1134:	0e 94 0d 0b 	call	0x161a	; 0x161a <__ultoa_invert>
    1138:	c8 2e       	mov	r12, r24
    113a:	c6 18       	sub	r12, r6
    113c:	0f 77       	andi	r16, 0x7F	; 127
    113e:	90 2e       	mov	r9, r16
    1140:	96 fe       	sbrs	r9, 6
    1142:	0b c0       	rjmp	.+22     	; 0x115a <vfprintf+0x594>
    1144:	09 2d       	mov	r16, r9
    1146:	0e 7f       	andi	r16, 0xFE	; 254
    1148:	c1 16       	cp	r12, r17
    114a:	50 f4       	brcc	.+20     	; 0x1160 <vfprintf+0x59a>
    114c:	94 fe       	sbrs	r9, 4
    114e:	0a c0       	rjmp	.+20     	; 0x1164 <vfprintf+0x59e>
    1150:	92 fc       	sbrc	r9, 2
    1152:	08 c0       	rjmp	.+16     	; 0x1164 <vfprintf+0x59e>
    1154:	09 2d       	mov	r16, r9
    1156:	0e 7e       	andi	r16, 0xEE	; 238
    1158:	05 c0       	rjmp	.+10     	; 0x1164 <vfprintf+0x59e>
    115a:	dc 2c       	mov	r13, r12
    115c:	09 2d       	mov	r16, r9
    115e:	03 c0       	rjmp	.+6      	; 0x1166 <vfprintf+0x5a0>
    1160:	dc 2c       	mov	r13, r12
    1162:	01 c0       	rjmp	.+2      	; 0x1166 <vfprintf+0x5a0>
    1164:	d1 2e       	mov	r13, r17
    1166:	04 ff       	sbrs	r16, 4
    1168:	0d c0       	rjmp	.+26     	; 0x1184 <vfprintf+0x5be>
    116a:	fe 01       	movw	r30, r28
    116c:	ec 0d       	add	r30, r12
    116e:	f1 1d       	adc	r31, r1
    1170:	80 81       	ld	r24, Z
    1172:	80 33       	cpi	r24, 0x30	; 48
    1174:	11 f4       	brne	.+4      	; 0x117a <vfprintf+0x5b4>
    1176:	09 7e       	andi	r16, 0xE9	; 233
    1178:	09 c0       	rjmp	.+18     	; 0x118c <vfprintf+0x5c6>
    117a:	02 ff       	sbrs	r16, 2
    117c:	06 c0       	rjmp	.+12     	; 0x118a <vfprintf+0x5c4>
    117e:	d3 94       	inc	r13
    1180:	d3 94       	inc	r13
    1182:	04 c0       	rjmp	.+8      	; 0x118c <vfprintf+0x5c6>
    1184:	80 2f       	mov	r24, r16
    1186:	86 78       	andi	r24, 0x86	; 134
    1188:	09 f0       	breq	.+2      	; 0x118c <vfprintf+0x5c6>
    118a:	d3 94       	inc	r13
    118c:	03 fd       	sbrc	r16, 3
    118e:	11 c0       	rjmp	.+34     	; 0x11b2 <vfprintf+0x5ec>
    1190:	00 ff       	sbrs	r16, 0
    1192:	06 c0       	rjmp	.+12     	; 0x11a0 <vfprintf+0x5da>
    1194:	1c 2d       	mov	r17, r12
    1196:	d5 14       	cp	r13, r5
    1198:	80 f4       	brcc	.+32     	; 0x11ba <vfprintf+0x5f4>
    119a:	15 0d       	add	r17, r5
    119c:	1d 19       	sub	r17, r13
    119e:	0d c0       	rjmp	.+26     	; 0x11ba <vfprintf+0x5f4>
    11a0:	d5 14       	cp	r13, r5
    11a2:	58 f4       	brcc	.+22     	; 0x11ba <vfprintf+0x5f4>
    11a4:	b7 01       	movw	r22, r14
    11a6:	80 e2       	ldi	r24, 0x20	; 32
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    11ae:	d3 94       	inc	r13
    11b0:	f7 cf       	rjmp	.-18     	; 0x11a0 <vfprintf+0x5da>
    11b2:	d5 14       	cp	r13, r5
    11b4:	10 f4       	brcc	.+4      	; 0x11ba <vfprintf+0x5f4>
    11b6:	5d 18       	sub	r5, r13
    11b8:	01 c0       	rjmp	.+2      	; 0x11bc <vfprintf+0x5f6>
    11ba:	51 2c       	mov	r5, r1
    11bc:	04 ff       	sbrs	r16, 4
    11be:	10 c0       	rjmp	.+32     	; 0x11e0 <vfprintf+0x61a>
    11c0:	b7 01       	movw	r22, r14
    11c2:	80 e3       	ldi	r24, 0x30	; 48
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    11ca:	02 ff       	sbrs	r16, 2
    11cc:	17 c0       	rjmp	.+46     	; 0x11fc <vfprintf+0x636>
    11ce:	01 fd       	sbrc	r16, 1
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <vfprintf+0x612>
    11d2:	88 e7       	ldi	r24, 0x78	; 120
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x616>
    11d8:	88 e5       	ldi	r24, 0x58	; 88
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	b7 01       	movw	r22, r14
    11de:	0c c0       	rjmp	.+24     	; 0x11f8 <vfprintf+0x632>
    11e0:	80 2f       	mov	r24, r16
    11e2:	86 78       	andi	r24, 0x86	; 134
    11e4:	59 f0       	breq	.+22     	; 0x11fc <vfprintf+0x636>
    11e6:	01 ff       	sbrs	r16, 1
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <vfprintf+0x628>
    11ea:	8b e2       	ldi	r24, 0x2B	; 43
    11ec:	01 c0       	rjmp	.+2      	; 0x11f0 <vfprintf+0x62a>
    11ee:	80 e2       	ldi	r24, 0x20	; 32
    11f0:	07 fd       	sbrc	r16, 7
    11f2:	8d e2       	ldi	r24, 0x2D	; 45
    11f4:	b7 01       	movw	r22, r14
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    11fc:	c1 16       	cp	r12, r17
    11fe:	38 f4       	brcc	.+14     	; 0x120e <vfprintf+0x648>
    1200:	b7 01       	movw	r22, r14
    1202:	80 e3       	ldi	r24, 0x30	; 48
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    120a:	11 50       	subi	r17, 0x01	; 1
    120c:	f7 cf       	rjmp	.-18     	; 0x11fc <vfprintf+0x636>
    120e:	ca 94       	dec	r12
    1210:	f3 01       	movw	r30, r6
    1212:	ec 0d       	add	r30, r12
    1214:	f1 1d       	adc	r31, r1
    1216:	80 81       	ld	r24, Z
    1218:	b7 01       	movw	r22, r14
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    1220:	c1 10       	cpse	r12, r1
    1222:	f5 cf       	rjmp	.-22     	; 0x120e <vfprintf+0x648>
    1224:	15 c0       	rjmp	.+42     	; 0x1250 <vfprintf+0x68a>
    1226:	f4 e0       	ldi	r31, 0x04	; 4
    1228:	f5 15       	cp	r31, r5
    122a:	60 f5       	brcc	.+88     	; 0x1284 <vfprintf+0x6be>
    122c:	84 e0       	ldi	r24, 0x04	; 4
    122e:	58 1a       	sub	r5, r24
    1230:	93 fe       	sbrs	r9, 3
    1232:	1f c0       	rjmp	.+62     	; 0x1272 <vfprintf+0x6ac>
    1234:	01 11       	cpse	r16, r1
    1236:	27 c0       	rjmp	.+78     	; 0x1286 <vfprintf+0x6c0>
    1238:	2c 85       	ldd	r18, Y+12	; 0x0c
    123a:	23 ff       	sbrs	r18, 3
    123c:	2a c0       	rjmp	.+84     	; 0x1292 <vfprintf+0x6cc>
    123e:	04 e5       	ldi	r16, 0x54	; 84
    1240:	10 e0       	ldi	r17, 0x00	; 0
    1242:	39 2d       	mov	r19, r9
    1244:	30 71       	andi	r19, 0x10	; 16
    1246:	93 2e       	mov	r9, r19
    1248:	f8 01       	movw	r30, r16
    124a:	84 91       	lpm	r24, Z
    124c:	81 11       	cpse	r24, r1
    124e:	24 c0       	rjmp	.+72     	; 0x1298 <vfprintf+0x6d2>
    1250:	55 20       	and	r5, r5
    1252:	09 f4       	brne	.+2      	; 0x1256 <vfprintf+0x690>
    1254:	e4 cc       	rjmp	.-1592   	; 0xc1e <vfprintf+0x58>
    1256:	b7 01       	movw	r22, r14
    1258:	80 e2       	ldi	r24, 0x20	; 32
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    1260:	5a 94       	dec	r5
    1262:	f6 cf       	rjmp	.-20     	; 0x1250 <vfprintf+0x68a>
    1264:	f7 01       	movw	r30, r14
    1266:	86 81       	ldd	r24, Z+6	; 0x06
    1268:	97 81       	ldd	r25, Z+7	; 0x07
    126a:	26 c0       	rjmp	.+76     	; 0x12b8 <vfprintf+0x6f2>
    126c:	8f ef       	ldi	r24, 0xFF	; 255
    126e:	9f ef       	ldi	r25, 0xFF	; 255
    1270:	23 c0       	rjmp	.+70     	; 0x12b8 <vfprintf+0x6f2>
    1272:	b7 01       	movw	r22, r14
    1274:	80 e2       	ldi	r24, 0x20	; 32
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    127c:	5a 94       	dec	r5
    127e:	51 10       	cpse	r5, r1
    1280:	f8 cf       	rjmp	.-16     	; 0x1272 <vfprintf+0x6ac>
    1282:	d8 cf       	rjmp	.-80     	; 0x1234 <vfprintf+0x66e>
    1284:	51 2c       	mov	r5, r1
    1286:	b7 01       	movw	r22, r14
    1288:	80 2f       	mov	r24, r16
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    1290:	d3 cf       	rjmp	.-90     	; 0x1238 <vfprintf+0x672>
    1292:	08 e5       	ldi	r16, 0x58	; 88
    1294:	10 e0       	ldi	r17, 0x00	; 0
    1296:	d5 cf       	rjmp	.-86     	; 0x1242 <vfprintf+0x67c>
    1298:	91 10       	cpse	r9, r1
    129a:	80 52       	subi	r24, 0x20	; 32
    129c:	b7 01       	movw	r22, r14
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	0e 94 af 0a 	call	0x155e	; 0x155e <fputc>
    12a4:	0f 5f       	subi	r16, 0xFF	; 255
    12a6:	1f 4f       	sbci	r17, 0xFF	; 255
    12a8:	cf cf       	rjmp	.-98     	; 0x1248 <vfprintf+0x682>
    12aa:	23 e0       	ldi	r18, 0x03	; 3
    12ac:	25 15       	cp	r18, r5
    12ae:	10 f4       	brcc	.+4      	; 0x12b4 <vfprintf+0x6ee>
    12b0:	83 e0       	ldi	r24, 0x03	; 3
    12b2:	bd cf       	rjmp	.-134    	; 0x122e <vfprintf+0x668>
    12b4:	51 2c       	mov	r5, r1
    12b6:	c0 cf       	rjmp	.-128    	; 0x1238 <vfprintf+0x672>
    12b8:	60 96       	adiw	r28, 0x10	; 16
    12ba:	e2 e1       	ldi	r30, 0x12	; 18
    12bc:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__epilogue_restores__>

000012c0 <__prologue_saves__>:
    12c0:	2f 92       	push	r2
    12c2:	3f 92       	push	r3
    12c4:	4f 92       	push	r4
    12c6:	5f 92       	push	r5
    12c8:	6f 92       	push	r6
    12ca:	7f 92       	push	r7
    12cc:	8f 92       	push	r8
    12ce:	9f 92       	push	r9
    12d0:	af 92       	push	r10
    12d2:	bf 92       	push	r11
    12d4:	cf 92       	push	r12
    12d6:	df 92       	push	r13
    12d8:	ef 92       	push	r14
    12da:	ff 92       	push	r15
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	cd b7       	in	r28, 0x3d	; 61
    12e6:	de b7       	in	r29, 0x3e	; 62
    12e8:	ca 1b       	sub	r28, r26
    12ea:	db 0b       	sbc	r29, r27
    12ec:	0f b6       	in	r0, 0x3f	; 63
    12ee:	f8 94       	cli
    12f0:	de bf       	out	0x3e, r29	; 62
    12f2:	0f be       	out	0x3f, r0	; 63
    12f4:	cd bf       	out	0x3d, r28	; 61
    12f6:	09 94       	ijmp

000012f8 <__epilogue_restores__>:
    12f8:	2a 88       	ldd	r2, Y+18	; 0x12
    12fa:	39 88       	ldd	r3, Y+17	; 0x11
    12fc:	48 88       	ldd	r4, Y+16	; 0x10
    12fe:	5f 84       	ldd	r5, Y+15	; 0x0f
    1300:	6e 84       	ldd	r6, Y+14	; 0x0e
    1302:	7d 84       	ldd	r7, Y+13	; 0x0d
    1304:	8c 84       	ldd	r8, Y+12	; 0x0c
    1306:	9b 84       	ldd	r9, Y+11	; 0x0b
    1308:	aa 84       	ldd	r10, Y+10	; 0x0a
    130a:	b9 84       	ldd	r11, Y+9	; 0x09
    130c:	c8 84       	ldd	r12, Y+8	; 0x08
    130e:	df 80       	ldd	r13, Y+7	; 0x07
    1310:	ee 80       	ldd	r14, Y+6	; 0x06
    1312:	fd 80       	ldd	r15, Y+5	; 0x05
    1314:	0c 81       	ldd	r16, Y+4	; 0x04
    1316:	1b 81       	ldd	r17, Y+3	; 0x03
    1318:	aa 81       	ldd	r26, Y+2	; 0x02
    131a:	b9 81       	ldd	r27, Y+1	; 0x01
    131c:	ce 0f       	add	r28, r30
    131e:	d1 1d       	adc	r29, r1
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	f8 94       	cli
    1324:	de bf       	out	0x3e, r29	; 62
    1326:	0f be       	out	0x3f, r0	; 63
    1328:	cd bf       	out	0x3d, r28	; 61
    132a:	ed 01       	movw	r28, r26
    132c:	08 95       	ret

0000132e <atof>:
    132e:	66 27       	eor	r22, r22
    1330:	77 27       	eor	r23, r23
    1332:	0c 94 6b 0b 	jmp	0x16d6	; 0x16d6 <strtod>

00001336 <atoi>:
    1336:	fc 01       	movw	r30, r24
    1338:	88 27       	eor	r24, r24
    133a:	99 27       	eor	r25, r25
    133c:	e8 94       	clt
    133e:	21 91       	ld	r18, Z+
    1340:	20 32       	cpi	r18, 0x20	; 32
    1342:	e9 f3       	breq	.-6      	; 0x133e <atoi+0x8>
    1344:	29 30       	cpi	r18, 0x09	; 9
    1346:	10 f0       	brcs	.+4      	; 0x134c <atoi+0x16>
    1348:	2e 30       	cpi	r18, 0x0E	; 14
    134a:	c8 f3       	brcs	.-14     	; 0x133e <atoi+0x8>
    134c:	2b 32       	cpi	r18, 0x2B	; 43
    134e:	41 f0       	breq	.+16     	; 0x1360 <atoi+0x2a>
    1350:	2d 32       	cpi	r18, 0x2D	; 45
    1352:	39 f4       	brne	.+14     	; 0x1362 <atoi+0x2c>
    1354:	68 94       	set
    1356:	04 c0       	rjmp	.+8      	; 0x1360 <atoi+0x2a>
    1358:	0e 94 a7 0a 	call	0x154e	; 0x154e <__mulhi_const_10>
    135c:	82 0f       	add	r24, r18
    135e:	91 1d       	adc	r25, r1
    1360:	21 91       	ld	r18, Z+
    1362:	20 53       	subi	r18, 0x30	; 48
    1364:	2a 30       	cpi	r18, 0x0A	; 10
    1366:	c0 f3       	brcs	.-16     	; 0x1358 <atoi+0x22>
    1368:	1e f4       	brtc	.+6      	; 0x1370 <atoi+0x3a>
    136a:	90 95       	com	r25
    136c:	81 95       	neg	r24
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
    1370:	08 95       	ret

00001372 <__ftoa_engine>:
    1372:	28 30       	cpi	r18, 0x08	; 8
    1374:	08 f0       	brcs	.+2      	; 0x1378 <__ftoa_engine+0x6>
    1376:	27 e0       	ldi	r18, 0x07	; 7
    1378:	33 27       	eor	r19, r19
    137a:	da 01       	movw	r26, r20
    137c:	99 0f       	add	r25, r25
    137e:	31 1d       	adc	r19, r1
    1380:	87 fd       	sbrc	r24, 7
    1382:	91 60       	ori	r25, 0x01	; 1
    1384:	00 96       	adiw	r24, 0x00	; 0
    1386:	61 05       	cpc	r22, r1
    1388:	71 05       	cpc	r23, r1
    138a:	39 f4       	brne	.+14     	; 0x139a <__ftoa_engine+0x28>
    138c:	32 60       	ori	r19, 0x02	; 2
    138e:	2e 5f       	subi	r18, 0xFE	; 254
    1390:	3d 93       	st	X+, r19
    1392:	30 e3       	ldi	r19, 0x30	; 48
    1394:	2a 95       	dec	r18
    1396:	e1 f7       	brne	.-8      	; 0x1390 <__ftoa_engine+0x1e>
    1398:	08 95       	ret
    139a:	9f 3f       	cpi	r25, 0xFF	; 255
    139c:	30 f0       	brcs	.+12     	; 0x13aa <__ftoa_engine+0x38>
    139e:	80 38       	cpi	r24, 0x80	; 128
    13a0:	71 05       	cpc	r23, r1
    13a2:	61 05       	cpc	r22, r1
    13a4:	09 f0       	breq	.+2      	; 0x13a8 <__ftoa_engine+0x36>
    13a6:	3c 5f       	subi	r19, 0xFC	; 252
    13a8:	3c 5f       	subi	r19, 0xFC	; 252
    13aa:	3d 93       	st	X+, r19
    13ac:	91 30       	cpi	r25, 0x01	; 1
    13ae:	08 f0       	brcs	.+2      	; 0x13b2 <__ftoa_engine+0x40>
    13b0:	80 68       	ori	r24, 0x80	; 128
    13b2:	91 1d       	adc	r25, r1
    13b4:	df 93       	push	r29
    13b6:	cf 93       	push	r28
    13b8:	1f 93       	push	r17
    13ba:	0f 93       	push	r16
    13bc:	ff 92       	push	r15
    13be:	ef 92       	push	r14
    13c0:	19 2f       	mov	r17, r25
    13c2:	98 7f       	andi	r25, 0xF8	; 248
    13c4:	96 95       	lsr	r25
    13c6:	e9 2f       	mov	r30, r25
    13c8:	96 95       	lsr	r25
    13ca:	96 95       	lsr	r25
    13cc:	e9 0f       	add	r30, r25
    13ce:	ff 27       	eor	r31, r31
    13d0:	ea 54       	subi	r30, 0x4A	; 74
    13d2:	ff 4f       	sbci	r31, 0xFF	; 255
    13d4:	99 27       	eor	r25, r25
    13d6:	33 27       	eor	r19, r19
    13d8:	ee 24       	eor	r14, r14
    13da:	ff 24       	eor	r15, r15
    13dc:	a7 01       	movw	r20, r14
    13de:	e7 01       	movw	r28, r14
    13e0:	05 90       	lpm	r0, Z+
    13e2:	08 94       	sec
    13e4:	07 94       	ror	r0
    13e6:	28 f4       	brcc	.+10     	; 0x13f2 <__ftoa_engine+0x80>
    13e8:	36 0f       	add	r19, r22
    13ea:	e7 1e       	adc	r14, r23
    13ec:	f8 1e       	adc	r15, r24
    13ee:	49 1f       	adc	r20, r25
    13f0:	51 1d       	adc	r21, r1
    13f2:	66 0f       	add	r22, r22
    13f4:	77 1f       	adc	r23, r23
    13f6:	88 1f       	adc	r24, r24
    13f8:	99 1f       	adc	r25, r25
    13fa:	06 94       	lsr	r0
    13fc:	a1 f7       	brne	.-24     	; 0x13e6 <__ftoa_engine+0x74>
    13fe:	05 90       	lpm	r0, Z+
    1400:	07 94       	ror	r0
    1402:	28 f4       	brcc	.+10     	; 0x140e <__ftoa_engine+0x9c>
    1404:	e7 0e       	add	r14, r23
    1406:	f8 1e       	adc	r15, r24
    1408:	49 1f       	adc	r20, r25
    140a:	56 1f       	adc	r21, r22
    140c:	c1 1d       	adc	r28, r1
    140e:	77 0f       	add	r23, r23
    1410:	88 1f       	adc	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	66 1f       	adc	r22, r22
    1416:	06 94       	lsr	r0
    1418:	a1 f7       	brne	.-24     	; 0x1402 <__ftoa_engine+0x90>
    141a:	05 90       	lpm	r0, Z+
    141c:	07 94       	ror	r0
    141e:	28 f4       	brcc	.+10     	; 0x142a <__ftoa_engine+0xb8>
    1420:	f8 0e       	add	r15, r24
    1422:	49 1f       	adc	r20, r25
    1424:	56 1f       	adc	r21, r22
    1426:	c7 1f       	adc	r28, r23
    1428:	d1 1d       	adc	r29, r1
    142a:	88 0f       	add	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	66 1f       	adc	r22, r22
    1430:	77 1f       	adc	r23, r23
    1432:	06 94       	lsr	r0
    1434:	a1 f7       	brne	.-24     	; 0x141e <__ftoa_engine+0xac>
    1436:	05 90       	lpm	r0, Z+
    1438:	07 94       	ror	r0
    143a:	20 f4       	brcc	.+8      	; 0x1444 <__ftoa_engine+0xd2>
    143c:	49 0f       	add	r20, r25
    143e:	56 1f       	adc	r21, r22
    1440:	c7 1f       	adc	r28, r23
    1442:	d8 1f       	adc	r29, r24
    1444:	99 0f       	add	r25, r25
    1446:	66 1f       	adc	r22, r22
    1448:	77 1f       	adc	r23, r23
    144a:	88 1f       	adc	r24, r24
    144c:	06 94       	lsr	r0
    144e:	a9 f7       	brne	.-22     	; 0x143a <__ftoa_engine+0xc8>
    1450:	84 91       	lpm	r24, Z
    1452:	10 95       	com	r17
    1454:	17 70       	andi	r17, 0x07	; 7
    1456:	41 f0       	breq	.+16     	; 0x1468 <__ftoa_engine+0xf6>
    1458:	d6 95       	lsr	r29
    145a:	c7 95       	ror	r28
    145c:	57 95       	ror	r21
    145e:	47 95       	ror	r20
    1460:	f7 94       	ror	r15
    1462:	e7 94       	ror	r14
    1464:	1a 95       	dec	r17
    1466:	c1 f7       	brne	.-16     	; 0x1458 <__ftoa_engine+0xe6>
    1468:	ec e5       	ldi	r30, 0x5C	; 92
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	68 94       	set
    146e:	15 90       	lpm	r1, Z+
    1470:	15 91       	lpm	r17, Z+
    1472:	35 91       	lpm	r19, Z+
    1474:	65 91       	lpm	r22, Z+
    1476:	95 91       	lpm	r25, Z+
    1478:	05 90       	lpm	r0, Z+
    147a:	7f e2       	ldi	r23, 0x2F	; 47
    147c:	73 95       	inc	r23
    147e:	e1 18       	sub	r14, r1
    1480:	f1 0a       	sbc	r15, r17
    1482:	43 0b       	sbc	r20, r19
    1484:	56 0b       	sbc	r21, r22
    1486:	c9 0b       	sbc	r28, r25
    1488:	d0 09       	sbc	r29, r0
    148a:	c0 f7       	brcc	.-16     	; 0x147c <__ftoa_engine+0x10a>
    148c:	e1 0c       	add	r14, r1
    148e:	f1 1e       	adc	r15, r17
    1490:	43 1f       	adc	r20, r19
    1492:	56 1f       	adc	r21, r22
    1494:	c9 1f       	adc	r28, r25
    1496:	d0 1d       	adc	r29, r0
    1498:	7e f4       	brtc	.+30     	; 0x14b8 <__ftoa_engine+0x146>
    149a:	70 33       	cpi	r23, 0x30	; 48
    149c:	11 f4       	brne	.+4      	; 0x14a2 <__ftoa_engine+0x130>
    149e:	8a 95       	dec	r24
    14a0:	e6 cf       	rjmp	.-52     	; 0x146e <__ftoa_engine+0xfc>
    14a2:	e8 94       	clt
    14a4:	01 50       	subi	r16, 0x01	; 1
    14a6:	30 f0       	brcs	.+12     	; 0x14b4 <__ftoa_engine+0x142>
    14a8:	08 0f       	add	r16, r24
    14aa:	0a f4       	brpl	.+2      	; 0x14ae <__ftoa_engine+0x13c>
    14ac:	00 27       	eor	r16, r16
    14ae:	02 17       	cp	r16, r18
    14b0:	08 f4       	brcc	.+2      	; 0x14b4 <__ftoa_engine+0x142>
    14b2:	20 2f       	mov	r18, r16
    14b4:	23 95       	inc	r18
    14b6:	02 2f       	mov	r16, r18
    14b8:	7a 33       	cpi	r23, 0x3A	; 58
    14ba:	28 f0       	brcs	.+10     	; 0x14c6 <__ftoa_engine+0x154>
    14bc:	79 e3       	ldi	r23, 0x39	; 57
    14be:	7d 93       	st	X+, r23
    14c0:	2a 95       	dec	r18
    14c2:	e9 f7       	brne	.-6      	; 0x14be <__ftoa_engine+0x14c>
    14c4:	10 c0       	rjmp	.+32     	; 0x14e6 <__ftoa_engine+0x174>
    14c6:	7d 93       	st	X+, r23
    14c8:	2a 95       	dec	r18
    14ca:	89 f6       	brne	.-94     	; 0x146e <__ftoa_engine+0xfc>
    14cc:	06 94       	lsr	r0
    14ce:	97 95       	ror	r25
    14d0:	67 95       	ror	r22
    14d2:	37 95       	ror	r19
    14d4:	17 95       	ror	r17
    14d6:	17 94       	ror	r1
    14d8:	e1 18       	sub	r14, r1
    14da:	f1 0a       	sbc	r15, r17
    14dc:	43 0b       	sbc	r20, r19
    14de:	56 0b       	sbc	r21, r22
    14e0:	c9 0b       	sbc	r28, r25
    14e2:	d0 09       	sbc	r29, r0
    14e4:	98 f0       	brcs	.+38     	; 0x150c <__ftoa_engine+0x19a>
    14e6:	23 95       	inc	r18
    14e8:	7e 91       	ld	r23, -X
    14ea:	73 95       	inc	r23
    14ec:	7a 33       	cpi	r23, 0x3A	; 58
    14ee:	08 f0       	brcs	.+2      	; 0x14f2 <__ftoa_engine+0x180>
    14f0:	70 e3       	ldi	r23, 0x30	; 48
    14f2:	7c 93       	st	X, r23
    14f4:	20 13       	cpse	r18, r16
    14f6:	b8 f7       	brcc	.-18     	; 0x14e6 <__ftoa_engine+0x174>
    14f8:	7e 91       	ld	r23, -X
    14fa:	70 61       	ori	r23, 0x10	; 16
    14fc:	7d 93       	st	X+, r23
    14fe:	30 f0       	brcs	.+12     	; 0x150c <__ftoa_engine+0x19a>
    1500:	83 95       	inc	r24
    1502:	71 e3       	ldi	r23, 0x31	; 49
    1504:	7d 93       	st	X+, r23
    1506:	70 e3       	ldi	r23, 0x30	; 48
    1508:	2a 95       	dec	r18
    150a:	e1 f7       	brne	.-8      	; 0x1504 <__ftoa_engine+0x192>
    150c:	11 24       	eor	r1, r1
    150e:	ef 90       	pop	r14
    1510:	ff 90       	pop	r15
    1512:	0f 91       	pop	r16
    1514:	1f 91       	pop	r17
    1516:	cf 91       	pop	r28
    1518:	df 91       	pop	r29
    151a:	99 27       	eor	r25, r25
    151c:	87 fd       	sbrc	r24, 7
    151e:	90 95       	com	r25
    1520:	08 95       	ret

00001522 <strnlen_P>:
    1522:	fc 01       	movw	r30, r24
    1524:	05 90       	lpm	r0, Z+
    1526:	61 50       	subi	r22, 0x01	; 1
    1528:	70 40       	sbci	r23, 0x00	; 0
    152a:	01 10       	cpse	r0, r1
    152c:	d8 f7       	brcc	.-10     	; 0x1524 <strnlen_P+0x2>
    152e:	80 95       	com	r24
    1530:	90 95       	com	r25
    1532:	8e 0f       	add	r24, r30
    1534:	9f 1f       	adc	r25, r31
    1536:	08 95       	ret

00001538 <strnlen>:
    1538:	fc 01       	movw	r30, r24
    153a:	61 50       	subi	r22, 0x01	; 1
    153c:	70 40       	sbci	r23, 0x00	; 0
    153e:	01 90       	ld	r0, Z+
    1540:	01 10       	cpse	r0, r1
    1542:	d8 f7       	brcc	.-10     	; 0x153a <strnlen+0x2>
    1544:	80 95       	com	r24
    1546:	90 95       	com	r25
    1548:	8e 0f       	add	r24, r30
    154a:	9f 1f       	adc	r25, r31
    154c:	08 95       	ret

0000154e <__mulhi_const_10>:
    154e:	7a e0       	ldi	r23, 0x0A	; 10
    1550:	97 9f       	mul	r25, r23
    1552:	90 2d       	mov	r25, r0
    1554:	87 9f       	mul	r24, r23
    1556:	80 2d       	mov	r24, r0
    1558:	91 0d       	add	r25, r1
    155a:	11 24       	eor	r1, r1
    155c:	08 95       	ret

0000155e <fputc>:
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	fb 01       	movw	r30, r22
    1568:	23 81       	ldd	r18, Z+3	; 0x03
    156a:	21 fd       	sbrc	r18, 1
    156c:	03 c0       	rjmp	.+6      	; 0x1574 <fputc+0x16>
    156e:	8f ef       	ldi	r24, 0xFF	; 255
    1570:	9f ef       	ldi	r25, 0xFF	; 255
    1572:	2c c0       	rjmp	.+88     	; 0x15cc <fputc+0x6e>
    1574:	22 ff       	sbrs	r18, 2
    1576:	16 c0       	rjmp	.+44     	; 0x15a4 <fputc+0x46>
    1578:	46 81       	ldd	r20, Z+6	; 0x06
    157a:	57 81       	ldd	r21, Z+7	; 0x07
    157c:	24 81       	ldd	r18, Z+4	; 0x04
    157e:	35 81       	ldd	r19, Z+5	; 0x05
    1580:	42 17       	cp	r20, r18
    1582:	53 07       	cpc	r21, r19
    1584:	44 f4       	brge	.+16     	; 0x1596 <fputc+0x38>
    1586:	a0 81       	ld	r26, Z
    1588:	b1 81       	ldd	r27, Z+1	; 0x01
    158a:	9d 01       	movw	r18, r26
    158c:	2f 5f       	subi	r18, 0xFF	; 255
    158e:	3f 4f       	sbci	r19, 0xFF	; 255
    1590:	31 83       	std	Z+1, r19	; 0x01
    1592:	20 83       	st	Z, r18
    1594:	8c 93       	st	X, r24
    1596:	26 81       	ldd	r18, Z+6	; 0x06
    1598:	37 81       	ldd	r19, Z+7	; 0x07
    159a:	2f 5f       	subi	r18, 0xFF	; 255
    159c:	3f 4f       	sbci	r19, 0xFF	; 255
    159e:	37 83       	std	Z+7, r19	; 0x07
    15a0:	26 83       	std	Z+6, r18	; 0x06
    15a2:	14 c0       	rjmp	.+40     	; 0x15cc <fputc+0x6e>
    15a4:	8b 01       	movw	r16, r22
    15a6:	ec 01       	movw	r28, r24
    15a8:	fb 01       	movw	r30, r22
    15aa:	00 84       	ldd	r0, Z+8	; 0x08
    15ac:	f1 85       	ldd	r31, Z+9	; 0x09
    15ae:	e0 2d       	mov	r30, r0
    15b0:	09 95       	icall
    15b2:	89 2b       	or	r24, r25
    15b4:	e1 f6       	brne	.-72     	; 0x156e <fputc+0x10>
    15b6:	d8 01       	movw	r26, r16
    15b8:	16 96       	adiw	r26, 0x06	; 6
    15ba:	8d 91       	ld	r24, X+
    15bc:	9c 91       	ld	r25, X
    15be:	17 97       	sbiw	r26, 0x07	; 7
    15c0:	01 96       	adiw	r24, 0x01	; 1
    15c2:	17 96       	adiw	r26, 0x07	; 7
    15c4:	9c 93       	st	X, r25
    15c6:	8e 93       	st	-X, r24
    15c8:	16 97       	sbiw	r26, 0x06	; 6
    15ca:	ce 01       	movw	r24, r28
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	08 95       	ret

000015d6 <sprintf>:
    15d6:	ae e0       	ldi	r26, 0x0E	; 14
    15d8:	b0 e0       	ldi	r27, 0x00	; 0
    15da:	e1 ef       	ldi	r30, 0xF1	; 241
    15dc:	fa e0       	ldi	r31, 0x0A	; 10
    15de:	0c 94 6e 09 	jmp	0x12dc	; 0x12dc <__prologue_saves__+0x1c>
    15e2:	0d 89       	ldd	r16, Y+21	; 0x15
    15e4:	1e 89       	ldd	r17, Y+22	; 0x16
    15e6:	86 e0       	ldi	r24, 0x06	; 6
    15e8:	8c 83       	std	Y+4, r24	; 0x04
    15ea:	1a 83       	std	Y+2, r17	; 0x02
    15ec:	09 83       	std	Y+1, r16	; 0x01
    15ee:	8f ef       	ldi	r24, 0xFF	; 255
    15f0:	9f e7       	ldi	r25, 0x7F	; 127
    15f2:	9e 83       	std	Y+6, r25	; 0x06
    15f4:	8d 83       	std	Y+5, r24	; 0x05
    15f6:	ae 01       	movw	r20, r28
    15f8:	47 5e       	subi	r20, 0xE7	; 231
    15fa:	5f 4f       	sbci	r21, 0xFF	; 255
    15fc:	6f 89       	ldd	r22, Y+23	; 0x17
    15fe:	78 8d       	ldd	r23, Y+24	; 0x18
    1600:	ce 01       	movw	r24, r28
    1602:	01 96       	adiw	r24, 0x01	; 1
    1604:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vfprintf>
    1608:	ef 81       	ldd	r30, Y+7	; 0x07
    160a:	f8 85       	ldd	r31, Y+8	; 0x08
    160c:	e0 0f       	add	r30, r16
    160e:	f1 1f       	adc	r31, r17
    1610:	10 82       	st	Z, r1
    1612:	2e 96       	adiw	r28, 0x0e	; 14
    1614:	e4 e0       	ldi	r30, 0x04	; 4
    1616:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__epilogue_restores__+0x1c>

0000161a <__ultoa_invert>:
    161a:	fa 01       	movw	r30, r20
    161c:	aa 27       	eor	r26, r26
    161e:	28 30       	cpi	r18, 0x08	; 8
    1620:	51 f1       	breq	.+84     	; 0x1676 <__ultoa_invert+0x5c>
    1622:	20 31       	cpi	r18, 0x10	; 16
    1624:	81 f1       	breq	.+96     	; 0x1686 <__ultoa_invert+0x6c>
    1626:	e8 94       	clt
    1628:	6f 93       	push	r22
    162a:	6e 7f       	andi	r22, 0xFE	; 254
    162c:	6e 5f       	subi	r22, 0xFE	; 254
    162e:	7f 4f       	sbci	r23, 0xFF	; 255
    1630:	8f 4f       	sbci	r24, 0xFF	; 255
    1632:	9f 4f       	sbci	r25, 0xFF	; 255
    1634:	af 4f       	sbci	r26, 0xFF	; 255
    1636:	b1 e0       	ldi	r27, 0x01	; 1
    1638:	3e d0       	rcall	.+124    	; 0x16b6 <__ultoa_invert+0x9c>
    163a:	b4 e0       	ldi	r27, 0x04	; 4
    163c:	3c d0       	rcall	.+120    	; 0x16b6 <__ultoa_invert+0x9c>
    163e:	67 0f       	add	r22, r23
    1640:	78 1f       	adc	r23, r24
    1642:	89 1f       	adc	r24, r25
    1644:	9a 1f       	adc	r25, r26
    1646:	a1 1d       	adc	r26, r1
    1648:	68 0f       	add	r22, r24
    164a:	79 1f       	adc	r23, r25
    164c:	8a 1f       	adc	r24, r26
    164e:	91 1d       	adc	r25, r1
    1650:	a1 1d       	adc	r26, r1
    1652:	6a 0f       	add	r22, r26
    1654:	71 1d       	adc	r23, r1
    1656:	81 1d       	adc	r24, r1
    1658:	91 1d       	adc	r25, r1
    165a:	a1 1d       	adc	r26, r1
    165c:	20 d0       	rcall	.+64     	; 0x169e <__ultoa_invert+0x84>
    165e:	09 f4       	brne	.+2      	; 0x1662 <__ultoa_invert+0x48>
    1660:	68 94       	set
    1662:	3f 91       	pop	r19
    1664:	2a e0       	ldi	r18, 0x0A	; 10
    1666:	26 9f       	mul	r18, r22
    1668:	11 24       	eor	r1, r1
    166a:	30 19       	sub	r19, r0
    166c:	30 5d       	subi	r19, 0xD0	; 208
    166e:	31 93       	st	Z+, r19
    1670:	de f6       	brtc	.-74     	; 0x1628 <__ultoa_invert+0xe>
    1672:	cf 01       	movw	r24, r30
    1674:	08 95       	ret
    1676:	46 2f       	mov	r20, r22
    1678:	47 70       	andi	r20, 0x07	; 7
    167a:	40 5d       	subi	r20, 0xD0	; 208
    167c:	41 93       	st	Z+, r20
    167e:	b3 e0       	ldi	r27, 0x03	; 3
    1680:	0f d0       	rcall	.+30     	; 0x16a0 <__ultoa_invert+0x86>
    1682:	c9 f7       	brne	.-14     	; 0x1676 <__ultoa_invert+0x5c>
    1684:	f6 cf       	rjmp	.-20     	; 0x1672 <__ultoa_invert+0x58>
    1686:	46 2f       	mov	r20, r22
    1688:	4f 70       	andi	r20, 0x0F	; 15
    168a:	40 5d       	subi	r20, 0xD0	; 208
    168c:	4a 33       	cpi	r20, 0x3A	; 58
    168e:	18 f0       	brcs	.+6      	; 0x1696 <__ultoa_invert+0x7c>
    1690:	49 5d       	subi	r20, 0xD9	; 217
    1692:	31 fd       	sbrc	r19, 1
    1694:	40 52       	subi	r20, 0x20	; 32
    1696:	41 93       	st	Z+, r20
    1698:	02 d0       	rcall	.+4      	; 0x169e <__ultoa_invert+0x84>
    169a:	a9 f7       	brne	.-22     	; 0x1686 <__ultoa_invert+0x6c>
    169c:	ea cf       	rjmp	.-44     	; 0x1672 <__ultoa_invert+0x58>
    169e:	b4 e0       	ldi	r27, 0x04	; 4
    16a0:	a6 95       	lsr	r26
    16a2:	97 95       	ror	r25
    16a4:	87 95       	ror	r24
    16a6:	77 95       	ror	r23
    16a8:	67 95       	ror	r22
    16aa:	ba 95       	dec	r27
    16ac:	c9 f7       	brne	.-14     	; 0x16a0 <__ultoa_invert+0x86>
    16ae:	00 97       	sbiw	r24, 0x00	; 0
    16b0:	61 05       	cpc	r22, r1
    16b2:	71 05       	cpc	r23, r1
    16b4:	08 95       	ret
    16b6:	9b 01       	movw	r18, r22
    16b8:	ac 01       	movw	r20, r24
    16ba:	0a 2e       	mov	r0, r26
    16bc:	06 94       	lsr	r0
    16be:	57 95       	ror	r21
    16c0:	47 95       	ror	r20
    16c2:	37 95       	ror	r19
    16c4:	27 95       	ror	r18
    16c6:	ba 95       	dec	r27
    16c8:	c9 f7       	brne	.-14     	; 0x16bc <__ultoa_invert+0xa2>
    16ca:	62 0f       	add	r22, r18
    16cc:	73 1f       	adc	r23, r19
    16ce:	84 1f       	adc	r24, r20
    16d0:	95 1f       	adc	r25, r21
    16d2:	a0 1d       	adc	r26, r0
    16d4:	08 95       	ret

000016d6 <strtod>:
    16d6:	a0 e0       	ldi	r26, 0x00	; 0
    16d8:	b0 e0       	ldi	r27, 0x00	; 0
    16da:	e1 e7       	ldi	r30, 0x71	; 113
    16dc:	fb e0       	ldi	r31, 0x0B	; 11
    16de:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__prologue_saves__+0xc>
    16e2:	ec 01       	movw	r28, r24
    16e4:	6b 01       	movw	r12, r22
    16e6:	61 15       	cp	r22, r1
    16e8:	71 05       	cpc	r23, r1
    16ea:	19 f0       	breq	.+6      	; 0x16f2 <strtod+0x1c>
    16ec:	fb 01       	movw	r30, r22
    16ee:	91 83       	std	Z+1, r25	; 0x01
    16f0:	80 83       	st	Z, r24
    16f2:	7e 01       	movw	r14, r28
    16f4:	ff ef       	ldi	r31, 0xFF	; 255
    16f6:	ef 1a       	sub	r14, r31
    16f8:	ff 0a       	sbc	r15, r31
    16fa:	08 81       	ld	r16, Y
    16fc:	80 2f       	mov	r24, r16
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 b9 0c 	call	0x1972	; 0x1972 <isspace>
    1704:	89 2b       	or	r24, r25
    1706:	11 f0       	breq	.+4      	; 0x170c <strtod+0x36>
    1708:	e7 01       	movw	r28, r14
    170a:	f3 cf       	rjmp	.-26     	; 0x16f2 <strtod+0x1c>
    170c:	0d 32       	cpi	r16, 0x2D	; 45
    170e:	39 f4       	brne	.+14     	; 0x171e <strtod+0x48>
    1710:	7e 01       	movw	r14, r28
    1712:	82 e0       	ldi	r24, 0x02	; 2
    1714:	e8 0e       	add	r14, r24
    1716:	f1 1c       	adc	r15, r1
    1718:	09 81       	ldd	r16, Y+1	; 0x01
    171a:	11 e0       	ldi	r17, 0x01	; 1
    171c:	08 c0       	rjmp	.+16     	; 0x172e <strtod+0x58>
    171e:	0b 32       	cpi	r16, 0x2B	; 43
    1720:	29 f4       	brne	.+10     	; 0x172c <strtod+0x56>
    1722:	7e 01       	movw	r14, r28
    1724:	92 e0       	ldi	r25, 0x02	; 2
    1726:	e9 0e       	add	r14, r25
    1728:	f1 1c       	adc	r15, r1
    172a:	09 81       	ldd	r16, Y+1	; 0x01
    172c:	10 e0       	ldi	r17, 0x00	; 0
    172e:	e7 01       	movw	r28, r14
    1730:	21 97       	sbiw	r28, 0x01	; 1
    1732:	43 e0       	ldi	r20, 0x03	; 3
    1734:	50 e0       	ldi	r21, 0x00	; 0
    1736:	6e e5       	ldi	r22, 0x5E	; 94
    1738:	71 e0       	ldi	r23, 0x01	; 1
    173a:	ce 01       	movw	r24, r28
    173c:	0e 94 c2 0c 	call	0x1984	; 0x1984 <strncasecmp_P>
    1740:	89 2b       	or	r24, r25
    1742:	c1 f4       	brne	.+48     	; 0x1774 <strtod+0x9e>
    1744:	23 96       	adiw	r28, 0x03	; 3
    1746:	45 e0       	ldi	r20, 0x05	; 5
    1748:	50 e0       	ldi	r21, 0x00	; 0
    174a:	69 e5       	ldi	r22, 0x59	; 89
    174c:	71 e0       	ldi	r23, 0x01	; 1
    174e:	ce 01       	movw	r24, r28
    1750:	0e 94 c2 0c 	call	0x1984	; 0x1984 <strncasecmp_P>
    1754:	89 2b       	or	r24, r25
    1756:	09 f4       	brne	.+2      	; 0x175a <strtod+0x84>
    1758:	25 96       	adiw	r28, 0x05	; 5
    175a:	c1 14       	cp	r12, r1
    175c:	d1 04       	cpc	r13, r1
    175e:	19 f0       	breq	.+6      	; 0x1766 <strtod+0x90>
    1760:	f6 01       	movw	r30, r12
    1762:	d1 83       	std	Z+1, r29	; 0x01
    1764:	c0 83       	st	Z, r28
    1766:	11 11       	cpse	r17, r1
    1768:	f6 c0       	rjmp	.+492    	; 0x1956 <strtod+0x280>
    176a:	60 e0       	ldi	r22, 0x00	; 0
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	80 e8       	ldi	r24, 0x80	; 128
    1770:	9f e7       	ldi	r25, 0x7F	; 127
    1772:	fa c0       	rjmp	.+500    	; 0x1968 <strtod+0x292>
    1774:	43 e0       	ldi	r20, 0x03	; 3
    1776:	50 e0       	ldi	r21, 0x00	; 0
    1778:	66 e5       	ldi	r22, 0x56	; 86
    177a:	71 e0       	ldi	r23, 0x01	; 1
    177c:	ce 01       	movw	r24, r28
    177e:	0e 94 c2 0c 	call	0x1984	; 0x1984 <strncasecmp_P>
    1782:	89 2b       	or	r24, r25
    1784:	59 f4       	brne	.+22     	; 0x179c <strtod+0xc6>
    1786:	c1 14       	cp	r12, r1
    1788:	d1 04       	cpc	r13, r1
    178a:	09 f4       	brne	.+2      	; 0x178e <strtod+0xb8>
    178c:	e9 c0       	rjmp	.+466    	; 0x1960 <strtod+0x28a>
    178e:	f2 e0       	ldi	r31, 0x02	; 2
    1790:	ef 0e       	add	r14, r31
    1792:	f1 1c       	adc	r15, r1
    1794:	f6 01       	movw	r30, r12
    1796:	f1 82       	std	Z+1, r15	; 0x01
    1798:	e0 82       	st	Z, r14
    179a:	e2 c0       	rjmp	.+452    	; 0x1960 <strtod+0x28a>
    179c:	20 e0       	ldi	r18, 0x00	; 0
    179e:	30 e0       	ldi	r19, 0x00	; 0
    17a0:	a9 01       	movw	r20, r18
    17a2:	c0 e0       	ldi	r28, 0x00	; 0
    17a4:	d0 e0       	ldi	r29, 0x00	; 0
    17a6:	f7 01       	movw	r30, r14
    17a8:	80 ed       	ldi	r24, 0xD0	; 208
    17aa:	a8 2e       	mov	r10, r24
    17ac:	a0 0e       	add	r10, r16
    17ae:	89 e0       	ldi	r24, 0x09	; 9
    17b0:	8a 15       	cp	r24, r10
    17b2:	30 f1       	brcs	.+76     	; 0x1800 <strtod+0x12a>
    17b4:	91 2f       	mov	r25, r17
    17b6:	92 60       	ori	r25, 0x02	; 2
    17b8:	b9 2e       	mov	r11, r25
    17ba:	81 2f       	mov	r24, r17
    17bc:	88 70       	andi	r24, 0x08	; 8
    17be:	12 ff       	sbrs	r17, 2
    17c0:	04 c0       	rjmp	.+8      	; 0x17ca <strtod+0xf4>
    17c2:	81 11       	cpse	r24, r1
    17c4:	24 c0       	rjmp	.+72     	; 0x180e <strtod+0x138>
    17c6:	21 96       	adiw	r28, 0x01	; 1
    17c8:	22 c0       	rjmp	.+68     	; 0x180e <strtod+0x138>
    17ca:	81 11       	cpse	r24, r1
    17cc:	21 97       	sbiw	r28, 0x01	; 1
    17ce:	a5 e0       	ldi	r26, 0x05	; 5
    17d0:	b0 e0       	ldi	r27, 0x00	; 0
    17d2:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <__muluhisi3>
    17d6:	dc 01       	movw	r26, r24
    17d8:	cb 01       	movw	r24, r22
    17da:	88 0f       	add	r24, r24
    17dc:	99 1f       	adc	r25, r25
    17de:	aa 1f       	adc	r26, r26
    17e0:	bb 1f       	adc	r27, r27
    17e2:	9c 01       	movw	r18, r24
    17e4:	ad 01       	movw	r20, r26
    17e6:	2a 0d       	add	r18, r10
    17e8:	31 1d       	adc	r19, r1
    17ea:	41 1d       	adc	r20, r1
    17ec:	51 1d       	adc	r21, r1
    17ee:	28 39       	cpi	r18, 0x98	; 152
    17f0:	89 e9       	ldi	r24, 0x99	; 153
    17f2:	38 07       	cpc	r19, r24
    17f4:	48 07       	cpc	r20, r24
    17f6:	89 e1       	ldi	r24, 0x19	; 25
    17f8:	58 07       	cpc	r21, r24
    17fa:	48 f0       	brcs	.+18     	; 0x180e <strtod+0x138>
    17fc:	16 60       	ori	r17, 0x06	; 6
    17fe:	06 c0       	rjmp	.+12     	; 0x180c <strtod+0x136>
    1800:	9e ef       	ldi	r25, 0xFE	; 254
    1802:	a9 12       	cpse	r10, r25
    1804:	0a c0       	rjmp	.+20     	; 0x181a <strtod+0x144>
    1806:	13 fd       	sbrc	r17, 3
    1808:	40 c0       	rjmp	.+128    	; 0x188a <strtod+0x1b4>
    180a:	18 60       	ori	r17, 0x08	; 8
    180c:	b1 2e       	mov	r11, r17
    180e:	8f ef       	ldi	r24, 0xFF	; 255
    1810:	e8 1a       	sub	r14, r24
    1812:	f8 0a       	sbc	r15, r24
    1814:	00 81       	ld	r16, Z
    1816:	1b 2d       	mov	r17, r11
    1818:	c6 cf       	rjmp	.-116    	; 0x17a6 <strtod+0xd0>
    181a:	80 2f       	mov	r24, r16
    181c:	8f 7d       	andi	r24, 0xDF	; 223
    181e:	85 34       	cpi	r24, 0x45	; 69
    1820:	a1 f5       	brne	.+104    	; 0x188a <strtod+0x1b4>
    1822:	80 81       	ld	r24, Z
    1824:	8d 32       	cpi	r24, 0x2D	; 45
    1826:	11 f4       	brne	.+4      	; 0x182c <strtod+0x156>
    1828:	10 61       	ori	r17, 0x10	; 16
    182a:	06 c0       	rjmp	.+12     	; 0x1838 <strtod+0x162>
    182c:	8b 32       	cpi	r24, 0x2B	; 43
    182e:	21 f0       	breq	.+8      	; 0x1838 <strtod+0x162>
    1830:	31 96       	adiw	r30, 0x01	; 1
    1832:	61 e0       	ldi	r22, 0x01	; 1
    1834:	70 e0       	ldi	r23, 0x00	; 0
    1836:	04 c0       	rjmp	.+8      	; 0x1840 <strtod+0x16a>
    1838:	81 81       	ldd	r24, Z+1	; 0x01
    183a:	32 96       	adiw	r30, 0x02	; 2
    183c:	62 e0       	ldi	r22, 0x02	; 2
    183e:	70 e0       	ldi	r23, 0x00	; 0
    1840:	80 53       	subi	r24, 0x30	; 48
    1842:	8a 30       	cpi	r24, 0x0A	; 10
    1844:	18 f0       	brcs	.+6      	; 0x184c <strtod+0x176>
    1846:	e6 1b       	sub	r30, r22
    1848:	f7 0b       	sbc	r31, r23
    184a:	1f c0       	rjmp	.+62     	; 0x188a <strtod+0x1b4>
    184c:	60 e0       	ldi	r22, 0x00	; 0
    184e:	70 e0       	ldi	r23, 0x00	; 0
    1850:	60 38       	cpi	r22, 0x80	; 128
    1852:	9c e0       	ldi	r25, 0x0C	; 12
    1854:	79 07       	cpc	r23, r25
    1856:	5c f4       	brge	.+22     	; 0x186e <strtod+0x198>
    1858:	db 01       	movw	r26, r22
    185a:	aa 0f       	add	r26, r26
    185c:	bb 1f       	adc	r27, r27
    185e:	aa 0f       	add	r26, r26
    1860:	bb 1f       	adc	r27, r27
    1862:	6a 0f       	add	r22, r26
    1864:	7b 1f       	adc	r23, r27
    1866:	66 0f       	add	r22, r22
    1868:	77 1f       	adc	r23, r23
    186a:	68 0f       	add	r22, r24
    186c:	71 1d       	adc	r23, r1
    186e:	31 96       	adiw	r30, 0x01	; 1
    1870:	df 01       	movw	r26, r30
    1872:	11 97       	sbiw	r26, 0x01	; 1
    1874:	8c 91       	ld	r24, X
    1876:	80 53       	subi	r24, 0x30	; 48
    1878:	8a 30       	cpi	r24, 0x0A	; 10
    187a:	50 f3       	brcs	.-44     	; 0x1850 <strtod+0x17a>
    187c:	14 ff       	sbrs	r17, 4
    187e:	03 c0       	rjmp	.+6      	; 0x1886 <strtod+0x1b0>
    1880:	71 95       	neg	r23
    1882:	61 95       	neg	r22
    1884:	71 09       	sbc	r23, r1
    1886:	c6 0f       	add	r28, r22
    1888:	d7 1f       	adc	r29, r23
    188a:	11 ff       	sbrs	r17, 1
    188c:	08 c0       	rjmp	.+16     	; 0x189e <strtod+0x1c8>
    188e:	c1 14       	cp	r12, r1
    1890:	d1 04       	cpc	r13, r1
    1892:	29 f0       	breq	.+10     	; 0x189e <strtod+0x1c8>
    1894:	cf 01       	movw	r24, r30
    1896:	01 97       	sbiw	r24, 0x01	; 1
    1898:	f6 01       	movw	r30, r12
    189a:	91 83       	std	Z+1, r25	; 0x01
    189c:	80 83       	st	Z, r24
    189e:	ca 01       	movw	r24, r20
    18a0:	b9 01       	movw	r22, r18
    18a2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__floatunsisf>
    18a6:	21 2f       	mov	r18, r17
    18a8:	23 70       	andi	r18, 0x03	; 3
    18aa:	23 30       	cpi	r18, 0x03	; 3
    18ac:	19 f0       	breq	.+6      	; 0x18b4 <strtod+0x1de>
    18ae:	4b 01       	movw	r8, r22
    18b0:	5c 01       	movw	r10, r24
    18b2:	06 c0       	rjmp	.+12     	; 0x18c0 <strtod+0x1ea>
    18b4:	4b 01       	movw	r8, r22
    18b6:	5c 01       	movw	r10, r24
    18b8:	b7 fa       	bst	r11, 7
    18ba:	b0 94       	com	r11
    18bc:	b7 f8       	bld	r11, 7
    18be:	b0 94       	com	r11
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	a9 01       	movw	r20, r18
    18c6:	c5 01       	movw	r24, r10
    18c8:	b4 01       	movw	r22, r8
    18ca:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__cmpsf2>
    18ce:	88 23       	and	r24, r24
    18d0:	09 f4       	brne	.+2      	; 0x18d4 <strtod+0x1fe>
    18d2:	3e c0       	rjmp	.+124    	; 0x1950 <strtod+0x27a>
    18d4:	d7 ff       	sbrs	r29, 7
    18d6:	06 c0       	rjmp	.+12     	; 0x18e4 <strtod+0x20e>
    18d8:	d1 95       	neg	r29
    18da:	c1 95       	neg	r28
    18dc:	d1 09       	sbc	r29, r1
    18de:	05 e7       	ldi	r16, 0x75	; 117
    18e0:	11 e0       	ldi	r17, 0x01	; 1
    18e2:	02 c0       	rjmp	.+4      	; 0x18e8 <strtod+0x212>
    18e4:	0d e8       	ldi	r16, 0x8D	; 141
    18e6:	11 e0       	ldi	r17, 0x01	; 1
    18e8:	68 01       	movw	r12, r16
    18ea:	f8 e1       	ldi	r31, 0x18	; 24
    18ec:	cf 1a       	sub	r12, r31
    18ee:	d1 08       	sbc	r13, r1
    18f0:	90 e2       	ldi	r25, 0x20	; 32
    18f2:	e9 2e       	mov	r14, r25
    18f4:	f1 2c       	mov	r15, r1
    18f6:	ce 15       	cp	r28, r14
    18f8:	df 05       	cpc	r29, r15
    18fa:	74 f0       	brlt	.+28     	; 0x1918 <strtod+0x242>
    18fc:	f8 01       	movw	r30, r16
    18fe:	25 91       	lpm	r18, Z+
    1900:	35 91       	lpm	r19, Z+
    1902:	45 91       	lpm	r20, Z+
    1904:	54 91       	lpm	r21, Z
    1906:	c5 01       	movw	r24, r10
    1908:	b4 01       	movw	r22, r8
    190a:	0e 94 76 05 	call	0xaec	; 0xaec <__mulsf3>
    190e:	4b 01       	movw	r8, r22
    1910:	5c 01       	movw	r10, r24
    1912:	ce 19       	sub	r28, r14
    1914:	df 09       	sbc	r29, r15
    1916:	ef cf       	rjmp	.-34     	; 0x18f6 <strtod+0x220>
    1918:	04 50       	subi	r16, 0x04	; 4
    191a:	11 09       	sbc	r17, r1
    191c:	f5 94       	asr	r15
    191e:	e7 94       	ror	r14
    1920:	0c 15       	cp	r16, r12
    1922:	1d 05       	cpc	r17, r13
    1924:	41 f7       	brne	.-48     	; 0x18f6 <strtod+0x220>
    1926:	8a 2d       	mov	r24, r10
    1928:	88 0f       	add	r24, r24
    192a:	8b 2d       	mov	r24, r11
    192c:	88 1f       	adc	r24, r24
    192e:	8f 3f       	cpi	r24, 0xFF	; 255
    1930:	49 f0       	breq	.+18     	; 0x1944 <strtod+0x26e>
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	a9 01       	movw	r20, r18
    1938:	c5 01       	movw	r24, r10
    193a:	b4 01       	movw	r22, r8
    193c:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__cmpsf2>
    1940:	81 11       	cpse	r24, r1
    1942:	06 c0       	rjmp	.+12     	; 0x1950 <strtod+0x27a>
    1944:	82 e2       	ldi	r24, 0x22	; 34
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <errno+0x1>
    194c:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <errno>
    1950:	c5 01       	movw	r24, r10
    1952:	b4 01       	movw	r22, r8
    1954:	09 c0       	rjmp	.+18     	; 0x1968 <strtod+0x292>
    1956:	60 e0       	ldi	r22, 0x00	; 0
    1958:	70 e0       	ldi	r23, 0x00	; 0
    195a:	80 e8       	ldi	r24, 0x80	; 128
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	04 c0       	rjmp	.+8      	; 0x1968 <strtod+0x292>
    1960:	60 e0       	ldi	r22, 0x00	; 0
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	80 ec       	ldi	r24, 0xC0	; 192
    1966:	9f e7       	ldi	r25, 0x7F	; 127
    1968:	cd b7       	in	r28, 0x3d	; 61
    196a:	de b7       	in	r29, 0x3e	; 62
    196c:	ec e0       	ldi	r30, 0x0C	; 12
    196e:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__epilogue_restores__+0xc>

00001972 <isspace>:
    1972:	91 11       	cpse	r25, r1
    1974:	0c 94 03 0d 	jmp	0x1a06	; 0x1a06 <__ctype_isfalse>
    1978:	80 32       	cpi	r24, 0x20	; 32
    197a:	19 f0       	breq	.+6      	; 0x1982 <isspace+0x10>
    197c:	89 50       	subi	r24, 0x09	; 9
    197e:	85 50       	subi	r24, 0x05	; 5
    1980:	c8 f7       	brcc	.-14     	; 0x1974 <isspace+0x2>
    1982:	08 95       	ret

00001984 <strncasecmp_P>:
    1984:	fb 01       	movw	r30, r22
    1986:	dc 01       	movw	r26, r24
    1988:	41 50       	subi	r20, 0x01	; 1
    198a:	50 40       	sbci	r21, 0x00	; 0
    198c:	88 f0       	brcs	.+34     	; 0x19b0 <strncasecmp_P+0x2c>
    198e:	8d 91       	ld	r24, X+
    1990:	81 34       	cpi	r24, 0x41	; 65
    1992:	1c f0       	brlt	.+6      	; 0x199a <strncasecmp_P+0x16>
    1994:	8b 35       	cpi	r24, 0x5B	; 91
    1996:	0c f4       	brge	.+2      	; 0x199a <strncasecmp_P+0x16>
    1998:	80 5e       	subi	r24, 0xE0	; 224
    199a:	65 91       	lpm	r22, Z+
    199c:	61 34       	cpi	r22, 0x41	; 65
    199e:	1c f0       	brlt	.+6      	; 0x19a6 <strncasecmp_P+0x22>
    19a0:	6b 35       	cpi	r22, 0x5B	; 91
    19a2:	0c f4       	brge	.+2      	; 0x19a6 <strncasecmp_P+0x22>
    19a4:	60 5e       	subi	r22, 0xE0	; 224
    19a6:	86 1b       	sub	r24, r22
    19a8:	61 11       	cpse	r22, r1
    19aa:	71 f3       	breq	.-36     	; 0x1988 <strncasecmp_P+0x4>
    19ac:	99 0b       	sbc	r25, r25
    19ae:	08 95       	ret
    19b0:	88 1b       	sub	r24, r24
    19b2:	fc cf       	rjmp	.-8      	; 0x19ac <strncasecmp_P+0x28>

000019b4 <__cmpsf2>:
    19b4:	0e 94 df 0c 	call	0x19be	; 0x19be <__fp_cmp>
    19b8:	08 f4       	brcc	.+2      	; 0x19bc <__cmpsf2+0x8>
    19ba:	81 e0       	ldi	r24, 0x01	; 1
    19bc:	08 95       	ret

000019be <__fp_cmp>:
    19be:	99 0f       	add	r25, r25
    19c0:	00 08       	sbc	r0, r0
    19c2:	55 0f       	add	r21, r21
    19c4:	aa 0b       	sbc	r26, r26
    19c6:	e0 e8       	ldi	r30, 0x80	; 128
    19c8:	fe ef       	ldi	r31, 0xFE	; 254
    19ca:	16 16       	cp	r1, r22
    19cc:	17 06       	cpc	r1, r23
    19ce:	e8 07       	cpc	r30, r24
    19d0:	f9 07       	cpc	r31, r25
    19d2:	c0 f0       	brcs	.+48     	; 0x1a04 <__fp_cmp+0x46>
    19d4:	12 16       	cp	r1, r18
    19d6:	13 06       	cpc	r1, r19
    19d8:	e4 07       	cpc	r30, r20
    19da:	f5 07       	cpc	r31, r21
    19dc:	98 f0       	brcs	.+38     	; 0x1a04 <__fp_cmp+0x46>
    19de:	62 1b       	sub	r22, r18
    19e0:	73 0b       	sbc	r23, r19
    19e2:	84 0b       	sbc	r24, r20
    19e4:	95 0b       	sbc	r25, r21
    19e6:	39 f4       	brne	.+14     	; 0x19f6 <__fp_cmp+0x38>
    19e8:	0a 26       	eor	r0, r26
    19ea:	61 f0       	breq	.+24     	; 0x1a04 <__fp_cmp+0x46>
    19ec:	23 2b       	or	r18, r19
    19ee:	24 2b       	or	r18, r20
    19f0:	25 2b       	or	r18, r21
    19f2:	21 f4       	brne	.+8      	; 0x19fc <__fp_cmp+0x3e>
    19f4:	08 95       	ret
    19f6:	0a 26       	eor	r0, r26
    19f8:	09 f4       	brne	.+2      	; 0x19fc <__fp_cmp+0x3e>
    19fa:	a1 40       	sbci	r26, 0x01	; 1
    19fc:	a6 95       	lsr	r26
    19fe:	8f ef       	ldi	r24, 0xFF	; 255
    1a00:	81 1d       	adc	r24, r1
    1a02:	81 1d       	adc	r24, r1
    1a04:	08 95       	ret

00001a06 <__ctype_isfalse>:
    1a06:	99 27       	eor	r25, r25
    1a08:	88 27       	eor	r24, r24

00001a0a <__ctype_istrue>:
    1a0a:	08 95       	ret

00001a0c <__muluhisi3>:
    1a0c:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__umulhisi3>
    1a10:	a5 9f       	mul	r26, r21
    1a12:	90 0d       	add	r25, r0
    1a14:	b4 9f       	mul	r27, r20
    1a16:	90 0d       	add	r25, r0
    1a18:	a4 9f       	mul	r26, r20
    1a1a:	80 0d       	add	r24, r0
    1a1c:	91 1d       	adc	r25, r1
    1a1e:	11 24       	eor	r1, r1
    1a20:	08 95       	ret

00001a22 <__umulhisi3>:
    1a22:	a2 9f       	mul	r26, r18
    1a24:	b0 01       	movw	r22, r0
    1a26:	b3 9f       	mul	r27, r19
    1a28:	c0 01       	movw	r24, r0
    1a2a:	a3 9f       	mul	r26, r19
    1a2c:	70 0d       	add	r23, r0
    1a2e:	81 1d       	adc	r24, r1
    1a30:	11 24       	eor	r1, r1
    1a32:	91 1d       	adc	r25, r1
    1a34:	b2 9f       	mul	r27, r18
    1a36:	70 0d       	add	r23, r0
    1a38:	81 1d       	adc	r24, r1
    1a3a:	11 24       	eor	r1, r1
    1a3c:	91 1d       	adc	r25, r1
    1a3e:	08 95       	ret

00001a40 <_exit>:
    1a40:	f8 94       	cli

00001a42 <__stop_program>:
    1a42:	ff cf       	rjmp	.-2      	; 0x1a42 <__stop_program>
