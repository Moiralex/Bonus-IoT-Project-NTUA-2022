
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000024e  00800060  00001c2a  00001cbe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000011b  008002ae  008002ae  00001f0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001fa8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cdf  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070c  00000000  00000000  00002d17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b10  00000000  00000000  00003423  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  00003f34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b0  00000000  00000000  00004198  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007fb  00000000  00000000  00004648  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00004e43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 df 01 	jmp	0x3be	; 0x3be <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	ea e2       	ldi	r30, 0x2A	; 42
     1a6:	fc e1       	ldi	r31, 0x1C	; 28
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	ae 3a       	cpi	r26, 0xAE	; 174
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	ae ea       	ldi	r26, 0xAE	; 174
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a9 3c       	cpi	r26, 0xC9	; 201
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 9c 04 	call	0x938	; 0x938 <main>
     1c8:	0c 94 13 0e 	jmp	0x1c26	; 0x1c26 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     1d0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     1d2:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     1d4:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     1d6:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     1d8:	6d d0       	rcall	.+218    	; 0x2b4 <wait_msec>
ldi r24, 0x30
     1da:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1dc:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1de:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1e0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1e2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1e4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1e6:	70 d0       	rcall	.+224    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1e8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ea:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1ec:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ee:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1f0:	6b d0       	rcall	.+214    	; 0x2c8 <wait_usec>
pop r25
     1f2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1f4:	8f 91       	pop	r24
ldi r24, 0x30
     1f6:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1f8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1fa:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1fc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1fe:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     200:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     202:	62 d0       	rcall	.+196    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     204:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     206:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     208:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     20a:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     20c:	5d d0       	rcall	.+186    	; 0x2c8 <wait_usec>
pop r25
     20e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     210:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     212:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     214:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     216:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     218:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     21a:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     21e:	54 d0       	rcall	.+168    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     220:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     222:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     224:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     226:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     228:	4f d0       	rcall	.+158    	; 0x2c8 <wait_usec>
pop r25
     22a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     22c:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     22e:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     230:	0f d0       	rcall	.+30     	; 0x250 <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     232:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     234:	0d d0       	rcall	.+26     	; 0x250 <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     236:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     238:	0b d0       	rcall	.+22     	; 0x250 <lcd_command_sim>
ldi r24, lo8(1530)
     23a:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     23c:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     23e:	44 d0       	rcall	.+136    	; 0x2c8 <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     240:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     242:	06 d0       	rcall	.+12     	; 0x250 <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     244:	9f 91       	pop	r25
pop r24
     246:	8f 91       	pop	r24
ret
     248:	08 95       	ret

0000024a <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     24a:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     24c:	01 d0       	rcall	.+2      	; 0x250 <lcd_command_sim>
ret
     24e:	08 95       	ret

00000250 <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     250:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     252:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     254:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     256:	06 d0       	rcall	.+12     	; 0x264 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     258:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     25a:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     25c:	35 d0       	rcall	.+106    	; 0x2c8 <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     25e:	9f 91       	pop	r25
pop r24
     260:	8f 91       	pop	r24
ret
     262:	08 95       	ret

00000264 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     264:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     266:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     268:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     26a:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     26c:	2d d0       	rcall	.+90     	; 0x2c8 <wait_usec>
pop r25
     26e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     270:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     272:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     274:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     276:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     278:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     27a:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     27c:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     27e:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     280:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     282:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     284:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     286:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     288:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     28a:	1e d0       	rcall	.+60     	; 0x2c8 <wait_usec>
pop r25
     28c:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     28e:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     290:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     292:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     294:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     296:	89 0f       	add	r24, r25
out PORTD, r24
     298:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     29a:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     29c:	93 98       	cbi	0x12, 3	; 18
ret
     29e:	08 95       	ret

000002a0 <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     2a0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     2a2:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     2a4:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     2a6:	de df       	rcall	.-68     	; 0x264 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     2a8:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     2aa:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2ac:	0d d0       	rcall	.+26     	; 0x2c8 <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     2ae:	9f 91       	pop	r25
pop r24
     2b0:	8f 91       	pop	r24
ret
     2b2:	08 95       	ret

000002b4 <wait_msec>:

.global wait_msec
wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     2b4:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     2b6:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     2b8:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     2ba:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     2bc:	05 d0       	rcall	.+10     	; 0x2c8 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     2be:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     2c0:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     2c2:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2c4:	b9 f7       	brne	.-18     	; 0x2b4 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     2c6:	08 95       	ret

000002c8 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     2c8:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2d2:	d1 f7       	brne	.-12     	; 0x2c8 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     2d4:	08 95       	ret

000002d6 <print>:


.global print
print:
rcall lcd_data_sim
     2d6:	e4 df       	rcall	.-56     	; 0x2a0 <lcd_data_sim>
     2d8:	08 95       	ret

000002da <print_string>:
	while(c!='S') {
		c=usart_receive();
	}
	while(UCSRA&(1<<RXC))
	usart_receive(); //flush ServedClient out of read buffer
}
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	ec 01       	movw	r28, r24
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	07 c0       	rjmp	.+14     	; 0x2f4 <print_string+0x1a>
     2e6:	fe 01       	movw	r30, r28
     2e8:	e8 0f       	add	r30, r24
     2ea:	f9 1f       	adc	r31, r25
     2ec:	80 81       	ld	r24, Z
     2ee:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <print>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	81 2f       	mov	r24, r17
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	fe 01       	movw	r30, r28
     2fa:	01 90       	ld	r0, Z+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <print_string+0x20>
     300:	31 97       	sbiw	r30, 0x01	; 1
     302:	ec 1b       	sub	r30, r28
     304:	fd 0b       	sbc	r31, r29
     306:	8e 17       	cp	r24, r30
     308:	9f 07       	cpc	r25, r31
     30a:	68 f3       	brcs	.-38     	; 0x2e6 <print_string+0xc>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	08 95       	ret

00000314 <usart_init>:
     314:	1b b8       	out	0x0b, r1	; 11
     316:	28 e1       	ldi	r18, 0x18	; 24
     318:	2a b9       	out	0x0a, r18	; 10
     31a:	90 bd       	out	0x20, r25	; 32
     31c:	89 b9       	out	0x09, r24	; 9
     31e:	86 e8       	ldi	r24, 0x86	; 134
     320:	80 bd       	out	0x20, r24	; 32
     322:	08 95       	ret

00000324 <usart_transmit>:
     324:	5d 9b       	sbis	0x0b, 5	; 11
     326:	fe cf       	rjmp	.-4      	; 0x324 <usart_transmit>
     328:	8c b9       	out	0x0c, r24	; 12
     32a:	08 95       	ret

0000032c <usart_receive>:
     32c:	5f 9b       	sbis	0x0b, 7	; 11
     32e:	fe cf       	rjmp	.-4      	; 0x32c <usart_receive>
     330:	8c b1       	in	r24, 0x0c	; 12
     332:	08 95       	ret

00000334 <clear_buffer>:
     334:	84 e6       	ldi	r24, 0x64	; 100
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <wait_msec>
     33c:	02 c0       	rjmp	.+4      	; 0x342 <clear_buffer+0xe>
     33e:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     342:	5f 99       	sbic	0x0b, 7	; 11
     344:	fc cf       	rjmp	.-8      	; 0x33e <clear_buffer+0xa>
     346:	08 95       	ret

00000348 <serialWrite>:
     348:	1f 93       	push	r17
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	ec 01       	movw	r28, r24
     350:	10 e0       	ldi	r17, 0x00	; 0
     352:	07 c0       	rjmp	.+14     	; 0x362 <serialWrite+0x1a>
     354:	fe 01       	movw	r30, r28
     356:	e8 0f       	add	r30, r24
     358:	f9 1f       	adc	r31, r25
     35a:	80 81       	ld	r24, Z
     35c:	0e 94 92 01 	call	0x324	; 0x324 <usart_transmit>
     360:	1f 5f       	subi	r17, 0xFF	; 255
     362:	81 2f       	mov	r24, r17
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	fe 01       	movw	r30, r28
     368:	01 90       	ld	r0, Z+
     36a:	00 20       	and	r0, r0
     36c:	e9 f7       	brne	.-6      	; 0x368 <serialWrite+0x20>
     36e:	31 97       	sbiw	r30, 0x01	; 1
     370:	ec 1b       	sub	r30, r28
     372:	fd 0b       	sbc	r31, r29
     374:	8e 17       	cp	r24, r30
     376:	9f 07       	cpc	r25, r31
     378:	68 f3       	brcs	.-38     	; 0x354 <serialWrite+0xc>
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	1f 91       	pop	r17
     380:	08 95       	ret

00000382 <sendCommand>:
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	ec 01       	movw	r28, r24
     388:	0e 94 a4 01 	call	0x348	; 0x348 <serialWrite>
     38c:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     390:	0c c0       	rjmp	.+24     	; 0x3aa <sendCommand+0x28>
     392:	86 34       	cpi	r24, 0x46	; 70
     394:	41 f4       	brne	.+16     	; 0x3a6 <sendCommand+0x24>
     396:	02 c0       	rjmp	.+4      	; 0x39c <sendCommand+0x1a>
     398:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     39c:	5f 99       	sbic	0x0b, 7	; 11
     39e:	fc cf       	rjmp	.-8      	; 0x398 <sendCommand+0x16>
     3a0:	ce 01       	movw	r24, r28
     3a2:	0e 94 a4 01 	call	0x348	; 0x348 <serialWrite>
     3a6:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     3aa:	83 35       	cpi	r24, 0x53	; 83
     3ac:	91 f7       	brne	.-28     	; 0x392 <sendCommand+0x10>
     3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <sendCommand+0x32>
     3b0:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     3b4:	5f 99       	sbic	0x0b, 7	; 11
     3b6:	fc cf       	rjmp	.-8      	; 0x3b0 <sendCommand+0x2e>
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <__vector_8>:

ISR(TIMER1_OVF_vect) {
     3be:	1f 92       	push	r1
     3c0:	0f 92       	push	r0
     3c2:	0f b6       	in	r0, 0x3f	; 63
     3c4:	0f 92       	push	r0
     3c6:	11 24       	eor	r1, r1
     3c8:	cf 92       	push	r12
     3ca:	df 92       	push	r13
     3cc:	ef 92       	push	r14
     3ce:	ff 92       	push	r15
     3d0:	0f 93       	push	r16
     3d2:	1f 93       	push	r17
     3d4:	2f 93       	push	r18
     3d6:	3f 93       	push	r19
     3d8:	4f 93       	push	r20
     3da:	5f 93       	push	r21
     3dc:	6f 93       	push	r22
     3de:	7f 93       	push	r23
     3e0:	8f 93       	push	r24
     3e2:	9f 93       	push	r25
     3e4:	af 93       	push	r26
     3e6:	bf 93       	push	r27
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ef 93       	push	r30
     3ee:	ff 93       	push	r31
	char c;
	bool failed;
	int counter =0;
	
	cli();
     3f0:	f8 94       	cli

	if(!first) {
     3f2:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <first>
     3f6:	81 11       	cpse	r24, r1
     3f8:	7f c2       	rjmp	.+1278   	; 0x8f8 <__stack+0x499>
     3fa:	ee 24       	eor	r14, r14
     3fc:	e3 94       	inc	r14
     3fe:	f1 2c       	mov	r15, r1
     400:	23 c1       	rjmp	.+582    	; 0x648 <__stack+0x1e9>
		for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
			failed=false;

			sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k); //connect to sensor boards and receive values
     402:	ff 92       	push	r15
     404:	ef 92       	push	r14
     406:	80 e6       	ldi	r24, 0x60	; 96
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	9f 93       	push	r25
     40c:	8f 93       	push	r24
     40e:	8a eb       	ldi	r24, 0xBA	; 186
     410:	92 e0       	ldi	r25, 0x02	; 2
     412:	9f 93       	push	r25
     414:	8f 93       	push	r24
     416:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
			sendCommand(string_to_send);
     41a:	8a eb       	ldi	r24, 0xBA	; 186
     41c:	92 e0       	ldi	r25, 0x02	; 2
     41e:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>
			
			strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     422:	80 e2       	ldi	r24, 0x20	; 32
     424:	e9 e7       	ldi	r30, 0x79	; 121
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	aa eb       	ldi	r26, 0xBA	; 186
     42a:	b2 e0       	ldi	r27, 0x02	; 2
     42c:	01 90       	ld	r0, Z+
     42e:	0d 92       	st	X+, r0
     430:	8a 95       	dec	r24
     432:	e1 f7       	brne	.-8      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
			sendCommand(string_to_send);
     434:	8a eb       	ldi	r24, 0xBA	; 186
     436:	92 e0       	ldi	r25, 0x02	; 2
     438:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>
			
			PORTB=PORTB^0xFF;
     43c:	88 b3       	in	r24, 0x18	; 24
     43e:	80 95       	com	r24
     440:	88 bb       	out	0x18, r24	; 24
			strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[request]\n");
     442:	89 e2       	ldi	r24, 0x29	; 41
     444:	e9 e9       	ldi	r30, 0x99	; 153
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	aa eb       	ldi	r26, 0xBA	; 186
     44a:	b2 e0       	ldi	r27, 0x02	; 2
     44c:	01 90       	ld	r0, Z+
     44e:	0d 92       	st	X+, r0
     450:	8a 95       	dec	r24
     452:	e1 f7       	brne	.-8      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
			sendCommand(string_to_send);
     454:	8a eb       	ldi	r24, 0xBA	; 186
     456:	92 e0       	ldi	r25, 0x02	; 2
     458:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

			strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     45c:	87 e2       	ldi	r24, 0x27	; 39
     45e:	e2 ec       	ldi	r30, 0xC2	; 194
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	aa eb       	ldi	r26, 0xBA	; 186
     464:	b2 e0       	ldi	r27, 0x02	; 2
     466:	01 90       	ld	r0, Z+
     468:	0d 92       	st	X+, r0
     46a:	8a 95       	dec	r24
     46c:	e1 f7       	brne	.-8      	; 0x466 <__stack+0x7>
			sendCommand(string_to_send);
     46e:	8a eb       	ldi	r24, 0xBA	; 186
     470:	92 e0       	ldi	r25, 0x02	; 2
     472:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

			clear_buffer();
     476:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
			PORTB=0x01;
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	88 bb       	out	0x18, r24	; 24
			strcpy(string_to_send, "ESP:connect\n");
     47e:	8d e0       	ldi	r24, 0x0D	; 13
     480:	e9 ee       	ldi	r30, 0xE9	; 233
     482:	f0 e0       	ldi	r31, 0x00	; 0
     484:	aa eb       	ldi	r26, 0xBA	; 186
     486:	b2 e0       	ldi	r27, 0x02	; 2
     488:	01 90       	ld	r0, Z+
     48a:	0d 92       	st	X+, r0
     48c:	8a 95       	dec	r24
     48e:	e1 f7       	brne	.-8      	; 0x488 <__stack+0x29>
			sendCommand(string_to_send);
     490:	8a eb       	ldi	r24, 0xBA	; 186
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

			PORTB=0x02;
     498:	82 e0       	ldi	r24, 0x02	; 2
     49a:	88 bb       	out	0x18, r24	; 24
			
			strcpy(string_to_send, "ESP:clientTransmit\n");
     49c:	84 e1       	ldi	r24, 0x14	; 20
     49e:	e6 ef       	ldi	r30, 0xF6	; 246
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	aa eb       	ldi	r26, 0xBA	; 186
     4a4:	b2 e0       	ldi	r27, 0x02	; 2
     4a6:	01 90       	ld	r0, Z+
     4a8:	0d 92       	st	X+, r0
     4aa:	8a 95       	dec	r24
     4ac:	e1 f7       	brne	.-8      	; 0x4a6 <__stack+0x47>
			sendCommand(string_to_send);
     4ae:	8a eb       	ldi	r24, 0xBA	; 186
     4b0:	92 e0       	ldi	r25, 0x02	; 2
     4b2:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

			PORTB=0x04;
     4b6:	84 e0       	ldi	r24, 0x04	; 4
     4b8:	88 bb       	out	0x18, r24	; 24
			clear_buffer();
     4ba:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
			strcpy(string_to_send, "ESP:getValue:\"Moist_Sensor\"\n");
     4be:	8d e1       	ldi	r24, 0x1D	; 29
     4c0:	ea e0       	ldi	r30, 0x0A	; 10
     4c2:	f1 e0       	ldi	r31, 0x01	; 1
     4c4:	aa eb       	ldi	r26, 0xBA	; 186
     4c6:	b2 e0       	ldi	r27, 0x02	; 2
     4c8:	01 90       	ld	r0, Z+
     4ca:	0d 92       	st	X+, r0
     4cc:	8a 95       	dec	r24
     4ce:	e1 f7       	brne	.-8      	; 0x4c8 <__stack+0x69>
			serialWrite(string_to_send);
     4d0:	8a eb       	ldi	r24, 0xBA	; 186
     4d2:	92 e0       	ldi	r25, 0x02	; 2
     4d4:	0e 94 a4 01 	call	0x348	; 0x348 <serialWrite>
			
			counter=0;
			while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	0f 90       	pop	r0
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     4e8:	82 32       	cpi	r24, 0x22	; 34
     4ea:	e1 f7       	brne	.-8      	; 0x4e4 <__stack+0x85>
			c=usart_receive(); //read most significant digit
     4ec:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			if(c=='F')
     4f0:	86 34       	cpi	r24, 0x46	; 70
     4f2:	11 f0       	breq	.+4      	; 0x4f8 <__stack+0x99>
	cli();

	if(!first) {
		for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
			failed=false;
     4f4:	d1 2c       	mov	r13, r1
     4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__stack+0x9d>
			
			counter=0;
			while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
			c=usart_receive(); //read most significant digit
			if(c=='F')
			failed=true;
     4f8:	dd 24       	eor	r13, r13
     4fa:	d3 94       	inc	r13
	cli();

	if(!first) {
		for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
			failed=false;
     4fc:	c0 e0       	ldi	r28, 0x00	; 0
     4fe:	d0 e0       	ldi	r29, 0x00	; 0
     500:	09 c0       	rjmp	.+18     	; 0x514 <__stack+0xb5>
			while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
			c=usart_receive(); //read most significant digit
			if(c=='F')
			failed=true;
			while(c != '"' && !failed){ // read the whole number (until " is read)
				conv_buffer[counter++]=c;
     502:	8e 01       	movw	r16, r28
     504:	0f 5f       	subi	r16, 0xFF	; 255
     506:	1f 4f       	sbci	r17, 0xFF	; 255
     508:	c1 54       	subi	r28, 0x41	; 65
     50a:	dc 4f       	sbci	r29, 0xFC	; 252
     50c:	88 83       	st	Y, r24
				c = usart_receive();
     50e:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
			c=usart_receive(); //read most significant digit
			if(c=='F')
			failed=true;
			while(c != '"' && !failed){ // read the whole number (until " is read)
				conv_buffer[counter++]=c;
     512:	e8 01       	movw	r28, r16
			counter=0;
			while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
			c=usart_receive(); //read most significant digit
			if(c=='F')
			failed=true;
			while(c != '"' && !failed){ // read the whole number (until " is read)
     514:	82 32       	cpi	r24, 0x22	; 34
     516:	11 f0       	breq	.+4      	; 0x51c <__stack+0xbd>
     518:	dd 20       	and	r13, r13
     51a:	99 f3       	breq	.-26     	; 0x502 <__stack+0xa3>
				conv_buffer[counter++]=c;
				c = usart_receive();
			}
			c = usart_receive(); // also flush '\n' out of read buffer
     51c:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			if(!failed){
     520:	d1 10       	cpse	r13, r1
     522:	2f c0       	rjmp	.+94     	; 0x582 <__stack+0x123>
     524:	25 e0       	ldi	r18, 0x05	; 5
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	0c c0       	rjmp	.+24     	; 0x542 <__stack+0xe3>
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
					conv_buffer[i] = conv_buffer[i - (6-counter)];
     52a:	f9 01       	movw	r30, r18
     52c:	e8 1b       	sub	r30, r24
     52e:	f9 0b       	sbc	r31, r25
     530:	e1 54       	subi	r30, 0x41	; 65
     532:	fc 4f       	sbci	r31, 0xFC	; 252
     534:	80 81       	ld	r24, Z
     536:	f9 01       	movw	r30, r18
     538:	e1 54       	subi	r30, 0x41	; 65
     53a:	fc 4f       	sbci	r31, 0xFC	; 252
     53c:	80 83       	st	Z, r24
				conv_buffer[counter++]=c;
				c = usart_receive();
			}
			c = usart_receive(); // also flush '\n' out of read buffer
			if(!failed){
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     53e:	21 50       	subi	r18, 0x01	; 1
     540:	31 09       	sbc	r19, r1
     542:	86 e0       	ldi	r24, 0x06	; 6
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	8c 1b       	sub	r24, r28
     548:	9d 0b       	sbc	r25, r29
     54a:	28 17       	cp	r18, r24
     54c:	39 07       	cpc	r19, r25
     54e:	6c f7       	brge	.-38     	; 0x52a <__stack+0xcb>
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	07 c0       	rjmp	.+14     	; 0x564 <__stack+0x105>
					conv_buffer[i] = conv_buffer[i - (6-counter)];
				}
				for(int i=0; i<(6-counter); i++){
					conv_buffer[i] = '0';
     556:	f9 01       	movw	r30, r18
     558:	e1 54       	subi	r30, 0x41	; 65
     55a:	fc 4f       	sbci	r31, 0xFC	; 252
     55c:	40 e3       	ldi	r20, 0x30	; 48
     55e:	40 83       	st	Z, r20
			c = usart_receive(); // also flush '\n' out of read buffer
			if(!failed){
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
					conv_buffer[i] = conv_buffer[i - (6-counter)];
				}
				for(int i=0; i<(6-counter); i++){
     560:	2f 5f       	subi	r18, 0xFF	; 255
     562:	3f 4f       	sbci	r19, 0xFF	; 255
     564:	28 17       	cp	r18, r24
     566:	39 07       	cpc	r19, r25
     568:	b4 f3       	brlt	.-20     	; 0x556 <__stack+0xf7>
					conv_buffer[i] = '0';
				}
				moistures[k-1]=atoi(conv_buffer);
     56a:	8f eb       	ldi	r24, 0xBF	; 191
     56c:	93 e0       	ldi	r25, 0x03	; 3
     56e:	0e 94 8e 0a 	call	0x151c	; 0x151c <atoi>
     572:	f7 01       	movw	r30, r14
     574:	31 97       	sbiw	r30, 0x01	; 1
     576:	ee 0f       	add	r30, r30
     578:	ff 1f       	adc	r31, r31
     57a:	ee 54       	subi	r30, 0x4E	; 78
     57c:	fd 4f       	sbci	r31, 0xFD	; 253
     57e:	91 83       	std	Z+1, r25	; 0x01
     580:	80 83       	st	Z, r24
			}
			
			clear_buffer();
     582:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
			strcpy(string_to_send, "ESP:getValue:\"Tmp_Sensor\"\n");
     586:	8b e1       	ldi	r24, 0x1B	; 27
     588:	e7 e2       	ldi	r30, 0x27	; 39
     58a:	f1 e0       	ldi	r31, 0x01	; 1
     58c:	aa eb       	ldi	r26, 0xBA	; 186
     58e:	b2 e0       	ldi	r27, 0x02	; 2
     590:	01 90       	ld	r0, Z+
     592:	0d 92       	st	X+, r0
     594:	8a 95       	dec	r24
     596:	e1 f7       	brne	.-8      	; 0x590 <__stack+0x131>
			serialWrite(string_to_send);
     598:	8a eb       	ldi	r24, 0xBA	; 186
     59a:	92 e0       	ldi	r25, 0x02	; 2
     59c:	0e 94 a4 01 	call	0x348	; 0x348 <serialWrite>

			counter = 0;
			while(usart_receive() != '"' && !failed);
     5a0:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     5a4:	82 32       	cpi	r24, 0x22	; 34
     5a6:	11 f0       	breq	.+4      	; 0x5ac <__stack+0x14d>
     5a8:	dd 20       	and	r13, r13
     5aa:	d1 f3       	breq	.-12     	; 0x5a0 <__stack+0x141>
			c = usart_receive();
     5ac:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			if(c=='F')
     5b0:	86 34       	cpi	r24, 0x46	; 70
     5b2:	11 f4       	brne	.+4      	; 0x5b8 <__stack+0x159>
			failed=true;
     5b4:	dd 24       	eor	r13, r13
     5b6:	d3 94       	inc	r13
     5b8:	c0 e0       	ldi	r28, 0x00	; 0
     5ba:	d0 e0       	ldi	r29, 0x00	; 0
     5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__stack+0x171>
			while(c != '"' && !failed){
				conv_buffer[counter++]=c;
     5be:	8e 01       	movw	r16, r28
     5c0:	0f 5f       	subi	r16, 0xFF	; 255
     5c2:	1f 4f       	sbci	r17, 0xFF	; 255
     5c4:	c1 54       	subi	r28, 0x41	; 65
     5c6:	dc 4f       	sbci	r29, 0xFC	; 252
     5c8:	88 83       	st	Y, r24
				c = usart_receive();
     5ca:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			while(usart_receive() != '"' && !failed);
			c = usart_receive();
			if(c=='F')
			failed=true;
			while(c != '"' && !failed){
				conv_buffer[counter++]=c;
     5ce:	e8 01       	movw	r28, r16
			counter = 0;
			while(usart_receive() != '"' && !failed);
			c = usart_receive();
			if(c=='F')
			failed=true;
			while(c != '"' && !failed){
     5d0:	82 32       	cpi	r24, 0x22	; 34
     5d2:	11 f0       	breq	.+4      	; 0x5d8 <__stack+0x179>
     5d4:	dd 20       	and	r13, r13
     5d6:	99 f3       	breq	.-26     	; 0x5be <__stack+0x15f>
				conv_buffer[counter++]=c;
				c = usart_receive();
			}
			c = usart_receive(); // also flush '\n' out of read buffer
     5d8:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
			if(!failed){
     5dc:	d1 10       	cpse	r13, r1
     5de:	31 c0       	rjmp	.+98     	; 0x642 <__stack+0x1e3>
     5e0:	25 e0       	ldi	r18, 0x05	; 5
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	0c c0       	rjmp	.+24     	; 0x5fe <__stack+0x19f>
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
					conv_buffer[i] = conv_buffer[i - (6-counter)];
     5e6:	f9 01       	movw	r30, r18
     5e8:	e8 1b       	sub	r30, r24
     5ea:	f9 0b       	sbc	r31, r25
     5ec:	e1 54       	subi	r30, 0x41	; 65
     5ee:	fc 4f       	sbci	r31, 0xFC	; 252
     5f0:	80 81       	ld	r24, Z
     5f2:	f9 01       	movw	r30, r18
     5f4:	e1 54       	subi	r30, 0x41	; 65
     5f6:	fc 4f       	sbci	r31, 0xFC	; 252
     5f8:	80 83       	st	Z, r24
				conv_buffer[counter++]=c;
				c = usart_receive();
			}
			c = usart_receive(); // also flush '\n' out of read buffer
			if(!failed){
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     5fa:	21 50       	subi	r18, 0x01	; 1
     5fc:	31 09       	sbc	r19, r1
     5fe:	86 e0       	ldi	r24, 0x06	; 6
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	8c 1b       	sub	r24, r28
     604:	9d 0b       	sbc	r25, r29
     606:	28 17       	cp	r18, r24
     608:	39 07       	cpc	r19, r25
     60a:	6c f7       	brge	.-38     	; 0x5e6 <__stack+0x187>
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	07 c0       	rjmp	.+14     	; 0x620 <__stack+0x1c1>
					conv_buffer[i] = conv_buffer[i - (6-counter)];
				}
				for(int i=0; i<(6-counter); i++){
					conv_buffer[i] = '0';
     612:	f9 01       	movw	r30, r18
     614:	e1 54       	subi	r30, 0x41	; 65
     616:	fc 4f       	sbci	r31, 0xFC	; 252
     618:	40 e3       	ldi	r20, 0x30	; 48
     61a:	40 83       	st	Z, r20
			c = usart_receive(); // also flush '\n' out of read buffer
			if(!failed){
				for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
					conv_buffer[i] = conv_buffer[i - (6-counter)];
				}
				for(int i=0; i<(6-counter); i++){
     61c:	2f 5f       	subi	r18, 0xFF	; 255
     61e:	3f 4f       	sbci	r19, 0xFF	; 255
     620:	28 17       	cp	r18, r24
     622:	39 07       	cpc	r19, r25
     624:	b4 f3       	brlt	.-20     	; 0x612 <__stack+0x1b3>
					conv_buffer[i] = '0';
				}
				//print_string(conv_buffer);
				temperatures[k-1]=atof(conv_buffer);
     626:	8f eb       	ldi	r24, 0xBF	; 191
     628:	93 e0       	ldi	r25, 0x03	; 3
     62a:	0e 94 8a 0a 	call	0x1514	; 0x1514 <atof>
     62e:	e7 01       	movw	r28, r14
     630:	21 97       	sbiw	r28, 0x01	; 1
     632:	cc 0f       	add	r28, r28
     634:	dd 1f       	adc	r29, r29
     636:	c4 54       	subi	r28, 0x44	; 68
     638:	dc 4f       	sbci	r29, 0xFC	; 252
     63a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__fixsfsi>
     63e:	79 83       	std	Y+1, r23	; 0x01
     640:	68 83       	st	Y, r22
	int counter =0;
	
	cli();

	if(!first) {
		for(int k=1; k<=sensor_boards; ++k){
     642:	8f ef       	ldi	r24, 0xFF	; 255
     644:	e8 1a       	sub	r14, r24
     646:	f8 0a       	sbc	r15, r24
     648:	92 e0       	ldi	r25, 0x02	; 2
     64a:	e9 16       	cp	r14, r25
     64c:	f1 04       	cpc	r15, r1
     64e:	0c f4       	brge	.+2      	; 0x652 <__stack+0x1f3>
     650:	d8 ce       	rjmp	.-592    	; 0x402 <__DATA_REGION_LENGTH__+0x2>
			}
		}

		//calculate averages and variances and transmit them to main node

		tmp_avg=0.0;
     652:	10 92 ae 02 	sts	0x02AE, r1	; 0x8002ae <__data_end>
     656:	10 92 af 02 	sts	0x02AF, r1	; 0x8002af <__data_end+0x1>
     65a:	10 92 b0 02 	sts	0x02B0, r1	; 0x8002b0 <__data_end+0x2>
     65e:	10 92 b1 02 	sts	0x02B1, r1	; 0x8002b1 <__data_end+0x3>
		moist_avg=0;
     662:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <moist_avg+0x1>
     666:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <moist_avg>
		for(int i=0; i<sensor_boards; ++i) {
     66a:	c0 e0       	ldi	r28, 0x00	; 0
     66c:	d0 e0       	ldi	r29, 0x00	; 0
     66e:	32 c0       	rjmp	.+100    	; 0x6d4 <__stack+0x275>
			moist_avg += moistures[i];
     670:	ce 01       	movw	r24, r28
     672:	88 0f       	add	r24, r24
     674:	99 1f       	adc	r25, r25
     676:	fc 01       	movw	r30, r24
     678:	ee 54       	subi	r30, 0x4E	; 78
     67a:	fd 4f       	sbci	r31, 0xFD	; 253
     67c:	20 81       	ld	r18, Z
     67e:	31 81       	ldd	r19, Z+1	; 0x01
     680:	40 91 3a 03 	lds	r20, 0x033A	; 0x80033a <moist_avg>
     684:	50 91 3b 03 	lds	r21, 0x033B	; 0x80033b <moist_avg+0x1>
     688:	24 0f       	add	r18, r20
     68a:	35 1f       	adc	r19, r21
     68c:	30 93 3b 03 	sts	0x033B, r19	; 0x80033b <moist_avg+0x1>
     690:	20 93 3a 03 	sts	0x033A, r18	; 0x80033a <moist_avg>
			tmp_avg += temperatures[i];
     694:	fc 01       	movw	r30, r24
     696:	e4 54       	subi	r30, 0x44	; 68
     698:	fc 4f       	sbci	r31, 0xFC	; 252
     69a:	60 81       	ld	r22, Z
     69c:	71 81       	ldd	r23, Z+1	; 0x01
     69e:	07 2e       	mov	r0, r23
     6a0:	00 0c       	add	r0, r0
     6a2:	88 0b       	sbc	r24, r24
     6a4:	99 0b       	sbc	r25, r25
     6a6:	0e 94 dd 05 	call	0xbba	; 0xbba <__floatsisf>
     6aa:	9b 01       	movw	r18, r22
     6ac:	ac 01       	movw	r20, r24
     6ae:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <__data_end>
     6b2:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <__data_end+0x1>
     6b6:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <__data_end+0x2>
     6ba:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <__data_end+0x3>
     6be:	0e 94 39 05 	call	0xa72	; 0xa72 <__addsf3>
     6c2:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <__data_end>
     6c6:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <__data_end+0x1>
     6ca:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <__data_end+0x2>
     6ce:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <__data_end+0x3>

		//calculate averages and variances and transmit them to main node

		tmp_avg=0.0;
		moist_avg=0;
		for(int i=0; i<sensor_boards; ++i) {
     6d2:	21 96       	adiw	r28, 0x01	; 1
     6d4:	1c 16       	cp	r1, r28
     6d6:	1d 06       	cpc	r1, r29
     6d8:	5c f6       	brge	.-106    	; 0x670 <__stack+0x211>
			moist_avg += moistures[i];
			tmp_avg += temperatures[i];
		}
		moist_avg /= sensor_boards;
     6da:	00 91 3a 03 	lds	r16, 0x033A	; 0x80033a <moist_avg>
     6de:	10 91 3b 03 	lds	r17, 0x033B	; 0x80033b <moist_avg+0x1>
		tmp_avg /= sensor_boards;
     6e2:	c0 90 ae 02 	lds	r12, 0x02AE	; 0x8002ae <__data_end>
     6e6:	d0 90 af 02 	lds	r13, 0x02AF	; 0x8002af <__data_end+0x1>
     6ea:	e0 90 b0 02 	lds	r14, 0x02B0	; 0x8002b0 <__data_end+0x2>
     6ee:	f0 90 b1 02 	lds	r15, 0x02B1	; 0x8002b1 <__data_end+0x3>

		for(int i=0; i<sensor_boards; ++i) {
     6f2:	c0 e0       	ldi	r28, 0x00	; 0
     6f4:	d0 e0       	ldi	r29, 0x00	; 0
     6f6:	42 c0       	rjmp	.+132    	; 0x77c <__stack+0x31d>
			moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     6f8:	ce 01       	movw	r24, r28
     6fa:	88 0f       	add	r24, r24
     6fc:	99 1f       	adc	r25, r25
     6fe:	fc 01       	movw	r30, r24
     700:	ee 54       	subi	r30, 0x4E	; 78
     702:	fd 4f       	sbci	r31, 0xFD	; 253
     704:	20 81       	ld	r18, Z
     706:	31 81       	ldd	r19, Z+1	; 0x01
     708:	20 1b       	sub	r18, r16
     70a:	31 0b       	sbc	r19, r17
     70c:	22 9f       	mul	r18, r18
     70e:	a0 01       	movw	r20, r0
     710:	23 9f       	mul	r18, r19
     712:	50 0d       	add	r21, r0
     714:	50 0d       	add	r21, r0
     716:	11 24       	eor	r1, r1
     718:	20 91 b4 02 	lds	r18, 0x02B4	; 0x8002b4 <moist_var>
     71c:	30 91 b5 02 	lds	r19, 0x02B5	; 0x8002b5 <moist_var+0x1>
     720:	24 0f       	add	r18, r20
     722:	35 1f       	adc	r19, r21
     724:	30 93 b5 02 	sts	0x02B5, r19	; 0x8002b5 <moist_var+0x1>
     728:	20 93 b4 02 	sts	0x02B4, r18	; 0x8002b4 <moist_var>
			tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     72c:	fc 01       	movw	r30, r24
     72e:	e4 54       	subi	r30, 0x44	; 68
     730:	fc 4f       	sbci	r31, 0xFC	; 252
     732:	60 81       	ld	r22, Z
     734:	71 81       	ldd	r23, Z+1	; 0x01
     736:	07 2e       	mov	r0, r23
     738:	00 0c       	add	r0, r0
     73a:	88 0b       	sbc	r24, r24
     73c:	99 0b       	sbc	r25, r25
     73e:	0e 94 dd 05 	call	0xbba	; 0xbba <__floatsisf>
     742:	a7 01       	movw	r20, r14
     744:	96 01       	movw	r18, r12
     746:	0e 94 38 05 	call	0xa70	; 0xa70 <__subsf3>
     74a:	9b 01       	movw	r18, r22
     74c:	ac 01       	movw	r20, r24
     74e:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__mulsf3>
     752:	9b 01       	movw	r18, r22
     754:	ac 01       	movw	r20, r24
     756:	60 91 b6 02 	lds	r22, 0x02B6	; 0x8002b6 <tmp_var_f>
     75a:	70 91 b7 02 	lds	r23, 0x02B7	; 0x8002b7 <tmp_var_f+0x1>
     75e:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <tmp_var_f+0x2>
     762:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <tmp_var_f+0x3>
     766:	0e 94 39 05 	call	0xa72	; 0xa72 <__addsf3>
     76a:	60 93 b6 02 	sts	0x02B6, r22	; 0x8002b6 <tmp_var_f>
     76e:	70 93 b7 02 	sts	0x02B7, r23	; 0x8002b7 <tmp_var_f+0x1>
     772:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <tmp_var_f+0x2>
     776:	90 93 b9 02 	sts	0x02B9, r25	; 0x8002b9 <tmp_var_f+0x3>
			tmp_avg += temperatures[i];
		}
		moist_avg /= sensor_boards;
		tmp_avg /= sensor_boards;

		for(int i=0; i<sensor_boards; ++i) {
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	1c 16       	cp	r1, r28
     77e:	1d 06       	cpc	r1, r29
     780:	0c f0       	brlt	.+2      	; 0x784 <__stack+0x325>
     782:	ba cf       	rjmp	.-140    	; 0x6f8 <__stack+0x299>
			moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
			tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
		}
		moist_var /= sensor_boards;
		tmp_var_f /= sensor_boards;
     784:	60 91 b6 02 	lds	r22, 0x02B6	; 0x8002b6 <tmp_var_f>
     788:	70 91 b7 02 	lds	r23, 0x02B7	; 0x8002b7 <tmp_var_f+0x1>
     78c:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <tmp_var_f+0x2>
     790:	90 91 b9 02 	lds	r25, 0x02B9	; 0x8002b9 <tmp_var_f+0x3>
		tmp_var = (int)tmp_var_f;
     794:	0e 94 a5 05 	call	0xb4a	; 0xb4a <__fixsfsi>
     798:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <tmp_var+0x1>
     79c:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <tmp_var>
		
		//debug
		lcd_clear();
     7a0:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_clear>
		sprintf(string_to_send, "%d %.1f %d %d", moist_avg, tmp_avg, moist_var, tmp_var);
     7a4:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <tmp_var+0x1>
     7a8:	8f 93       	push	r24
     7aa:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <tmp_var>
     7ae:	8f 93       	push	r24
     7b0:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <moist_var+0x1>
     7b4:	8f 93       	push	r24
     7b6:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <moist_var>
     7ba:	8f 93       	push	r24
     7bc:	80 91 b1 02 	lds	r24, 0x02B1	; 0x8002b1 <__data_end+0x3>
     7c0:	8f 93       	push	r24
     7c2:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <__data_end+0x2>
     7c6:	8f 93       	push	r24
     7c8:	80 91 af 02 	lds	r24, 0x02AF	; 0x8002af <__data_end+0x1>
     7cc:	8f 93       	push	r24
     7ce:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <__data_end>
     7d2:	8f 93       	push	r24
     7d4:	80 91 3b 03 	lds	r24, 0x033B	; 0x80033b <moist_avg+0x1>
     7d8:	8f 93       	push	r24
     7da:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <moist_avg>
     7de:	8f 93       	push	r24
     7e0:	82 e4       	ldi	r24, 0x42	; 66
     7e2:	91 e0       	ldi	r25, 0x01	; 1
     7e4:	9f 93       	push	r25
     7e6:	8f 93       	push	r24
     7e8:	ca eb       	ldi	r28, 0xBA	; 186
     7ea:	d2 e0       	ldi	r29, 0x02	; 2
     7ec:	df 93       	push	r29
     7ee:	cf 93       	push	r28
     7f0:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
		print_string(string_to_send);
     7f4:	ce 01       	movw	r24, r28
     7f6:	0e 94 6d 01 	call	0x2da	; 0x2da <print_string>
		//end_debug

		clear_buffer();
     7fa:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>

		sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg%d\"[%d]\n", board_no, moist_avg);
     7fe:	80 91 3b 03 	lds	r24, 0x033B	; 0x80033b <moist_avg+0x1>
     802:	8f 93       	push	r24
     804:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <moist_avg>
     808:	8f 93       	push	r24
     80a:	1f 92       	push	r1
     80c:	11 e0       	ldi	r17, 0x01	; 1
     80e:	1f 93       	push	r17
     810:	80 e5       	ldi	r24, 0x50	; 80
     812:	91 e0       	ldi	r25, 0x01	; 1
     814:	9f 93       	push	r25
     816:	8f 93       	push	r24
     818:	df 93       	push	r29
     81a:	cf 93       	push	r28
     81c:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
		sendCommand(string_to_send); //send command to set the value of the sensor
     820:	ce 01       	movw	r24, r28
     822:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>
		
		sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg%d\"[%.1f]\n", board_no, tmp_avg);
     826:	80 91 b1 02 	lds	r24, 0x02B1	; 0x8002b1 <__data_end+0x3>
     82a:	8f 93       	push	r24
     82c:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <__data_end+0x2>
     830:	8f 93       	push	r24
     832:	80 91 af 02 	lds	r24, 0x02AF	; 0x8002af <__data_end+0x1>
     836:	8f 93       	push	r24
     838:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <__data_end>
     83c:	8f 93       	push	r24
     83e:	1f 92       	push	r1
     840:	1f 93       	push	r17
     842:	83 e7       	ldi	r24, 0x73	; 115
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	9f 93       	push	r25
     848:	8f 93       	push	r24
     84a:	df 93       	push	r29
     84c:	cf 93       	push	r28
     84e:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
		sendCommand(string_to_send); //send command to set the value of the sensor
     852:	8d b7       	in	r24, 0x3d	; 61
     854:	9e b7       	in	r25, 0x3e	; 62
     856:	80 96       	adiw	r24, 0x20	; 32
     858:	0f b6       	in	r0, 0x3f	; 63
     85a:	f8 94       	cli
     85c:	9e bf       	out	0x3e, r25	; 62
     85e:	0f be       	out	0x3f, r0	; 63
     860:	8d bf       	out	0x3d, r24	; 61
     862:	ce 01       	movw	r24, r28
     864:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

		sprintf(string_to_send, "ESP:sensorValue:\"Moist_var%d\"[%d]\n", board_no, moist_var);
     868:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <moist_var+0x1>
     86c:	8f 93       	push	r24
     86e:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <moist_var>
     872:	8f 93       	push	r24
     874:	1f 92       	push	r1
     876:	1f 93       	push	r17
     878:	86 e9       	ldi	r24, 0x96	; 150
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	9f 93       	push	r25
     87e:	8f 93       	push	r24
     880:	df 93       	push	r29
     882:	cf 93       	push	r28
     884:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
		sendCommand(string_to_send); //send command to set the value of the sensor
     888:	ce 01       	movw	r24, r28
     88a:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

		sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var%d\"[%d]\n", board_no, tmp_var);
     88e:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <tmp_var+0x1>
     892:	8f 93       	push	r24
     894:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <tmp_var>
     898:	8f 93       	push	r24
     89a:	1f 92       	push	r1
     89c:	1f 93       	push	r17
     89e:	89 eb       	ldi	r24, 0xB9	; 185
     8a0:	91 e0       	ldi	r25, 0x01	; 1
     8a2:	9f 93       	push	r25
     8a4:	8f 93       	push	r24
     8a6:	df 93       	push	r29
     8a8:	cf 93       	push	r28
     8aa:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
		sendCommand(string_to_send); //send command to set the value of the sensor
     8ae:	ce 01       	movw	r24, r28
     8b0:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

		
		//strcpy(string_to_send, "ESP:debug: \"true\"\n");
		//sendCommand(string_to_send);
		
		strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     8b4:	87 e1       	ldi	r24, 0x17	; 23
     8b6:	ea ed       	ldi	r30, 0xDA	; 218
     8b8:	f1 e0       	ldi	r31, 0x01	; 1
     8ba:	de 01       	movw	r26, r28
     8bc:	01 90       	ld	r0, Z+
     8be:	0d 92       	st	X+, r0
     8c0:	8a 95       	dec	r24
     8c2:	e1 f7       	brne	.-8      	; 0x8bc <__stack+0x45d>
		sendCommand(string_to_send);
     8c4:	ce 01       	movw	r24, r28
     8c6:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>
		
		wait_msec(1000);
     8ca:	88 ee       	ldi	r24, 0xE8	; 232
     8cc:	93 e0       	ldi	r25, 0x03	; 3
     8ce:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <wait_msec>
		
		clear_buffer();
     8d2:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
		PORTB=0x08;
     8d6:	88 e0       	ldi	r24, 0x08	; 8
     8d8:	88 bb       	out	0x18, r24	; 24
		//strcpy(string_to_send, "ESP:connect\n");
		//sendCommand(string_to_send);
		//serialWrite(string_to_send);
		//printResponse();
		PORTB=0x10;
     8da:	80 e1       	ldi	r24, 0x10	; 16
     8dc:	88 bb       	out	0x18, r24	; 24
				
		clear_buffer();
     8de:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
		//strcpy(string_to_send, "ESP:clientTransmit\n");
		//serialWrite(string_to_send);
		clear_buffer();	
     8e2:	0e 94 9a 01 	call	0x334	; 0x334 <clear_buffer>
     8e6:	8d b7       	in	r24, 0x3d	; 61
     8e8:	9e b7       	in	r25, 0x3e	; 62
     8ea:	40 96       	adiw	r24, 0x10	; 16
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	9e bf       	out	0x3e, r25	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	8d bf       	out	0x3d, r24	; 61
     8f6:	02 c0       	rjmp	.+4      	; 0x8fc <__stack+0x49d>
	}
	else
		first=false;
     8f8:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <first>

	//TCNT1 = 3036;
	sei();
     8fc:	78 94       	sei
	TCNT1 = 34286; //4s between interrupts
     8fe:	8e ee       	ldi	r24, 0xEE	; 238
     900:	95 e8       	ldi	r25, 0x85	; 133
     902:	9d bd       	out	0x2d, r25	; 45
     904:	8c bd       	out	0x2c, r24	; 44
}
     906:	ff 91       	pop	r31
     908:	ef 91       	pop	r30
     90a:	df 91       	pop	r29
     90c:	cf 91       	pop	r28
     90e:	bf 91       	pop	r27
     910:	af 91       	pop	r26
     912:	9f 91       	pop	r25
     914:	8f 91       	pop	r24
     916:	7f 91       	pop	r23
     918:	6f 91       	pop	r22
     91a:	5f 91       	pop	r21
     91c:	4f 91       	pop	r20
     91e:	3f 91       	pop	r19
     920:	2f 91       	pop	r18
     922:	1f 91       	pop	r17
     924:	0f 91       	pop	r16
     926:	ff 90       	pop	r15
     928:	ef 90       	pop	r14
     92a:	df 90       	pop	r13
     92c:	cf 90       	pop	r12
     92e:	0f 90       	pop	r0
     930:	0f be       	out	0x3f, r0	; 63
     932:	0f 90       	pop	r0
     934:	1f 90       	pop	r1
     936:	18 95       	reti

00000938 <main>:


int main(){
	DDRB=0xFF;
     938:	8f ef       	ldi	r24, 0xFF	; 255
     93a:	87 bb       	out	0x17, r24	; 23
	DDRD=0xFF;
     93c:	81 bb       	out	0x11, r24	; 17

	first=true;
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <first>
	
	lcd_init_sim();
     944:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init_sim>
	usart_init(MYUBRR);
     948:	83 e3       	ldi	r24, 0x33	; 51
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	0e 94 8a 01 	call	0x314	; 0x314 <usart_init>
	
	for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e c0       	rjmp	.+28     	; 0x972 <main+0x3a>
		moistures[i]=0;
     956:	9c 01       	movw	r18, r24
     958:	22 0f       	add	r18, r18
     95a:	33 1f       	adc	r19, r19
     95c:	f9 01       	movw	r30, r18
     95e:	ee 54       	subi	r30, 0x4E	; 78
     960:	fd 4f       	sbci	r31, 0xFD	; 253
     962:	11 82       	std	Z+1, r1	; 0x01
     964:	10 82       	st	Z, r1
		temperatures[i]=0;
     966:	f9 01       	movw	r30, r18
     968:	e4 54       	subi	r30, 0x44	; 68
     96a:	fc 4f       	sbci	r31, 0xFC	; 252
     96c:	11 82       	std	Z+1, r1	; 0x01
     96e:	10 82       	st	Z, r1
	first=true;
	
	lcd_init_sim();
	usart_init(MYUBRR);
	
	for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     970:	01 96       	adiw	r24, 0x01	; 1
     972:	18 16       	cp	r1, r24
     974:	19 06       	cpc	r1, r25
     976:	7c f7       	brge	.-34     	; 0x956 <main+0x1e>
		moistures[i]=0;
		temperatures[i]=0;
	}

	usart_transmit('\n'); //to flush serial
     978:	8a e0       	ldi	r24, 0x0A	; 10
     97a:	0e 94 92 01 	call	0x324	; 0x324 <usart_transmit>
	
	strcpy(string_to_send, "ESP:restart\n");
     97e:	8d e0       	ldi	r24, 0x0D	; 13
     980:	e1 ef       	ldi	r30, 0xF1	; 241
     982:	f1 e0       	ldi	r31, 0x01	; 1
     984:	aa eb       	ldi	r26, 0xBA	; 186
     986:	b2 e0       	ldi	r27, 0x02	; 2
     988:	01 90       	ld	r0, Z+
     98a:	0d 92       	st	X+, r0
     98c:	8a 95       	dec	r24
     98e:	e1 f7       	brne	.-8      	; 0x988 <main+0x50>
	serialWrite(string_to_send);
     990:	8a eb       	ldi	r24, 0xBA	; 186
     992:	92 e0       	ldi	r25, 0x02	; 2
     994:	0e 94 a4 01 	call	0x348	; 0x348 <serialWrite>
	
	usart_receive(); //wait until restart is complete
     998:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
	while(UCSRA&(1<<RXC)) //flush read buffer
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <main+0x6a>
	usart_receive();
     99e:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
	
	strcpy(string_to_send, "ESP:restart\n");
	serialWrite(string_to_send);
	
	usart_receive(); //wait until restart is complete
	while(UCSRA&(1<<RXC)) //flush read buffer
     9a2:	5f 99       	sbic	0x0b, 7	; 11
     9a4:	fc cf       	rjmp	.-8      	; 0x99e <main+0x66>
	usart_receive();
	
	wait_msec(2000);
     9a6:	80 ed       	ldi	r24, 0xD0	; 208
     9a8:	97 e0       	ldi	r25, 0x07	; 7
     9aa:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <wait_msec>
	

	strcpy(string_to_send, "ESP:addSensor: \"Moist_Sensor\"\n");
     9ae:	ca eb       	ldi	r28, 0xBA	; 186
     9b0:	d2 e0       	ldi	r29, 0x02	; 2
     9b2:	8f e1       	ldi	r24, 0x1F	; 31
     9b4:	ee ef       	ldi	r30, 0xFE	; 254
     9b6:	f1 e0       	ldi	r31, 0x01	; 1
     9b8:	de 01       	movw	r26, r28
     9ba:	01 90       	ld	r0, Z+
     9bc:	0d 92       	st	X+, r0
     9be:	8a 95       	dec	r24
     9c0:	e1 f7       	brne	.-8      	; 0x9ba <main+0x82>
	sendCommand(string_to_send);
     9c2:	ce 01       	movw	r24, r28
     9c4:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	strcpy(string_to_send, "ESP:addSensor: \"Tmp_Sensor\"\n");
     9c8:	8d e1       	ldi	r24, 0x1D	; 29
     9ca:	ed e1       	ldi	r30, 0x1D	; 29
     9cc:	f2 e0       	ldi	r31, 0x02	; 2
     9ce:	de 01       	movw	r26, r28
     9d0:	01 90       	ld	r0, Z+
     9d2:	0d 92       	st	X+, r0
     9d4:	8a 95       	dec	r24
     9d6:	e1 f7       	brne	.-8      	; 0x9d0 <main+0x98>
	sendCommand(string_to_send);
     9d8:	ce 01       	movw	r24, r28
     9da:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	sprintf(string_to_send, "ESP:addSensor: \"Moist_avg%d\"\n", board_no);
     9de:	1f 92       	push	r1
     9e0:	11 e0       	ldi	r17, 0x01	; 1
     9e2:	1f 93       	push	r17
     9e4:	8a e3       	ldi	r24, 0x3A	; 58
     9e6:	92 e0       	ldi	r25, 0x02	; 2
     9e8:	9f 93       	push	r25
     9ea:	8f 93       	push	r24
     9ec:	df 93       	push	r29
     9ee:	cf 93       	push	r28
     9f0:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
	sendCommand(string_to_send);
     9f4:	ce 01       	movw	r24, r28
     9f6:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	sprintf(string_to_send, "ESP:addSensor: \"Tmp_avg%d\"\n", board_no);
     9fa:	1f 92       	push	r1
     9fc:	1f 93       	push	r17
     9fe:	88 e5       	ldi	r24, 0x58	; 88
     a00:	92 e0       	ldi	r25, 0x02	; 2
     a02:	9f 93       	push	r25
     a04:	8f 93       	push	r24
     a06:	df 93       	push	r29
     a08:	cf 93       	push	r28
     a0a:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
	sendCommand(string_to_send);
     a0e:	ce 01       	movw	r24, r28
     a10:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	sprintf(string_to_send, "ESP:addSensor: \"Moist_var%d\"\n", board_no);
     a14:	1f 92       	push	r1
     a16:	1f 93       	push	r17
     a18:	84 e7       	ldi	r24, 0x74	; 116
     a1a:	92 e0       	ldi	r25, 0x02	; 2
     a1c:	9f 93       	push	r25
     a1e:	8f 93       	push	r24
     a20:	df 93       	push	r29
     a22:	cf 93       	push	r28
     a24:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
	sendCommand(string_to_send);
     a28:	ce 01       	movw	r24, r28
     a2a:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	sprintf(string_to_send, "ESP:addSensor: \"Tmp_var%d\"\n", board_no);
     a2e:	1f 92       	push	r1
     a30:	1f 93       	push	r17
     a32:	82 e9       	ldi	r24, 0x92	; 146
     a34:	92 e0       	ldi	r25, 0x02	; 2
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	df 93       	push	r29
     a3c:	cf 93       	push	r28
     a3e:	0e 94 de 0b 	call	0x17bc	; 0x17bc <sprintf>
	sendCommand(string_to_send);
     a42:	ce 01       	movw	r24, r28
     a44:	0e 94 c1 01 	call	0x382	; 0x382 <sendCommand>

	PORTB=0xFF;
     a48:	8f ef       	ldi	r24, 0xFF	; 255
     a4a:	88 bb       	out	0x18, r24	; 24

	TCCR1B = 0x05; //CK/1024
     a4c:	85 e0       	ldi	r24, 0x05	; 5
     a4e:	8e bd       	out	0x2e, r24	; 46
	//TCNT1 = 3036; //8 seconds
	TCNT1 = 34286; //4s between interrupts
     a50:	8e ee       	ldi	r24, 0xEE	; 238
     a52:	95 e8       	ldi	r25, 0x85	; 133
     a54:	9d bd       	out	0x2d, r25	; 45
     a56:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     a58:	84 e0       	ldi	r24, 0x04	; 4
     a5a:	89 bf       	out	0x39, r24	; 57
	sei();
     a5c:	78 94       	sei
     a5e:	8d b7       	in	r24, 0x3d	; 61
     a60:	9e b7       	in	r25, 0x3e	; 62
     a62:	48 96       	adiw	r24, 0x18	; 24
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	f8 94       	cli
     a68:	9e bf       	out	0x3e, r25	; 62
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	8d bf       	out	0x3d, r24	; 61
     a6e:	ff cf       	rjmp	.-2      	; 0xa6e <main+0x136>

00000a70 <__subsf3>:
     a70:	50 58       	subi	r21, 0x80	; 128

00000a72 <__addsf3>:
     a72:	bb 27       	eor	r27, r27
     a74:	aa 27       	eor	r26, r26
     a76:	0e 94 50 05 	call	0xaa0	; 0xaa0 <__addsf3x>
     a7a:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_round>
     a7e:	0e 94 21 06 	call	0xc42	; 0xc42 <__fp_pscA>
     a82:	38 f0       	brcs	.+14     	; 0xa92 <__addsf3+0x20>
     a84:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_pscB>
     a88:	20 f0       	brcs	.+8      	; 0xa92 <__addsf3+0x20>
     a8a:	39 f4       	brne	.+14     	; 0xa9a <__addsf3+0x28>
     a8c:	9f 3f       	cpi	r25, 0xFF	; 255
     a8e:	19 f4       	brne	.+6      	; 0xa96 <__addsf3+0x24>
     a90:	26 f4       	brtc	.+8      	; 0xa9a <__addsf3+0x28>
     a92:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_nan>
     a96:	0e f4       	brtc	.+2      	; 0xa9a <__addsf3+0x28>
     a98:	e0 95       	com	r30
     a9a:	e7 fb       	bst	r30, 7
     a9c:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_inf>

00000aa0 <__addsf3x>:
     aa0:	e9 2f       	mov	r30, r25
     aa2:	0e 94 40 06 	call	0xc80	; 0xc80 <__fp_split3>
     aa6:	58 f3       	brcs	.-42     	; 0xa7e <__addsf3+0xc>
     aa8:	ba 17       	cp	r27, r26
     aaa:	62 07       	cpc	r22, r18
     aac:	73 07       	cpc	r23, r19
     aae:	84 07       	cpc	r24, r20
     ab0:	95 07       	cpc	r25, r21
     ab2:	20 f0       	brcs	.+8      	; 0xabc <__addsf3x+0x1c>
     ab4:	79 f4       	brne	.+30     	; 0xad4 <__addsf3x+0x34>
     ab6:	a6 f5       	brtc	.+104    	; 0xb20 <__addsf3x+0x80>
     ab8:	0c 94 62 06 	jmp	0xcc4	; 0xcc4 <__fp_zero>
     abc:	0e f4       	brtc	.+2      	; 0xac0 <__addsf3x+0x20>
     abe:	e0 95       	com	r30
     ac0:	0b 2e       	mov	r0, r27
     ac2:	ba 2f       	mov	r27, r26
     ac4:	a0 2d       	mov	r26, r0
     ac6:	0b 01       	movw	r0, r22
     ac8:	b9 01       	movw	r22, r18
     aca:	90 01       	movw	r18, r0
     acc:	0c 01       	movw	r0, r24
     ace:	ca 01       	movw	r24, r20
     ad0:	a0 01       	movw	r20, r0
     ad2:	11 24       	eor	r1, r1
     ad4:	ff 27       	eor	r31, r31
     ad6:	59 1b       	sub	r21, r25
     ad8:	99 f0       	breq	.+38     	; 0xb00 <__addsf3x+0x60>
     ada:	59 3f       	cpi	r21, 0xF9	; 249
     adc:	50 f4       	brcc	.+20     	; 0xaf2 <__addsf3x+0x52>
     ade:	50 3e       	cpi	r21, 0xE0	; 224
     ae0:	68 f1       	brcs	.+90     	; 0xb3c <__addsf3x+0x9c>
     ae2:	1a 16       	cp	r1, r26
     ae4:	f0 40       	sbci	r31, 0x00	; 0
     ae6:	a2 2f       	mov	r26, r18
     ae8:	23 2f       	mov	r18, r19
     aea:	34 2f       	mov	r19, r20
     aec:	44 27       	eor	r20, r20
     aee:	58 5f       	subi	r21, 0xF8	; 248
     af0:	f3 cf       	rjmp	.-26     	; 0xad8 <__addsf3x+0x38>
     af2:	46 95       	lsr	r20
     af4:	37 95       	ror	r19
     af6:	27 95       	ror	r18
     af8:	a7 95       	ror	r26
     afa:	f0 40       	sbci	r31, 0x00	; 0
     afc:	53 95       	inc	r21
     afe:	c9 f7       	brne	.-14     	; 0xaf2 <__addsf3x+0x52>
     b00:	7e f4       	brtc	.+30     	; 0xb20 <__addsf3x+0x80>
     b02:	1f 16       	cp	r1, r31
     b04:	ba 0b       	sbc	r27, r26
     b06:	62 0b       	sbc	r22, r18
     b08:	73 0b       	sbc	r23, r19
     b0a:	84 0b       	sbc	r24, r20
     b0c:	ba f0       	brmi	.+46     	; 0xb3c <__addsf3x+0x9c>
     b0e:	91 50       	subi	r25, 0x01	; 1
     b10:	a1 f0       	breq	.+40     	; 0xb3a <__addsf3x+0x9a>
     b12:	ff 0f       	add	r31, r31
     b14:	bb 1f       	adc	r27, r27
     b16:	66 1f       	adc	r22, r22
     b18:	77 1f       	adc	r23, r23
     b1a:	88 1f       	adc	r24, r24
     b1c:	c2 f7       	brpl	.-16     	; 0xb0e <__addsf3x+0x6e>
     b1e:	0e c0       	rjmp	.+28     	; 0xb3c <__addsf3x+0x9c>
     b20:	ba 0f       	add	r27, r26
     b22:	62 1f       	adc	r22, r18
     b24:	73 1f       	adc	r23, r19
     b26:	84 1f       	adc	r24, r20
     b28:	48 f4       	brcc	.+18     	; 0xb3c <__addsf3x+0x9c>
     b2a:	87 95       	ror	r24
     b2c:	77 95       	ror	r23
     b2e:	67 95       	ror	r22
     b30:	b7 95       	ror	r27
     b32:	f7 95       	ror	r31
     b34:	9e 3f       	cpi	r25, 0xFE	; 254
     b36:	08 f0       	brcs	.+2      	; 0xb3a <__addsf3x+0x9a>
     b38:	b0 cf       	rjmp	.-160    	; 0xa9a <__addsf3+0x28>
     b3a:	93 95       	inc	r25
     b3c:	88 0f       	add	r24, r24
     b3e:	08 f0       	brcs	.+2      	; 0xb42 <__addsf3x+0xa2>
     b40:	99 27       	eor	r25, r25
     b42:	ee 0f       	add	r30, r30
     b44:	97 95       	ror	r25
     b46:	87 95       	ror	r24
     b48:	08 95       	ret

00000b4a <__fixsfsi>:
     b4a:	0e 94 ac 05 	call	0xb58	; 0xb58 <__fixunssfsi>
     b4e:	68 94       	set
     b50:	b1 11       	cpse	r27, r1
     b52:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_szero>
     b56:	08 95       	ret

00000b58 <__fixunssfsi>:
     b58:	0e 94 48 06 	call	0xc90	; 0xc90 <__fp_splitA>
     b5c:	88 f0       	brcs	.+34     	; 0xb80 <__fixunssfsi+0x28>
     b5e:	9f 57       	subi	r25, 0x7F	; 127
     b60:	98 f0       	brcs	.+38     	; 0xb88 <__fixunssfsi+0x30>
     b62:	b9 2f       	mov	r27, r25
     b64:	99 27       	eor	r25, r25
     b66:	b7 51       	subi	r27, 0x17	; 23
     b68:	b0 f0       	brcs	.+44     	; 0xb96 <__fixunssfsi+0x3e>
     b6a:	e1 f0       	breq	.+56     	; 0xba4 <__fixunssfsi+0x4c>
     b6c:	66 0f       	add	r22, r22
     b6e:	77 1f       	adc	r23, r23
     b70:	88 1f       	adc	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	1a f0       	brmi	.+6      	; 0xb7c <__fixunssfsi+0x24>
     b76:	ba 95       	dec	r27
     b78:	c9 f7       	brne	.-14     	; 0xb6c <__fixunssfsi+0x14>
     b7a:	14 c0       	rjmp	.+40     	; 0xba4 <__fixunssfsi+0x4c>
     b7c:	b1 30       	cpi	r27, 0x01	; 1
     b7e:	91 f0       	breq	.+36     	; 0xba4 <__fixunssfsi+0x4c>
     b80:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__fp_zero>
     b84:	b1 e0       	ldi	r27, 0x01	; 1
     b86:	08 95       	ret
     b88:	0c 94 62 06 	jmp	0xcc4	; 0xcc4 <__fp_zero>
     b8c:	67 2f       	mov	r22, r23
     b8e:	78 2f       	mov	r23, r24
     b90:	88 27       	eor	r24, r24
     b92:	b8 5f       	subi	r27, 0xF8	; 248
     b94:	39 f0       	breq	.+14     	; 0xba4 <__fixunssfsi+0x4c>
     b96:	b9 3f       	cpi	r27, 0xF9	; 249
     b98:	cc f3       	brlt	.-14     	; 0xb8c <__fixunssfsi+0x34>
     b9a:	86 95       	lsr	r24
     b9c:	77 95       	ror	r23
     b9e:	67 95       	ror	r22
     ba0:	b3 95       	inc	r27
     ba2:	d9 f7       	brne	.-10     	; 0xb9a <__fixunssfsi+0x42>
     ba4:	3e f4       	brtc	.+14     	; 0xbb4 <__fixunssfsi+0x5c>
     ba6:	90 95       	com	r25
     ba8:	80 95       	com	r24
     baa:	70 95       	com	r23
     bac:	61 95       	neg	r22
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	8f 4f       	sbci	r24, 0xFF	; 255
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	08 95       	ret

00000bb6 <__floatunsisf>:
     bb6:	e8 94       	clt
     bb8:	09 c0       	rjmp	.+18     	; 0xbcc <__floatsisf+0x12>

00000bba <__floatsisf>:
     bba:	97 fb       	bst	r25, 7
     bbc:	3e f4       	brtc	.+14     	; 0xbcc <__floatsisf+0x12>
     bbe:	90 95       	com	r25
     bc0:	80 95       	com	r24
     bc2:	70 95       	com	r23
     bc4:	61 95       	neg	r22
     bc6:	7f 4f       	sbci	r23, 0xFF	; 255
     bc8:	8f 4f       	sbci	r24, 0xFF	; 255
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	99 23       	and	r25, r25
     bce:	a9 f0       	breq	.+42     	; 0xbfa <__floatsisf+0x40>
     bd0:	f9 2f       	mov	r31, r25
     bd2:	96 e9       	ldi	r25, 0x96	; 150
     bd4:	bb 27       	eor	r27, r27
     bd6:	93 95       	inc	r25
     bd8:	f6 95       	lsr	r31
     bda:	87 95       	ror	r24
     bdc:	77 95       	ror	r23
     bde:	67 95       	ror	r22
     be0:	b7 95       	ror	r27
     be2:	f1 11       	cpse	r31, r1
     be4:	f8 cf       	rjmp	.-16     	; 0xbd6 <__floatsisf+0x1c>
     be6:	fa f4       	brpl	.+62     	; 0xc26 <__floatsisf+0x6c>
     be8:	bb 0f       	add	r27, r27
     bea:	11 f4       	brne	.+4      	; 0xbf0 <__floatsisf+0x36>
     bec:	60 ff       	sbrs	r22, 0
     bee:	1b c0       	rjmp	.+54     	; 0xc26 <__floatsisf+0x6c>
     bf0:	6f 5f       	subi	r22, 0xFF	; 255
     bf2:	7f 4f       	sbci	r23, 0xFF	; 255
     bf4:	8f 4f       	sbci	r24, 0xFF	; 255
     bf6:	9f 4f       	sbci	r25, 0xFF	; 255
     bf8:	16 c0       	rjmp	.+44     	; 0xc26 <__floatsisf+0x6c>
     bfa:	88 23       	and	r24, r24
     bfc:	11 f0       	breq	.+4      	; 0xc02 <__floatsisf+0x48>
     bfe:	96 e9       	ldi	r25, 0x96	; 150
     c00:	11 c0       	rjmp	.+34     	; 0xc24 <__floatsisf+0x6a>
     c02:	77 23       	and	r23, r23
     c04:	21 f0       	breq	.+8      	; 0xc0e <__floatsisf+0x54>
     c06:	9e e8       	ldi	r25, 0x8E	; 142
     c08:	87 2f       	mov	r24, r23
     c0a:	76 2f       	mov	r23, r22
     c0c:	05 c0       	rjmp	.+10     	; 0xc18 <__floatsisf+0x5e>
     c0e:	66 23       	and	r22, r22
     c10:	71 f0       	breq	.+28     	; 0xc2e <__floatsisf+0x74>
     c12:	96 e8       	ldi	r25, 0x86	; 134
     c14:	86 2f       	mov	r24, r22
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	2a f0       	brmi	.+10     	; 0xc26 <__floatsisf+0x6c>
     c1c:	9a 95       	dec	r25
     c1e:	66 0f       	add	r22, r22
     c20:	77 1f       	adc	r23, r23
     c22:	88 1f       	adc	r24, r24
     c24:	da f7       	brpl	.-10     	; 0xc1c <__floatsisf+0x62>
     c26:	88 0f       	add	r24, r24
     c28:	96 95       	lsr	r25
     c2a:	87 95       	ror	r24
     c2c:	97 f9       	bld	r25, 7
     c2e:	08 95       	ret

00000c30 <__fp_inf>:
     c30:	97 f9       	bld	r25, 7
     c32:	9f 67       	ori	r25, 0x7F	; 127
     c34:	80 e8       	ldi	r24, 0x80	; 128
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	60 e0       	ldi	r22, 0x00	; 0
     c3a:	08 95       	ret

00000c3c <__fp_nan>:
     c3c:	9f ef       	ldi	r25, 0xFF	; 255
     c3e:	80 ec       	ldi	r24, 0xC0	; 192
     c40:	08 95       	ret

00000c42 <__fp_pscA>:
     c42:	00 24       	eor	r0, r0
     c44:	0a 94       	dec	r0
     c46:	16 16       	cp	r1, r22
     c48:	17 06       	cpc	r1, r23
     c4a:	18 06       	cpc	r1, r24
     c4c:	09 06       	cpc	r0, r25
     c4e:	08 95       	ret

00000c50 <__fp_pscB>:
     c50:	00 24       	eor	r0, r0
     c52:	0a 94       	dec	r0
     c54:	12 16       	cp	r1, r18
     c56:	13 06       	cpc	r1, r19
     c58:	14 06       	cpc	r1, r20
     c5a:	05 06       	cpc	r0, r21
     c5c:	08 95       	ret

00000c5e <__fp_round>:
     c5e:	09 2e       	mov	r0, r25
     c60:	03 94       	inc	r0
     c62:	00 0c       	add	r0, r0
     c64:	11 f4       	brne	.+4      	; 0xc6a <__fp_round+0xc>
     c66:	88 23       	and	r24, r24
     c68:	52 f0       	brmi	.+20     	; 0xc7e <__fp_round+0x20>
     c6a:	bb 0f       	add	r27, r27
     c6c:	40 f4       	brcc	.+16     	; 0xc7e <__fp_round+0x20>
     c6e:	bf 2b       	or	r27, r31
     c70:	11 f4       	brne	.+4      	; 0xc76 <__fp_round+0x18>
     c72:	60 ff       	sbrs	r22, 0
     c74:	04 c0       	rjmp	.+8      	; 0xc7e <__fp_round+0x20>
     c76:	6f 5f       	subi	r22, 0xFF	; 255
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	8f 4f       	sbci	r24, 0xFF	; 255
     c7c:	9f 4f       	sbci	r25, 0xFF	; 255
     c7e:	08 95       	ret

00000c80 <__fp_split3>:
     c80:	57 fd       	sbrc	r21, 7
     c82:	90 58       	subi	r25, 0x80	; 128
     c84:	44 0f       	add	r20, r20
     c86:	55 1f       	adc	r21, r21
     c88:	59 f0       	breq	.+22     	; 0xca0 <__fp_splitA+0x10>
     c8a:	5f 3f       	cpi	r21, 0xFF	; 255
     c8c:	71 f0       	breq	.+28     	; 0xcaa <__fp_splitA+0x1a>
     c8e:	47 95       	ror	r20

00000c90 <__fp_splitA>:
     c90:	88 0f       	add	r24, r24
     c92:	97 fb       	bst	r25, 7
     c94:	99 1f       	adc	r25, r25
     c96:	61 f0       	breq	.+24     	; 0xcb0 <__fp_splitA+0x20>
     c98:	9f 3f       	cpi	r25, 0xFF	; 255
     c9a:	79 f0       	breq	.+30     	; 0xcba <__fp_splitA+0x2a>
     c9c:	87 95       	ror	r24
     c9e:	08 95       	ret
     ca0:	12 16       	cp	r1, r18
     ca2:	13 06       	cpc	r1, r19
     ca4:	14 06       	cpc	r1, r20
     ca6:	55 1f       	adc	r21, r21
     ca8:	f2 cf       	rjmp	.-28     	; 0xc8e <__fp_split3+0xe>
     caa:	46 95       	lsr	r20
     cac:	f1 df       	rcall	.-30     	; 0xc90 <__fp_splitA>
     cae:	08 c0       	rjmp	.+16     	; 0xcc0 <__fp_splitA+0x30>
     cb0:	16 16       	cp	r1, r22
     cb2:	17 06       	cpc	r1, r23
     cb4:	18 06       	cpc	r1, r24
     cb6:	99 1f       	adc	r25, r25
     cb8:	f1 cf       	rjmp	.-30     	; 0xc9c <__fp_splitA+0xc>
     cba:	86 95       	lsr	r24
     cbc:	71 05       	cpc	r23, r1
     cbe:	61 05       	cpc	r22, r1
     cc0:	08 94       	sec
     cc2:	08 95       	ret

00000cc4 <__fp_zero>:
     cc4:	e8 94       	clt

00000cc6 <__fp_szero>:
     cc6:	bb 27       	eor	r27, r27
     cc8:	66 27       	eor	r22, r22
     cca:	77 27       	eor	r23, r23
     ccc:	cb 01       	movw	r24, r22
     cce:	97 f9       	bld	r25, 7
     cd0:	08 95       	ret

00000cd2 <__mulsf3>:
     cd2:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__mulsf3x>
     cd6:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_round>
     cda:	0e 94 21 06 	call	0xc42	; 0xc42 <__fp_pscA>
     cde:	38 f0       	brcs	.+14     	; 0xcee <__mulsf3+0x1c>
     ce0:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_pscB>
     ce4:	20 f0       	brcs	.+8      	; 0xcee <__mulsf3+0x1c>
     ce6:	95 23       	and	r25, r21
     ce8:	11 f0       	breq	.+4      	; 0xcee <__mulsf3+0x1c>
     cea:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_inf>
     cee:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__fp_nan>
     cf2:	11 24       	eor	r1, r1
     cf4:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_szero>

00000cf8 <__mulsf3x>:
     cf8:	0e 94 40 06 	call	0xc80	; 0xc80 <__fp_split3>
     cfc:	70 f3       	brcs	.-36     	; 0xcda <__mulsf3+0x8>

00000cfe <__mulsf3_pse>:
     cfe:	95 9f       	mul	r25, r21
     d00:	c1 f3       	breq	.-16     	; 0xcf2 <__mulsf3+0x20>
     d02:	95 0f       	add	r25, r21
     d04:	50 e0       	ldi	r21, 0x00	; 0
     d06:	55 1f       	adc	r21, r21
     d08:	62 9f       	mul	r22, r18
     d0a:	f0 01       	movw	r30, r0
     d0c:	72 9f       	mul	r23, r18
     d0e:	bb 27       	eor	r27, r27
     d10:	f0 0d       	add	r31, r0
     d12:	b1 1d       	adc	r27, r1
     d14:	63 9f       	mul	r22, r19
     d16:	aa 27       	eor	r26, r26
     d18:	f0 0d       	add	r31, r0
     d1a:	b1 1d       	adc	r27, r1
     d1c:	aa 1f       	adc	r26, r26
     d1e:	64 9f       	mul	r22, r20
     d20:	66 27       	eor	r22, r22
     d22:	b0 0d       	add	r27, r0
     d24:	a1 1d       	adc	r26, r1
     d26:	66 1f       	adc	r22, r22
     d28:	82 9f       	mul	r24, r18
     d2a:	22 27       	eor	r18, r18
     d2c:	b0 0d       	add	r27, r0
     d2e:	a1 1d       	adc	r26, r1
     d30:	62 1f       	adc	r22, r18
     d32:	73 9f       	mul	r23, r19
     d34:	b0 0d       	add	r27, r0
     d36:	a1 1d       	adc	r26, r1
     d38:	62 1f       	adc	r22, r18
     d3a:	83 9f       	mul	r24, r19
     d3c:	a0 0d       	add	r26, r0
     d3e:	61 1d       	adc	r22, r1
     d40:	22 1f       	adc	r18, r18
     d42:	74 9f       	mul	r23, r20
     d44:	33 27       	eor	r19, r19
     d46:	a0 0d       	add	r26, r0
     d48:	61 1d       	adc	r22, r1
     d4a:	23 1f       	adc	r18, r19
     d4c:	84 9f       	mul	r24, r20
     d4e:	60 0d       	add	r22, r0
     d50:	21 1d       	adc	r18, r1
     d52:	82 2f       	mov	r24, r18
     d54:	76 2f       	mov	r23, r22
     d56:	6a 2f       	mov	r22, r26
     d58:	11 24       	eor	r1, r1
     d5a:	9f 57       	subi	r25, 0x7F	; 127
     d5c:	50 40       	sbci	r21, 0x00	; 0
     d5e:	9a f0       	brmi	.+38     	; 0xd86 <__mulsf3_pse+0x88>
     d60:	f1 f0       	breq	.+60     	; 0xd9e <__mulsf3_pse+0xa0>
     d62:	88 23       	and	r24, r24
     d64:	4a f0       	brmi	.+18     	; 0xd78 <__mulsf3_pse+0x7a>
     d66:	ee 0f       	add	r30, r30
     d68:	ff 1f       	adc	r31, r31
     d6a:	bb 1f       	adc	r27, r27
     d6c:	66 1f       	adc	r22, r22
     d6e:	77 1f       	adc	r23, r23
     d70:	88 1f       	adc	r24, r24
     d72:	91 50       	subi	r25, 0x01	; 1
     d74:	50 40       	sbci	r21, 0x00	; 0
     d76:	a9 f7       	brne	.-22     	; 0xd62 <__mulsf3_pse+0x64>
     d78:	9e 3f       	cpi	r25, 0xFE	; 254
     d7a:	51 05       	cpc	r21, r1
     d7c:	80 f0       	brcs	.+32     	; 0xd9e <__mulsf3_pse+0xa0>
     d7e:	0c 94 18 06 	jmp	0xc30	; 0xc30 <__fp_inf>
     d82:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_szero>
     d86:	5f 3f       	cpi	r21, 0xFF	; 255
     d88:	e4 f3       	brlt	.-8      	; 0xd82 <__mulsf3_pse+0x84>
     d8a:	98 3e       	cpi	r25, 0xE8	; 232
     d8c:	d4 f3       	brlt	.-12     	; 0xd82 <__mulsf3_pse+0x84>
     d8e:	86 95       	lsr	r24
     d90:	77 95       	ror	r23
     d92:	67 95       	ror	r22
     d94:	b7 95       	ror	r27
     d96:	f7 95       	ror	r31
     d98:	e7 95       	ror	r30
     d9a:	9f 5f       	subi	r25, 0xFF	; 255
     d9c:	c1 f7       	brne	.-16     	; 0xd8e <__mulsf3_pse+0x90>
     d9e:	fe 2b       	or	r31, r30
     da0:	88 0f       	add	r24, r24
     da2:	91 1d       	adc	r25, r1
     da4:	96 95       	lsr	r25
     da6:	87 95       	ror	r24
     da8:	97 f9       	bld	r25, 7
     daa:	08 95       	ret

00000dac <vfprintf>:
     dac:	a0 e1       	ldi	r26, 0x10	; 16
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	ec ed       	ldi	r30, 0xDC	; 220
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__prologue_saves__>
     db8:	7c 01       	movw	r14, r24
     dba:	1b 01       	movw	r2, r22
     dbc:	6a 01       	movw	r12, r20
     dbe:	fc 01       	movw	r30, r24
     dc0:	17 82       	std	Z+7, r1	; 0x07
     dc2:	16 82       	std	Z+6, r1	; 0x06
     dc4:	83 81       	ldd	r24, Z+3	; 0x03
     dc6:	81 ff       	sbrs	r24, 1
     dc8:	44 c3       	rjmp	.+1672   	; 0x1452 <vfprintf+0x6a6>
     dca:	9e 01       	movw	r18, r28
     dcc:	2f 5f       	subi	r18, 0xFF	; 255
     dce:	3f 4f       	sbci	r19, 0xFF	; 255
     dd0:	39 01       	movw	r6, r18
     dd2:	f7 01       	movw	r30, r14
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	f1 01       	movw	r30, r2
     dd8:	93 fd       	sbrc	r25, 3
     dda:	85 91       	lpm	r24, Z+
     ddc:	93 ff       	sbrs	r25, 3
     dde:	81 91       	ld	r24, Z+
     de0:	1f 01       	movw	r2, r30
     de2:	88 23       	and	r24, r24
     de4:	09 f4       	brne	.+2      	; 0xde8 <vfprintf+0x3c>
     de6:	31 c3       	rjmp	.+1634   	; 0x144a <vfprintf+0x69e>
     de8:	85 32       	cpi	r24, 0x25	; 37
     dea:	39 f4       	brne	.+14     	; 0xdfa <vfprintf+0x4e>
     dec:	93 fd       	sbrc	r25, 3
     dee:	85 91       	lpm	r24, Z+
     df0:	93 ff       	sbrs	r25, 3
     df2:	81 91       	ld	r24, Z+
     df4:	1f 01       	movw	r2, r30
     df6:	85 32       	cpi	r24, 0x25	; 37
     df8:	39 f4       	brne	.+14     	; 0xe08 <vfprintf+0x5c>
     dfa:	b7 01       	movw	r22, r14
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
     e02:	56 01       	movw	r10, r12
     e04:	65 01       	movw	r12, r10
     e06:	e5 cf       	rjmp	.-54     	; 0xdd2 <vfprintf+0x26>
     e08:	10 e0       	ldi	r17, 0x00	; 0
     e0a:	51 2c       	mov	r5, r1
     e0c:	91 2c       	mov	r9, r1
     e0e:	ff e1       	ldi	r31, 0x1F	; 31
     e10:	f9 15       	cp	r31, r9
     e12:	d8 f0       	brcs	.+54     	; 0xe4a <vfprintf+0x9e>
     e14:	8b 32       	cpi	r24, 0x2B	; 43
     e16:	79 f0       	breq	.+30     	; 0xe36 <vfprintf+0x8a>
     e18:	38 f4       	brcc	.+14     	; 0xe28 <vfprintf+0x7c>
     e1a:	80 32       	cpi	r24, 0x20	; 32
     e1c:	79 f0       	breq	.+30     	; 0xe3c <vfprintf+0x90>
     e1e:	83 32       	cpi	r24, 0x23	; 35
     e20:	a1 f4       	brne	.+40     	; 0xe4a <vfprintf+0x9e>
     e22:	f9 2d       	mov	r31, r9
     e24:	f0 61       	ori	r31, 0x10	; 16
     e26:	2e c0       	rjmp	.+92     	; 0xe84 <vfprintf+0xd8>
     e28:	8d 32       	cpi	r24, 0x2D	; 45
     e2a:	61 f0       	breq	.+24     	; 0xe44 <vfprintf+0x98>
     e2c:	80 33       	cpi	r24, 0x30	; 48
     e2e:	69 f4       	brne	.+26     	; 0xe4a <vfprintf+0x9e>
     e30:	29 2d       	mov	r18, r9
     e32:	21 60       	ori	r18, 0x01	; 1
     e34:	2d c0       	rjmp	.+90     	; 0xe90 <vfprintf+0xe4>
     e36:	39 2d       	mov	r19, r9
     e38:	32 60       	ori	r19, 0x02	; 2
     e3a:	93 2e       	mov	r9, r19
     e3c:	89 2d       	mov	r24, r9
     e3e:	84 60       	ori	r24, 0x04	; 4
     e40:	98 2e       	mov	r9, r24
     e42:	2a c0       	rjmp	.+84     	; 0xe98 <vfprintf+0xec>
     e44:	e9 2d       	mov	r30, r9
     e46:	e8 60       	ori	r30, 0x08	; 8
     e48:	15 c0       	rjmp	.+42     	; 0xe74 <vfprintf+0xc8>
     e4a:	97 fc       	sbrc	r9, 7
     e4c:	2d c0       	rjmp	.+90     	; 0xea8 <vfprintf+0xfc>
     e4e:	20 ed       	ldi	r18, 0xD0	; 208
     e50:	28 0f       	add	r18, r24
     e52:	2a 30       	cpi	r18, 0x0A	; 10
     e54:	88 f4       	brcc	.+34     	; 0xe78 <vfprintf+0xcc>
     e56:	96 fe       	sbrs	r9, 6
     e58:	06 c0       	rjmp	.+12     	; 0xe66 <vfprintf+0xba>
     e5a:	3a e0       	ldi	r19, 0x0A	; 10
     e5c:	13 9f       	mul	r17, r19
     e5e:	20 0d       	add	r18, r0
     e60:	11 24       	eor	r1, r1
     e62:	12 2f       	mov	r17, r18
     e64:	19 c0       	rjmp	.+50     	; 0xe98 <vfprintf+0xec>
     e66:	8a e0       	ldi	r24, 0x0A	; 10
     e68:	58 9e       	mul	r5, r24
     e6a:	20 0d       	add	r18, r0
     e6c:	11 24       	eor	r1, r1
     e6e:	52 2e       	mov	r5, r18
     e70:	e9 2d       	mov	r30, r9
     e72:	e0 62       	ori	r30, 0x20	; 32
     e74:	9e 2e       	mov	r9, r30
     e76:	10 c0       	rjmp	.+32     	; 0xe98 <vfprintf+0xec>
     e78:	8e 32       	cpi	r24, 0x2E	; 46
     e7a:	31 f4       	brne	.+12     	; 0xe88 <vfprintf+0xdc>
     e7c:	96 fc       	sbrc	r9, 6
     e7e:	e5 c2       	rjmp	.+1482   	; 0x144a <vfprintf+0x69e>
     e80:	f9 2d       	mov	r31, r9
     e82:	f0 64       	ori	r31, 0x40	; 64
     e84:	9f 2e       	mov	r9, r31
     e86:	08 c0       	rjmp	.+16     	; 0xe98 <vfprintf+0xec>
     e88:	8c 36       	cpi	r24, 0x6C	; 108
     e8a:	21 f4       	brne	.+8      	; 0xe94 <vfprintf+0xe8>
     e8c:	29 2d       	mov	r18, r9
     e8e:	20 68       	ori	r18, 0x80	; 128
     e90:	92 2e       	mov	r9, r18
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <vfprintf+0xec>
     e94:	88 36       	cpi	r24, 0x68	; 104
     e96:	41 f4       	brne	.+16     	; 0xea8 <vfprintf+0xfc>
     e98:	f1 01       	movw	r30, r2
     e9a:	93 fd       	sbrc	r25, 3
     e9c:	85 91       	lpm	r24, Z+
     e9e:	93 ff       	sbrs	r25, 3
     ea0:	81 91       	ld	r24, Z+
     ea2:	1f 01       	movw	r2, r30
     ea4:	81 11       	cpse	r24, r1
     ea6:	b3 cf       	rjmp	.-154    	; 0xe0e <vfprintf+0x62>
     ea8:	9b eb       	ldi	r25, 0xBB	; 187
     eaa:	98 0f       	add	r25, r24
     eac:	93 30       	cpi	r25, 0x03	; 3
     eae:	20 f4       	brcc	.+8      	; 0xeb8 <vfprintf+0x10c>
     eb0:	99 2d       	mov	r25, r9
     eb2:	90 61       	ori	r25, 0x10	; 16
     eb4:	80 5e       	subi	r24, 0xE0	; 224
     eb6:	07 c0       	rjmp	.+14     	; 0xec6 <vfprintf+0x11a>
     eb8:	9b e9       	ldi	r25, 0x9B	; 155
     eba:	98 0f       	add	r25, r24
     ebc:	93 30       	cpi	r25, 0x03	; 3
     ebe:	08 f0       	brcs	.+2      	; 0xec2 <vfprintf+0x116>
     ec0:	66 c1       	rjmp	.+716    	; 0x118e <vfprintf+0x3e2>
     ec2:	99 2d       	mov	r25, r9
     ec4:	9f 7e       	andi	r25, 0xEF	; 239
     ec6:	96 ff       	sbrs	r25, 6
     ec8:	16 e0       	ldi	r17, 0x06	; 6
     eca:	9f 73       	andi	r25, 0x3F	; 63
     ecc:	99 2e       	mov	r9, r25
     ece:	85 36       	cpi	r24, 0x65	; 101
     ed0:	19 f4       	brne	.+6      	; 0xed8 <vfprintf+0x12c>
     ed2:	90 64       	ori	r25, 0x40	; 64
     ed4:	99 2e       	mov	r9, r25
     ed6:	08 c0       	rjmp	.+16     	; 0xee8 <vfprintf+0x13c>
     ed8:	86 36       	cpi	r24, 0x66	; 102
     eda:	21 f4       	brne	.+8      	; 0xee4 <vfprintf+0x138>
     edc:	39 2f       	mov	r19, r25
     ede:	30 68       	ori	r19, 0x80	; 128
     ee0:	93 2e       	mov	r9, r19
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <vfprintf+0x13c>
     ee4:	11 11       	cpse	r17, r1
     ee6:	11 50       	subi	r17, 0x01	; 1
     ee8:	97 fe       	sbrs	r9, 7
     eea:	07 c0       	rjmp	.+14     	; 0xefa <vfprintf+0x14e>
     eec:	1c 33       	cpi	r17, 0x3C	; 60
     eee:	50 f4       	brcc	.+20     	; 0xf04 <vfprintf+0x158>
     ef0:	44 24       	eor	r4, r4
     ef2:	43 94       	inc	r4
     ef4:	41 0e       	add	r4, r17
     ef6:	27 e0       	ldi	r18, 0x07	; 7
     ef8:	0b c0       	rjmp	.+22     	; 0xf10 <vfprintf+0x164>
     efa:	18 30       	cpi	r17, 0x08	; 8
     efc:	38 f0       	brcs	.+14     	; 0xf0c <vfprintf+0x160>
     efe:	27 e0       	ldi	r18, 0x07	; 7
     f00:	17 e0       	ldi	r17, 0x07	; 7
     f02:	05 c0       	rjmp	.+10     	; 0xf0e <vfprintf+0x162>
     f04:	27 e0       	ldi	r18, 0x07	; 7
     f06:	9c e3       	ldi	r25, 0x3C	; 60
     f08:	49 2e       	mov	r4, r25
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x164>
     f0c:	21 2f       	mov	r18, r17
     f0e:	41 2c       	mov	r4, r1
     f10:	56 01       	movw	r10, r12
     f12:	84 e0       	ldi	r24, 0x04	; 4
     f14:	a8 0e       	add	r10, r24
     f16:	b1 1c       	adc	r11, r1
     f18:	f6 01       	movw	r30, r12
     f1a:	60 81       	ld	r22, Z
     f1c:	71 81       	ldd	r23, Z+1	; 0x01
     f1e:	82 81       	ldd	r24, Z+2	; 0x02
     f20:	93 81       	ldd	r25, Z+3	; 0x03
     f22:	04 2d       	mov	r16, r4
     f24:	a3 01       	movw	r20, r6
     f26:	0e 94 ac 0a 	call	0x1558	; 0x1558 <__ftoa_engine>
     f2a:	6c 01       	movw	r12, r24
     f2c:	f9 81       	ldd	r31, Y+1	; 0x01
     f2e:	fc 87       	std	Y+12, r31	; 0x0c
     f30:	f0 ff       	sbrs	r31, 0
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <vfprintf+0x18c>
     f34:	f3 ff       	sbrs	r31, 3
     f36:	06 c0       	rjmp	.+12     	; 0xf44 <vfprintf+0x198>
     f38:	91 fc       	sbrc	r9, 1
     f3a:	06 c0       	rjmp	.+12     	; 0xf48 <vfprintf+0x19c>
     f3c:	92 fe       	sbrs	r9, 2
     f3e:	06 c0       	rjmp	.+12     	; 0xf4c <vfprintf+0x1a0>
     f40:	00 e2       	ldi	r16, 0x20	; 32
     f42:	05 c0       	rjmp	.+10     	; 0xf4e <vfprintf+0x1a2>
     f44:	0d e2       	ldi	r16, 0x2D	; 45
     f46:	03 c0       	rjmp	.+6      	; 0xf4e <vfprintf+0x1a2>
     f48:	0b e2       	ldi	r16, 0x2B	; 43
     f4a:	01 c0       	rjmp	.+2      	; 0xf4e <vfprintf+0x1a2>
     f4c:	00 e0       	ldi	r16, 0x00	; 0
     f4e:	8c 85       	ldd	r24, Y+12	; 0x0c
     f50:	8c 70       	andi	r24, 0x0C	; 12
     f52:	19 f0       	breq	.+6      	; 0xf5a <vfprintf+0x1ae>
     f54:	01 11       	cpse	r16, r1
     f56:	5a c2       	rjmp	.+1204   	; 0x140c <vfprintf+0x660>
     f58:	9b c2       	rjmp	.+1334   	; 0x1490 <vfprintf+0x6e4>
     f5a:	97 fe       	sbrs	r9, 7
     f5c:	10 c0       	rjmp	.+32     	; 0xf7e <vfprintf+0x1d2>
     f5e:	4c 0c       	add	r4, r12
     f60:	fc 85       	ldd	r31, Y+12	; 0x0c
     f62:	f4 ff       	sbrs	r31, 4
     f64:	04 c0       	rjmp	.+8      	; 0xf6e <vfprintf+0x1c2>
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	81 33       	cpi	r24, 0x31	; 49
     f6a:	09 f4       	brne	.+2      	; 0xf6e <vfprintf+0x1c2>
     f6c:	4a 94       	dec	r4
     f6e:	14 14       	cp	r1, r4
     f70:	74 f5       	brge	.+92     	; 0xfce <vfprintf+0x222>
     f72:	28 e0       	ldi	r18, 0x08	; 8
     f74:	24 15       	cp	r18, r4
     f76:	78 f5       	brcc	.+94     	; 0xfd6 <vfprintf+0x22a>
     f78:	88 e0       	ldi	r24, 0x08	; 8
     f7a:	48 2e       	mov	r4, r24
     f7c:	2c c0       	rjmp	.+88     	; 0xfd6 <vfprintf+0x22a>
     f7e:	96 fc       	sbrc	r9, 6
     f80:	2a c0       	rjmp	.+84     	; 0xfd6 <vfprintf+0x22a>
     f82:	81 2f       	mov	r24, r17
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	8c 15       	cp	r24, r12
     f88:	9d 05       	cpc	r25, r13
     f8a:	9c f0       	brlt	.+38     	; 0xfb2 <vfprintf+0x206>
     f8c:	3c ef       	ldi	r19, 0xFC	; 252
     f8e:	c3 16       	cp	r12, r19
     f90:	3f ef       	ldi	r19, 0xFF	; 255
     f92:	d3 06       	cpc	r13, r19
     f94:	74 f0       	brlt	.+28     	; 0xfb2 <vfprintf+0x206>
     f96:	89 2d       	mov	r24, r9
     f98:	80 68       	ori	r24, 0x80	; 128
     f9a:	98 2e       	mov	r9, r24
     f9c:	0a c0       	rjmp	.+20     	; 0xfb2 <vfprintf+0x206>
     f9e:	e2 e0       	ldi	r30, 0x02	; 2
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	ec 0f       	add	r30, r28
     fa4:	fd 1f       	adc	r31, r29
     fa6:	e1 0f       	add	r30, r17
     fa8:	f1 1d       	adc	r31, r1
     faa:	80 81       	ld	r24, Z
     fac:	80 33       	cpi	r24, 0x30	; 48
     fae:	19 f4       	brne	.+6      	; 0xfb6 <vfprintf+0x20a>
     fb0:	11 50       	subi	r17, 0x01	; 1
     fb2:	11 11       	cpse	r17, r1
     fb4:	f4 cf       	rjmp	.-24     	; 0xf9e <vfprintf+0x1f2>
     fb6:	97 fe       	sbrs	r9, 7
     fb8:	0e c0       	rjmp	.+28     	; 0xfd6 <vfprintf+0x22a>
     fba:	44 24       	eor	r4, r4
     fbc:	43 94       	inc	r4
     fbe:	41 0e       	add	r4, r17
     fc0:	81 2f       	mov	r24, r17
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	c8 16       	cp	r12, r24
     fc6:	d9 06       	cpc	r13, r25
     fc8:	2c f4       	brge	.+10     	; 0xfd4 <vfprintf+0x228>
     fca:	1c 19       	sub	r17, r12
     fcc:	04 c0       	rjmp	.+8      	; 0xfd6 <vfprintf+0x22a>
     fce:	44 24       	eor	r4, r4
     fd0:	43 94       	inc	r4
     fd2:	01 c0       	rjmp	.+2      	; 0xfd6 <vfprintf+0x22a>
     fd4:	10 e0       	ldi	r17, 0x00	; 0
     fd6:	97 fe       	sbrs	r9, 7
     fd8:	06 c0       	rjmp	.+12     	; 0xfe6 <vfprintf+0x23a>
     fda:	1c 14       	cp	r1, r12
     fdc:	1d 04       	cpc	r1, r13
     fde:	34 f4       	brge	.+12     	; 0xfec <vfprintf+0x240>
     fe0:	c6 01       	movw	r24, r12
     fe2:	01 96       	adiw	r24, 0x01	; 1
     fe4:	05 c0       	rjmp	.+10     	; 0xff0 <vfprintf+0x244>
     fe6:	85 e0       	ldi	r24, 0x05	; 5
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <vfprintf+0x244>
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	01 11       	cpse	r16, r1
     ff2:	01 96       	adiw	r24, 0x01	; 1
     ff4:	11 23       	and	r17, r17
     ff6:	31 f0       	breq	.+12     	; 0x1004 <vfprintf+0x258>
     ff8:	21 2f       	mov	r18, r17
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	2f 5f       	subi	r18, 0xFF	; 255
     ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    1000:	82 0f       	add	r24, r18
    1002:	93 1f       	adc	r25, r19
    1004:	25 2d       	mov	r18, r5
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	82 17       	cp	r24, r18
    100a:	93 07       	cpc	r25, r19
    100c:	14 f4       	brge	.+4      	; 0x1012 <vfprintf+0x266>
    100e:	58 1a       	sub	r5, r24
    1010:	01 c0       	rjmp	.+2      	; 0x1014 <vfprintf+0x268>
    1012:	51 2c       	mov	r5, r1
    1014:	89 2d       	mov	r24, r9
    1016:	89 70       	andi	r24, 0x09	; 9
    1018:	49 f4       	brne	.+18     	; 0x102c <vfprintf+0x280>
    101a:	55 20       	and	r5, r5
    101c:	39 f0       	breq	.+14     	; 0x102c <vfprintf+0x280>
    101e:	b7 01       	movw	r22, r14
    1020:	80 e2       	ldi	r24, 0x20	; 32
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1028:	5a 94       	dec	r5
    102a:	f7 cf       	rjmp	.-18     	; 0x101a <vfprintf+0x26e>
    102c:	00 23       	and	r16, r16
    102e:	29 f0       	breq	.+10     	; 0x103a <vfprintf+0x28e>
    1030:	b7 01       	movw	r22, r14
    1032:	80 2f       	mov	r24, r16
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    103a:	93 fc       	sbrc	r9, 3
    103c:	09 c0       	rjmp	.+18     	; 0x1050 <vfprintf+0x2a4>
    103e:	55 20       	and	r5, r5
    1040:	39 f0       	breq	.+14     	; 0x1050 <vfprintf+0x2a4>
    1042:	b7 01       	movw	r22, r14
    1044:	80 e3       	ldi	r24, 0x30	; 48
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    104c:	5a 94       	dec	r5
    104e:	f7 cf       	rjmp	.-18     	; 0x103e <vfprintf+0x292>
    1050:	97 fe       	sbrs	r9, 7
    1052:	4c c0       	rjmp	.+152    	; 0x10ec <vfprintf+0x340>
    1054:	46 01       	movw	r8, r12
    1056:	d7 fe       	sbrs	r13, 7
    1058:	02 c0       	rjmp	.+4      	; 0x105e <vfprintf+0x2b2>
    105a:	81 2c       	mov	r8, r1
    105c:	91 2c       	mov	r9, r1
    105e:	c6 01       	movw	r24, r12
    1060:	88 19       	sub	r24, r8
    1062:	99 09       	sbc	r25, r9
    1064:	f3 01       	movw	r30, r6
    1066:	e8 0f       	add	r30, r24
    1068:	f9 1f       	adc	r31, r25
    106a:	fe 87       	std	Y+14, r31	; 0x0e
    106c:	ed 87       	std	Y+13, r30	; 0x0d
    106e:	96 01       	movw	r18, r12
    1070:	24 19       	sub	r18, r4
    1072:	31 09       	sbc	r19, r1
    1074:	38 8b       	std	Y+16, r19	; 0x10
    1076:	2f 87       	std	Y+15, r18	; 0x0f
    1078:	01 2f       	mov	r16, r17
    107a:	10 e0       	ldi	r17, 0x00	; 0
    107c:	11 95       	neg	r17
    107e:	01 95       	neg	r16
    1080:	11 09       	sbc	r17, r1
    1082:	3f ef       	ldi	r19, 0xFF	; 255
    1084:	83 16       	cp	r8, r19
    1086:	93 06       	cpc	r9, r19
    1088:	29 f4       	brne	.+10     	; 0x1094 <vfprintf+0x2e8>
    108a:	b7 01       	movw	r22, r14
    108c:	8e e2       	ldi	r24, 0x2E	; 46
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1094:	c8 14       	cp	r12, r8
    1096:	d9 04       	cpc	r13, r9
    1098:	4c f0       	brlt	.+18     	; 0x10ac <vfprintf+0x300>
    109a:	8f 85       	ldd	r24, Y+15	; 0x0f
    109c:	98 89       	ldd	r25, Y+16	; 0x10
    109e:	88 15       	cp	r24, r8
    10a0:	99 05       	cpc	r25, r9
    10a2:	24 f4       	brge	.+8      	; 0x10ac <vfprintf+0x300>
    10a4:	ed 85       	ldd	r30, Y+13	; 0x0d
    10a6:	fe 85       	ldd	r31, Y+14	; 0x0e
    10a8:	81 81       	ldd	r24, Z+1	; 0x01
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <vfprintf+0x302>
    10ac:	80 e3       	ldi	r24, 0x30	; 48
    10ae:	f1 e0       	ldi	r31, 0x01	; 1
    10b0:	8f 1a       	sub	r8, r31
    10b2:	91 08       	sbc	r9, r1
    10b4:	2d 85       	ldd	r18, Y+13	; 0x0d
    10b6:	3e 85       	ldd	r19, Y+14	; 0x0e
    10b8:	2f 5f       	subi	r18, 0xFF	; 255
    10ba:	3f 4f       	sbci	r19, 0xFF	; 255
    10bc:	3e 87       	std	Y+14, r19	; 0x0e
    10be:	2d 87       	std	Y+13, r18	; 0x0d
    10c0:	80 16       	cp	r8, r16
    10c2:	91 06       	cpc	r9, r17
    10c4:	2c f0       	brlt	.+10     	; 0x10d0 <vfprintf+0x324>
    10c6:	b7 01       	movw	r22, r14
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    10ce:	d9 cf       	rjmp	.-78     	; 0x1082 <vfprintf+0x2d6>
    10d0:	c8 14       	cp	r12, r8
    10d2:	d9 04       	cpc	r13, r9
    10d4:	41 f4       	brne	.+16     	; 0x10e6 <vfprintf+0x33a>
    10d6:	9a 81       	ldd	r25, Y+2	; 0x02
    10d8:	96 33       	cpi	r25, 0x36	; 54
    10da:	20 f4       	brcc	.+8      	; 0x10e4 <vfprintf+0x338>
    10dc:	95 33       	cpi	r25, 0x35	; 53
    10de:	19 f4       	brne	.+6      	; 0x10e6 <vfprintf+0x33a>
    10e0:	3c 85       	ldd	r19, Y+12	; 0x0c
    10e2:	34 ff       	sbrs	r19, 4
    10e4:	81 e3       	ldi	r24, 0x31	; 49
    10e6:	b7 01       	movw	r22, r14
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	4e c0       	rjmp	.+156    	; 0x1188 <vfprintf+0x3dc>
    10ec:	8a 81       	ldd	r24, Y+2	; 0x02
    10ee:	81 33       	cpi	r24, 0x31	; 49
    10f0:	19 f0       	breq	.+6      	; 0x10f8 <vfprintf+0x34c>
    10f2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10f4:	9f 7e       	andi	r25, 0xEF	; 239
    10f6:	9c 87       	std	Y+12, r25	; 0x0c
    10f8:	b7 01       	movw	r22, r14
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1100:	11 11       	cpse	r17, r1
    1102:	05 c0       	rjmp	.+10     	; 0x110e <vfprintf+0x362>
    1104:	94 fc       	sbrc	r9, 4
    1106:	18 c0       	rjmp	.+48     	; 0x1138 <vfprintf+0x38c>
    1108:	85 e6       	ldi	r24, 0x65	; 101
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	17 c0       	rjmp	.+46     	; 0x113c <vfprintf+0x390>
    110e:	b7 01       	movw	r22, r14
    1110:	8e e2       	ldi	r24, 0x2E	; 46
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1118:	1e 5f       	subi	r17, 0xFE	; 254
    111a:	82 e0       	ldi	r24, 0x02	; 2
    111c:	01 e0       	ldi	r16, 0x01	; 1
    111e:	08 0f       	add	r16, r24
    1120:	f3 01       	movw	r30, r6
    1122:	e8 0f       	add	r30, r24
    1124:	f1 1d       	adc	r31, r1
    1126:	80 81       	ld	r24, Z
    1128:	b7 01       	movw	r22, r14
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1130:	80 2f       	mov	r24, r16
    1132:	01 13       	cpse	r16, r17
    1134:	f3 cf       	rjmp	.-26     	; 0x111c <vfprintf+0x370>
    1136:	e6 cf       	rjmp	.-52     	; 0x1104 <vfprintf+0x358>
    1138:	85 e4       	ldi	r24, 0x45	; 69
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	b7 01       	movw	r22, r14
    113e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1142:	d7 fc       	sbrc	r13, 7
    1144:	06 c0       	rjmp	.+12     	; 0x1152 <vfprintf+0x3a6>
    1146:	c1 14       	cp	r12, r1
    1148:	d1 04       	cpc	r13, r1
    114a:	41 f4       	brne	.+16     	; 0x115c <vfprintf+0x3b0>
    114c:	ec 85       	ldd	r30, Y+12	; 0x0c
    114e:	e4 ff       	sbrs	r30, 4
    1150:	05 c0       	rjmp	.+10     	; 0x115c <vfprintf+0x3b0>
    1152:	d1 94       	neg	r13
    1154:	c1 94       	neg	r12
    1156:	d1 08       	sbc	r13, r1
    1158:	8d e2       	ldi	r24, 0x2D	; 45
    115a:	01 c0       	rjmp	.+2      	; 0x115e <vfprintf+0x3b2>
    115c:	8b e2       	ldi	r24, 0x2B	; 43
    115e:	b7 01       	movw	r22, r14
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1166:	80 e3       	ldi	r24, 0x30	; 48
    1168:	2a e0       	ldi	r18, 0x0A	; 10
    116a:	c2 16       	cp	r12, r18
    116c:	d1 04       	cpc	r13, r1
    116e:	2c f0       	brlt	.+10     	; 0x117a <vfprintf+0x3ce>
    1170:	8f 5f       	subi	r24, 0xFF	; 255
    1172:	fa e0       	ldi	r31, 0x0A	; 10
    1174:	cf 1a       	sub	r12, r31
    1176:	d1 08       	sbc	r13, r1
    1178:	f7 cf       	rjmp	.-18     	; 0x1168 <vfprintf+0x3bc>
    117a:	b7 01       	movw	r22, r14
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1182:	b7 01       	movw	r22, r14
    1184:	c6 01       	movw	r24, r12
    1186:	c0 96       	adiw	r24, 0x30	; 48
    1188:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    118c:	54 c1       	rjmp	.+680    	; 0x1436 <vfprintf+0x68a>
    118e:	83 36       	cpi	r24, 0x63	; 99
    1190:	31 f0       	breq	.+12     	; 0x119e <vfprintf+0x3f2>
    1192:	83 37       	cpi	r24, 0x73	; 115
    1194:	79 f0       	breq	.+30     	; 0x11b4 <vfprintf+0x408>
    1196:	83 35       	cpi	r24, 0x53	; 83
    1198:	09 f0       	breq	.+2      	; 0x119c <vfprintf+0x3f0>
    119a:	56 c0       	rjmp	.+172    	; 0x1248 <vfprintf+0x49c>
    119c:	20 c0       	rjmp	.+64     	; 0x11de <vfprintf+0x432>
    119e:	56 01       	movw	r10, r12
    11a0:	32 e0       	ldi	r19, 0x02	; 2
    11a2:	a3 0e       	add	r10, r19
    11a4:	b1 1c       	adc	r11, r1
    11a6:	f6 01       	movw	r30, r12
    11a8:	80 81       	ld	r24, Z
    11aa:	89 83       	std	Y+1, r24	; 0x01
    11ac:	01 e0       	ldi	r16, 0x01	; 1
    11ae:	10 e0       	ldi	r17, 0x00	; 0
    11b0:	63 01       	movw	r12, r6
    11b2:	12 c0       	rjmp	.+36     	; 0x11d8 <vfprintf+0x42c>
    11b4:	56 01       	movw	r10, r12
    11b6:	f2 e0       	ldi	r31, 0x02	; 2
    11b8:	af 0e       	add	r10, r31
    11ba:	b1 1c       	adc	r11, r1
    11bc:	f6 01       	movw	r30, r12
    11be:	c0 80       	ld	r12, Z
    11c0:	d1 80       	ldd	r13, Z+1	; 0x01
    11c2:	96 fe       	sbrs	r9, 6
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <vfprintf+0x420>
    11c6:	61 2f       	mov	r22, r17
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <vfprintf+0x424>
    11cc:	6f ef       	ldi	r22, 0xFF	; 255
    11ce:	7f ef       	ldi	r23, 0xFF	; 255
    11d0:	c6 01       	movw	r24, r12
    11d2:	0e 94 8f 0b 	call	0x171e	; 0x171e <strnlen>
    11d6:	8c 01       	movw	r16, r24
    11d8:	f9 2d       	mov	r31, r9
    11da:	ff 77       	andi	r31, 0x7F	; 127
    11dc:	14 c0       	rjmp	.+40     	; 0x1206 <vfprintf+0x45a>
    11de:	56 01       	movw	r10, r12
    11e0:	22 e0       	ldi	r18, 0x02	; 2
    11e2:	a2 0e       	add	r10, r18
    11e4:	b1 1c       	adc	r11, r1
    11e6:	f6 01       	movw	r30, r12
    11e8:	c0 80       	ld	r12, Z
    11ea:	d1 80       	ldd	r13, Z+1	; 0x01
    11ec:	96 fe       	sbrs	r9, 6
    11ee:	03 c0       	rjmp	.+6      	; 0x11f6 <vfprintf+0x44a>
    11f0:	61 2f       	mov	r22, r17
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <vfprintf+0x44e>
    11f6:	6f ef       	ldi	r22, 0xFF	; 255
    11f8:	7f ef       	ldi	r23, 0xFF	; 255
    11fa:	c6 01       	movw	r24, r12
    11fc:	0e 94 84 0b 	call	0x1708	; 0x1708 <strnlen_P>
    1200:	8c 01       	movw	r16, r24
    1202:	f9 2d       	mov	r31, r9
    1204:	f0 68       	ori	r31, 0x80	; 128
    1206:	9f 2e       	mov	r9, r31
    1208:	f3 fd       	sbrc	r31, 3
    120a:	1a c0       	rjmp	.+52     	; 0x1240 <vfprintf+0x494>
    120c:	85 2d       	mov	r24, r5
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	08 17       	cp	r16, r24
    1212:	19 07       	cpc	r17, r25
    1214:	a8 f4       	brcc	.+42     	; 0x1240 <vfprintf+0x494>
    1216:	b7 01       	movw	r22, r14
    1218:	80 e2       	ldi	r24, 0x20	; 32
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1220:	5a 94       	dec	r5
    1222:	f4 cf       	rjmp	.-24     	; 0x120c <vfprintf+0x460>
    1224:	f6 01       	movw	r30, r12
    1226:	97 fc       	sbrc	r9, 7
    1228:	85 91       	lpm	r24, Z+
    122a:	97 fe       	sbrs	r9, 7
    122c:	81 91       	ld	r24, Z+
    122e:	6f 01       	movw	r12, r30
    1230:	b7 01       	movw	r22, r14
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1238:	51 10       	cpse	r5, r1
    123a:	5a 94       	dec	r5
    123c:	01 50       	subi	r16, 0x01	; 1
    123e:	11 09       	sbc	r17, r1
    1240:	01 15       	cp	r16, r1
    1242:	11 05       	cpc	r17, r1
    1244:	79 f7       	brne	.-34     	; 0x1224 <vfprintf+0x478>
    1246:	f7 c0       	rjmp	.+494    	; 0x1436 <vfprintf+0x68a>
    1248:	84 36       	cpi	r24, 0x64	; 100
    124a:	11 f0       	breq	.+4      	; 0x1250 <vfprintf+0x4a4>
    124c:	89 36       	cpi	r24, 0x69	; 105
    124e:	61 f5       	brne	.+88     	; 0x12a8 <vfprintf+0x4fc>
    1250:	56 01       	movw	r10, r12
    1252:	97 fe       	sbrs	r9, 7
    1254:	09 c0       	rjmp	.+18     	; 0x1268 <vfprintf+0x4bc>
    1256:	24 e0       	ldi	r18, 0x04	; 4
    1258:	a2 0e       	add	r10, r18
    125a:	b1 1c       	adc	r11, r1
    125c:	f6 01       	movw	r30, r12
    125e:	60 81       	ld	r22, Z
    1260:	71 81       	ldd	r23, Z+1	; 0x01
    1262:	82 81       	ldd	r24, Z+2	; 0x02
    1264:	93 81       	ldd	r25, Z+3	; 0x03
    1266:	0a c0       	rjmp	.+20     	; 0x127c <vfprintf+0x4d0>
    1268:	f2 e0       	ldi	r31, 0x02	; 2
    126a:	af 0e       	add	r10, r31
    126c:	b1 1c       	adc	r11, r1
    126e:	f6 01       	movw	r30, r12
    1270:	60 81       	ld	r22, Z
    1272:	71 81       	ldd	r23, Z+1	; 0x01
    1274:	07 2e       	mov	r0, r23
    1276:	00 0c       	add	r0, r0
    1278:	88 0b       	sbc	r24, r24
    127a:	99 0b       	sbc	r25, r25
    127c:	f9 2d       	mov	r31, r9
    127e:	ff 76       	andi	r31, 0x6F	; 111
    1280:	9f 2e       	mov	r9, r31
    1282:	97 ff       	sbrs	r25, 7
    1284:	09 c0       	rjmp	.+18     	; 0x1298 <vfprintf+0x4ec>
    1286:	90 95       	com	r25
    1288:	80 95       	com	r24
    128a:	70 95       	com	r23
    128c:	61 95       	neg	r22
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	8f 4f       	sbci	r24, 0xFF	; 255
    1292:	9f 4f       	sbci	r25, 0xFF	; 255
    1294:	f0 68       	ori	r31, 0x80	; 128
    1296:	9f 2e       	mov	r9, r31
    1298:	2a e0       	ldi	r18, 0x0A	; 10
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	a3 01       	movw	r20, r6
    129e:	0e 94 00 0c 	call	0x1800	; 0x1800 <__ultoa_invert>
    12a2:	c8 2e       	mov	r12, r24
    12a4:	c6 18       	sub	r12, r6
    12a6:	3f c0       	rjmp	.+126    	; 0x1326 <vfprintf+0x57a>
    12a8:	09 2d       	mov	r16, r9
    12aa:	85 37       	cpi	r24, 0x75	; 117
    12ac:	21 f4       	brne	.+8      	; 0x12b6 <vfprintf+0x50a>
    12ae:	0f 7e       	andi	r16, 0xEF	; 239
    12b0:	2a e0       	ldi	r18, 0x0A	; 10
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	1d c0       	rjmp	.+58     	; 0x12f0 <vfprintf+0x544>
    12b6:	09 7f       	andi	r16, 0xF9	; 249
    12b8:	8f 36       	cpi	r24, 0x6F	; 111
    12ba:	91 f0       	breq	.+36     	; 0x12e0 <vfprintf+0x534>
    12bc:	18 f4       	brcc	.+6      	; 0x12c4 <vfprintf+0x518>
    12be:	88 35       	cpi	r24, 0x58	; 88
    12c0:	59 f0       	breq	.+22     	; 0x12d8 <vfprintf+0x52c>
    12c2:	c3 c0       	rjmp	.+390    	; 0x144a <vfprintf+0x69e>
    12c4:	80 37       	cpi	r24, 0x70	; 112
    12c6:	19 f0       	breq	.+6      	; 0x12ce <vfprintf+0x522>
    12c8:	88 37       	cpi	r24, 0x78	; 120
    12ca:	11 f0       	breq	.+4      	; 0x12d0 <vfprintf+0x524>
    12cc:	be c0       	rjmp	.+380    	; 0x144a <vfprintf+0x69e>
    12ce:	00 61       	ori	r16, 0x10	; 16
    12d0:	04 ff       	sbrs	r16, 4
    12d2:	09 c0       	rjmp	.+18     	; 0x12e6 <vfprintf+0x53a>
    12d4:	04 60       	ori	r16, 0x04	; 4
    12d6:	07 c0       	rjmp	.+14     	; 0x12e6 <vfprintf+0x53a>
    12d8:	94 fe       	sbrs	r9, 4
    12da:	08 c0       	rjmp	.+16     	; 0x12ec <vfprintf+0x540>
    12dc:	06 60       	ori	r16, 0x06	; 6
    12de:	06 c0       	rjmp	.+12     	; 0x12ec <vfprintf+0x540>
    12e0:	28 e0       	ldi	r18, 0x08	; 8
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	05 c0       	rjmp	.+10     	; 0x12f0 <vfprintf+0x544>
    12e6:	20 e1       	ldi	r18, 0x10	; 16
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	02 c0       	rjmp	.+4      	; 0x12f0 <vfprintf+0x544>
    12ec:	20 e1       	ldi	r18, 0x10	; 16
    12ee:	32 e0       	ldi	r19, 0x02	; 2
    12f0:	56 01       	movw	r10, r12
    12f2:	07 ff       	sbrs	r16, 7
    12f4:	09 c0       	rjmp	.+18     	; 0x1308 <vfprintf+0x55c>
    12f6:	84 e0       	ldi	r24, 0x04	; 4
    12f8:	a8 0e       	add	r10, r24
    12fa:	b1 1c       	adc	r11, r1
    12fc:	f6 01       	movw	r30, r12
    12fe:	60 81       	ld	r22, Z
    1300:	71 81       	ldd	r23, Z+1	; 0x01
    1302:	82 81       	ldd	r24, Z+2	; 0x02
    1304:	93 81       	ldd	r25, Z+3	; 0x03
    1306:	08 c0       	rjmp	.+16     	; 0x1318 <vfprintf+0x56c>
    1308:	f2 e0       	ldi	r31, 0x02	; 2
    130a:	af 0e       	add	r10, r31
    130c:	b1 1c       	adc	r11, r1
    130e:	f6 01       	movw	r30, r12
    1310:	60 81       	ld	r22, Z
    1312:	71 81       	ldd	r23, Z+1	; 0x01
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	a3 01       	movw	r20, r6
    131a:	0e 94 00 0c 	call	0x1800	; 0x1800 <__ultoa_invert>
    131e:	c8 2e       	mov	r12, r24
    1320:	c6 18       	sub	r12, r6
    1322:	0f 77       	andi	r16, 0x7F	; 127
    1324:	90 2e       	mov	r9, r16
    1326:	96 fe       	sbrs	r9, 6
    1328:	0b c0       	rjmp	.+22     	; 0x1340 <vfprintf+0x594>
    132a:	09 2d       	mov	r16, r9
    132c:	0e 7f       	andi	r16, 0xFE	; 254
    132e:	c1 16       	cp	r12, r17
    1330:	50 f4       	brcc	.+20     	; 0x1346 <vfprintf+0x59a>
    1332:	94 fe       	sbrs	r9, 4
    1334:	0a c0       	rjmp	.+20     	; 0x134a <vfprintf+0x59e>
    1336:	92 fc       	sbrc	r9, 2
    1338:	08 c0       	rjmp	.+16     	; 0x134a <vfprintf+0x59e>
    133a:	09 2d       	mov	r16, r9
    133c:	0e 7e       	andi	r16, 0xEE	; 238
    133e:	05 c0       	rjmp	.+10     	; 0x134a <vfprintf+0x59e>
    1340:	dc 2c       	mov	r13, r12
    1342:	09 2d       	mov	r16, r9
    1344:	03 c0       	rjmp	.+6      	; 0x134c <vfprintf+0x5a0>
    1346:	dc 2c       	mov	r13, r12
    1348:	01 c0       	rjmp	.+2      	; 0x134c <vfprintf+0x5a0>
    134a:	d1 2e       	mov	r13, r17
    134c:	04 ff       	sbrs	r16, 4
    134e:	0d c0       	rjmp	.+26     	; 0x136a <vfprintf+0x5be>
    1350:	fe 01       	movw	r30, r28
    1352:	ec 0d       	add	r30, r12
    1354:	f1 1d       	adc	r31, r1
    1356:	80 81       	ld	r24, Z
    1358:	80 33       	cpi	r24, 0x30	; 48
    135a:	11 f4       	brne	.+4      	; 0x1360 <vfprintf+0x5b4>
    135c:	09 7e       	andi	r16, 0xE9	; 233
    135e:	09 c0       	rjmp	.+18     	; 0x1372 <vfprintf+0x5c6>
    1360:	02 ff       	sbrs	r16, 2
    1362:	06 c0       	rjmp	.+12     	; 0x1370 <vfprintf+0x5c4>
    1364:	d3 94       	inc	r13
    1366:	d3 94       	inc	r13
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <vfprintf+0x5c6>
    136a:	80 2f       	mov	r24, r16
    136c:	86 78       	andi	r24, 0x86	; 134
    136e:	09 f0       	breq	.+2      	; 0x1372 <vfprintf+0x5c6>
    1370:	d3 94       	inc	r13
    1372:	03 fd       	sbrc	r16, 3
    1374:	11 c0       	rjmp	.+34     	; 0x1398 <vfprintf+0x5ec>
    1376:	00 ff       	sbrs	r16, 0
    1378:	06 c0       	rjmp	.+12     	; 0x1386 <vfprintf+0x5da>
    137a:	1c 2d       	mov	r17, r12
    137c:	d5 14       	cp	r13, r5
    137e:	80 f4       	brcc	.+32     	; 0x13a0 <vfprintf+0x5f4>
    1380:	15 0d       	add	r17, r5
    1382:	1d 19       	sub	r17, r13
    1384:	0d c0       	rjmp	.+26     	; 0x13a0 <vfprintf+0x5f4>
    1386:	d5 14       	cp	r13, r5
    1388:	58 f4       	brcc	.+22     	; 0x13a0 <vfprintf+0x5f4>
    138a:	b7 01       	movw	r22, r14
    138c:	80 e2       	ldi	r24, 0x20	; 32
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1394:	d3 94       	inc	r13
    1396:	f7 cf       	rjmp	.-18     	; 0x1386 <vfprintf+0x5da>
    1398:	d5 14       	cp	r13, r5
    139a:	10 f4       	brcc	.+4      	; 0x13a0 <vfprintf+0x5f4>
    139c:	5d 18       	sub	r5, r13
    139e:	01 c0       	rjmp	.+2      	; 0x13a2 <vfprintf+0x5f6>
    13a0:	51 2c       	mov	r5, r1
    13a2:	04 ff       	sbrs	r16, 4
    13a4:	10 c0       	rjmp	.+32     	; 0x13c6 <vfprintf+0x61a>
    13a6:	b7 01       	movw	r22, r14
    13a8:	80 e3       	ldi	r24, 0x30	; 48
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    13b0:	02 ff       	sbrs	r16, 2
    13b2:	17 c0       	rjmp	.+46     	; 0x13e2 <vfprintf+0x636>
    13b4:	01 fd       	sbrc	r16, 1
    13b6:	03 c0       	rjmp	.+6      	; 0x13be <vfprintf+0x612>
    13b8:	88 e7       	ldi	r24, 0x78	; 120
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <vfprintf+0x616>
    13be:	88 e5       	ldi	r24, 0x58	; 88
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	b7 01       	movw	r22, r14
    13c4:	0c c0       	rjmp	.+24     	; 0x13de <vfprintf+0x632>
    13c6:	80 2f       	mov	r24, r16
    13c8:	86 78       	andi	r24, 0x86	; 134
    13ca:	59 f0       	breq	.+22     	; 0x13e2 <vfprintf+0x636>
    13cc:	01 ff       	sbrs	r16, 1
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <vfprintf+0x628>
    13d0:	8b e2       	ldi	r24, 0x2B	; 43
    13d2:	01 c0       	rjmp	.+2      	; 0x13d6 <vfprintf+0x62a>
    13d4:	80 e2       	ldi	r24, 0x20	; 32
    13d6:	07 fd       	sbrc	r16, 7
    13d8:	8d e2       	ldi	r24, 0x2D	; 45
    13da:	b7 01       	movw	r22, r14
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    13e2:	c1 16       	cp	r12, r17
    13e4:	38 f4       	brcc	.+14     	; 0x13f4 <vfprintf+0x648>
    13e6:	b7 01       	movw	r22, r14
    13e8:	80 e3       	ldi	r24, 0x30	; 48
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    13f0:	11 50       	subi	r17, 0x01	; 1
    13f2:	f7 cf       	rjmp	.-18     	; 0x13e2 <vfprintf+0x636>
    13f4:	ca 94       	dec	r12
    13f6:	f3 01       	movw	r30, r6
    13f8:	ec 0d       	add	r30, r12
    13fa:	f1 1d       	adc	r31, r1
    13fc:	80 81       	ld	r24, Z
    13fe:	b7 01       	movw	r22, r14
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1406:	c1 10       	cpse	r12, r1
    1408:	f5 cf       	rjmp	.-22     	; 0x13f4 <vfprintf+0x648>
    140a:	15 c0       	rjmp	.+42     	; 0x1436 <vfprintf+0x68a>
    140c:	f4 e0       	ldi	r31, 0x04	; 4
    140e:	f5 15       	cp	r31, r5
    1410:	60 f5       	brcc	.+88     	; 0x146a <vfprintf+0x6be>
    1412:	84 e0       	ldi	r24, 0x04	; 4
    1414:	58 1a       	sub	r5, r24
    1416:	93 fe       	sbrs	r9, 3
    1418:	1f c0       	rjmp	.+62     	; 0x1458 <vfprintf+0x6ac>
    141a:	01 11       	cpse	r16, r1
    141c:	27 c0       	rjmp	.+78     	; 0x146c <vfprintf+0x6c0>
    141e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1420:	23 ff       	sbrs	r18, 3
    1422:	2a c0       	rjmp	.+84     	; 0x1478 <vfprintf+0x6cc>
    1424:	04 e5       	ldi	r16, 0x54	; 84
    1426:	10 e0       	ldi	r17, 0x00	; 0
    1428:	39 2d       	mov	r19, r9
    142a:	30 71       	andi	r19, 0x10	; 16
    142c:	93 2e       	mov	r9, r19
    142e:	f8 01       	movw	r30, r16
    1430:	84 91       	lpm	r24, Z
    1432:	81 11       	cpse	r24, r1
    1434:	24 c0       	rjmp	.+72     	; 0x147e <vfprintf+0x6d2>
    1436:	55 20       	and	r5, r5
    1438:	09 f4       	brne	.+2      	; 0x143c <vfprintf+0x690>
    143a:	e4 cc       	rjmp	.-1592   	; 0xe04 <vfprintf+0x58>
    143c:	b7 01       	movw	r22, r14
    143e:	80 e2       	ldi	r24, 0x20	; 32
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1446:	5a 94       	dec	r5
    1448:	f6 cf       	rjmp	.-20     	; 0x1436 <vfprintf+0x68a>
    144a:	f7 01       	movw	r30, r14
    144c:	86 81       	ldd	r24, Z+6	; 0x06
    144e:	97 81       	ldd	r25, Z+7	; 0x07
    1450:	26 c0       	rjmp	.+76     	; 0x149e <vfprintf+0x6f2>
    1452:	8f ef       	ldi	r24, 0xFF	; 255
    1454:	9f ef       	ldi	r25, 0xFF	; 255
    1456:	23 c0       	rjmp	.+70     	; 0x149e <vfprintf+0x6f2>
    1458:	b7 01       	movw	r22, r14
    145a:	80 e2       	ldi	r24, 0x20	; 32
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1462:	5a 94       	dec	r5
    1464:	51 10       	cpse	r5, r1
    1466:	f8 cf       	rjmp	.-16     	; 0x1458 <vfprintf+0x6ac>
    1468:	d8 cf       	rjmp	.-80     	; 0x141a <vfprintf+0x66e>
    146a:	51 2c       	mov	r5, r1
    146c:	b7 01       	movw	r22, r14
    146e:	80 2f       	mov	r24, r16
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    1476:	d3 cf       	rjmp	.-90     	; 0x141e <vfprintf+0x672>
    1478:	08 e5       	ldi	r16, 0x58	; 88
    147a:	10 e0       	ldi	r17, 0x00	; 0
    147c:	d5 cf       	rjmp	.-86     	; 0x1428 <vfprintf+0x67c>
    147e:	91 10       	cpse	r9, r1
    1480:	80 52       	subi	r24, 0x20	; 32
    1482:	b7 01       	movw	r22, r14
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 a2 0b 	call	0x1744	; 0x1744 <fputc>
    148a:	0f 5f       	subi	r16, 0xFF	; 255
    148c:	1f 4f       	sbci	r17, 0xFF	; 255
    148e:	cf cf       	rjmp	.-98     	; 0x142e <vfprintf+0x682>
    1490:	23 e0       	ldi	r18, 0x03	; 3
    1492:	25 15       	cp	r18, r5
    1494:	10 f4       	brcc	.+4      	; 0x149a <vfprintf+0x6ee>
    1496:	83 e0       	ldi	r24, 0x03	; 3
    1498:	bd cf       	rjmp	.-134    	; 0x1414 <vfprintf+0x668>
    149a:	51 2c       	mov	r5, r1
    149c:	c0 cf       	rjmp	.-128    	; 0x141e <vfprintf+0x672>
    149e:	60 96       	adiw	r28, 0x10	; 16
    14a0:	e2 e1       	ldi	r30, 0x12	; 18
    14a2:	0c 94 6f 0a 	jmp	0x14de	; 0x14de <__epilogue_restores__>

000014a6 <__prologue_saves__>:
    14a6:	2f 92       	push	r2
    14a8:	3f 92       	push	r3
    14aa:	4f 92       	push	r4
    14ac:	5f 92       	push	r5
    14ae:	6f 92       	push	r6
    14b0:	7f 92       	push	r7
    14b2:	8f 92       	push	r8
    14b4:	9f 92       	push	r9
    14b6:	af 92       	push	r10
    14b8:	bf 92       	push	r11
    14ba:	cf 92       	push	r12
    14bc:	df 92       	push	r13
    14be:	ef 92       	push	r14
    14c0:	ff 92       	push	r15
    14c2:	0f 93       	push	r16
    14c4:	1f 93       	push	r17
    14c6:	cf 93       	push	r28
    14c8:	df 93       	push	r29
    14ca:	cd b7       	in	r28, 0x3d	; 61
    14cc:	de b7       	in	r29, 0x3e	; 62
    14ce:	ca 1b       	sub	r28, r26
    14d0:	db 0b       	sbc	r29, r27
    14d2:	0f b6       	in	r0, 0x3f	; 63
    14d4:	f8 94       	cli
    14d6:	de bf       	out	0x3e, r29	; 62
    14d8:	0f be       	out	0x3f, r0	; 63
    14da:	cd bf       	out	0x3d, r28	; 61
    14dc:	09 94       	ijmp

000014de <__epilogue_restores__>:
    14de:	2a 88       	ldd	r2, Y+18	; 0x12
    14e0:	39 88       	ldd	r3, Y+17	; 0x11
    14e2:	48 88       	ldd	r4, Y+16	; 0x10
    14e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    14e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    14e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    14f0:	b9 84       	ldd	r11, Y+9	; 0x09
    14f2:	c8 84       	ldd	r12, Y+8	; 0x08
    14f4:	df 80       	ldd	r13, Y+7	; 0x07
    14f6:	ee 80       	ldd	r14, Y+6	; 0x06
    14f8:	fd 80       	ldd	r15, Y+5	; 0x05
    14fa:	0c 81       	ldd	r16, Y+4	; 0x04
    14fc:	1b 81       	ldd	r17, Y+3	; 0x03
    14fe:	aa 81       	ldd	r26, Y+2	; 0x02
    1500:	b9 81       	ldd	r27, Y+1	; 0x01
    1502:	ce 0f       	add	r28, r30
    1504:	d1 1d       	adc	r29, r1
    1506:	0f b6       	in	r0, 0x3f	; 63
    1508:	f8 94       	cli
    150a:	de bf       	out	0x3e, r29	; 62
    150c:	0f be       	out	0x3f, r0	; 63
    150e:	cd bf       	out	0x3d, r28	; 61
    1510:	ed 01       	movw	r28, r26
    1512:	08 95       	ret

00001514 <atof>:
    1514:	66 27       	eor	r22, r22
    1516:	77 27       	eor	r23, r23
    1518:	0c 94 5e 0c 	jmp	0x18bc	; 0x18bc <strtod>

0000151c <atoi>:
    151c:	fc 01       	movw	r30, r24
    151e:	88 27       	eor	r24, r24
    1520:	99 27       	eor	r25, r25
    1522:	e8 94       	clt
    1524:	21 91       	ld	r18, Z+
    1526:	20 32       	cpi	r18, 0x20	; 32
    1528:	e9 f3       	breq	.-6      	; 0x1524 <atoi+0x8>
    152a:	29 30       	cpi	r18, 0x09	; 9
    152c:	10 f0       	brcs	.+4      	; 0x1532 <atoi+0x16>
    152e:	2e 30       	cpi	r18, 0x0E	; 14
    1530:	c8 f3       	brcs	.-14     	; 0x1524 <atoi+0x8>
    1532:	2b 32       	cpi	r18, 0x2B	; 43
    1534:	41 f0       	breq	.+16     	; 0x1546 <atoi+0x2a>
    1536:	2d 32       	cpi	r18, 0x2D	; 45
    1538:	39 f4       	brne	.+14     	; 0x1548 <atoi+0x2c>
    153a:	68 94       	set
    153c:	04 c0       	rjmp	.+8      	; 0x1546 <atoi+0x2a>
    153e:	0e 94 9a 0b 	call	0x1734	; 0x1734 <__mulhi_const_10>
    1542:	82 0f       	add	r24, r18
    1544:	91 1d       	adc	r25, r1
    1546:	21 91       	ld	r18, Z+
    1548:	20 53       	subi	r18, 0x30	; 48
    154a:	2a 30       	cpi	r18, 0x0A	; 10
    154c:	c0 f3       	brcs	.-16     	; 0x153e <atoi+0x22>
    154e:	1e f4       	brtc	.+6      	; 0x1556 <atoi+0x3a>
    1550:	90 95       	com	r25
    1552:	81 95       	neg	r24
    1554:	9f 4f       	sbci	r25, 0xFF	; 255
    1556:	08 95       	ret

00001558 <__ftoa_engine>:
    1558:	28 30       	cpi	r18, 0x08	; 8
    155a:	08 f0       	brcs	.+2      	; 0x155e <__ftoa_engine+0x6>
    155c:	27 e0       	ldi	r18, 0x07	; 7
    155e:	33 27       	eor	r19, r19
    1560:	da 01       	movw	r26, r20
    1562:	99 0f       	add	r25, r25
    1564:	31 1d       	adc	r19, r1
    1566:	87 fd       	sbrc	r24, 7
    1568:	91 60       	ori	r25, 0x01	; 1
    156a:	00 96       	adiw	r24, 0x00	; 0
    156c:	61 05       	cpc	r22, r1
    156e:	71 05       	cpc	r23, r1
    1570:	39 f4       	brne	.+14     	; 0x1580 <__ftoa_engine+0x28>
    1572:	32 60       	ori	r19, 0x02	; 2
    1574:	2e 5f       	subi	r18, 0xFE	; 254
    1576:	3d 93       	st	X+, r19
    1578:	30 e3       	ldi	r19, 0x30	; 48
    157a:	2a 95       	dec	r18
    157c:	e1 f7       	brne	.-8      	; 0x1576 <__ftoa_engine+0x1e>
    157e:	08 95       	ret
    1580:	9f 3f       	cpi	r25, 0xFF	; 255
    1582:	30 f0       	brcs	.+12     	; 0x1590 <__ftoa_engine+0x38>
    1584:	80 38       	cpi	r24, 0x80	; 128
    1586:	71 05       	cpc	r23, r1
    1588:	61 05       	cpc	r22, r1
    158a:	09 f0       	breq	.+2      	; 0x158e <__ftoa_engine+0x36>
    158c:	3c 5f       	subi	r19, 0xFC	; 252
    158e:	3c 5f       	subi	r19, 0xFC	; 252
    1590:	3d 93       	st	X+, r19
    1592:	91 30       	cpi	r25, 0x01	; 1
    1594:	08 f0       	brcs	.+2      	; 0x1598 <__ftoa_engine+0x40>
    1596:	80 68       	ori	r24, 0x80	; 128
    1598:	91 1d       	adc	r25, r1
    159a:	df 93       	push	r29
    159c:	cf 93       	push	r28
    159e:	1f 93       	push	r17
    15a0:	0f 93       	push	r16
    15a2:	ff 92       	push	r15
    15a4:	ef 92       	push	r14
    15a6:	19 2f       	mov	r17, r25
    15a8:	98 7f       	andi	r25, 0xF8	; 248
    15aa:	96 95       	lsr	r25
    15ac:	e9 2f       	mov	r30, r25
    15ae:	96 95       	lsr	r25
    15b0:	96 95       	lsr	r25
    15b2:	e9 0f       	add	r30, r25
    15b4:	ff 27       	eor	r31, r31
    15b6:	ea 54       	subi	r30, 0x4A	; 74
    15b8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ba:	99 27       	eor	r25, r25
    15bc:	33 27       	eor	r19, r19
    15be:	ee 24       	eor	r14, r14
    15c0:	ff 24       	eor	r15, r15
    15c2:	a7 01       	movw	r20, r14
    15c4:	e7 01       	movw	r28, r14
    15c6:	05 90       	lpm	r0, Z+
    15c8:	08 94       	sec
    15ca:	07 94       	ror	r0
    15cc:	28 f4       	brcc	.+10     	; 0x15d8 <__ftoa_engine+0x80>
    15ce:	36 0f       	add	r19, r22
    15d0:	e7 1e       	adc	r14, r23
    15d2:	f8 1e       	adc	r15, r24
    15d4:	49 1f       	adc	r20, r25
    15d6:	51 1d       	adc	r21, r1
    15d8:	66 0f       	add	r22, r22
    15da:	77 1f       	adc	r23, r23
    15dc:	88 1f       	adc	r24, r24
    15de:	99 1f       	adc	r25, r25
    15e0:	06 94       	lsr	r0
    15e2:	a1 f7       	brne	.-24     	; 0x15cc <__ftoa_engine+0x74>
    15e4:	05 90       	lpm	r0, Z+
    15e6:	07 94       	ror	r0
    15e8:	28 f4       	brcc	.+10     	; 0x15f4 <__ftoa_engine+0x9c>
    15ea:	e7 0e       	add	r14, r23
    15ec:	f8 1e       	adc	r15, r24
    15ee:	49 1f       	adc	r20, r25
    15f0:	56 1f       	adc	r21, r22
    15f2:	c1 1d       	adc	r28, r1
    15f4:	77 0f       	add	r23, r23
    15f6:	88 1f       	adc	r24, r24
    15f8:	99 1f       	adc	r25, r25
    15fa:	66 1f       	adc	r22, r22
    15fc:	06 94       	lsr	r0
    15fe:	a1 f7       	brne	.-24     	; 0x15e8 <__ftoa_engine+0x90>
    1600:	05 90       	lpm	r0, Z+
    1602:	07 94       	ror	r0
    1604:	28 f4       	brcc	.+10     	; 0x1610 <__ftoa_engine+0xb8>
    1606:	f8 0e       	add	r15, r24
    1608:	49 1f       	adc	r20, r25
    160a:	56 1f       	adc	r21, r22
    160c:	c7 1f       	adc	r28, r23
    160e:	d1 1d       	adc	r29, r1
    1610:	88 0f       	add	r24, r24
    1612:	99 1f       	adc	r25, r25
    1614:	66 1f       	adc	r22, r22
    1616:	77 1f       	adc	r23, r23
    1618:	06 94       	lsr	r0
    161a:	a1 f7       	brne	.-24     	; 0x1604 <__ftoa_engine+0xac>
    161c:	05 90       	lpm	r0, Z+
    161e:	07 94       	ror	r0
    1620:	20 f4       	brcc	.+8      	; 0x162a <__ftoa_engine+0xd2>
    1622:	49 0f       	add	r20, r25
    1624:	56 1f       	adc	r21, r22
    1626:	c7 1f       	adc	r28, r23
    1628:	d8 1f       	adc	r29, r24
    162a:	99 0f       	add	r25, r25
    162c:	66 1f       	adc	r22, r22
    162e:	77 1f       	adc	r23, r23
    1630:	88 1f       	adc	r24, r24
    1632:	06 94       	lsr	r0
    1634:	a9 f7       	brne	.-22     	; 0x1620 <__ftoa_engine+0xc8>
    1636:	84 91       	lpm	r24, Z
    1638:	10 95       	com	r17
    163a:	17 70       	andi	r17, 0x07	; 7
    163c:	41 f0       	breq	.+16     	; 0x164e <__ftoa_engine+0xf6>
    163e:	d6 95       	lsr	r29
    1640:	c7 95       	ror	r28
    1642:	57 95       	ror	r21
    1644:	47 95       	ror	r20
    1646:	f7 94       	ror	r15
    1648:	e7 94       	ror	r14
    164a:	1a 95       	dec	r17
    164c:	c1 f7       	brne	.-16     	; 0x163e <__ftoa_engine+0xe6>
    164e:	ec e5       	ldi	r30, 0x5C	; 92
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	68 94       	set
    1654:	15 90       	lpm	r1, Z+
    1656:	15 91       	lpm	r17, Z+
    1658:	35 91       	lpm	r19, Z+
    165a:	65 91       	lpm	r22, Z+
    165c:	95 91       	lpm	r25, Z+
    165e:	05 90       	lpm	r0, Z+
    1660:	7f e2       	ldi	r23, 0x2F	; 47
    1662:	73 95       	inc	r23
    1664:	e1 18       	sub	r14, r1
    1666:	f1 0a       	sbc	r15, r17
    1668:	43 0b       	sbc	r20, r19
    166a:	56 0b       	sbc	r21, r22
    166c:	c9 0b       	sbc	r28, r25
    166e:	d0 09       	sbc	r29, r0
    1670:	c0 f7       	brcc	.-16     	; 0x1662 <__ftoa_engine+0x10a>
    1672:	e1 0c       	add	r14, r1
    1674:	f1 1e       	adc	r15, r17
    1676:	43 1f       	adc	r20, r19
    1678:	56 1f       	adc	r21, r22
    167a:	c9 1f       	adc	r28, r25
    167c:	d0 1d       	adc	r29, r0
    167e:	7e f4       	brtc	.+30     	; 0x169e <__ftoa_engine+0x146>
    1680:	70 33       	cpi	r23, 0x30	; 48
    1682:	11 f4       	brne	.+4      	; 0x1688 <__ftoa_engine+0x130>
    1684:	8a 95       	dec	r24
    1686:	e6 cf       	rjmp	.-52     	; 0x1654 <__ftoa_engine+0xfc>
    1688:	e8 94       	clt
    168a:	01 50       	subi	r16, 0x01	; 1
    168c:	30 f0       	brcs	.+12     	; 0x169a <__ftoa_engine+0x142>
    168e:	08 0f       	add	r16, r24
    1690:	0a f4       	brpl	.+2      	; 0x1694 <__ftoa_engine+0x13c>
    1692:	00 27       	eor	r16, r16
    1694:	02 17       	cp	r16, r18
    1696:	08 f4       	brcc	.+2      	; 0x169a <__ftoa_engine+0x142>
    1698:	20 2f       	mov	r18, r16
    169a:	23 95       	inc	r18
    169c:	02 2f       	mov	r16, r18
    169e:	7a 33       	cpi	r23, 0x3A	; 58
    16a0:	28 f0       	brcs	.+10     	; 0x16ac <__ftoa_engine+0x154>
    16a2:	79 e3       	ldi	r23, 0x39	; 57
    16a4:	7d 93       	st	X+, r23
    16a6:	2a 95       	dec	r18
    16a8:	e9 f7       	brne	.-6      	; 0x16a4 <__ftoa_engine+0x14c>
    16aa:	10 c0       	rjmp	.+32     	; 0x16cc <__ftoa_engine+0x174>
    16ac:	7d 93       	st	X+, r23
    16ae:	2a 95       	dec	r18
    16b0:	89 f6       	brne	.-94     	; 0x1654 <__ftoa_engine+0xfc>
    16b2:	06 94       	lsr	r0
    16b4:	97 95       	ror	r25
    16b6:	67 95       	ror	r22
    16b8:	37 95       	ror	r19
    16ba:	17 95       	ror	r17
    16bc:	17 94       	ror	r1
    16be:	e1 18       	sub	r14, r1
    16c0:	f1 0a       	sbc	r15, r17
    16c2:	43 0b       	sbc	r20, r19
    16c4:	56 0b       	sbc	r21, r22
    16c6:	c9 0b       	sbc	r28, r25
    16c8:	d0 09       	sbc	r29, r0
    16ca:	98 f0       	brcs	.+38     	; 0x16f2 <__ftoa_engine+0x19a>
    16cc:	23 95       	inc	r18
    16ce:	7e 91       	ld	r23, -X
    16d0:	73 95       	inc	r23
    16d2:	7a 33       	cpi	r23, 0x3A	; 58
    16d4:	08 f0       	brcs	.+2      	; 0x16d8 <__ftoa_engine+0x180>
    16d6:	70 e3       	ldi	r23, 0x30	; 48
    16d8:	7c 93       	st	X, r23
    16da:	20 13       	cpse	r18, r16
    16dc:	b8 f7       	brcc	.-18     	; 0x16cc <__ftoa_engine+0x174>
    16de:	7e 91       	ld	r23, -X
    16e0:	70 61       	ori	r23, 0x10	; 16
    16e2:	7d 93       	st	X+, r23
    16e4:	30 f0       	brcs	.+12     	; 0x16f2 <__ftoa_engine+0x19a>
    16e6:	83 95       	inc	r24
    16e8:	71 e3       	ldi	r23, 0x31	; 49
    16ea:	7d 93       	st	X+, r23
    16ec:	70 e3       	ldi	r23, 0x30	; 48
    16ee:	2a 95       	dec	r18
    16f0:	e1 f7       	brne	.-8      	; 0x16ea <__ftoa_engine+0x192>
    16f2:	11 24       	eor	r1, r1
    16f4:	ef 90       	pop	r14
    16f6:	ff 90       	pop	r15
    16f8:	0f 91       	pop	r16
    16fa:	1f 91       	pop	r17
    16fc:	cf 91       	pop	r28
    16fe:	df 91       	pop	r29
    1700:	99 27       	eor	r25, r25
    1702:	87 fd       	sbrc	r24, 7
    1704:	90 95       	com	r25
    1706:	08 95       	ret

00001708 <strnlen_P>:
    1708:	fc 01       	movw	r30, r24
    170a:	05 90       	lpm	r0, Z+
    170c:	61 50       	subi	r22, 0x01	; 1
    170e:	70 40       	sbci	r23, 0x00	; 0
    1710:	01 10       	cpse	r0, r1
    1712:	d8 f7       	brcc	.-10     	; 0x170a <strnlen_P+0x2>
    1714:	80 95       	com	r24
    1716:	90 95       	com	r25
    1718:	8e 0f       	add	r24, r30
    171a:	9f 1f       	adc	r25, r31
    171c:	08 95       	ret

0000171e <strnlen>:
    171e:	fc 01       	movw	r30, r24
    1720:	61 50       	subi	r22, 0x01	; 1
    1722:	70 40       	sbci	r23, 0x00	; 0
    1724:	01 90       	ld	r0, Z+
    1726:	01 10       	cpse	r0, r1
    1728:	d8 f7       	brcc	.-10     	; 0x1720 <strnlen+0x2>
    172a:	80 95       	com	r24
    172c:	90 95       	com	r25
    172e:	8e 0f       	add	r24, r30
    1730:	9f 1f       	adc	r25, r31
    1732:	08 95       	ret

00001734 <__mulhi_const_10>:
    1734:	7a e0       	ldi	r23, 0x0A	; 10
    1736:	97 9f       	mul	r25, r23
    1738:	90 2d       	mov	r25, r0
    173a:	87 9f       	mul	r24, r23
    173c:	80 2d       	mov	r24, r0
    173e:	91 0d       	add	r25, r1
    1740:	11 24       	eor	r1, r1
    1742:	08 95       	ret

00001744 <fputc>:
    1744:	0f 93       	push	r16
    1746:	1f 93       	push	r17
    1748:	cf 93       	push	r28
    174a:	df 93       	push	r29
    174c:	fb 01       	movw	r30, r22
    174e:	23 81       	ldd	r18, Z+3	; 0x03
    1750:	21 fd       	sbrc	r18, 1
    1752:	03 c0       	rjmp	.+6      	; 0x175a <fputc+0x16>
    1754:	8f ef       	ldi	r24, 0xFF	; 255
    1756:	9f ef       	ldi	r25, 0xFF	; 255
    1758:	2c c0       	rjmp	.+88     	; 0x17b2 <fputc+0x6e>
    175a:	22 ff       	sbrs	r18, 2
    175c:	16 c0       	rjmp	.+44     	; 0x178a <fputc+0x46>
    175e:	46 81       	ldd	r20, Z+6	; 0x06
    1760:	57 81       	ldd	r21, Z+7	; 0x07
    1762:	24 81       	ldd	r18, Z+4	; 0x04
    1764:	35 81       	ldd	r19, Z+5	; 0x05
    1766:	42 17       	cp	r20, r18
    1768:	53 07       	cpc	r21, r19
    176a:	44 f4       	brge	.+16     	; 0x177c <fputc+0x38>
    176c:	a0 81       	ld	r26, Z
    176e:	b1 81       	ldd	r27, Z+1	; 0x01
    1770:	9d 01       	movw	r18, r26
    1772:	2f 5f       	subi	r18, 0xFF	; 255
    1774:	3f 4f       	sbci	r19, 0xFF	; 255
    1776:	31 83       	std	Z+1, r19	; 0x01
    1778:	20 83       	st	Z, r18
    177a:	8c 93       	st	X, r24
    177c:	26 81       	ldd	r18, Z+6	; 0x06
    177e:	37 81       	ldd	r19, Z+7	; 0x07
    1780:	2f 5f       	subi	r18, 0xFF	; 255
    1782:	3f 4f       	sbci	r19, 0xFF	; 255
    1784:	37 83       	std	Z+7, r19	; 0x07
    1786:	26 83       	std	Z+6, r18	; 0x06
    1788:	14 c0       	rjmp	.+40     	; 0x17b2 <fputc+0x6e>
    178a:	8b 01       	movw	r16, r22
    178c:	ec 01       	movw	r28, r24
    178e:	fb 01       	movw	r30, r22
    1790:	00 84       	ldd	r0, Z+8	; 0x08
    1792:	f1 85       	ldd	r31, Z+9	; 0x09
    1794:	e0 2d       	mov	r30, r0
    1796:	09 95       	icall
    1798:	89 2b       	or	r24, r25
    179a:	e1 f6       	brne	.-72     	; 0x1754 <fputc+0x10>
    179c:	d8 01       	movw	r26, r16
    179e:	16 96       	adiw	r26, 0x06	; 6
    17a0:	8d 91       	ld	r24, X+
    17a2:	9c 91       	ld	r25, X
    17a4:	17 97       	sbiw	r26, 0x07	; 7
    17a6:	01 96       	adiw	r24, 0x01	; 1
    17a8:	17 96       	adiw	r26, 0x07	; 7
    17aa:	9c 93       	st	X, r25
    17ac:	8e 93       	st	-X, r24
    17ae:	16 97       	sbiw	r26, 0x06	; 6
    17b0:	ce 01       	movw	r24, r28
    17b2:	df 91       	pop	r29
    17b4:	cf 91       	pop	r28
    17b6:	1f 91       	pop	r17
    17b8:	0f 91       	pop	r16
    17ba:	08 95       	ret

000017bc <sprintf>:
    17bc:	ae e0       	ldi	r26, 0x0E	; 14
    17be:	b0 e0       	ldi	r27, 0x00	; 0
    17c0:	e4 ee       	ldi	r30, 0xE4	; 228
    17c2:	fb e0       	ldi	r31, 0x0B	; 11
    17c4:	0c 94 61 0a 	jmp	0x14c2	; 0x14c2 <__prologue_saves__+0x1c>
    17c8:	0d 89       	ldd	r16, Y+21	; 0x15
    17ca:	1e 89       	ldd	r17, Y+22	; 0x16
    17cc:	86 e0       	ldi	r24, 0x06	; 6
    17ce:	8c 83       	std	Y+4, r24	; 0x04
    17d0:	1a 83       	std	Y+2, r17	; 0x02
    17d2:	09 83       	std	Y+1, r16	; 0x01
    17d4:	8f ef       	ldi	r24, 0xFF	; 255
    17d6:	9f e7       	ldi	r25, 0x7F	; 127
    17d8:	9e 83       	std	Y+6, r25	; 0x06
    17da:	8d 83       	std	Y+5, r24	; 0x05
    17dc:	ae 01       	movw	r20, r28
    17de:	47 5e       	subi	r20, 0xE7	; 231
    17e0:	5f 4f       	sbci	r21, 0xFF	; 255
    17e2:	6f 89       	ldd	r22, Y+23	; 0x17
    17e4:	78 8d       	ldd	r23, Y+24	; 0x18
    17e6:	ce 01       	movw	r24, r28
    17e8:	01 96       	adiw	r24, 0x01	; 1
    17ea:	0e 94 d6 06 	call	0xdac	; 0xdac <vfprintf>
    17ee:	ef 81       	ldd	r30, Y+7	; 0x07
    17f0:	f8 85       	ldd	r31, Y+8	; 0x08
    17f2:	e0 0f       	add	r30, r16
    17f4:	f1 1f       	adc	r31, r17
    17f6:	10 82       	st	Z, r1
    17f8:	2e 96       	adiw	r28, 0x0e	; 14
    17fa:	e4 e0       	ldi	r30, 0x04	; 4
    17fc:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__epilogue_restores__+0x1c>

00001800 <__ultoa_invert>:
    1800:	fa 01       	movw	r30, r20
    1802:	aa 27       	eor	r26, r26
    1804:	28 30       	cpi	r18, 0x08	; 8
    1806:	51 f1       	breq	.+84     	; 0x185c <__ultoa_invert+0x5c>
    1808:	20 31       	cpi	r18, 0x10	; 16
    180a:	81 f1       	breq	.+96     	; 0x186c <__ultoa_invert+0x6c>
    180c:	e8 94       	clt
    180e:	6f 93       	push	r22
    1810:	6e 7f       	andi	r22, 0xFE	; 254
    1812:	6e 5f       	subi	r22, 0xFE	; 254
    1814:	7f 4f       	sbci	r23, 0xFF	; 255
    1816:	8f 4f       	sbci	r24, 0xFF	; 255
    1818:	9f 4f       	sbci	r25, 0xFF	; 255
    181a:	af 4f       	sbci	r26, 0xFF	; 255
    181c:	b1 e0       	ldi	r27, 0x01	; 1
    181e:	3e d0       	rcall	.+124    	; 0x189c <__ultoa_invert+0x9c>
    1820:	b4 e0       	ldi	r27, 0x04	; 4
    1822:	3c d0       	rcall	.+120    	; 0x189c <__ultoa_invert+0x9c>
    1824:	67 0f       	add	r22, r23
    1826:	78 1f       	adc	r23, r24
    1828:	89 1f       	adc	r24, r25
    182a:	9a 1f       	adc	r25, r26
    182c:	a1 1d       	adc	r26, r1
    182e:	68 0f       	add	r22, r24
    1830:	79 1f       	adc	r23, r25
    1832:	8a 1f       	adc	r24, r26
    1834:	91 1d       	adc	r25, r1
    1836:	a1 1d       	adc	r26, r1
    1838:	6a 0f       	add	r22, r26
    183a:	71 1d       	adc	r23, r1
    183c:	81 1d       	adc	r24, r1
    183e:	91 1d       	adc	r25, r1
    1840:	a1 1d       	adc	r26, r1
    1842:	20 d0       	rcall	.+64     	; 0x1884 <__ultoa_invert+0x84>
    1844:	09 f4       	brne	.+2      	; 0x1848 <__ultoa_invert+0x48>
    1846:	68 94       	set
    1848:	3f 91       	pop	r19
    184a:	2a e0       	ldi	r18, 0x0A	; 10
    184c:	26 9f       	mul	r18, r22
    184e:	11 24       	eor	r1, r1
    1850:	30 19       	sub	r19, r0
    1852:	30 5d       	subi	r19, 0xD0	; 208
    1854:	31 93       	st	Z+, r19
    1856:	de f6       	brtc	.-74     	; 0x180e <__ultoa_invert+0xe>
    1858:	cf 01       	movw	r24, r30
    185a:	08 95       	ret
    185c:	46 2f       	mov	r20, r22
    185e:	47 70       	andi	r20, 0x07	; 7
    1860:	40 5d       	subi	r20, 0xD0	; 208
    1862:	41 93       	st	Z+, r20
    1864:	b3 e0       	ldi	r27, 0x03	; 3
    1866:	0f d0       	rcall	.+30     	; 0x1886 <__ultoa_invert+0x86>
    1868:	c9 f7       	brne	.-14     	; 0x185c <__ultoa_invert+0x5c>
    186a:	f6 cf       	rjmp	.-20     	; 0x1858 <__ultoa_invert+0x58>
    186c:	46 2f       	mov	r20, r22
    186e:	4f 70       	andi	r20, 0x0F	; 15
    1870:	40 5d       	subi	r20, 0xD0	; 208
    1872:	4a 33       	cpi	r20, 0x3A	; 58
    1874:	18 f0       	brcs	.+6      	; 0x187c <__ultoa_invert+0x7c>
    1876:	49 5d       	subi	r20, 0xD9	; 217
    1878:	31 fd       	sbrc	r19, 1
    187a:	40 52       	subi	r20, 0x20	; 32
    187c:	41 93       	st	Z+, r20
    187e:	02 d0       	rcall	.+4      	; 0x1884 <__ultoa_invert+0x84>
    1880:	a9 f7       	brne	.-22     	; 0x186c <__ultoa_invert+0x6c>
    1882:	ea cf       	rjmp	.-44     	; 0x1858 <__ultoa_invert+0x58>
    1884:	b4 e0       	ldi	r27, 0x04	; 4
    1886:	a6 95       	lsr	r26
    1888:	97 95       	ror	r25
    188a:	87 95       	ror	r24
    188c:	77 95       	ror	r23
    188e:	67 95       	ror	r22
    1890:	ba 95       	dec	r27
    1892:	c9 f7       	brne	.-14     	; 0x1886 <__ultoa_invert+0x86>
    1894:	00 97       	sbiw	r24, 0x00	; 0
    1896:	61 05       	cpc	r22, r1
    1898:	71 05       	cpc	r23, r1
    189a:	08 95       	ret
    189c:	9b 01       	movw	r18, r22
    189e:	ac 01       	movw	r20, r24
    18a0:	0a 2e       	mov	r0, r26
    18a2:	06 94       	lsr	r0
    18a4:	57 95       	ror	r21
    18a6:	47 95       	ror	r20
    18a8:	37 95       	ror	r19
    18aa:	27 95       	ror	r18
    18ac:	ba 95       	dec	r27
    18ae:	c9 f7       	brne	.-14     	; 0x18a2 <__ultoa_invert+0xa2>
    18b0:	62 0f       	add	r22, r18
    18b2:	73 1f       	adc	r23, r19
    18b4:	84 1f       	adc	r24, r20
    18b6:	95 1f       	adc	r25, r21
    18b8:	a0 1d       	adc	r26, r0
    18ba:	08 95       	ret

000018bc <strtod>:
    18bc:	a0 e0       	ldi	r26, 0x00	; 0
    18be:	b0 e0       	ldi	r27, 0x00	; 0
    18c0:	e4 e6       	ldi	r30, 0x64	; 100
    18c2:	fc e0       	ldi	r31, 0x0C	; 12
    18c4:	0c 94 59 0a 	jmp	0x14b2	; 0x14b2 <__prologue_saves__+0xc>
    18c8:	ec 01       	movw	r28, r24
    18ca:	6b 01       	movw	r12, r22
    18cc:	61 15       	cp	r22, r1
    18ce:	71 05       	cpc	r23, r1
    18d0:	19 f0       	breq	.+6      	; 0x18d8 <strtod+0x1c>
    18d2:	fb 01       	movw	r30, r22
    18d4:	91 83       	std	Z+1, r25	; 0x01
    18d6:	80 83       	st	Z, r24
    18d8:	7e 01       	movw	r14, r28
    18da:	ff ef       	ldi	r31, 0xFF	; 255
    18dc:	ef 1a       	sub	r14, r31
    18de:	ff 0a       	sbc	r15, r31
    18e0:	08 81       	ld	r16, Y
    18e2:	80 2f       	mov	r24, r16
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <isspace>
    18ea:	89 2b       	or	r24, r25
    18ec:	11 f0       	breq	.+4      	; 0x18f2 <strtod+0x36>
    18ee:	e7 01       	movw	r28, r14
    18f0:	f3 cf       	rjmp	.-26     	; 0x18d8 <strtod+0x1c>
    18f2:	0d 32       	cpi	r16, 0x2D	; 45
    18f4:	39 f4       	brne	.+14     	; 0x1904 <strtod+0x48>
    18f6:	7e 01       	movw	r14, r28
    18f8:	82 e0       	ldi	r24, 0x02	; 2
    18fa:	e8 0e       	add	r14, r24
    18fc:	f1 1c       	adc	r15, r1
    18fe:	09 81       	ldd	r16, Y+1	; 0x01
    1900:	11 e0       	ldi	r17, 0x01	; 1
    1902:	08 c0       	rjmp	.+16     	; 0x1914 <strtod+0x58>
    1904:	0b 32       	cpi	r16, 0x2B	; 43
    1906:	29 f4       	brne	.+10     	; 0x1912 <strtod+0x56>
    1908:	7e 01       	movw	r14, r28
    190a:	92 e0       	ldi	r25, 0x02	; 2
    190c:	e9 0e       	add	r14, r25
    190e:	f1 1c       	adc	r15, r1
    1910:	09 81       	ldd	r16, Y+1	; 0x01
    1912:	10 e0       	ldi	r17, 0x00	; 0
    1914:	e7 01       	movw	r28, r14
    1916:	21 97       	sbiw	r28, 0x01	; 1
    1918:	43 e0       	ldi	r20, 0x03	; 3
    191a:	50 e0       	ldi	r21, 0x00	; 0
    191c:	6e e5       	ldi	r22, 0x5E	; 94
    191e:	71 e0       	ldi	r23, 0x01	; 1
    1920:	ce 01       	movw	r24, r28
    1922:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <strncasecmp_P>
    1926:	89 2b       	or	r24, r25
    1928:	c1 f4       	brne	.+48     	; 0x195a <strtod+0x9e>
    192a:	23 96       	adiw	r28, 0x03	; 3
    192c:	45 e0       	ldi	r20, 0x05	; 5
    192e:	50 e0       	ldi	r21, 0x00	; 0
    1930:	69 e5       	ldi	r22, 0x59	; 89
    1932:	71 e0       	ldi	r23, 0x01	; 1
    1934:	ce 01       	movw	r24, r28
    1936:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <strncasecmp_P>
    193a:	89 2b       	or	r24, r25
    193c:	09 f4       	brne	.+2      	; 0x1940 <strtod+0x84>
    193e:	25 96       	adiw	r28, 0x05	; 5
    1940:	c1 14       	cp	r12, r1
    1942:	d1 04       	cpc	r13, r1
    1944:	19 f0       	breq	.+6      	; 0x194c <strtod+0x90>
    1946:	f6 01       	movw	r30, r12
    1948:	d1 83       	std	Z+1, r29	; 0x01
    194a:	c0 83       	st	Z, r28
    194c:	11 11       	cpse	r17, r1
    194e:	f6 c0       	rjmp	.+492    	; 0x1b3c <strtod+0x280>
    1950:	60 e0       	ldi	r22, 0x00	; 0
    1952:	70 e0       	ldi	r23, 0x00	; 0
    1954:	80 e8       	ldi	r24, 0x80	; 128
    1956:	9f e7       	ldi	r25, 0x7F	; 127
    1958:	fa c0       	rjmp	.+500    	; 0x1b4e <strtod+0x292>
    195a:	43 e0       	ldi	r20, 0x03	; 3
    195c:	50 e0       	ldi	r21, 0x00	; 0
    195e:	66 e5       	ldi	r22, 0x56	; 86
    1960:	71 e0       	ldi	r23, 0x01	; 1
    1962:	ce 01       	movw	r24, r28
    1964:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <strncasecmp_P>
    1968:	89 2b       	or	r24, r25
    196a:	59 f4       	brne	.+22     	; 0x1982 <strtod+0xc6>
    196c:	c1 14       	cp	r12, r1
    196e:	d1 04       	cpc	r13, r1
    1970:	09 f4       	brne	.+2      	; 0x1974 <strtod+0xb8>
    1972:	e9 c0       	rjmp	.+466    	; 0x1b46 <strtod+0x28a>
    1974:	f2 e0       	ldi	r31, 0x02	; 2
    1976:	ef 0e       	add	r14, r31
    1978:	f1 1c       	adc	r15, r1
    197a:	f6 01       	movw	r30, r12
    197c:	f1 82       	std	Z+1, r15	; 0x01
    197e:	e0 82       	st	Z, r14
    1980:	e2 c0       	rjmp	.+452    	; 0x1b46 <strtod+0x28a>
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	30 e0       	ldi	r19, 0x00	; 0
    1986:	a9 01       	movw	r20, r18
    1988:	c0 e0       	ldi	r28, 0x00	; 0
    198a:	d0 e0       	ldi	r29, 0x00	; 0
    198c:	f7 01       	movw	r30, r14
    198e:	80 ed       	ldi	r24, 0xD0	; 208
    1990:	a8 2e       	mov	r10, r24
    1992:	a0 0e       	add	r10, r16
    1994:	89 e0       	ldi	r24, 0x09	; 9
    1996:	8a 15       	cp	r24, r10
    1998:	30 f1       	brcs	.+76     	; 0x19e6 <strtod+0x12a>
    199a:	91 2f       	mov	r25, r17
    199c:	92 60       	ori	r25, 0x02	; 2
    199e:	b9 2e       	mov	r11, r25
    19a0:	81 2f       	mov	r24, r17
    19a2:	88 70       	andi	r24, 0x08	; 8
    19a4:	12 ff       	sbrs	r17, 2
    19a6:	04 c0       	rjmp	.+8      	; 0x19b0 <strtod+0xf4>
    19a8:	81 11       	cpse	r24, r1
    19aa:	24 c0       	rjmp	.+72     	; 0x19f4 <strtod+0x138>
    19ac:	21 96       	adiw	r28, 0x01	; 1
    19ae:	22 c0       	rjmp	.+68     	; 0x19f4 <strtod+0x138>
    19b0:	81 11       	cpse	r24, r1
    19b2:	21 97       	sbiw	r28, 0x01	; 1
    19b4:	a5 e0       	ldi	r26, 0x05	; 5
    19b6:	b0 e0       	ldi	r27, 0x00	; 0
    19b8:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <__muluhisi3>
    19bc:	dc 01       	movw	r26, r24
    19be:	cb 01       	movw	r24, r22
    19c0:	88 0f       	add	r24, r24
    19c2:	99 1f       	adc	r25, r25
    19c4:	aa 1f       	adc	r26, r26
    19c6:	bb 1f       	adc	r27, r27
    19c8:	9c 01       	movw	r18, r24
    19ca:	ad 01       	movw	r20, r26
    19cc:	2a 0d       	add	r18, r10
    19ce:	31 1d       	adc	r19, r1
    19d0:	41 1d       	adc	r20, r1
    19d2:	51 1d       	adc	r21, r1
    19d4:	28 39       	cpi	r18, 0x98	; 152
    19d6:	89 e9       	ldi	r24, 0x99	; 153
    19d8:	38 07       	cpc	r19, r24
    19da:	48 07       	cpc	r20, r24
    19dc:	89 e1       	ldi	r24, 0x19	; 25
    19de:	58 07       	cpc	r21, r24
    19e0:	48 f0       	brcs	.+18     	; 0x19f4 <strtod+0x138>
    19e2:	16 60       	ori	r17, 0x06	; 6
    19e4:	06 c0       	rjmp	.+12     	; 0x19f2 <strtod+0x136>
    19e6:	9e ef       	ldi	r25, 0xFE	; 254
    19e8:	a9 12       	cpse	r10, r25
    19ea:	0a c0       	rjmp	.+20     	; 0x1a00 <strtod+0x144>
    19ec:	13 fd       	sbrc	r17, 3
    19ee:	40 c0       	rjmp	.+128    	; 0x1a70 <strtod+0x1b4>
    19f0:	18 60       	ori	r17, 0x08	; 8
    19f2:	b1 2e       	mov	r11, r17
    19f4:	8f ef       	ldi	r24, 0xFF	; 255
    19f6:	e8 1a       	sub	r14, r24
    19f8:	f8 0a       	sbc	r15, r24
    19fa:	00 81       	ld	r16, Z
    19fc:	1b 2d       	mov	r17, r11
    19fe:	c6 cf       	rjmp	.-116    	; 0x198c <strtod+0xd0>
    1a00:	80 2f       	mov	r24, r16
    1a02:	8f 7d       	andi	r24, 0xDF	; 223
    1a04:	85 34       	cpi	r24, 0x45	; 69
    1a06:	a1 f5       	brne	.+104    	; 0x1a70 <strtod+0x1b4>
    1a08:	80 81       	ld	r24, Z
    1a0a:	8d 32       	cpi	r24, 0x2D	; 45
    1a0c:	11 f4       	brne	.+4      	; 0x1a12 <strtod+0x156>
    1a0e:	10 61       	ori	r17, 0x10	; 16
    1a10:	06 c0       	rjmp	.+12     	; 0x1a1e <strtod+0x162>
    1a12:	8b 32       	cpi	r24, 0x2B	; 43
    1a14:	21 f0       	breq	.+8      	; 0x1a1e <strtod+0x162>
    1a16:	31 96       	adiw	r30, 0x01	; 1
    1a18:	61 e0       	ldi	r22, 0x01	; 1
    1a1a:	70 e0       	ldi	r23, 0x00	; 0
    1a1c:	04 c0       	rjmp	.+8      	; 0x1a26 <strtod+0x16a>
    1a1e:	81 81       	ldd	r24, Z+1	; 0x01
    1a20:	32 96       	adiw	r30, 0x02	; 2
    1a22:	62 e0       	ldi	r22, 0x02	; 2
    1a24:	70 e0       	ldi	r23, 0x00	; 0
    1a26:	80 53       	subi	r24, 0x30	; 48
    1a28:	8a 30       	cpi	r24, 0x0A	; 10
    1a2a:	18 f0       	brcs	.+6      	; 0x1a32 <strtod+0x176>
    1a2c:	e6 1b       	sub	r30, r22
    1a2e:	f7 0b       	sbc	r31, r23
    1a30:	1f c0       	rjmp	.+62     	; 0x1a70 <strtod+0x1b4>
    1a32:	60 e0       	ldi	r22, 0x00	; 0
    1a34:	70 e0       	ldi	r23, 0x00	; 0
    1a36:	60 38       	cpi	r22, 0x80	; 128
    1a38:	9c e0       	ldi	r25, 0x0C	; 12
    1a3a:	79 07       	cpc	r23, r25
    1a3c:	5c f4       	brge	.+22     	; 0x1a54 <strtod+0x198>
    1a3e:	db 01       	movw	r26, r22
    1a40:	aa 0f       	add	r26, r26
    1a42:	bb 1f       	adc	r27, r27
    1a44:	aa 0f       	add	r26, r26
    1a46:	bb 1f       	adc	r27, r27
    1a48:	6a 0f       	add	r22, r26
    1a4a:	7b 1f       	adc	r23, r27
    1a4c:	66 0f       	add	r22, r22
    1a4e:	77 1f       	adc	r23, r23
    1a50:	68 0f       	add	r22, r24
    1a52:	71 1d       	adc	r23, r1
    1a54:	31 96       	adiw	r30, 0x01	; 1
    1a56:	df 01       	movw	r26, r30
    1a58:	11 97       	sbiw	r26, 0x01	; 1
    1a5a:	8c 91       	ld	r24, X
    1a5c:	80 53       	subi	r24, 0x30	; 48
    1a5e:	8a 30       	cpi	r24, 0x0A	; 10
    1a60:	50 f3       	brcs	.-44     	; 0x1a36 <strtod+0x17a>
    1a62:	14 ff       	sbrs	r17, 4
    1a64:	03 c0       	rjmp	.+6      	; 0x1a6c <strtod+0x1b0>
    1a66:	71 95       	neg	r23
    1a68:	61 95       	neg	r22
    1a6a:	71 09       	sbc	r23, r1
    1a6c:	c6 0f       	add	r28, r22
    1a6e:	d7 1f       	adc	r29, r23
    1a70:	11 ff       	sbrs	r17, 1
    1a72:	08 c0       	rjmp	.+16     	; 0x1a84 <strtod+0x1c8>
    1a74:	c1 14       	cp	r12, r1
    1a76:	d1 04       	cpc	r13, r1
    1a78:	29 f0       	breq	.+10     	; 0x1a84 <strtod+0x1c8>
    1a7a:	cf 01       	movw	r24, r30
    1a7c:	01 97       	sbiw	r24, 0x01	; 1
    1a7e:	f6 01       	movw	r30, r12
    1a80:	91 83       	std	Z+1, r25	; 0x01
    1a82:	80 83       	st	Z, r24
    1a84:	ca 01       	movw	r24, r20
    1a86:	b9 01       	movw	r22, r18
    1a88:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__floatunsisf>
    1a8c:	21 2f       	mov	r18, r17
    1a8e:	23 70       	andi	r18, 0x03	; 3
    1a90:	23 30       	cpi	r18, 0x03	; 3
    1a92:	19 f0       	breq	.+6      	; 0x1a9a <strtod+0x1de>
    1a94:	4b 01       	movw	r8, r22
    1a96:	5c 01       	movw	r10, r24
    1a98:	06 c0       	rjmp	.+12     	; 0x1aa6 <strtod+0x1ea>
    1a9a:	4b 01       	movw	r8, r22
    1a9c:	5c 01       	movw	r10, r24
    1a9e:	b7 fa       	bst	r11, 7
    1aa0:	b0 94       	com	r11
    1aa2:	b7 f8       	bld	r11, 7
    1aa4:	b0 94       	com	r11
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	a9 01       	movw	r20, r18
    1aac:	c5 01       	movw	r24, r10
    1aae:	b4 01       	movw	r22, r8
    1ab0:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__cmpsf2>
    1ab4:	88 23       	and	r24, r24
    1ab6:	09 f4       	brne	.+2      	; 0x1aba <strtod+0x1fe>
    1ab8:	3e c0       	rjmp	.+124    	; 0x1b36 <strtod+0x27a>
    1aba:	d7 ff       	sbrs	r29, 7
    1abc:	06 c0       	rjmp	.+12     	; 0x1aca <strtod+0x20e>
    1abe:	d1 95       	neg	r29
    1ac0:	c1 95       	neg	r28
    1ac2:	d1 09       	sbc	r29, r1
    1ac4:	05 e7       	ldi	r16, 0x75	; 117
    1ac6:	11 e0       	ldi	r17, 0x01	; 1
    1ac8:	02 c0       	rjmp	.+4      	; 0x1ace <strtod+0x212>
    1aca:	0d e8       	ldi	r16, 0x8D	; 141
    1acc:	11 e0       	ldi	r17, 0x01	; 1
    1ace:	68 01       	movw	r12, r16
    1ad0:	f8 e1       	ldi	r31, 0x18	; 24
    1ad2:	cf 1a       	sub	r12, r31
    1ad4:	d1 08       	sbc	r13, r1
    1ad6:	90 e2       	ldi	r25, 0x20	; 32
    1ad8:	e9 2e       	mov	r14, r25
    1ada:	f1 2c       	mov	r15, r1
    1adc:	ce 15       	cp	r28, r14
    1ade:	df 05       	cpc	r29, r15
    1ae0:	74 f0       	brlt	.+28     	; 0x1afe <strtod+0x242>
    1ae2:	f8 01       	movw	r30, r16
    1ae4:	25 91       	lpm	r18, Z+
    1ae6:	35 91       	lpm	r19, Z+
    1ae8:	45 91       	lpm	r20, Z+
    1aea:	54 91       	lpm	r21, Z
    1aec:	c5 01       	movw	r24, r10
    1aee:	b4 01       	movw	r22, r8
    1af0:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__mulsf3>
    1af4:	4b 01       	movw	r8, r22
    1af6:	5c 01       	movw	r10, r24
    1af8:	ce 19       	sub	r28, r14
    1afa:	df 09       	sbc	r29, r15
    1afc:	ef cf       	rjmp	.-34     	; 0x1adc <strtod+0x220>
    1afe:	04 50       	subi	r16, 0x04	; 4
    1b00:	11 09       	sbc	r17, r1
    1b02:	f5 94       	asr	r15
    1b04:	e7 94       	ror	r14
    1b06:	0c 15       	cp	r16, r12
    1b08:	1d 05       	cpc	r17, r13
    1b0a:	41 f7       	brne	.-48     	; 0x1adc <strtod+0x220>
    1b0c:	8a 2d       	mov	r24, r10
    1b0e:	88 0f       	add	r24, r24
    1b10:	8b 2d       	mov	r24, r11
    1b12:	88 1f       	adc	r24, r24
    1b14:	8f 3f       	cpi	r24, 0xFF	; 255
    1b16:	49 f0       	breq	.+18     	; 0x1b2a <strtod+0x26e>
    1b18:	20 e0       	ldi	r18, 0x00	; 0
    1b1a:	30 e0       	ldi	r19, 0x00	; 0
    1b1c:	a9 01       	movw	r20, r18
    1b1e:	c5 01       	movw	r24, r10
    1b20:	b4 01       	movw	r22, r8
    1b22:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__cmpsf2>
    1b26:	81 11       	cpse	r24, r1
    1b28:	06 c0       	rjmp	.+12     	; 0x1b36 <strtod+0x27a>
    1b2a:	82 e2       	ldi	r24, 0x22	; 34
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <errno+0x1>
    1b32:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <errno>
    1b36:	c5 01       	movw	r24, r10
    1b38:	b4 01       	movw	r22, r8
    1b3a:	09 c0       	rjmp	.+18     	; 0x1b4e <strtod+0x292>
    1b3c:	60 e0       	ldi	r22, 0x00	; 0
    1b3e:	70 e0       	ldi	r23, 0x00	; 0
    1b40:	80 e8       	ldi	r24, 0x80	; 128
    1b42:	9f ef       	ldi	r25, 0xFF	; 255
    1b44:	04 c0       	rjmp	.+8      	; 0x1b4e <strtod+0x292>
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	70 e0       	ldi	r23, 0x00	; 0
    1b4a:	80 ec       	ldi	r24, 0xC0	; 192
    1b4c:	9f e7       	ldi	r25, 0x7F	; 127
    1b4e:	cd b7       	in	r28, 0x3d	; 61
    1b50:	de b7       	in	r29, 0x3e	; 62
    1b52:	ec e0       	ldi	r30, 0x0C	; 12
    1b54:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__epilogue_restores__+0xc>

00001b58 <isspace>:
    1b58:	91 11       	cpse	r25, r1
    1b5a:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__ctype_isfalse>
    1b5e:	80 32       	cpi	r24, 0x20	; 32
    1b60:	19 f0       	breq	.+6      	; 0x1b68 <isspace+0x10>
    1b62:	89 50       	subi	r24, 0x09	; 9
    1b64:	85 50       	subi	r24, 0x05	; 5
    1b66:	c8 f7       	brcc	.-14     	; 0x1b5a <isspace+0x2>
    1b68:	08 95       	ret

00001b6a <strncasecmp_P>:
    1b6a:	fb 01       	movw	r30, r22
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	41 50       	subi	r20, 0x01	; 1
    1b70:	50 40       	sbci	r21, 0x00	; 0
    1b72:	88 f0       	brcs	.+34     	; 0x1b96 <strncasecmp_P+0x2c>
    1b74:	8d 91       	ld	r24, X+
    1b76:	81 34       	cpi	r24, 0x41	; 65
    1b78:	1c f0       	brlt	.+6      	; 0x1b80 <strncasecmp_P+0x16>
    1b7a:	8b 35       	cpi	r24, 0x5B	; 91
    1b7c:	0c f4       	brge	.+2      	; 0x1b80 <strncasecmp_P+0x16>
    1b7e:	80 5e       	subi	r24, 0xE0	; 224
    1b80:	65 91       	lpm	r22, Z+
    1b82:	61 34       	cpi	r22, 0x41	; 65
    1b84:	1c f0       	brlt	.+6      	; 0x1b8c <strncasecmp_P+0x22>
    1b86:	6b 35       	cpi	r22, 0x5B	; 91
    1b88:	0c f4       	brge	.+2      	; 0x1b8c <strncasecmp_P+0x22>
    1b8a:	60 5e       	subi	r22, 0xE0	; 224
    1b8c:	86 1b       	sub	r24, r22
    1b8e:	61 11       	cpse	r22, r1
    1b90:	71 f3       	breq	.-36     	; 0x1b6e <strncasecmp_P+0x4>
    1b92:	99 0b       	sbc	r25, r25
    1b94:	08 95       	ret
    1b96:	88 1b       	sub	r24, r24
    1b98:	fc cf       	rjmp	.-8      	; 0x1b92 <strncasecmp_P+0x28>

00001b9a <__cmpsf2>:
    1b9a:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <__fp_cmp>
    1b9e:	08 f4       	brcc	.+2      	; 0x1ba2 <__cmpsf2+0x8>
    1ba0:	81 e0       	ldi	r24, 0x01	; 1
    1ba2:	08 95       	ret

00001ba4 <__fp_cmp>:
    1ba4:	99 0f       	add	r25, r25
    1ba6:	00 08       	sbc	r0, r0
    1ba8:	55 0f       	add	r21, r21
    1baa:	aa 0b       	sbc	r26, r26
    1bac:	e0 e8       	ldi	r30, 0x80	; 128
    1bae:	fe ef       	ldi	r31, 0xFE	; 254
    1bb0:	16 16       	cp	r1, r22
    1bb2:	17 06       	cpc	r1, r23
    1bb4:	e8 07       	cpc	r30, r24
    1bb6:	f9 07       	cpc	r31, r25
    1bb8:	c0 f0       	brcs	.+48     	; 0x1bea <__fp_cmp+0x46>
    1bba:	12 16       	cp	r1, r18
    1bbc:	13 06       	cpc	r1, r19
    1bbe:	e4 07       	cpc	r30, r20
    1bc0:	f5 07       	cpc	r31, r21
    1bc2:	98 f0       	brcs	.+38     	; 0x1bea <__fp_cmp+0x46>
    1bc4:	62 1b       	sub	r22, r18
    1bc6:	73 0b       	sbc	r23, r19
    1bc8:	84 0b       	sbc	r24, r20
    1bca:	95 0b       	sbc	r25, r21
    1bcc:	39 f4       	brne	.+14     	; 0x1bdc <__fp_cmp+0x38>
    1bce:	0a 26       	eor	r0, r26
    1bd0:	61 f0       	breq	.+24     	; 0x1bea <__fp_cmp+0x46>
    1bd2:	23 2b       	or	r18, r19
    1bd4:	24 2b       	or	r18, r20
    1bd6:	25 2b       	or	r18, r21
    1bd8:	21 f4       	brne	.+8      	; 0x1be2 <__fp_cmp+0x3e>
    1bda:	08 95       	ret
    1bdc:	0a 26       	eor	r0, r26
    1bde:	09 f4       	brne	.+2      	; 0x1be2 <__fp_cmp+0x3e>
    1be0:	a1 40       	sbci	r26, 0x01	; 1
    1be2:	a6 95       	lsr	r26
    1be4:	8f ef       	ldi	r24, 0xFF	; 255
    1be6:	81 1d       	adc	r24, r1
    1be8:	81 1d       	adc	r24, r1
    1bea:	08 95       	ret

00001bec <__ctype_isfalse>:
    1bec:	99 27       	eor	r25, r25
    1bee:	88 27       	eor	r24, r24

00001bf0 <__ctype_istrue>:
    1bf0:	08 95       	ret

00001bf2 <__muluhisi3>:
    1bf2:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <__umulhisi3>
    1bf6:	a5 9f       	mul	r26, r21
    1bf8:	90 0d       	add	r25, r0
    1bfa:	b4 9f       	mul	r27, r20
    1bfc:	90 0d       	add	r25, r0
    1bfe:	a4 9f       	mul	r26, r20
    1c00:	80 0d       	add	r24, r0
    1c02:	91 1d       	adc	r25, r1
    1c04:	11 24       	eor	r1, r1
    1c06:	08 95       	ret

00001c08 <__umulhisi3>:
    1c08:	a2 9f       	mul	r26, r18
    1c0a:	b0 01       	movw	r22, r0
    1c0c:	b3 9f       	mul	r27, r19
    1c0e:	c0 01       	movw	r24, r0
    1c10:	a3 9f       	mul	r26, r19
    1c12:	70 0d       	add	r23, r0
    1c14:	81 1d       	adc	r24, r1
    1c16:	11 24       	eor	r1, r1
    1c18:	91 1d       	adc	r25, r1
    1c1a:	b2 9f       	mul	r27, r18
    1c1c:	70 0d       	add	r23, r0
    1c1e:	81 1d       	adc	r24, r1
    1c20:	11 24       	eor	r1, r1
    1c22:	91 1d       	adc	r25, r1
    1c24:	08 95       	ret

00001c26 <_exit>:
    1c26:	f8 94       	cli

00001c28 <__stop_program>:
    1c28:	ff cf       	rjmp	.-2      	; 0x1c28 <__stop_program>
