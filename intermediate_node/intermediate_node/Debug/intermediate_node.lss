
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001ee  00800060  000019ba  00001a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000019b  0080024e  0080024e  00001c3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00001cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b02  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b6  00000000  00000000  0000282e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000671  00000000  00000000  00002ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00003558  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000461  00000000  00000000  000036f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000520  00000000  00000000  00003b55  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00004075  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	ea eb       	ldi	r30, 0xBA	; 186
     1a6:	f9 e1       	ldi	r31, 0x19	; 25
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	ae 34       	cpi	r26, 0x4E	; 78
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	ae e4       	ldi	r26, 0x4E	; 78
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a9 3e       	cpi	r26, 0xE9	; 233
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 80 03 	call	0x700	; 0x700 <main>
     1c8:	0c 94 db 0c 	jmp	0x19b6	; 0x19b6 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <usart_init>:
    while(c!='S') {
        c=usart_receive();
    }
    for(int i=0; i<12; ++i)
        usart_receive(); //flush ServedClient out of read buffer
}
     1d0:	1b b8       	out	0x0b, r1	; 11
     1d2:	28 e1       	ldi	r18, 0x18	; 24
     1d4:	2a b9       	out	0x0a, r18	; 10
     1d6:	90 bd       	out	0x20, r25	; 32
     1d8:	89 b9       	out	0x09, r24	; 9
     1da:	86 e8       	ldi	r24, 0x86	; 134
     1dc:	80 bd       	out	0x20, r24	; 32
     1de:	08 95       	ret

000001e0 <usart_transmit>:
     1e0:	5d 9b       	sbis	0x0b, 5	; 11
     1e2:	fe cf       	rjmp	.-4      	; 0x1e0 <usart_transmit>
     1e4:	8c b9       	out	0x0c, r24	; 12
     1e6:	08 95       	ret

000001e8 <usart_receive>:
     1e8:	5f 9b       	sbis	0x0b, 7	; 11
     1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <usart_receive>
     1ec:	8c b1       	in	r24, 0x0c	; 12
     1ee:	08 95       	ret

000001f0 <serialWrite>:
     1f0:	1f 93       	push	r17
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	ec 01       	movw	r28, r24
     1f8:	10 e0       	ldi	r17, 0x00	; 0
     1fa:	07 c0       	rjmp	.+14     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     1fc:	fe 01       	movw	r30, r28
     1fe:	e8 0f       	add	r30, r24
     200:	f9 1f       	adc	r31, r25
     202:	80 81       	ld	r24, Z
     204:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <usart_transmit>
     208:	1f 5f       	subi	r17, 0xFF	; 255
     20a:	81 2f       	mov	r24, r17
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	fe 01       	movw	r30, r28
     210:	01 90       	ld	r0, Z+
     212:	00 20       	and	r0, r0
     214:	e9 f7       	brne	.-6      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     216:	31 97       	sbiw	r30, 0x01	; 1
     218:	ec 1b       	sub	r30, r28
     21a:	fd 0b       	sbc	r31, r29
     21c:	8e 17       	cp	r24, r30
     21e:	9f 07       	cpc	r25, r31
     220:	68 f3       	brcs	.-38     	; 0x1fc <serialWrite+0xc>
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	08 95       	ret

0000022a <sendCommand>:
     22a:	0f 93       	push	r16
     22c:	1f 93       	push	r17
     22e:	cf 93       	push	r28
     230:	df 93       	push	r29
     232:	8c 01       	movw	r16, r24
     234:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     238:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     23c:	13 c0       	rjmp	.+38     	; 0x264 <sendCommand+0x3a>
     23e:	86 34       	cpi	r24, 0x46	; 70
     240:	79 f4       	brne	.+30     	; 0x260 <sendCommand+0x36>
     242:	04 c0       	rjmp	.+8      	; 0x24c <sendCommand+0x22>
     244:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     248:	21 96       	adiw	r28, 0x01	; 1
     24a:	02 c0       	rjmp	.+4      	; 0x250 <sendCommand+0x26>
     24c:	c0 e0       	ldi	r28, 0x00	; 0
     24e:	d0 e0       	ldi	r29, 0x00	; 0
     250:	c5 30       	cpi	r28, 0x05	; 5
     252:	d1 05       	cpc	r29, r1
     254:	bc f3       	brlt	.-18     	; 0x244 <sendCommand+0x1a>
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	88 bb       	out	0x18, r24	; 24
     25a:	c8 01       	movw	r24, r16
     25c:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     260:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     264:	83 35       	cpi	r24, 0x53	; 83
     266:	59 f7       	brne	.-42     	; 0x23e <sendCommand+0x14>
     268:	c0 e0       	ldi	r28, 0x00	; 0
     26a:	d0 e0       	ldi	r29, 0x00	; 0
     26c:	03 c0       	rjmp	.+6      	; 0x274 <sendCommand+0x4a>
     26e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     272:	21 96       	adiw	r28, 0x01	; 1
     274:	c8 30       	cpi	r28, 0x08	; 8
     276:	d1 05       	cpc	r29, r1
     278:	d4 f3       	brlt	.-12     	; 0x26e <sendCommand+0x44>
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	08 95       	ret

00000284 <__vector_8>:

ISR(TIMER1_OVF_vect) {
     284:	1f 92       	push	r1
     286:	0f 92       	push	r0
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	0f 92       	push	r0
     28c:	11 24       	eor	r1, r1
     28e:	cf 92       	push	r12
     290:	df 92       	push	r13
     292:	ef 92       	push	r14
     294:	ff 92       	push	r15
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	2f 93       	push	r18
     29c:	3f 93       	push	r19
     29e:	4f 93       	push	r20
     2a0:	5f 93       	push	r21
     2a2:	6f 93       	push	r22
     2a4:	7f 93       	push	r23
     2a6:	8f 93       	push	r24
     2a8:	9f 93       	push	r25
     2aa:	af 93       	push	r26
     2ac:	bf 93       	push	r27
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	ef 93       	push	r30
     2b4:	ff 93       	push	r31
    char c;
    bool failed;
    int counter =0;

    if(!first) {
     2b6:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <first>
     2ba:	81 11       	cpse	r24, r1
     2bc:	02 c2       	rjmp	.+1028   	; 0x6c2 <__stack+0x263>
     2be:	e1 2c       	mov	r14, r1
     2c0:	f1 2c       	mov	r15, r1
     2c2:	f8 c0       	rjmp	.+496    	; 0x4b4 <__stack+0x55>
            failed=false;
            /*strcpy(string_to_send, "ESP:ssid:\"Sens_Board");
            itoa(k, conv_buffer, 10);
            strcat(string_to_send, conv_buffer);
            strcat(string_to_send, "\"\n");*/
            sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k);
     2c4:	ff 92       	push	r15
     2c6:	ef 92       	push	r14
     2c8:	80 e6       	ldi	r24, 0x60	; 96
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	9f 93       	push	r25
     2ce:	8f 93       	push	r24
     2d0:	8a e5       	ldi	r24, 0x5A	; 90
     2d2:	92 e0       	ldi	r25, 0x02	; 2
     2d4:	9f 93       	push	r25
     2d6:	8f 93       	push	r24
     2d8:	0e 94 a6 0a 	call	0x154c	; 0x154c <sprintf>
            sendCommand(string_to_send);
     2dc:	8a e5       	ldi	r24, 0x5A	; 90
     2de:	92 e0       	ldi	r25, 0x02	; 2
     2e0:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     2e4:	80 e2       	ldi	r24, 0x20	; 32
     2e6:	e9 e7       	ldi	r30, 0x79	; 121
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	aa e5       	ldi	r26, 0x5A	; 90
     2ec:	b2 e0       	ldi	r27, 0x02	; 2
     2ee:	01 90       	ld	r0, Z+
     2f0:	0d 92       	st	X+, r0
     2f2:	8a 95       	dec	r24
     2f4:	e1 f7       	brne	.-8      	; 0x2ee <__vector_8+0x6a>
            sendCommand(string_to_send);
     2f6:	8a e5       	ldi	r24, 0x5A	; 90
     2f8:	92 e0       	ldi	r25, 0x02	; 2
     2fa:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[request]\n");
     2fe:	89 e2       	ldi	r24, 0x29	; 41
     300:	e9 e9       	ldi	r30, 0x99	; 153
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	aa e5       	ldi	r26, 0x5A	; 90
     306:	b2 e0       	ldi	r27, 0x02	; 2
     308:	01 90       	ld	r0, Z+
     30a:	0d 92       	st	X+, r0
     30c:	8a 95       	dec	r24
     30e:	e1 f7       	brne	.-8      	; 0x308 <__vector_8+0x84>
            sendCommand(string_to_send);
     310:	8a e5       	ldi	r24, 0x5A	; 90
     312:	92 e0       	ldi	r25, 0x02	; 2
     314:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     318:	87 e2       	ldi	r24, 0x27	; 39
     31a:	e2 ec       	ldi	r30, 0xC2	; 194
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	aa e5       	ldi	r26, 0x5A	; 90
     320:	b2 e0       	ldi	r27, 0x02	; 2
     322:	01 90       	ld	r0, Z+
     324:	0d 92       	st	X+, r0
     326:	8a 95       	dec	r24
     328:	e1 f7       	brne	.-8      	; 0x322 <__vector_8+0x9e>
            sendCommand(string_to_send);
     32a:	8a e5       	ldi	r24, 0x5A	; 90
     32c:	92 e0       	ldi	r25, 0x02	; 2
     32e:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:connect\n");
     332:	8d e0       	ldi	r24, 0x0D	; 13
     334:	e9 ee       	ldi	r30, 0xE9	; 233
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	aa e5       	ldi	r26, 0x5A	; 90
     33a:	b2 e0       	ldi	r27, 0x02	; 2
     33c:	01 90       	ld	r0, Z+
     33e:	0d 92       	st	X+, r0
     340:	8a 95       	dec	r24
     342:	e1 f7       	brne	.-8      	; 0x33c <__vector_8+0xb8>
            sendCommand(string_to_send);
     344:	8a e5       	ldi	r24, 0x5A	; 90
     346:	92 e0       	ldi	r25, 0x02	; 2
     348:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            //strcpy(string_to_send, "ESP:clientTransmit\n");
            //sendCommand(string_to_send);
            strcpy(string_to_send, "ESP:getAllValues\n");
     34c:	82 e1       	ldi	r24, 0x12	; 18
     34e:	e6 ef       	ldi	r30, 0xF6	; 246
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	aa e5       	ldi	r26, 0x5A	; 90
     354:	b2 e0       	ldi	r27, 0x02	; 2
     356:	01 90       	ld	r0, Z+
     358:	0d 92       	st	X+, r0
     35a:	8a 95       	dec	r24
     35c:	e1 f7       	brne	.-8      	; 0x356 <__vector_8+0xd2>
            serialWrite(string_to_send);
     35e:	8a e5       	ldi	r24, 0x5A	; 90
     360:	92 e0       	ldi	r25, 0x02	; 2
     362:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
            //c=getChar();
            while(usart_receive() != '"' && !failed) { //scan input till you find ". The number will follow
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     376:	82 32       	cpi	r24, 0x22	; 34
     378:	e1 f7       	brne	.-8      	; 0x372 <__vector_8+0xee>
               // c = getChar();
            }
            c=usart_receive(); //read most significant digit
     37a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     37e:	86 34       	cpi	r24, 0x46	; 70
     380:	11 f0       	breq	.+4      	; 0x386 <__vector_8+0x102>
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
			counter = 0;
            failed=false;
     382:	d1 2c       	mov	r13, r1
     384:	02 c0       	rjmp	.+4      	; 0x38a <__vector_8+0x106>
            while(usart_receive() != '"' && !failed) { //scan input till you find ". The number will follow
               // c = getChar();
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
     386:	dd 24       	eor	r13, r13
     388:	d3 94       	inc	r13
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
			counter = 0;
            failed=false;
     38a:	c0 e0       	ldi	r28, 0x00	; 0
     38c:	d0 e0       	ldi	r29, 0x00	; 0
     38e:	09 c0       	rjmp	.+18     	; 0x3a2 <__vector_8+0x11e>
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     390:	8e 01       	movw	r16, r28
     392:	0f 5f       	subi	r16, 0xFF	; 255
     394:	1f 4f       	sbci	r17, 0xFF	; 255
     396:	c1 52       	subi	r28, 0x21	; 33
     398:	dc 4f       	sbci	r29, 0xFC	; 252
     39a:	88 83       	st	Y, r24
                c = usart_receive();
     39c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     3a0:	e8 01       	movw	r28, r16
               // c = getChar();
            }
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
     3a2:	82 32       	cpi	r24, 0x22	; 34
     3a4:	11 f0       	breq	.+4      	; 0x3aa <__vector_8+0x126>
     3a6:	dd 20       	and	r13, r13
     3a8:	99 f3       	breq	.-26     	; 0x390 <__vector_8+0x10c>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     3aa:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){ 
     3ae:	d1 10       	cpse	r13, r1
     3b0:	2e c0       	rjmp	.+92     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     3b2:	25 e0       	ldi	r18, 0x05	; 5
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	0c c0       	rjmp	.+24     	; 0x3d0 <__vector_8+0x14c>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     3b8:	f9 01       	movw	r30, r18
     3ba:	e8 1b       	sub	r30, r24
     3bc:	f9 0b       	sbc	r31, r25
     3be:	e1 52       	subi	r30, 0x21	; 33
     3c0:	fc 4f       	sbci	r31, 0xFC	; 252
     3c2:	80 81       	ld	r24, Z
     3c4:	f9 01       	movw	r30, r18
     3c6:	e1 52       	subi	r30, 0x21	; 33
     3c8:	fc 4f       	sbci	r31, 0xFC	; 252
     3ca:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     3cc:	21 50       	subi	r18, 0x01	; 1
     3ce:	31 09       	sbc	r19, r1
     3d0:	86 e0       	ldi	r24, 0x06	; 6
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	8c 1b       	sub	r24, r28
     3d6:	9d 0b       	sbc	r25, r29
     3d8:	28 17       	cp	r18, r24
     3da:	39 07       	cpc	r19, r25
     3dc:	6c f7       	brge	.-38     	; 0x3b8 <__vector_8+0x134>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	07 c0       	rjmp	.+14     	; 0x3f2 <__vector_8+0x16e>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     3e4:	f9 01       	movw	r30, r18
     3e6:	e1 52       	subi	r30, 0x21	; 33
     3e8:	fc 4f       	sbci	r31, 0xFC	; 252
     3ea:	40 e3       	ldi	r20, 0x30	; 48
     3ec:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     3ee:	2f 5f       	subi	r18, 0xFF	; 255
     3f0:	3f 4f       	sbci	r19, 0xFF	; 255
     3f2:	28 17       	cp	r18, r24
     3f4:	39 07       	cpc	r19, r25
     3f6:	b4 f3       	brlt	.-20     	; 0x3e4 <__vector_8+0x160>
                    conv_buffer[i] = '0';
                }
                moistures[k]=atoi(conv_buffer);
     3f8:	8f ed       	ldi	r24, 0xDF	; 223
     3fa:	93 e0       	ldi	r25, 0x03	; 3
     3fc:	0e 94 56 09 	call	0x12ac	; 0x12ac <atoi>
     400:	f7 01       	movw	r30, r14
     402:	ee 0f       	add	r30, r30
     404:	ff 1f       	adc	r31, r31
     406:	ee 5a       	subi	r30, 0xAE	; 174
     408:	fd 4f       	sbci	r31, 0xFD	; 253
     40a:	91 83       	std	Z+1, r25	; 0x01
     40c:	80 83       	st	Z, r24
            }
            

            //c=getChar();
			counter = 0;
            while(usart_receive() != '"' && !failed) {
     40e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     412:	82 32       	cpi	r24, 0x22	; 34
     414:	11 f0       	breq	.+4      	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
     416:	dd 20       	and	r13, r13
     418:	d1 f3       	breq	.-12     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
                //c = getChar();
            }
            c = usart_receive();
     41a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     41e:	86 34       	cpi	r24, 0x46	; 70
     420:	11 f4       	brne	.+4      	; 0x426 <__DATA_REGION_LENGTH__+0x26>
                failed=true;
     422:	dd 24       	eor	r13, r13
     424:	d3 94       	inc	r13
     426:	c0 e0       	ldi	r28, 0x00	; 0
     428:	d0 e0       	ldi	r29, 0x00	; 0
     42a:	09 c0       	rjmp	.+18     	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     42c:	8e 01       	movw	r16, r28
     42e:	0f 5f       	subi	r16, 0xFF	; 255
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	c1 52       	subi	r28, 0x21	; 33
     434:	dc 4f       	sbci	r29, 0xFC	; 252
     436:	88 83       	st	Y, r24
                c = usart_receive();
     438:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            }
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     43c:	e8 01       	movw	r28, r16
                //c = getChar();
            }
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     43e:	82 32       	cpi	r24, 0x22	; 34
     440:	11 f0       	breq	.+4      	; 0x446 <__DATA_REGION_LENGTH__+0x46>
     442:	dd 20       	and	r13, r13
     444:	99 f3       	breq	.-26     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     446:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){
     44a:	d1 10       	cpse	r13, r1
     44c:	30 c0       	rjmp	.+96     	; 0x4ae <__stack+0x4f>
     44e:	25 e0       	ldi	r18, 0x05	; 5
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	0c c0       	rjmp	.+24     	; 0x46c <__stack+0xd>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     454:	f9 01       	movw	r30, r18
     456:	e8 1b       	sub	r30, r24
     458:	f9 0b       	sbc	r31, r25
     45a:	e1 52       	subi	r30, 0x21	; 33
     45c:	fc 4f       	sbci	r31, 0xFC	; 252
     45e:	80 81       	ld	r24, Z
     460:	f9 01       	movw	r30, r18
     462:	e1 52       	subi	r30, 0x21	; 33
     464:	fc 4f       	sbci	r31, 0xFC	; 252
     466:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     468:	21 50       	subi	r18, 0x01	; 1
     46a:	31 09       	sbc	r19, r1
     46c:	86 e0       	ldi	r24, 0x06	; 6
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	8c 1b       	sub	r24, r28
     472:	9d 0b       	sbc	r25, r29
     474:	28 17       	cp	r18, r24
     476:	39 07       	cpc	r19, r25
     478:	6c f7       	brge	.-38     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	07 c0       	rjmp	.+14     	; 0x48e <__stack+0x2f>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     480:	f9 01       	movw	r30, r18
     482:	e1 52       	subi	r30, 0x21	; 33
     484:	fc 4f       	sbci	r31, 0xFC	; 252
     486:	40 e3       	ldi	r20, 0x30	; 48
     488:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     48a:	2f 5f       	subi	r18, 0xFF	; 255
     48c:	3f 4f       	sbci	r19, 0xFF	; 255
     48e:	28 17       	cp	r18, r24
     490:	39 07       	cpc	r19, r25
     492:	b4 f3       	brlt	.-20     	; 0x480 <__stack+0x21>
                    conv_buffer[i] = '0';
                }
                temperatures[k]=atof(conv_buffer);
     494:	8f ed       	ldi	r24, 0xDF	; 223
     496:	93 e0       	ldi	r25, 0x03	; 3
     498:	0e 94 52 09 	call	0x12a4	; 0x12a4 <atof>
     49c:	e7 01       	movw	r28, r14
     49e:	cc 0f       	add	r28, r28
     4a0:	dd 1f       	adc	r29, r29
     4a2:	c4 52       	subi	r28, 0x24	; 36
     4a4:	dc 4f       	sbci	r29, 0xFC	; 252
     4a6:	0e 94 6d 04 	call	0x8da	; 0x8da <__fixsfsi>
     4aa:	79 83       	std	Y+1, r23	; 0x01
     4ac:	68 83       	st	Y, r22
    char c;
    bool failed;
    int counter =0;

    if(!first) {
        for(int k=0; k<sensor_boards; ++k){
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	e8 1a       	sub	r14, r24
     4b2:	f8 0a       	sbc	r15, r24
     4b4:	1e 14       	cp	r1, r14
     4b6:	1f 04       	cpc	r1, r15
     4b8:	0c f0       	brlt	.+2      	; 0x4bc <__stack+0x5d>
     4ba:	04 cf       	rjmp	.-504    	; 0x2c4 <__vector_8+0x40>
                }
                temperatures[k]=atof(conv_buffer);
            }
            
        }
        tmp_avg=0.0;
     4bc:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <__data_end>
     4c0:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <__data_end+0x1>
     4c4:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <__data_end+0x2>
     4c8:	10 92 51 02 	sts	0x0251, r1	; 0x800251 <__data_end+0x3>
        moist_avg=0;
     4cc:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <moist_avg+0x1>
     4d0:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <moist_avg>
        for(int i=0; i<sensor_boards; ++i) {
     4d4:	c0 e0       	ldi	r28, 0x00	; 0
     4d6:	d0 e0       	ldi	r29, 0x00	; 0
     4d8:	32 c0       	rjmp	.+100    	; 0x53e <__stack+0xdf>
            moist_avg += moistures[i];
     4da:	ce 01       	movw	r24, r28
     4dc:	88 0f       	add	r24, r24
     4de:	99 1f       	adc	r25, r25
     4e0:	fc 01       	movw	r30, r24
     4e2:	ee 5a       	subi	r30, 0xAE	; 174
     4e4:	fd 4f       	sbci	r31, 0xFD	; 253
     4e6:	20 81       	ld	r18, Z
     4e8:	31 81       	ldd	r19, Z+1	; 0x01
     4ea:	40 91 da 02 	lds	r20, 0x02DA	; 0x8002da <moist_avg>
     4ee:	50 91 db 02 	lds	r21, 0x02DB	; 0x8002db <moist_avg+0x1>
     4f2:	24 0f       	add	r18, r20
     4f4:	35 1f       	adc	r19, r21
     4f6:	30 93 db 02 	sts	0x02DB, r19	; 0x8002db <moist_avg+0x1>
     4fa:	20 93 da 02 	sts	0x02DA, r18	; 0x8002da <moist_avg>
            tmp_avg += temperatures[i];
     4fe:	fc 01       	movw	r30, r24
     500:	e4 52       	subi	r30, 0x24	; 36
     502:	fc 4f       	sbci	r31, 0xFC	; 252
     504:	60 81       	ld	r22, Z
     506:	71 81       	ldd	r23, Z+1	; 0x01
     508:	07 2e       	mov	r0, r23
     50a:	00 0c       	add	r0, r0
     50c:	88 0b       	sbc	r24, r24
     50e:	99 0b       	sbc	r25, r25
     510:	0e 94 a5 04 	call	0x94a	; 0x94a <__floatsisf>
     514:	9b 01       	movw	r18, r22
     516:	ac 01       	movw	r20, r24
     518:	60 91 4e 02 	lds	r22, 0x024E	; 0x80024e <__data_end>
     51c:	70 91 4f 02 	lds	r23, 0x024F	; 0x80024f <__data_end+0x1>
     520:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <__data_end+0x2>
     524:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <__data_end+0x3>
     528:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>
     52c:	60 93 4e 02 	sts	0x024E, r22	; 0x80024e <__data_end>
     530:	70 93 4f 02 	sts	0x024F, r23	; 0x80024f <__data_end+0x1>
     534:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <__data_end+0x2>
     538:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <__data_end+0x3>
            }
            
        }
        tmp_avg=0.0;
        moist_avg=0;
        for(int i=0; i<sensor_boards; ++i) {
     53c:	21 96       	adiw	r28, 0x01	; 1
     53e:	1c 16       	cp	r1, r28
     540:	1d 06       	cpc	r1, r29
     542:	5c f6       	brge	.-106    	; 0x4da <__stack+0x7b>
            moist_avg += moistures[i];
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
     544:	00 91 da 02 	lds	r16, 0x02DA	; 0x8002da <moist_avg>
     548:	10 91 db 02 	lds	r17, 0x02DB	; 0x8002db <moist_avg+0x1>
        tmp_avg /= sensor_boards;
     54c:	c0 90 4e 02 	lds	r12, 0x024E	; 0x80024e <__data_end>
     550:	d0 90 4f 02 	lds	r13, 0x024F	; 0x80024f <__data_end+0x1>
     554:	e0 90 50 02 	lds	r14, 0x0250	; 0x800250 <__data_end+0x2>
     558:	f0 90 51 02 	lds	r15, 0x0251	; 0x800251 <__data_end+0x3>

        for(int i=0; i<sensor_boards; ++i) {
     55c:	c0 e0       	ldi	r28, 0x00	; 0
     55e:	d0 e0       	ldi	r29, 0x00	; 0
     560:	42 c0       	rjmp	.+132    	; 0x5e6 <__stack+0x187>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     562:	ce 01       	movw	r24, r28
     564:	88 0f       	add	r24, r24
     566:	99 1f       	adc	r25, r25
     568:	fc 01       	movw	r30, r24
     56a:	ee 5a       	subi	r30, 0xAE	; 174
     56c:	fd 4f       	sbci	r31, 0xFD	; 253
     56e:	20 81       	ld	r18, Z
     570:	31 81       	ldd	r19, Z+1	; 0x01
     572:	20 1b       	sub	r18, r16
     574:	31 0b       	sbc	r19, r17
     576:	22 9f       	mul	r18, r18
     578:	a0 01       	movw	r20, r0
     57a:	23 9f       	mul	r18, r19
     57c:	50 0d       	add	r21, r0
     57e:	50 0d       	add	r21, r0
     580:	11 24       	eor	r1, r1
     582:	20 91 54 02 	lds	r18, 0x0254	; 0x800254 <moist_var>
     586:	30 91 55 02 	lds	r19, 0x0255	; 0x800255 <moist_var+0x1>
     58a:	24 0f       	add	r18, r20
     58c:	35 1f       	adc	r19, r21
     58e:	30 93 55 02 	sts	0x0255, r19	; 0x800255 <moist_var+0x1>
     592:	20 93 54 02 	sts	0x0254, r18	; 0x800254 <moist_var>
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     596:	fc 01       	movw	r30, r24
     598:	e4 52       	subi	r30, 0x24	; 36
     59a:	fc 4f       	sbci	r31, 0xFC	; 252
     59c:	60 81       	ld	r22, Z
     59e:	71 81       	ldd	r23, Z+1	; 0x01
     5a0:	07 2e       	mov	r0, r23
     5a2:	00 0c       	add	r0, r0
     5a4:	88 0b       	sbc	r24, r24
     5a6:	99 0b       	sbc	r25, r25
     5a8:	0e 94 a5 04 	call	0x94a	; 0x94a <__floatsisf>
     5ac:	a7 01       	movw	r20, r14
     5ae:	96 01       	movw	r18, r12
     5b0:	0e 94 00 04 	call	0x800	; 0x800 <__subsf3>
     5b4:	9b 01       	movw	r18, r22
     5b6:	ac 01       	movw	r20, r24
     5b8:	0e 94 31 05 	call	0xa62	; 0xa62 <__mulsf3>
     5bc:	9b 01       	movw	r18, r22
     5be:	ac 01       	movw	r20, r24
     5c0:	60 91 56 02 	lds	r22, 0x0256	; 0x800256 <tmp_var_f>
     5c4:	70 91 57 02 	lds	r23, 0x0257	; 0x800257 <tmp_var_f+0x1>
     5c8:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <tmp_var_f+0x2>
     5cc:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <tmp_var_f+0x3>
     5d0:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>
     5d4:	60 93 56 02 	sts	0x0256, r22	; 0x800256 <tmp_var_f>
     5d8:	70 93 57 02 	sts	0x0257, r23	; 0x800257 <tmp_var_f+0x1>
     5dc:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <tmp_var_f+0x2>
     5e0:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <tmp_var_f+0x3>
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
        tmp_avg /= sensor_boards;

        for(int i=0; i<sensor_boards; ++i) {
     5e4:	21 96       	adiw	r28, 0x01	; 1
     5e6:	1c 16       	cp	r1, r28
     5e8:	1d 06       	cpc	r1, r29
     5ea:	0c f0       	brlt	.+2      	; 0x5ee <__stack+0x18f>
     5ec:	ba cf       	rjmp	.-140    	; 0x562 <__stack+0x103>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
        }
        moist_var /= sensor_boards;
        tmp_var_f /= sensor_boards;
     5ee:	60 91 56 02 	lds	r22, 0x0256	; 0x800256 <tmp_var_f>
     5f2:	70 91 57 02 	lds	r23, 0x0257	; 0x800257 <tmp_var_f+0x1>
     5f6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <tmp_var_f+0x2>
     5fa:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <tmp_var_f+0x3>
        tmp_var = (int)tmp_var_f;
     5fe:	0e 94 6d 04 	call	0x8da	; 0x8da <__fixsfsi>
     602:	70 93 e6 03 	sts	0x03E6, r23	; 0x8003e6 <tmp_var+0x1>
     606:	60 93 e5 03 	sts	0x03E5, r22	; 0x8003e5 <tmp_var>

        /*itoa(moist_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg\"[%d]\n", moist_avg);
     60a:	1f 93       	push	r17
     60c:	0f 93       	push	r16
     60e:	88 e0       	ldi	r24, 0x08	; 8
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	9f 93       	push	r25
     614:	8f 93       	push	r24
     616:	ca e5       	ldi	r28, 0x5A	; 90
     618:	d2 e0       	ldi	r29, 0x02	; 2
     61a:	df 93       	push	r29
     61c:	cf 93       	push	r28
     61e:	0e 94 a6 0a 	call	0x154c	; 0x154c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     622:	ce 01       	movw	r24, r28
     624:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        /*itoa(tmp_avg, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_avg\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[%.1f]\n", tmp_avg);
     628:	80 91 51 02 	lds	r24, 0x0251	; 0x800251 <__data_end+0x3>
     62c:	8f 93       	push	r24
     62e:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <__data_end+0x2>
     632:	8f 93       	push	r24
     634:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <__data_end+0x1>
     638:	8f 93       	push	r24
     63a:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <__data_end>
     63e:	8f 93       	push	r24
     640:	89 e2       	ldi	r24, 0x29	; 41
     642:	91 e0       	ldi	r25, 0x01	; 1
     644:	9f 93       	push	r25
     646:	8f 93       	push	r24
     648:	df 93       	push	r29
     64a:	cf 93       	push	r28
     64c:	0e 94 a6 0a 	call	0x154c	; 0x154c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     650:	ce 01       	movw	r24, r28
     652:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
        /*itoa(moist_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_var\"[%d]\n", moist_var);
     656:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <moist_var+0x1>
     65a:	8f 93       	push	r24
     65c:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <moist_var>
     660:	8f 93       	push	r24
     662:	8a e4       	ldi	r24, 0x4A	; 74
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	df 93       	push	r29
     66c:	cf 93       	push	r28
     66e:	0e 94 a6 0a 	call	0x154c	; 0x154c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     672:	ce 01       	movw	r24, r28
     674:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        /*itoa(tmp_var, conv_buffer, 10); //convert value calculated to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_var\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var\"[%d]\n", tmp_var);
     678:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <tmp_var+0x1>
     67c:	8f 93       	push	r24
     67e:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <tmp_var>
     682:	8f 93       	push	r24
     684:	8b e6       	ldi	r24, 0x6B	; 107
     686:	91 e0       	ldi	r25, 0x01	; 1
     688:	9f 93       	push	r25
     68a:	8f 93       	push	r24
     68c:	df 93       	push	r29
     68e:	cf 93       	push	r28
     690:	0e 94 a6 0a 	call	0x154c	; 0x154c <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     694:	ce 01       	movw	r24, r28
     696:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        //strcpy(string_to_send, "ESP:APStart\n");
        //sendCommand(string_to_send);
		strcpy(string_to_send, "ESP:clientTransmit\n");
     69a:	84 e1       	ldi	r24, 0x14	; 20
     69c:	ea e8       	ldi	r30, 0x8A	; 138
     69e:	f1 e0       	ldi	r31, 0x01	; 1
     6a0:	de 01       	movw	r26, r28
     6a2:	01 90       	ld	r0, Z+
     6a4:	0d 92       	st	X+, r0
     6a6:	8a 95       	dec	r24
     6a8:	e1 f7       	brne	.-8      	; 0x6a2 <__stack+0x243>
		sendCommand(string_to_send);
     6aa:	ce 01       	movw	r24, r28
     6ac:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
     6b0:	8d b7       	in	r24, 0x3d	; 61
     6b2:	9e b7       	in	r25, 0x3e	; 62
     6b4:	4a 96       	adiw	r24, 0x1a	; 26
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	9e bf       	out	0x3e, r25	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	8d bf       	out	0x3d, r24	; 61
     6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <__stack+0x267>
     
    }
    else
        first=false;
     6c2:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <first>

    TCNT1 = 3036;
     6c6:	8c ed       	ldi	r24, 0xDC	; 220
     6c8:	9b e0       	ldi	r25, 0x0B	; 11
     6ca:	9d bd       	out	0x2d, r25	; 45
     6cc:	8c bd       	out	0x2c, r24	; 44
}
     6ce:	ff 91       	pop	r31
     6d0:	ef 91       	pop	r30
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	bf 91       	pop	r27
     6d8:	af 91       	pop	r26
     6da:	9f 91       	pop	r25
     6dc:	8f 91       	pop	r24
     6de:	7f 91       	pop	r23
     6e0:	6f 91       	pop	r22
     6e2:	5f 91       	pop	r21
     6e4:	4f 91       	pop	r20
     6e6:	3f 91       	pop	r19
     6e8:	2f 91       	pop	r18
     6ea:	1f 91       	pop	r17
     6ec:	0f 91       	pop	r16
     6ee:	ff 90       	pop	r15
     6f0:	ef 90       	pop	r14
     6f2:	df 90       	pop	r13
     6f4:	cf 90       	pop	r12
     6f6:	0f 90       	pop	r0
     6f8:	0f be       	out	0x3f, r0	; 63
     6fa:	0f 90       	pop	r0
     6fc:	1f 90       	pop	r1
     6fe:	18 95       	reti

00000700 <main>:


int main(){
	first=true;
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	80 93 de 03 	sts	0x03DE, r24	; 0x8003de <first>

    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
     706:	83 e3       	ldi	r24, 0x33	; 51
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <usart_init>
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e c0       	rjmp	.+28     	; 0x730 <main+0x30>
        moistures[i]=0;
     714:	9c 01       	movw	r18, r24
     716:	22 0f       	add	r18, r18
     718:	33 1f       	adc	r19, r19
     71a:	f9 01       	movw	r30, r18
     71c:	ee 5a       	subi	r30, 0xAE	; 174
     71e:	fd 4f       	sbci	r31, 0xFD	; 253
     720:	11 82       	std	Z+1, r1	; 0x01
     722:	10 82       	st	Z, r1
        temperatures[i]=0;
     724:	f9 01       	movw	r30, r18
     726:	e4 52       	subi	r30, 0x24	; 36
     728:	fc 4f       	sbci	r31, 0xFC	; 252
     72a:	11 82       	std	Z+1, r1	; 0x01
     72c:	10 82       	st	Z, r1
    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     72e:	01 96       	adiw	r24, 0x01	; 1
     730:	18 16       	cp	r1, r24
     732:	19 06       	cpc	r1, r25
     734:	7c f7       	brge	.-34     	; 0x714 <main+0x14>
        moistures[i]=0;
        temperatures[i]=0;
    }

    strcpy(string_to_send, "ESP:restart\n");
     736:	8d e0       	ldi	r24, 0x0D	; 13
     738:	ee e9       	ldi	r30, 0x9E	; 158
     73a:	f1 e0       	ldi	r31, 0x01	; 1
     73c:	aa e5       	ldi	r26, 0x5A	; 90
     73e:	b2 e0       	ldi	r27, 0x02	; 2
     740:	01 90       	ld	r0, Z+
     742:	0d 92       	st	X+, r0
     744:	8a 95       	dec	r24
     746:	e1 f7       	brne	.-8      	; 0x740 <main+0x40>
    sendCommand(string_to_send);
     748:	8a e5       	ldi	r24, 0x5A	; 90
     74a:	92 e0       	ldi	r25, 0x02	; 2
     74c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_Sensor\"\n");
     750:	8e e1       	ldi	r24, 0x1E	; 30
     752:	eb ea       	ldi	r30, 0xAB	; 171
     754:	f1 e0       	ldi	r31, 0x01	; 1
     756:	aa e5       	ldi	r26, 0x5A	; 90
     758:	b2 e0       	ldi	r27, 0x02	; 2
     75a:	01 90       	ld	r0, Z+
     75c:	0d 92       	st	X+, r0
     75e:	8a 95       	dec	r24
     760:	e1 f7       	brne	.-8      	; 0x75a <main+0x5a>
    sendCommand(string_to_send);
     762:	8a e5       	ldi	r24, 0x5A	; 90
     764:	92 e0       	ldi	r25, 0x02	; 2
     766:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
     76a:	8c e1       	ldi	r24, 0x1C	; 28
     76c:	e9 ec       	ldi	r30, 0xC9	; 201
     76e:	f1 e0       	ldi	r31, 0x01	; 1
     770:	aa e5       	ldi	r26, 0x5A	; 90
     772:	b2 e0       	ldi	r27, 0x02	; 2
     774:	01 90       	ld	r0, Z+
     776:	0d 92       	st	X+, r0
     778:	8a 95       	dec	r24
     77a:	e1 f7       	brne	.-8      	; 0x774 <main+0x74>
    sendCommand(string_to_send);
     77c:	8a e5       	ldi	r24, 0x5A	; 90
     77e:	92 e0       	ldi	r25, 0x02	; 2
     780:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_avg\"\n");
     784:	8b e1       	ldi	r24, 0x1B	; 27
     786:	e5 ee       	ldi	r30, 0xE5	; 229
     788:	f1 e0       	ldi	r31, 0x01	; 1
     78a:	aa e5       	ldi	r26, 0x5A	; 90
     78c:	b2 e0       	ldi	r27, 0x02	; 2
     78e:	01 90       	ld	r0, Z+
     790:	0d 92       	st	X+, r0
     792:	8a 95       	dec	r24
     794:	e1 f7       	brne	.-8      	; 0x78e <main+0x8e>
    sendCommand(string_to_send);
     796:	8a e5       	ldi	r24, 0x5A	; 90
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_avg\"\n");
     79e:	89 e1       	ldi	r24, 0x19	; 25
     7a0:	e0 e0       	ldi	r30, 0x00	; 0
     7a2:	f2 e0       	ldi	r31, 0x02	; 2
     7a4:	aa e5       	ldi	r26, 0x5A	; 90
     7a6:	b2 e0       	ldi	r27, 0x02	; 2
     7a8:	01 90       	ld	r0, Z+
     7aa:	0d 92       	st	X+, r0
     7ac:	8a 95       	dec	r24
     7ae:	e1 f7       	brne	.-8      	; 0x7a8 <main+0xa8>
    sendCommand(string_to_send);
     7b0:	8a e5       	ldi	r24, 0x5A	; 90
     7b2:	92 e0       	ldi	r25, 0x02	; 2
     7b4:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_var\"\n");
     7b8:	8b e1       	ldi	r24, 0x1B	; 27
     7ba:	e9 e1       	ldi	r30, 0x19	; 25
     7bc:	f2 e0       	ldi	r31, 0x02	; 2
     7be:	aa e5       	ldi	r26, 0x5A	; 90
     7c0:	b2 e0       	ldi	r27, 0x02	; 2
     7c2:	01 90       	ld	r0, Z+
     7c4:	0d 92       	st	X+, r0
     7c6:	8a 95       	dec	r24
     7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0xc2>
    sendCommand(string_to_send);
     7ca:	8a e5       	ldi	r24, 0x5A	; 90
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_var\"\n");
     7d2:	89 e1       	ldi	r24, 0x19	; 25
     7d4:	e4 e3       	ldi	r30, 0x34	; 52
     7d6:	f2 e0       	ldi	r31, 0x02	; 2
     7d8:	aa e5       	ldi	r26, 0x5A	; 90
     7da:	b2 e0       	ldi	r27, 0x02	; 2
     7dc:	01 90       	ld	r0, Z+
     7de:	0d 92       	st	X+, r0
     7e0:	8a 95       	dec	r24
     7e2:	e1 f7       	brne	.-8      	; 0x7dc <main+0xdc>
    sendCommand(string_to_send);
     7e4:	8a e5       	ldi	r24, 0x5A	; 90
     7e6:	92 e0       	ldi	r25, 0x02	; 2
     7e8:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>


    TCCR1B = 0x05; //CK/1024
     7ec:	85 e0       	ldi	r24, 0x05	; 5
     7ee:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8 seconds
     7f0:	8c ed       	ldi	r24, 0xDC	; 220
     7f2:	9b e0       	ldi	r25, 0x0B	; 11
     7f4:	9d bd       	out	0x2d, r25	; 45
     7f6:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     7f8:	84 e0       	ldi	r24, 0x04	; 4
     7fa:	89 bf       	out	0x39, r24	; 57
    sei();
     7fc:	78 94       	sei
     7fe:	ff cf       	rjmp	.-2      	; 0x7fe <main+0xfe>

00000800 <__subsf3>:
     800:	50 58       	subi	r21, 0x80	; 128

00000802 <__addsf3>:
     802:	bb 27       	eor	r27, r27
     804:	aa 27       	eor	r26, r26
     806:	0e 94 18 04 	call	0x830	; 0x830 <__addsf3x>
     80a:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__fp_round>
     80e:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__fp_pscA>
     812:	38 f0       	brcs	.+14     	; 0x822 <__addsf3+0x20>
     814:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_pscB>
     818:	20 f0       	brcs	.+8      	; 0x822 <__addsf3+0x20>
     81a:	39 f4       	brne	.+14     	; 0x82a <__addsf3+0x28>
     81c:	9f 3f       	cpi	r25, 0xFF	; 255
     81e:	19 f4       	brne	.+6      	; 0x826 <__addsf3+0x24>
     820:	26 f4       	brtc	.+8      	; 0x82a <__addsf3+0x28>
     822:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_nan>
     826:	0e f4       	brtc	.+2      	; 0x82a <__addsf3+0x28>
     828:	e0 95       	com	r30
     82a:	e7 fb       	bst	r30, 7
     82c:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_inf>

00000830 <__addsf3x>:
     830:	e9 2f       	mov	r30, r25
     832:	0e 94 08 05 	call	0xa10	; 0xa10 <__fp_split3>
     836:	58 f3       	brcs	.-42     	; 0x80e <__addsf3+0xc>
     838:	ba 17       	cp	r27, r26
     83a:	62 07       	cpc	r22, r18
     83c:	73 07       	cpc	r23, r19
     83e:	84 07       	cpc	r24, r20
     840:	95 07       	cpc	r25, r21
     842:	20 f0       	brcs	.+8      	; 0x84c <__addsf3x+0x1c>
     844:	79 f4       	brne	.+30     	; 0x864 <__addsf3x+0x34>
     846:	a6 f5       	brtc	.+104    	; 0x8b0 <__addsf3x+0x80>
     848:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_zero>
     84c:	0e f4       	brtc	.+2      	; 0x850 <__addsf3x+0x20>
     84e:	e0 95       	com	r30
     850:	0b 2e       	mov	r0, r27
     852:	ba 2f       	mov	r27, r26
     854:	a0 2d       	mov	r26, r0
     856:	0b 01       	movw	r0, r22
     858:	b9 01       	movw	r22, r18
     85a:	90 01       	movw	r18, r0
     85c:	0c 01       	movw	r0, r24
     85e:	ca 01       	movw	r24, r20
     860:	a0 01       	movw	r20, r0
     862:	11 24       	eor	r1, r1
     864:	ff 27       	eor	r31, r31
     866:	59 1b       	sub	r21, r25
     868:	99 f0       	breq	.+38     	; 0x890 <__addsf3x+0x60>
     86a:	59 3f       	cpi	r21, 0xF9	; 249
     86c:	50 f4       	brcc	.+20     	; 0x882 <__addsf3x+0x52>
     86e:	50 3e       	cpi	r21, 0xE0	; 224
     870:	68 f1       	brcs	.+90     	; 0x8cc <__addsf3x+0x9c>
     872:	1a 16       	cp	r1, r26
     874:	f0 40       	sbci	r31, 0x00	; 0
     876:	a2 2f       	mov	r26, r18
     878:	23 2f       	mov	r18, r19
     87a:	34 2f       	mov	r19, r20
     87c:	44 27       	eor	r20, r20
     87e:	58 5f       	subi	r21, 0xF8	; 248
     880:	f3 cf       	rjmp	.-26     	; 0x868 <__addsf3x+0x38>
     882:	46 95       	lsr	r20
     884:	37 95       	ror	r19
     886:	27 95       	ror	r18
     888:	a7 95       	ror	r26
     88a:	f0 40       	sbci	r31, 0x00	; 0
     88c:	53 95       	inc	r21
     88e:	c9 f7       	brne	.-14     	; 0x882 <__addsf3x+0x52>
     890:	7e f4       	brtc	.+30     	; 0x8b0 <__addsf3x+0x80>
     892:	1f 16       	cp	r1, r31
     894:	ba 0b       	sbc	r27, r26
     896:	62 0b       	sbc	r22, r18
     898:	73 0b       	sbc	r23, r19
     89a:	84 0b       	sbc	r24, r20
     89c:	ba f0       	brmi	.+46     	; 0x8cc <__addsf3x+0x9c>
     89e:	91 50       	subi	r25, 0x01	; 1
     8a0:	a1 f0       	breq	.+40     	; 0x8ca <__addsf3x+0x9a>
     8a2:	ff 0f       	add	r31, r31
     8a4:	bb 1f       	adc	r27, r27
     8a6:	66 1f       	adc	r22, r22
     8a8:	77 1f       	adc	r23, r23
     8aa:	88 1f       	adc	r24, r24
     8ac:	c2 f7       	brpl	.-16     	; 0x89e <__addsf3x+0x6e>
     8ae:	0e c0       	rjmp	.+28     	; 0x8cc <__addsf3x+0x9c>
     8b0:	ba 0f       	add	r27, r26
     8b2:	62 1f       	adc	r22, r18
     8b4:	73 1f       	adc	r23, r19
     8b6:	84 1f       	adc	r24, r20
     8b8:	48 f4       	brcc	.+18     	; 0x8cc <__addsf3x+0x9c>
     8ba:	87 95       	ror	r24
     8bc:	77 95       	ror	r23
     8be:	67 95       	ror	r22
     8c0:	b7 95       	ror	r27
     8c2:	f7 95       	ror	r31
     8c4:	9e 3f       	cpi	r25, 0xFE	; 254
     8c6:	08 f0       	brcs	.+2      	; 0x8ca <__addsf3x+0x9a>
     8c8:	b0 cf       	rjmp	.-160    	; 0x82a <__addsf3+0x28>
     8ca:	93 95       	inc	r25
     8cc:	88 0f       	add	r24, r24
     8ce:	08 f0       	brcs	.+2      	; 0x8d2 <__addsf3x+0xa2>
     8d0:	99 27       	eor	r25, r25
     8d2:	ee 0f       	add	r30, r30
     8d4:	97 95       	ror	r25
     8d6:	87 95       	ror	r24
     8d8:	08 95       	ret

000008da <__fixsfsi>:
     8da:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__fixunssfsi>
     8de:	68 94       	set
     8e0:	b1 11       	cpse	r27, r1
     8e2:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_szero>
     8e6:	08 95       	ret

000008e8 <__fixunssfsi>:
     8e8:	0e 94 10 05 	call	0xa20	; 0xa20 <__fp_splitA>
     8ec:	88 f0       	brcs	.+34     	; 0x910 <__fixunssfsi+0x28>
     8ee:	9f 57       	subi	r25, 0x7F	; 127
     8f0:	98 f0       	brcs	.+38     	; 0x918 <__fixunssfsi+0x30>
     8f2:	b9 2f       	mov	r27, r25
     8f4:	99 27       	eor	r25, r25
     8f6:	b7 51       	subi	r27, 0x17	; 23
     8f8:	b0 f0       	brcs	.+44     	; 0x926 <__fixunssfsi+0x3e>
     8fa:	e1 f0       	breq	.+56     	; 0x934 <__fixunssfsi+0x4c>
     8fc:	66 0f       	add	r22, r22
     8fe:	77 1f       	adc	r23, r23
     900:	88 1f       	adc	r24, r24
     902:	99 1f       	adc	r25, r25
     904:	1a f0       	brmi	.+6      	; 0x90c <__fixunssfsi+0x24>
     906:	ba 95       	dec	r27
     908:	c9 f7       	brne	.-14     	; 0x8fc <__fixunssfsi+0x14>
     90a:	14 c0       	rjmp	.+40     	; 0x934 <__fixunssfsi+0x4c>
     90c:	b1 30       	cpi	r27, 0x01	; 1
     90e:	91 f0       	breq	.+36     	; 0x934 <__fixunssfsi+0x4c>
     910:	0e 94 2a 05 	call	0xa54	; 0xa54 <__fp_zero>
     914:	b1 e0       	ldi	r27, 0x01	; 1
     916:	08 95       	ret
     918:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_zero>
     91c:	67 2f       	mov	r22, r23
     91e:	78 2f       	mov	r23, r24
     920:	88 27       	eor	r24, r24
     922:	b8 5f       	subi	r27, 0xF8	; 248
     924:	39 f0       	breq	.+14     	; 0x934 <__fixunssfsi+0x4c>
     926:	b9 3f       	cpi	r27, 0xF9	; 249
     928:	cc f3       	brlt	.-14     	; 0x91c <__fixunssfsi+0x34>
     92a:	86 95       	lsr	r24
     92c:	77 95       	ror	r23
     92e:	67 95       	ror	r22
     930:	b3 95       	inc	r27
     932:	d9 f7       	brne	.-10     	; 0x92a <__fixunssfsi+0x42>
     934:	3e f4       	brtc	.+14     	; 0x944 <__fixunssfsi+0x5c>
     936:	90 95       	com	r25
     938:	80 95       	com	r24
     93a:	70 95       	com	r23
     93c:	61 95       	neg	r22
     93e:	7f 4f       	sbci	r23, 0xFF	; 255
     940:	8f 4f       	sbci	r24, 0xFF	; 255
     942:	9f 4f       	sbci	r25, 0xFF	; 255
     944:	08 95       	ret

00000946 <__floatunsisf>:
     946:	e8 94       	clt
     948:	09 c0       	rjmp	.+18     	; 0x95c <__floatsisf+0x12>

0000094a <__floatsisf>:
     94a:	97 fb       	bst	r25, 7
     94c:	3e f4       	brtc	.+14     	; 0x95c <__floatsisf+0x12>
     94e:	90 95       	com	r25
     950:	80 95       	com	r24
     952:	70 95       	com	r23
     954:	61 95       	neg	r22
     956:	7f 4f       	sbci	r23, 0xFF	; 255
     958:	8f 4f       	sbci	r24, 0xFF	; 255
     95a:	9f 4f       	sbci	r25, 0xFF	; 255
     95c:	99 23       	and	r25, r25
     95e:	a9 f0       	breq	.+42     	; 0x98a <__floatsisf+0x40>
     960:	f9 2f       	mov	r31, r25
     962:	96 e9       	ldi	r25, 0x96	; 150
     964:	bb 27       	eor	r27, r27
     966:	93 95       	inc	r25
     968:	f6 95       	lsr	r31
     96a:	87 95       	ror	r24
     96c:	77 95       	ror	r23
     96e:	67 95       	ror	r22
     970:	b7 95       	ror	r27
     972:	f1 11       	cpse	r31, r1
     974:	f8 cf       	rjmp	.-16     	; 0x966 <__floatsisf+0x1c>
     976:	fa f4       	brpl	.+62     	; 0x9b6 <__floatsisf+0x6c>
     978:	bb 0f       	add	r27, r27
     97a:	11 f4       	brne	.+4      	; 0x980 <__floatsisf+0x36>
     97c:	60 ff       	sbrs	r22, 0
     97e:	1b c0       	rjmp	.+54     	; 0x9b6 <__floatsisf+0x6c>
     980:	6f 5f       	subi	r22, 0xFF	; 255
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	8f 4f       	sbci	r24, 0xFF	; 255
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	16 c0       	rjmp	.+44     	; 0x9b6 <__floatsisf+0x6c>
     98a:	88 23       	and	r24, r24
     98c:	11 f0       	breq	.+4      	; 0x992 <__floatsisf+0x48>
     98e:	96 e9       	ldi	r25, 0x96	; 150
     990:	11 c0       	rjmp	.+34     	; 0x9b4 <__floatsisf+0x6a>
     992:	77 23       	and	r23, r23
     994:	21 f0       	breq	.+8      	; 0x99e <__floatsisf+0x54>
     996:	9e e8       	ldi	r25, 0x8E	; 142
     998:	87 2f       	mov	r24, r23
     99a:	76 2f       	mov	r23, r22
     99c:	05 c0       	rjmp	.+10     	; 0x9a8 <__floatsisf+0x5e>
     99e:	66 23       	and	r22, r22
     9a0:	71 f0       	breq	.+28     	; 0x9be <__floatsisf+0x74>
     9a2:	96 e8       	ldi	r25, 0x86	; 134
     9a4:	86 2f       	mov	r24, r22
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	2a f0       	brmi	.+10     	; 0x9b6 <__floatsisf+0x6c>
     9ac:	9a 95       	dec	r25
     9ae:	66 0f       	add	r22, r22
     9b0:	77 1f       	adc	r23, r23
     9b2:	88 1f       	adc	r24, r24
     9b4:	da f7       	brpl	.-10     	; 0x9ac <__floatsisf+0x62>
     9b6:	88 0f       	add	r24, r24
     9b8:	96 95       	lsr	r25
     9ba:	87 95       	ror	r24
     9bc:	97 f9       	bld	r25, 7
     9be:	08 95       	ret

000009c0 <__fp_inf>:
     9c0:	97 f9       	bld	r25, 7
     9c2:	9f 67       	ori	r25, 0x7F	; 127
     9c4:	80 e8       	ldi	r24, 0x80	; 128
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	08 95       	ret

000009cc <__fp_nan>:
     9cc:	9f ef       	ldi	r25, 0xFF	; 255
     9ce:	80 ec       	ldi	r24, 0xC0	; 192
     9d0:	08 95       	ret

000009d2 <__fp_pscA>:
     9d2:	00 24       	eor	r0, r0
     9d4:	0a 94       	dec	r0
     9d6:	16 16       	cp	r1, r22
     9d8:	17 06       	cpc	r1, r23
     9da:	18 06       	cpc	r1, r24
     9dc:	09 06       	cpc	r0, r25
     9de:	08 95       	ret

000009e0 <__fp_pscB>:
     9e0:	00 24       	eor	r0, r0
     9e2:	0a 94       	dec	r0
     9e4:	12 16       	cp	r1, r18
     9e6:	13 06       	cpc	r1, r19
     9e8:	14 06       	cpc	r1, r20
     9ea:	05 06       	cpc	r0, r21
     9ec:	08 95       	ret

000009ee <__fp_round>:
     9ee:	09 2e       	mov	r0, r25
     9f0:	03 94       	inc	r0
     9f2:	00 0c       	add	r0, r0
     9f4:	11 f4       	brne	.+4      	; 0x9fa <__fp_round+0xc>
     9f6:	88 23       	and	r24, r24
     9f8:	52 f0       	brmi	.+20     	; 0xa0e <__fp_round+0x20>
     9fa:	bb 0f       	add	r27, r27
     9fc:	40 f4       	brcc	.+16     	; 0xa0e <__fp_round+0x20>
     9fe:	bf 2b       	or	r27, r31
     a00:	11 f4       	brne	.+4      	; 0xa06 <__fp_round+0x18>
     a02:	60 ff       	sbrs	r22, 0
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__fp_round+0x20>
     a06:	6f 5f       	subi	r22, 0xFF	; 255
     a08:	7f 4f       	sbci	r23, 0xFF	; 255
     a0a:	8f 4f       	sbci	r24, 0xFF	; 255
     a0c:	9f 4f       	sbci	r25, 0xFF	; 255
     a0e:	08 95       	ret

00000a10 <__fp_split3>:
     a10:	57 fd       	sbrc	r21, 7
     a12:	90 58       	subi	r25, 0x80	; 128
     a14:	44 0f       	add	r20, r20
     a16:	55 1f       	adc	r21, r21
     a18:	59 f0       	breq	.+22     	; 0xa30 <__fp_splitA+0x10>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	71 f0       	breq	.+28     	; 0xa3a <__fp_splitA+0x1a>
     a1e:	47 95       	ror	r20

00000a20 <__fp_splitA>:
     a20:	88 0f       	add	r24, r24
     a22:	97 fb       	bst	r25, 7
     a24:	99 1f       	adc	r25, r25
     a26:	61 f0       	breq	.+24     	; 0xa40 <__fp_splitA+0x20>
     a28:	9f 3f       	cpi	r25, 0xFF	; 255
     a2a:	79 f0       	breq	.+30     	; 0xa4a <__fp_splitA+0x2a>
     a2c:	87 95       	ror	r24
     a2e:	08 95       	ret
     a30:	12 16       	cp	r1, r18
     a32:	13 06       	cpc	r1, r19
     a34:	14 06       	cpc	r1, r20
     a36:	55 1f       	adc	r21, r21
     a38:	f2 cf       	rjmp	.-28     	; 0xa1e <__fp_split3+0xe>
     a3a:	46 95       	lsr	r20
     a3c:	f1 df       	rcall	.-30     	; 0xa20 <__fp_splitA>
     a3e:	08 c0       	rjmp	.+16     	; 0xa50 <__fp_splitA+0x30>
     a40:	16 16       	cp	r1, r22
     a42:	17 06       	cpc	r1, r23
     a44:	18 06       	cpc	r1, r24
     a46:	99 1f       	adc	r25, r25
     a48:	f1 cf       	rjmp	.-30     	; 0xa2c <__fp_splitA+0xc>
     a4a:	86 95       	lsr	r24
     a4c:	71 05       	cpc	r23, r1
     a4e:	61 05       	cpc	r22, r1
     a50:	08 94       	sec
     a52:	08 95       	ret

00000a54 <__fp_zero>:
     a54:	e8 94       	clt

00000a56 <__fp_szero>:
     a56:	bb 27       	eor	r27, r27
     a58:	66 27       	eor	r22, r22
     a5a:	77 27       	eor	r23, r23
     a5c:	cb 01       	movw	r24, r22
     a5e:	97 f9       	bld	r25, 7
     a60:	08 95       	ret

00000a62 <__mulsf3>:
     a62:	0e 94 44 05 	call	0xa88	; 0xa88 <__mulsf3x>
     a66:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__fp_round>
     a6a:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__fp_pscA>
     a6e:	38 f0       	brcs	.+14     	; 0xa7e <__mulsf3+0x1c>
     a70:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_pscB>
     a74:	20 f0       	brcs	.+8      	; 0xa7e <__mulsf3+0x1c>
     a76:	95 23       	and	r25, r21
     a78:	11 f0       	breq	.+4      	; 0xa7e <__mulsf3+0x1c>
     a7a:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_inf>
     a7e:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_nan>
     a82:	11 24       	eor	r1, r1
     a84:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_szero>

00000a88 <__mulsf3x>:
     a88:	0e 94 08 05 	call	0xa10	; 0xa10 <__fp_split3>
     a8c:	70 f3       	brcs	.-36     	; 0xa6a <__mulsf3+0x8>

00000a8e <__mulsf3_pse>:
     a8e:	95 9f       	mul	r25, r21
     a90:	c1 f3       	breq	.-16     	; 0xa82 <__mulsf3+0x20>
     a92:	95 0f       	add	r25, r21
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	55 1f       	adc	r21, r21
     a98:	62 9f       	mul	r22, r18
     a9a:	f0 01       	movw	r30, r0
     a9c:	72 9f       	mul	r23, r18
     a9e:	bb 27       	eor	r27, r27
     aa0:	f0 0d       	add	r31, r0
     aa2:	b1 1d       	adc	r27, r1
     aa4:	63 9f       	mul	r22, r19
     aa6:	aa 27       	eor	r26, r26
     aa8:	f0 0d       	add	r31, r0
     aaa:	b1 1d       	adc	r27, r1
     aac:	aa 1f       	adc	r26, r26
     aae:	64 9f       	mul	r22, r20
     ab0:	66 27       	eor	r22, r22
     ab2:	b0 0d       	add	r27, r0
     ab4:	a1 1d       	adc	r26, r1
     ab6:	66 1f       	adc	r22, r22
     ab8:	82 9f       	mul	r24, r18
     aba:	22 27       	eor	r18, r18
     abc:	b0 0d       	add	r27, r0
     abe:	a1 1d       	adc	r26, r1
     ac0:	62 1f       	adc	r22, r18
     ac2:	73 9f       	mul	r23, r19
     ac4:	b0 0d       	add	r27, r0
     ac6:	a1 1d       	adc	r26, r1
     ac8:	62 1f       	adc	r22, r18
     aca:	83 9f       	mul	r24, r19
     acc:	a0 0d       	add	r26, r0
     ace:	61 1d       	adc	r22, r1
     ad0:	22 1f       	adc	r18, r18
     ad2:	74 9f       	mul	r23, r20
     ad4:	33 27       	eor	r19, r19
     ad6:	a0 0d       	add	r26, r0
     ad8:	61 1d       	adc	r22, r1
     ada:	23 1f       	adc	r18, r19
     adc:	84 9f       	mul	r24, r20
     ade:	60 0d       	add	r22, r0
     ae0:	21 1d       	adc	r18, r1
     ae2:	82 2f       	mov	r24, r18
     ae4:	76 2f       	mov	r23, r22
     ae6:	6a 2f       	mov	r22, r26
     ae8:	11 24       	eor	r1, r1
     aea:	9f 57       	subi	r25, 0x7F	; 127
     aec:	50 40       	sbci	r21, 0x00	; 0
     aee:	9a f0       	brmi	.+38     	; 0xb16 <__mulsf3_pse+0x88>
     af0:	f1 f0       	breq	.+60     	; 0xb2e <__mulsf3_pse+0xa0>
     af2:	88 23       	and	r24, r24
     af4:	4a f0       	brmi	.+18     	; 0xb08 <__mulsf3_pse+0x7a>
     af6:	ee 0f       	add	r30, r30
     af8:	ff 1f       	adc	r31, r31
     afa:	bb 1f       	adc	r27, r27
     afc:	66 1f       	adc	r22, r22
     afe:	77 1f       	adc	r23, r23
     b00:	88 1f       	adc	r24, r24
     b02:	91 50       	subi	r25, 0x01	; 1
     b04:	50 40       	sbci	r21, 0x00	; 0
     b06:	a9 f7       	brne	.-22     	; 0xaf2 <__mulsf3_pse+0x64>
     b08:	9e 3f       	cpi	r25, 0xFE	; 254
     b0a:	51 05       	cpc	r21, r1
     b0c:	80 f0       	brcs	.+32     	; 0xb2e <__mulsf3_pse+0xa0>
     b0e:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_inf>
     b12:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_szero>
     b16:	5f 3f       	cpi	r21, 0xFF	; 255
     b18:	e4 f3       	brlt	.-8      	; 0xb12 <__mulsf3_pse+0x84>
     b1a:	98 3e       	cpi	r25, 0xE8	; 232
     b1c:	d4 f3       	brlt	.-12     	; 0xb12 <__mulsf3_pse+0x84>
     b1e:	86 95       	lsr	r24
     b20:	77 95       	ror	r23
     b22:	67 95       	ror	r22
     b24:	b7 95       	ror	r27
     b26:	f7 95       	ror	r31
     b28:	e7 95       	ror	r30
     b2a:	9f 5f       	subi	r25, 0xFF	; 255
     b2c:	c1 f7       	brne	.-16     	; 0xb1e <__mulsf3_pse+0x90>
     b2e:	fe 2b       	or	r31, r30
     b30:	88 0f       	add	r24, r24
     b32:	91 1d       	adc	r25, r1
     b34:	96 95       	lsr	r25
     b36:	87 95       	ror	r24
     b38:	97 f9       	bld	r25, 7
     b3a:	08 95       	ret

00000b3c <vfprintf>:
     b3c:	a0 e1       	ldi	r26, 0x10	; 16
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	e4 ea       	ldi	r30, 0xA4	; 164
     b42:	f5 e0       	ldi	r31, 0x05	; 5
     b44:	0c 94 1b 09 	jmp	0x1236	; 0x1236 <__prologue_saves__>
     b48:	7c 01       	movw	r14, r24
     b4a:	1b 01       	movw	r2, r22
     b4c:	6a 01       	movw	r12, r20
     b4e:	fc 01       	movw	r30, r24
     b50:	17 82       	std	Z+7, r1	; 0x07
     b52:	16 82       	std	Z+6, r1	; 0x06
     b54:	83 81       	ldd	r24, Z+3	; 0x03
     b56:	81 ff       	sbrs	r24, 1
     b58:	44 c3       	rjmp	.+1672   	; 0x11e2 <vfprintf+0x6a6>
     b5a:	9e 01       	movw	r18, r28
     b5c:	2f 5f       	subi	r18, 0xFF	; 255
     b5e:	3f 4f       	sbci	r19, 0xFF	; 255
     b60:	39 01       	movw	r6, r18
     b62:	f7 01       	movw	r30, r14
     b64:	93 81       	ldd	r25, Z+3	; 0x03
     b66:	f1 01       	movw	r30, r2
     b68:	93 fd       	sbrc	r25, 3
     b6a:	85 91       	lpm	r24, Z+
     b6c:	93 ff       	sbrs	r25, 3
     b6e:	81 91       	ld	r24, Z+
     b70:	1f 01       	movw	r2, r30
     b72:	88 23       	and	r24, r24
     b74:	09 f4       	brne	.+2      	; 0xb78 <vfprintf+0x3c>
     b76:	31 c3       	rjmp	.+1634   	; 0x11da <vfprintf+0x69e>
     b78:	85 32       	cpi	r24, 0x25	; 37
     b7a:	39 f4       	brne	.+14     	; 0xb8a <vfprintf+0x4e>
     b7c:	93 fd       	sbrc	r25, 3
     b7e:	85 91       	lpm	r24, Z+
     b80:	93 ff       	sbrs	r25, 3
     b82:	81 91       	ld	r24, Z+
     b84:	1f 01       	movw	r2, r30
     b86:	85 32       	cpi	r24, 0x25	; 37
     b88:	39 f4       	brne	.+14     	; 0xb98 <vfprintf+0x5c>
     b8a:	b7 01       	movw	r22, r14
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     b92:	56 01       	movw	r10, r12
     b94:	65 01       	movw	r12, r10
     b96:	e5 cf       	rjmp	.-54     	; 0xb62 <vfprintf+0x26>
     b98:	10 e0       	ldi	r17, 0x00	; 0
     b9a:	51 2c       	mov	r5, r1
     b9c:	91 2c       	mov	r9, r1
     b9e:	ff e1       	ldi	r31, 0x1F	; 31
     ba0:	f9 15       	cp	r31, r9
     ba2:	d8 f0       	brcs	.+54     	; 0xbda <vfprintf+0x9e>
     ba4:	8b 32       	cpi	r24, 0x2B	; 43
     ba6:	79 f0       	breq	.+30     	; 0xbc6 <vfprintf+0x8a>
     ba8:	38 f4       	brcc	.+14     	; 0xbb8 <vfprintf+0x7c>
     baa:	80 32       	cpi	r24, 0x20	; 32
     bac:	79 f0       	breq	.+30     	; 0xbcc <vfprintf+0x90>
     bae:	83 32       	cpi	r24, 0x23	; 35
     bb0:	a1 f4       	brne	.+40     	; 0xbda <vfprintf+0x9e>
     bb2:	f9 2d       	mov	r31, r9
     bb4:	f0 61       	ori	r31, 0x10	; 16
     bb6:	2e c0       	rjmp	.+92     	; 0xc14 <vfprintf+0xd8>
     bb8:	8d 32       	cpi	r24, 0x2D	; 45
     bba:	61 f0       	breq	.+24     	; 0xbd4 <vfprintf+0x98>
     bbc:	80 33       	cpi	r24, 0x30	; 48
     bbe:	69 f4       	brne	.+26     	; 0xbda <vfprintf+0x9e>
     bc0:	29 2d       	mov	r18, r9
     bc2:	21 60       	ori	r18, 0x01	; 1
     bc4:	2d c0       	rjmp	.+90     	; 0xc20 <vfprintf+0xe4>
     bc6:	39 2d       	mov	r19, r9
     bc8:	32 60       	ori	r19, 0x02	; 2
     bca:	93 2e       	mov	r9, r19
     bcc:	89 2d       	mov	r24, r9
     bce:	84 60       	ori	r24, 0x04	; 4
     bd0:	98 2e       	mov	r9, r24
     bd2:	2a c0       	rjmp	.+84     	; 0xc28 <vfprintf+0xec>
     bd4:	e9 2d       	mov	r30, r9
     bd6:	e8 60       	ori	r30, 0x08	; 8
     bd8:	15 c0       	rjmp	.+42     	; 0xc04 <vfprintf+0xc8>
     bda:	97 fc       	sbrc	r9, 7
     bdc:	2d c0       	rjmp	.+90     	; 0xc38 <vfprintf+0xfc>
     bde:	20 ed       	ldi	r18, 0xD0	; 208
     be0:	28 0f       	add	r18, r24
     be2:	2a 30       	cpi	r18, 0x0A	; 10
     be4:	88 f4       	brcc	.+34     	; 0xc08 <vfprintf+0xcc>
     be6:	96 fe       	sbrs	r9, 6
     be8:	06 c0       	rjmp	.+12     	; 0xbf6 <vfprintf+0xba>
     bea:	3a e0       	ldi	r19, 0x0A	; 10
     bec:	13 9f       	mul	r17, r19
     bee:	20 0d       	add	r18, r0
     bf0:	11 24       	eor	r1, r1
     bf2:	12 2f       	mov	r17, r18
     bf4:	19 c0       	rjmp	.+50     	; 0xc28 <vfprintf+0xec>
     bf6:	8a e0       	ldi	r24, 0x0A	; 10
     bf8:	58 9e       	mul	r5, r24
     bfa:	20 0d       	add	r18, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	52 2e       	mov	r5, r18
     c00:	e9 2d       	mov	r30, r9
     c02:	e0 62       	ori	r30, 0x20	; 32
     c04:	9e 2e       	mov	r9, r30
     c06:	10 c0       	rjmp	.+32     	; 0xc28 <vfprintf+0xec>
     c08:	8e 32       	cpi	r24, 0x2E	; 46
     c0a:	31 f4       	brne	.+12     	; 0xc18 <vfprintf+0xdc>
     c0c:	96 fc       	sbrc	r9, 6
     c0e:	e5 c2       	rjmp	.+1482   	; 0x11da <vfprintf+0x69e>
     c10:	f9 2d       	mov	r31, r9
     c12:	f0 64       	ori	r31, 0x40	; 64
     c14:	9f 2e       	mov	r9, r31
     c16:	08 c0       	rjmp	.+16     	; 0xc28 <vfprintf+0xec>
     c18:	8c 36       	cpi	r24, 0x6C	; 108
     c1a:	21 f4       	brne	.+8      	; 0xc24 <vfprintf+0xe8>
     c1c:	29 2d       	mov	r18, r9
     c1e:	20 68       	ori	r18, 0x80	; 128
     c20:	92 2e       	mov	r9, r18
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <vfprintf+0xec>
     c24:	88 36       	cpi	r24, 0x68	; 104
     c26:	41 f4       	brne	.+16     	; 0xc38 <vfprintf+0xfc>
     c28:	f1 01       	movw	r30, r2
     c2a:	93 fd       	sbrc	r25, 3
     c2c:	85 91       	lpm	r24, Z+
     c2e:	93 ff       	sbrs	r25, 3
     c30:	81 91       	ld	r24, Z+
     c32:	1f 01       	movw	r2, r30
     c34:	81 11       	cpse	r24, r1
     c36:	b3 cf       	rjmp	.-154    	; 0xb9e <vfprintf+0x62>
     c38:	9b eb       	ldi	r25, 0xBB	; 187
     c3a:	98 0f       	add	r25, r24
     c3c:	93 30       	cpi	r25, 0x03	; 3
     c3e:	20 f4       	brcc	.+8      	; 0xc48 <vfprintf+0x10c>
     c40:	99 2d       	mov	r25, r9
     c42:	90 61       	ori	r25, 0x10	; 16
     c44:	80 5e       	subi	r24, 0xE0	; 224
     c46:	07 c0       	rjmp	.+14     	; 0xc56 <vfprintf+0x11a>
     c48:	9b e9       	ldi	r25, 0x9B	; 155
     c4a:	98 0f       	add	r25, r24
     c4c:	93 30       	cpi	r25, 0x03	; 3
     c4e:	08 f0       	brcs	.+2      	; 0xc52 <vfprintf+0x116>
     c50:	66 c1       	rjmp	.+716    	; 0xf1e <vfprintf+0x3e2>
     c52:	99 2d       	mov	r25, r9
     c54:	9f 7e       	andi	r25, 0xEF	; 239
     c56:	96 ff       	sbrs	r25, 6
     c58:	16 e0       	ldi	r17, 0x06	; 6
     c5a:	9f 73       	andi	r25, 0x3F	; 63
     c5c:	99 2e       	mov	r9, r25
     c5e:	85 36       	cpi	r24, 0x65	; 101
     c60:	19 f4       	brne	.+6      	; 0xc68 <vfprintf+0x12c>
     c62:	90 64       	ori	r25, 0x40	; 64
     c64:	99 2e       	mov	r9, r25
     c66:	08 c0       	rjmp	.+16     	; 0xc78 <vfprintf+0x13c>
     c68:	86 36       	cpi	r24, 0x66	; 102
     c6a:	21 f4       	brne	.+8      	; 0xc74 <vfprintf+0x138>
     c6c:	39 2f       	mov	r19, r25
     c6e:	30 68       	ori	r19, 0x80	; 128
     c70:	93 2e       	mov	r9, r19
     c72:	02 c0       	rjmp	.+4      	; 0xc78 <vfprintf+0x13c>
     c74:	11 11       	cpse	r17, r1
     c76:	11 50       	subi	r17, 0x01	; 1
     c78:	97 fe       	sbrs	r9, 7
     c7a:	07 c0       	rjmp	.+14     	; 0xc8a <vfprintf+0x14e>
     c7c:	1c 33       	cpi	r17, 0x3C	; 60
     c7e:	50 f4       	brcc	.+20     	; 0xc94 <vfprintf+0x158>
     c80:	44 24       	eor	r4, r4
     c82:	43 94       	inc	r4
     c84:	41 0e       	add	r4, r17
     c86:	27 e0       	ldi	r18, 0x07	; 7
     c88:	0b c0       	rjmp	.+22     	; 0xca0 <vfprintf+0x164>
     c8a:	18 30       	cpi	r17, 0x08	; 8
     c8c:	38 f0       	brcs	.+14     	; 0xc9c <vfprintf+0x160>
     c8e:	27 e0       	ldi	r18, 0x07	; 7
     c90:	17 e0       	ldi	r17, 0x07	; 7
     c92:	05 c0       	rjmp	.+10     	; 0xc9e <vfprintf+0x162>
     c94:	27 e0       	ldi	r18, 0x07	; 7
     c96:	9c e3       	ldi	r25, 0x3C	; 60
     c98:	49 2e       	mov	r4, r25
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <vfprintf+0x164>
     c9c:	21 2f       	mov	r18, r17
     c9e:	41 2c       	mov	r4, r1
     ca0:	56 01       	movw	r10, r12
     ca2:	84 e0       	ldi	r24, 0x04	; 4
     ca4:	a8 0e       	add	r10, r24
     ca6:	b1 1c       	adc	r11, r1
     ca8:	f6 01       	movw	r30, r12
     caa:	60 81       	ld	r22, Z
     cac:	71 81       	ldd	r23, Z+1	; 0x01
     cae:	82 81       	ldd	r24, Z+2	; 0x02
     cb0:	93 81       	ldd	r25, Z+3	; 0x03
     cb2:	04 2d       	mov	r16, r4
     cb4:	a3 01       	movw	r20, r6
     cb6:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__ftoa_engine>
     cba:	6c 01       	movw	r12, r24
     cbc:	f9 81       	ldd	r31, Y+1	; 0x01
     cbe:	fc 87       	std	Y+12, r31	; 0x0c
     cc0:	f0 ff       	sbrs	r31, 0
     cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x18c>
     cc4:	f3 ff       	sbrs	r31, 3
     cc6:	06 c0       	rjmp	.+12     	; 0xcd4 <vfprintf+0x198>
     cc8:	91 fc       	sbrc	r9, 1
     cca:	06 c0       	rjmp	.+12     	; 0xcd8 <vfprintf+0x19c>
     ccc:	92 fe       	sbrs	r9, 2
     cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0x1a0>
     cd0:	00 e2       	ldi	r16, 0x20	; 32
     cd2:	05 c0       	rjmp	.+10     	; 0xcde <vfprintf+0x1a2>
     cd4:	0d e2       	ldi	r16, 0x2D	; 45
     cd6:	03 c0       	rjmp	.+6      	; 0xcde <vfprintf+0x1a2>
     cd8:	0b e2       	ldi	r16, 0x2B	; 43
     cda:	01 c0       	rjmp	.+2      	; 0xcde <vfprintf+0x1a2>
     cdc:	00 e0       	ldi	r16, 0x00	; 0
     cde:	8c 85       	ldd	r24, Y+12	; 0x0c
     ce0:	8c 70       	andi	r24, 0x0C	; 12
     ce2:	19 f0       	breq	.+6      	; 0xcea <vfprintf+0x1ae>
     ce4:	01 11       	cpse	r16, r1
     ce6:	5a c2       	rjmp	.+1204   	; 0x119c <vfprintf+0x660>
     ce8:	9b c2       	rjmp	.+1334   	; 0x1220 <vfprintf+0x6e4>
     cea:	97 fe       	sbrs	r9, 7
     cec:	10 c0       	rjmp	.+32     	; 0xd0e <vfprintf+0x1d2>
     cee:	4c 0c       	add	r4, r12
     cf0:	fc 85       	ldd	r31, Y+12	; 0x0c
     cf2:	f4 ff       	sbrs	r31, 4
     cf4:	04 c0       	rjmp	.+8      	; 0xcfe <vfprintf+0x1c2>
     cf6:	8a 81       	ldd	r24, Y+2	; 0x02
     cf8:	81 33       	cpi	r24, 0x31	; 49
     cfa:	09 f4       	brne	.+2      	; 0xcfe <vfprintf+0x1c2>
     cfc:	4a 94       	dec	r4
     cfe:	14 14       	cp	r1, r4
     d00:	74 f5       	brge	.+92     	; 0xd5e <vfprintf+0x222>
     d02:	28 e0       	ldi	r18, 0x08	; 8
     d04:	24 15       	cp	r18, r4
     d06:	78 f5       	brcc	.+94     	; 0xd66 <vfprintf+0x22a>
     d08:	88 e0       	ldi	r24, 0x08	; 8
     d0a:	48 2e       	mov	r4, r24
     d0c:	2c c0       	rjmp	.+88     	; 0xd66 <vfprintf+0x22a>
     d0e:	96 fc       	sbrc	r9, 6
     d10:	2a c0       	rjmp	.+84     	; 0xd66 <vfprintf+0x22a>
     d12:	81 2f       	mov	r24, r17
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	8c 15       	cp	r24, r12
     d18:	9d 05       	cpc	r25, r13
     d1a:	9c f0       	brlt	.+38     	; 0xd42 <vfprintf+0x206>
     d1c:	3c ef       	ldi	r19, 0xFC	; 252
     d1e:	c3 16       	cp	r12, r19
     d20:	3f ef       	ldi	r19, 0xFF	; 255
     d22:	d3 06       	cpc	r13, r19
     d24:	74 f0       	brlt	.+28     	; 0xd42 <vfprintf+0x206>
     d26:	89 2d       	mov	r24, r9
     d28:	80 68       	ori	r24, 0x80	; 128
     d2a:	98 2e       	mov	r9, r24
     d2c:	0a c0       	rjmp	.+20     	; 0xd42 <vfprintf+0x206>
     d2e:	e2 e0       	ldi	r30, 0x02	; 2
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	ec 0f       	add	r30, r28
     d34:	fd 1f       	adc	r31, r29
     d36:	e1 0f       	add	r30, r17
     d38:	f1 1d       	adc	r31, r1
     d3a:	80 81       	ld	r24, Z
     d3c:	80 33       	cpi	r24, 0x30	; 48
     d3e:	19 f4       	brne	.+6      	; 0xd46 <vfprintf+0x20a>
     d40:	11 50       	subi	r17, 0x01	; 1
     d42:	11 11       	cpse	r17, r1
     d44:	f4 cf       	rjmp	.-24     	; 0xd2e <vfprintf+0x1f2>
     d46:	97 fe       	sbrs	r9, 7
     d48:	0e c0       	rjmp	.+28     	; 0xd66 <vfprintf+0x22a>
     d4a:	44 24       	eor	r4, r4
     d4c:	43 94       	inc	r4
     d4e:	41 0e       	add	r4, r17
     d50:	81 2f       	mov	r24, r17
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	c8 16       	cp	r12, r24
     d56:	d9 06       	cpc	r13, r25
     d58:	2c f4       	brge	.+10     	; 0xd64 <vfprintf+0x228>
     d5a:	1c 19       	sub	r17, r12
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <vfprintf+0x22a>
     d5e:	44 24       	eor	r4, r4
     d60:	43 94       	inc	r4
     d62:	01 c0       	rjmp	.+2      	; 0xd66 <vfprintf+0x22a>
     d64:	10 e0       	ldi	r17, 0x00	; 0
     d66:	97 fe       	sbrs	r9, 7
     d68:	06 c0       	rjmp	.+12     	; 0xd76 <vfprintf+0x23a>
     d6a:	1c 14       	cp	r1, r12
     d6c:	1d 04       	cpc	r1, r13
     d6e:	34 f4       	brge	.+12     	; 0xd7c <vfprintf+0x240>
     d70:	c6 01       	movw	r24, r12
     d72:	01 96       	adiw	r24, 0x01	; 1
     d74:	05 c0       	rjmp	.+10     	; 0xd80 <vfprintf+0x244>
     d76:	85 e0       	ldi	r24, 0x05	; 5
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	02 c0       	rjmp	.+4      	; 0xd80 <vfprintf+0x244>
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	01 11       	cpse	r16, r1
     d82:	01 96       	adiw	r24, 0x01	; 1
     d84:	11 23       	and	r17, r17
     d86:	31 f0       	breq	.+12     	; 0xd94 <vfprintf+0x258>
     d88:	21 2f       	mov	r18, r17
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	2f 5f       	subi	r18, 0xFF	; 255
     d8e:	3f 4f       	sbci	r19, 0xFF	; 255
     d90:	82 0f       	add	r24, r18
     d92:	93 1f       	adc	r25, r19
     d94:	25 2d       	mov	r18, r5
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	82 17       	cp	r24, r18
     d9a:	93 07       	cpc	r25, r19
     d9c:	14 f4       	brge	.+4      	; 0xda2 <vfprintf+0x266>
     d9e:	58 1a       	sub	r5, r24
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x268>
     da2:	51 2c       	mov	r5, r1
     da4:	89 2d       	mov	r24, r9
     da6:	89 70       	andi	r24, 0x09	; 9
     da8:	49 f4       	brne	.+18     	; 0xdbc <vfprintf+0x280>
     daa:	55 20       	and	r5, r5
     dac:	39 f0       	breq	.+14     	; 0xdbc <vfprintf+0x280>
     dae:	b7 01       	movw	r22, r14
     db0:	80 e2       	ldi	r24, 0x20	; 32
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     db8:	5a 94       	dec	r5
     dba:	f7 cf       	rjmp	.-18     	; 0xdaa <vfprintf+0x26e>
     dbc:	00 23       	and	r16, r16
     dbe:	29 f0       	breq	.+10     	; 0xdca <vfprintf+0x28e>
     dc0:	b7 01       	movw	r22, r14
     dc2:	80 2f       	mov	r24, r16
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     dca:	93 fc       	sbrc	r9, 3
     dcc:	09 c0       	rjmp	.+18     	; 0xde0 <vfprintf+0x2a4>
     dce:	55 20       	and	r5, r5
     dd0:	39 f0       	breq	.+14     	; 0xde0 <vfprintf+0x2a4>
     dd2:	b7 01       	movw	r22, r14
     dd4:	80 e3       	ldi	r24, 0x30	; 48
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     ddc:	5a 94       	dec	r5
     dde:	f7 cf       	rjmp	.-18     	; 0xdce <vfprintf+0x292>
     de0:	97 fe       	sbrs	r9, 7
     de2:	4c c0       	rjmp	.+152    	; 0xe7c <vfprintf+0x340>
     de4:	46 01       	movw	r8, r12
     de6:	d7 fe       	sbrs	r13, 7
     de8:	02 c0       	rjmp	.+4      	; 0xdee <vfprintf+0x2b2>
     dea:	81 2c       	mov	r8, r1
     dec:	91 2c       	mov	r9, r1
     dee:	c6 01       	movw	r24, r12
     df0:	88 19       	sub	r24, r8
     df2:	99 09       	sbc	r25, r9
     df4:	f3 01       	movw	r30, r6
     df6:	e8 0f       	add	r30, r24
     df8:	f9 1f       	adc	r31, r25
     dfa:	fe 87       	std	Y+14, r31	; 0x0e
     dfc:	ed 87       	std	Y+13, r30	; 0x0d
     dfe:	96 01       	movw	r18, r12
     e00:	24 19       	sub	r18, r4
     e02:	31 09       	sbc	r19, r1
     e04:	38 8b       	std	Y+16, r19	; 0x10
     e06:	2f 87       	std	Y+15, r18	; 0x0f
     e08:	01 2f       	mov	r16, r17
     e0a:	10 e0       	ldi	r17, 0x00	; 0
     e0c:	11 95       	neg	r17
     e0e:	01 95       	neg	r16
     e10:	11 09       	sbc	r17, r1
     e12:	3f ef       	ldi	r19, 0xFF	; 255
     e14:	83 16       	cp	r8, r19
     e16:	93 06       	cpc	r9, r19
     e18:	29 f4       	brne	.+10     	; 0xe24 <vfprintf+0x2e8>
     e1a:	b7 01       	movw	r22, r14
     e1c:	8e e2       	ldi	r24, 0x2E	; 46
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     e24:	c8 14       	cp	r12, r8
     e26:	d9 04       	cpc	r13, r9
     e28:	4c f0       	brlt	.+18     	; 0xe3c <vfprintf+0x300>
     e2a:	8f 85       	ldd	r24, Y+15	; 0x0f
     e2c:	98 89       	ldd	r25, Y+16	; 0x10
     e2e:	88 15       	cp	r24, r8
     e30:	99 05       	cpc	r25, r9
     e32:	24 f4       	brge	.+8      	; 0xe3c <vfprintf+0x300>
     e34:	ed 85       	ldd	r30, Y+13	; 0x0d
     e36:	fe 85       	ldd	r31, Y+14	; 0x0e
     e38:	81 81       	ldd	r24, Z+1	; 0x01
     e3a:	01 c0       	rjmp	.+2      	; 0xe3e <vfprintf+0x302>
     e3c:	80 e3       	ldi	r24, 0x30	; 48
     e3e:	f1 e0       	ldi	r31, 0x01	; 1
     e40:	8f 1a       	sub	r8, r31
     e42:	91 08       	sbc	r9, r1
     e44:	2d 85       	ldd	r18, Y+13	; 0x0d
     e46:	3e 85       	ldd	r19, Y+14	; 0x0e
     e48:	2f 5f       	subi	r18, 0xFF	; 255
     e4a:	3f 4f       	sbci	r19, 0xFF	; 255
     e4c:	3e 87       	std	Y+14, r19	; 0x0e
     e4e:	2d 87       	std	Y+13, r18	; 0x0d
     e50:	80 16       	cp	r8, r16
     e52:	91 06       	cpc	r9, r17
     e54:	2c f0       	brlt	.+10     	; 0xe60 <vfprintf+0x324>
     e56:	b7 01       	movw	r22, r14
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     e5e:	d9 cf       	rjmp	.-78     	; 0xe12 <vfprintf+0x2d6>
     e60:	c8 14       	cp	r12, r8
     e62:	d9 04       	cpc	r13, r9
     e64:	41 f4       	brne	.+16     	; 0xe76 <vfprintf+0x33a>
     e66:	9a 81       	ldd	r25, Y+2	; 0x02
     e68:	96 33       	cpi	r25, 0x36	; 54
     e6a:	20 f4       	brcc	.+8      	; 0xe74 <vfprintf+0x338>
     e6c:	95 33       	cpi	r25, 0x35	; 53
     e6e:	19 f4       	brne	.+6      	; 0xe76 <vfprintf+0x33a>
     e70:	3c 85       	ldd	r19, Y+12	; 0x0c
     e72:	34 ff       	sbrs	r19, 4
     e74:	81 e3       	ldi	r24, 0x31	; 49
     e76:	b7 01       	movw	r22, r14
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	4e c0       	rjmp	.+156    	; 0xf18 <vfprintf+0x3dc>
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	81 33       	cpi	r24, 0x31	; 49
     e80:	19 f0       	breq	.+6      	; 0xe88 <vfprintf+0x34c>
     e82:	9c 85       	ldd	r25, Y+12	; 0x0c
     e84:	9f 7e       	andi	r25, 0xEF	; 239
     e86:	9c 87       	std	Y+12, r25	; 0x0c
     e88:	b7 01       	movw	r22, r14
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     e90:	11 11       	cpse	r17, r1
     e92:	05 c0       	rjmp	.+10     	; 0xe9e <vfprintf+0x362>
     e94:	94 fc       	sbrc	r9, 4
     e96:	18 c0       	rjmp	.+48     	; 0xec8 <vfprintf+0x38c>
     e98:	85 e6       	ldi	r24, 0x65	; 101
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	17 c0       	rjmp	.+46     	; 0xecc <vfprintf+0x390>
     e9e:	b7 01       	movw	r22, r14
     ea0:	8e e2       	ldi	r24, 0x2E	; 46
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     ea8:	1e 5f       	subi	r17, 0xFE	; 254
     eaa:	82 e0       	ldi	r24, 0x02	; 2
     eac:	01 e0       	ldi	r16, 0x01	; 1
     eae:	08 0f       	add	r16, r24
     eb0:	f3 01       	movw	r30, r6
     eb2:	e8 0f       	add	r30, r24
     eb4:	f1 1d       	adc	r31, r1
     eb6:	80 81       	ld	r24, Z
     eb8:	b7 01       	movw	r22, r14
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     ec0:	80 2f       	mov	r24, r16
     ec2:	01 13       	cpse	r16, r17
     ec4:	f3 cf       	rjmp	.-26     	; 0xeac <vfprintf+0x370>
     ec6:	e6 cf       	rjmp	.-52     	; 0xe94 <vfprintf+0x358>
     ec8:	85 e4       	ldi	r24, 0x45	; 69
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	b7 01       	movw	r22, r14
     ece:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     ed2:	d7 fc       	sbrc	r13, 7
     ed4:	06 c0       	rjmp	.+12     	; 0xee2 <vfprintf+0x3a6>
     ed6:	c1 14       	cp	r12, r1
     ed8:	d1 04       	cpc	r13, r1
     eda:	41 f4       	brne	.+16     	; 0xeec <vfprintf+0x3b0>
     edc:	ec 85       	ldd	r30, Y+12	; 0x0c
     ede:	e4 ff       	sbrs	r30, 4
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <vfprintf+0x3b0>
     ee2:	d1 94       	neg	r13
     ee4:	c1 94       	neg	r12
     ee6:	d1 08       	sbc	r13, r1
     ee8:	8d e2       	ldi	r24, 0x2D	; 45
     eea:	01 c0       	rjmp	.+2      	; 0xeee <vfprintf+0x3b2>
     eec:	8b e2       	ldi	r24, 0x2B	; 43
     eee:	b7 01       	movw	r22, r14
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     ef6:	80 e3       	ldi	r24, 0x30	; 48
     ef8:	2a e0       	ldi	r18, 0x0A	; 10
     efa:	c2 16       	cp	r12, r18
     efc:	d1 04       	cpc	r13, r1
     efe:	2c f0       	brlt	.+10     	; 0xf0a <vfprintf+0x3ce>
     f00:	8f 5f       	subi	r24, 0xFF	; 255
     f02:	fa e0       	ldi	r31, 0x0A	; 10
     f04:	cf 1a       	sub	r12, r31
     f06:	d1 08       	sbc	r13, r1
     f08:	f7 cf       	rjmp	.-18     	; 0xef8 <vfprintf+0x3bc>
     f0a:	b7 01       	movw	r22, r14
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     f12:	b7 01       	movw	r22, r14
     f14:	c6 01       	movw	r24, r12
     f16:	c0 96       	adiw	r24, 0x30	; 48
     f18:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     f1c:	54 c1       	rjmp	.+680    	; 0x11c6 <vfprintf+0x68a>
     f1e:	83 36       	cpi	r24, 0x63	; 99
     f20:	31 f0       	breq	.+12     	; 0xf2e <vfprintf+0x3f2>
     f22:	83 37       	cpi	r24, 0x73	; 115
     f24:	79 f0       	breq	.+30     	; 0xf44 <vfprintf+0x408>
     f26:	83 35       	cpi	r24, 0x53	; 83
     f28:	09 f0       	breq	.+2      	; 0xf2c <vfprintf+0x3f0>
     f2a:	56 c0       	rjmp	.+172    	; 0xfd8 <vfprintf+0x49c>
     f2c:	20 c0       	rjmp	.+64     	; 0xf6e <vfprintf+0x432>
     f2e:	56 01       	movw	r10, r12
     f30:	32 e0       	ldi	r19, 0x02	; 2
     f32:	a3 0e       	add	r10, r19
     f34:	b1 1c       	adc	r11, r1
     f36:	f6 01       	movw	r30, r12
     f38:	80 81       	ld	r24, Z
     f3a:	89 83       	std	Y+1, r24	; 0x01
     f3c:	01 e0       	ldi	r16, 0x01	; 1
     f3e:	10 e0       	ldi	r17, 0x00	; 0
     f40:	63 01       	movw	r12, r6
     f42:	12 c0       	rjmp	.+36     	; 0xf68 <vfprintf+0x42c>
     f44:	56 01       	movw	r10, r12
     f46:	f2 e0       	ldi	r31, 0x02	; 2
     f48:	af 0e       	add	r10, r31
     f4a:	b1 1c       	adc	r11, r1
     f4c:	f6 01       	movw	r30, r12
     f4e:	c0 80       	ld	r12, Z
     f50:	d1 80       	ldd	r13, Z+1	; 0x01
     f52:	96 fe       	sbrs	r9, 6
     f54:	03 c0       	rjmp	.+6      	; 0xf5c <vfprintf+0x420>
     f56:	61 2f       	mov	r22, r17
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x424>
     f5c:	6f ef       	ldi	r22, 0xFF	; 255
     f5e:	7f ef       	ldi	r23, 0xFF	; 255
     f60:	c6 01       	movw	r24, r12
     f62:	0e 94 57 0a 	call	0x14ae	; 0x14ae <strnlen>
     f66:	8c 01       	movw	r16, r24
     f68:	f9 2d       	mov	r31, r9
     f6a:	ff 77       	andi	r31, 0x7F	; 127
     f6c:	14 c0       	rjmp	.+40     	; 0xf96 <vfprintf+0x45a>
     f6e:	56 01       	movw	r10, r12
     f70:	22 e0       	ldi	r18, 0x02	; 2
     f72:	a2 0e       	add	r10, r18
     f74:	b1 1c       	adc	r11, r1
     f76:	f6 01       	movw	r30, r12
     f78:	c0 80       	ld	r12, Z
     f7a:	d1 80       	ldd	r13, Z+1	; 0x01
     f7c:	96 fe       	sbrs	r9, 6
     f7e:	03 c0       	rjmp	.+6      	; 0xf86 <vfprintf+0x44a>
     f80:	61 2f       	mov	r22, r17
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <vfprintf+0x44e>
     f86:	6f ef       	ldi	r22, 0xFF	; 255
     f88:	7f ef       	ldi	r23, 0xFF	; 255
     f8a:	c6 01       	movw	r24, r12
     f8c:	0e 94 4c 0a 	call	0x1498	; 0x1498 <strnlen_P>
     f90:	8c 01       	movw	r16, r24
     f92:	f9 2d       	mov	r31, r9
     f94:	f0 68       	ori	r31, 0x80	; 128
     f96:	9f 2e       	mov	r9, r31
     f98:	f3 fd       	sbrc	r31, 3
     f9a:	1a c0       	rjmp	.+52     	; 0xfd0 <vfprintf+0x494>
     f9c:	85 2d       	mov	r24, r5
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	08 17       	cp	r16, r24
     fa2:	19 07       	cpc	r17, r25
     fa4:	a8 f4       	brcc	.+42     	; 0xfd0 <vfprintf+0x494>
     fa6:	b7 01       	movw	r22, r14
     fa8:	80 e2       	ldi	r24, 0x20	; 32
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     fb0:	5a 94       	dec	r5
     fb2:	f4 cf       	rjmp	.-24     	; 0xf9c <vfprintf+0x460>
     fb4:	f6 01       	movw	r30, r12
     fb6:	97 fc       	sbrc	r9, 7
     fb8:	85 91       	lpm	r24, Z+
     fba:	97 fe       	sbrs	r9, 7
     fbc:	81 91       	ld	r24, Z+
     fbe:	6f 01       	movw	r12, r30
     fc0:	b7 01       	movw	r22, r14
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
     fc8:	51 10       	cpse	r5, r1
     fca:	5a 94       	dec	r5
     fcc:	01 50       	subi	r16, 0x01	; 1
     fce:	11 09       	sbc	r17, r1
     fd0:	01 15       	cp	r16, r1
     fd2:	11 05       	cpc	r17, r1
     fd4:	79 f7       	brne	.-34     	; 0xfb4 <vfprintf+0x478>
     fd6:	f7 c0       	rjmp	.+494    	; 0x11c6 <vfprintf+0x68a>
     fd8:	84 36       	cpi	r24, 0x64	; 100
     fda:	11 f0       	breq	.+4      	; 0xfe0 <vfprintf+0x4a4>
     fdc:	89 36       	cpi	r24, 0x69	; 105
     fde:	61 f5       	brne	.+88     	; 0x1038 <vfprintf+0x4fc>
     fe0:	56 01       	movw	r10, r12
     fe2:	97 fe       	sbrs	r9, 7
     fe4:	09 c0       	rjmp	.+18     	; 0xff8 <vfprintf+0x4bc>
     fe6:	24 e0       	ldi	r18, 0x04	; 4
     fe8:	a2 0e       	add	r10, r18
     fea:	b1 1c       	adc	r11, r1
     fec:	f6 01       	movw	r30, r12
     fee:	60 81       	ld	r22, Z
     ff0:	71 81       	ldd	r23, Z+1	; 0x01
     ff2:	82 81       	ldd	r24, Z+2	; 0x02
     ff4:	93 81       	ldd	r25, Z+3	; 0x03
     ff6:	0a c0       	rjmp	.+20     	; 0x100c <vfprintf+0x4d0>
     ff8:	f2 e0       	ldi	r31, 0x02	; 2
     ffa:	af 0e       	add	r10, r31
     ffc:	b1 1c       	adc	r11, r1
     ffe:	f6 01       	movw	r30, r12
    1000:	60 81       	ld	r22, Z
    1002:	71 81       	ldd	r23, Z+1	; 0x01
    1004:	07 2e       	mov	r0, r23
    1006:	00 0c       	add	r0, r0
    1008:	88 0b       	sbc	r24, r24
    100a:	99 0b       	sbc	r25, r25
    100c:	f9 2d       	mov	r31, r9
    100e:	ff 76       	andi	r31, 0x6F	; 111
    1010:	9f 2e       	mov	r9, r31
    1012:	97 ff       	sbrs	r25, 7
    1014:	09 c0       	rjmp	.+18     	; 0x1028 <vfprintf+0x4ec>
    1016:	90 95       	com	r25
    1018:	80 95       	com	r24
    101a:	70 95       	com	r23
    101c:	61 95       	neg	r22
    101e:	7f 4f       	sbci	r23, 0xFF	; 255
    1020:	8f 4f       	sbci	r24, 0xFF	; 255
    1022:	9f 4f       	sbci	r25, 0xFF	; 255
    1024:	f0 68       	ori	r31, 0x80	; 128
    1026:	9f 2e       	mov	r9, r31
    1028:	2a e0       	ldi	r18, 0x0A	; 10
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	a3 01       	movw	r20, r6
    102e:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__ultoa_invert>
    1032:	c8 2e       	mov	r12, r24
    1034:	c6 18       	sub	r12, r6
    1036:	3f c0       	rjmp	.+126    	; 0x10b6 <vfprintf+0x57a>
    1038:	09 2d       	mov	r16, r9
    103a:	85 37       	cpi	r24, 0x75	; 117
    103c:	21 f4       	brne	.+8      	; 0x1046 <vfprintf+0x50a>
    103e:	0f 7e       	andi	r16, 0xEF	; 239
    1040:	2a e0       	ldi	r18, 0x0A	; 10
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	1d c0       	rjmp	.+58     	; 0x1080 <vfprintf+0x544>
    1046:	09 7f       	andi	r16, 0xF9	; 249
    1048:	8f 36       	cpi	r24, 0x6F	; 111
    104a:	91 f0       	breq	.+36     	; 0x1070 <vfprintf+0x534>
    104c:	18 f4       	brcc	.+6      	; 0x1054 <vfprintf+0x518>
    104e:	88 35       	cpi	r24, 0x58	; 88
    1050:	59 f0       	breq	.+22     	; 0x1068 <vfprintf+0x52c>
    1052:	c3 c0       	rjmp	.+390    	; 0x11da <vfprintf+0x69e>
    1054:	80 37       	cpi	r24, 0x70	; 112
    1056:	19 f0       	breq	.+6      	; 0x105e <vfprintf+0x522>
    1058:	88 37       	cpi	r24, 0x78	; 120
    105a:	11 f0       	breq	.+4      	; 0x1060 <vfprintf+0x524>
    105c:	be c0       	rjmp	.+380    	; 0x11da <vfprintf+0x69e>
    105e:	00 61       	ori	r16, 0x10	; 16
    1060:	04 ff       	sbrs	r16, 4
    1062:	09 c0       	rjmp	.+18     	; 0x1076 <vfprintf+0x53a>
    1064:	04 60       	ori	r16, 0x04	; 4
    1066:	07 c0       	rjmp	.+14     	; 0x1076 <vfprintf+0x53a>
    1068:	94 fe       	sbrs	r9, 4
    106a:	08 c0       	rjmp	.+16     	; 0x107c <vfprintf+0x540>
    106c:	06 60       	ori	r16, 0x06	; 6
    106e:	06 c0       	rjmp	.+12     	; 0x107c <vfprintf+0x540>
    1070:	28 e0       	ldi	r18, 0x08	; 8
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	05 c0       	rjmp	.+10     	; 0x1080 <vfprintf+0x544>
    1076:	20 e1       	ldi	r18, 0x10	; 16
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <vfprintf+0x544>
    107c:	20 e1       	ldi	r18, 0x10	; 16
    107e:	32 e0       	ldi	r19, 0x02	; 2
    1080:	56 01       	movw	r10, r12
    1082:	07 ff       	sbrs	r16, 7
    1084:	09 c0       	rjmp	.+18     	; 0x1098 <vfprintf+0x55c>
    1086:	84 e0       	ldi	r24, 0x04	; 4
    1088:	a8 0e       	add	r10, r24
    108a:	b1 1c       	adc	r11, r1
    108c:	f6 01       	movw	r30, r12
    108e:	60 81       	ld	r22, Z
    1090:	71 81       	ldd	r23, Z+1	; 0x01
    1092:	82 81       	ldd	r24, Z+2	; 0x02
    1094:	93 81       	ldd	r25, Z+3	; 0x03
    1096:	08 c0       	rjmp	.+16     	; 0x10a8 <vfprintf+0x56c>
    1098:	f2 e0       	ldi	r31, 0x02	; 2
    109a:	af 0e       	add	r10, r31
    109c:	b1 1c       	adc	r11, r1
    109e:	f6 01       	movw	r30, r12
    10a0:	60 81       	ld	r22, Z
    10a2:	71 81       	ldd	r23, Z+1	; 0x01
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	a3 01       	movw	r20, r6
    10aa:	0e 94 c8 0a 	call	0x1590	; 0x1590 <__ultoa_invert>
    10ae:	c8 2e       	mov	r12, r24
    10b0:	c6 18       	sub	r12, r6
    10b2:	0f 77       	andi	r16, 0x7F	; 127
    10b4:	90 2e       	mov	r9, r16
    10b6:	96 fe       	sbrs	r9, 6
    10b8:	0b c0       	rjmp	.+22     	; 0x10d0 <vfprintf+0x594>
    10ba:	09 2d       	mov	r16, r9
    10bc:	0e 7f       	andi	r16, 0xFE	; 254
    10be:	c1 16       	cp	r12, r17
    10c0:	50 f4       	brcc	.+20     	; 0x10d6 <vfprintf+0x59a>
    10c2:	94 fe       	sbrs	r9, 4
    10c4:	0a c0       	rjmp	.+20     	; 0x10da <vfprintf+0x59e>
    10c6:	92 fc       	sbrc	r9, 2
    10c8:	08 c0       	rjmp	.+16     	; 0x10da <vfprintf+0x59e>
    10ca:	09 2d       	mov	r16, r9
    10cc:	0e 7e       	andi	r16, 0xEE	; 238
    10ce:	05 c0       	rjmp	.+10     	; 0x10da <vfprintf+0x59e>
    10d0:	dc 2c       	mov	r13, r12
    10d2:	09 2d       	mov	r16, r9
    10d4:	03 c0       	rjmp	.+6      	; 0x10dc <vfprintf+0x5a0>
    10d6:	dc 2c       	mov	r13, r12
    10d8:	01 c0       	rjmp	.+2      	; 0x10dc <vfprintf+0x5a0>
    10da:	d1 2e       	mov	r13, r17
    10dc:	04 ff       	sbrs	r16, 4
    10de:	0d c0       	rjmp	.+26     	; 0x10fa <vfprintf+0x5be>
    10e0:	fe 01       	movw	r30, r28
    10e2:	ec 0d       	add	r30, r12
    10e4:	f1 1d       	adc	r31, r1
    10e6:	80 81       	ld	r24, Z
    10e8:	80 33       	cpi	r24, 0x30	; 48
    10ea:	11 f4       	brne	.+4      	; 0x10f0 <vfprintf+0x5b4>
    10ec:	09 7e       	andi	r16, 0xE9	; 233
    10ee:	09 c0       	rjmp	.+18     	; 0x1102 <vfprintf+0x5c6>
    10f0:	02 ff       	sbrs	r16, 2
    10f2:	06 c0       	rjmp	.+12     	; 0x1100 <vfprintf+0x5c4>
    10f4:	d3 94       	inc	r13
    10f6:	d3 94       	inc	r13
    10f8:	04 c0       	rjmp	.+8      	; 0x1102 <vfprintf+0x5c6>
    10fa:	80 2f       	mov	r24, r16
    10fc:	86 78       	andi	r24, 0x86	; 134
    10fe:	09 f0       	breq	.+2      	; 0x1102 <vfprintf+0x5c6>
    1100:	d3 94       	inc	r13
    1102:	03 fd       	sbrc	r16, 3
    1104:	11 c0       	rjmp	.+34     	; 0x1128 <vfprintf+0x5ec>
    1106:	00 ff       	sbrs	r16, 0
    1108:	06 c0       	rjmp	.+12     	; 0x1116 <vfprintf+0x5da>
    110a:	1c 2d       	mov	r17, r12
    110c:	d5 14       	cp	r13, r5
    110e:	80 f4       	brcc	.+32     	; 0x1130 <vfprintf+0x5f4>
    1110:	15 0d       	add	r17, r5
    1112:	1d 19       	sub	r17, r13
    1114:	0d c0       	rjmp	.+26     	; 0x1130 <vfprintf+0x5f4>
    1116:	d5 14       	cp	r13, r5
    1118:	58 f4       	brcc	.+22     	; 0x1130 <vfprintf+0x5f4>
    111a:	b7 01       	movw	r22, r14
    111c:	80 e2       	ldi	r24, 0x20	; 32
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1124:	d3 94       	inc	r13
    1126:	f7 cf       	rjmp	.-18     	; 0x1116 <vfprintf+0x5da>
    1128:	d5 14       	cp	r13, r5
    112a:	10 f4       	brcc	.+4      	; 0x1130 <vfprintf+0x5f4>
    112c:	5d 18       	sub	r5, r13
    112e:	01 c0       	rjmp	.+2      	; 0x1132 <vfprintf+0x5f6>
    1130:	51 2c       	mov	r5, r1
    1132:	04 ff       	sbrs	r16, 4
    1134:	10 c0       	rjmp	.+32     	; 0x1156 <vfprintf+0x61a>
    1136:	b7 01       	movw	r22, r14
    1138:	80 e3       	ldi	r24, 0x30	; 48
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1140:	02 ff       	sbrs	r16, 2
    1142:	17 c0       	rjmp	.+46     	; 0x1172 <vfprintf+0x636>
    1144:	01 fd       	sbrc	r16, 1
    1146:	03 c0       	rjmp	.+6      	; 0x114e <vfprintf+0x612>
    1148:	88 e7       	ldi	r24, 0x78	; 120
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <vfprintf+0x616>
    114e:	88 e5       	ldi	r24, 0x58	; 88
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	b7 01       	movw	r22, r14
    1154:	0c c0       	rjmp	.+24     	; 0x116e <vfprintf+0x632>
    1156:	80 2f       	mov	r24, r16
    1158:	86 78       	andi	r24, 0x86	; 134
    115a:	59 f0       	breq	.+22     	; 0x1172 <vfprintf+0x636>
    115c:	01 ff       	sbrs	r16, 1
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <vfprintf+0x628>
    1160:	8b e2       	ldi	r24, 0x2B	; 43
    1162:	01 c0       	rjmp	.+2      	; 0x1166 <vfprintf+0x62a>
    1164:	80 e2       	ldi	r24, 0x20	; 32
    1166:	07 fd       	sbrc	r16, 7
    1168:	8d e2       	ldi	r24, 0x2D	; 45
    116a:	b7 01       	movw	r22, r14
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1172:	c1 16       	cp	r12, r17
    1174:	38 f4       	brcc	.+14     	; 0x1184 <vfprintf+0x648>
    1176:	b7 01       	movw	r22, r14
    1178:	80 e3       	ldi	r24, 0x30	; 48
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1180:	11 50       	subi	r17, 0x01	; 1
    1182:	f7 cf       	rjmp	.-18     	; 0x1172 <vfprintf+0x636>
    1184:	ca 94       	dec	r12
    1186:	f3 01       	movw	r30, r6
    1188:	ec 0d       	add	r30, r12
    118a:	f1 1d       	adc	r31, r1
    118c:	80 81       	ld	r24, Z
    118e:	b7 01       	movw	r22, r14
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1196:	c1 10       	cpse	r12, r1
    1198:	f5 cf       	rjmp	.-22     	; 0x1184 <vfprintf+0x648>
    119a:	15 c0       	rjmp	.+42     	; 0x11c6 <vfprintf+0x68a>
    119c:	f4 e0       	ldi	r31, 0x04	; 4
    119e:	f5 15       	cp	r31, r5
    11a0:	60 f5       	brcc	.+88     	; 0x11fa <vfprintf+0x6be>
    11a2:	84 e0       	ldi	r24, 0x04	; 4
    11a4:	58 1a       	sub	r5, r24
    11a6:	93 fe       	sbrs	r9, 3
    11a8:	1f c0       	rjmp	.+62     	; 0x11e8 <vfprintf+0x6ac>
    11aa:	01 11       	cpse	r16, r1
    11ac:	27 c0       	rjmp	.+78     	; 0x11fc <vfprintf+0x6c0>
    11ae:	2c 85       	ldd	r18, Y+12	; 0x0c
    11b0:	23 ff       	sbrs	r18, 3
    11b2:	2a c0       	rjmp	.+84     	; 0x1208 <vfprintf+0x6cc>
    11b4:	04 e5       	ldi	r16, 0x54	; 84
    11b6:	10 e0       	ldi	r17, 0x00	; 0
    11b8:	39 2d       	mov	r19, r9
    11ba:	30 71       	andi	r19, 0x10	; 16
    11bc:	93 2e       	mov	r9, r19
    11be:	f8 01       	movw	r30, r16
    11c0:	84 91       	lpm	r24, Z
    11c2:	81 11       	cpse	r24, r1
    11c4:	24 c0       	rjmp	.+72     	; 0x120e <vfprintf+0x6d2>
    11c6:	55 20       	and	r5, r5
    11c8:	09 f4       	brne	.+2      	; 0x11cc <vfprintf+0x690>
    11ca:	e4 cc       	rjmp	.-1592   	; 0xb94 <vfprintf+0x58>
    11cc:	b7 01       	movw	r22, r14
    11ce:	80 e2       	ldi	r24, 0x20	; 32
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    11d6:	5a 94       	dec	r5
    11d8:	f6 cf       	rjmp	.-20     	; 0x11c6 <vfprintf+0x68a>
    11da:	f7 01       	movw	r30, r14
    11dc:	86 81       	ldd	r24, Z+6	; 0x06
    11de:	97 81       	ldd	r25, Z+7	; 0x07
    11e0:	26 c0       	rjmp	.+76     	; 0x122e <vfprintf+0x6f2>
    11e2:	8f ef       	ldi	r24, 0xFF	; 255
    11e4:	9f ef       	ldi	r25, 0xFF	; 255
    11e6:	23 c0       	rjmp	.+70     	; 0x122e <vfprintf+0x6f2>
    11e8:	b7 01       	movw	r22, r14
    11ea:	80 e2       	ldi	r24, 0x20	; 32
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    11f2:	5a 94       	dec	r5
    11f4:	51 10       	cpse	r5, r1
    11f6:	f8 cf       	rjmp	.-16     	; 0x11e8 <vfprintf+0x6ac>
    11f8:	d8 cf       	rjmp	.-80     	; 0x11aa <vfprintf+0x66e>
    11fa:	51 2c       	mov	r5, r1
    11fc:	b7 01       	movw	r22, r14
    11fe:	80 2f       	mov	r24, r16
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    1206:	d3 cf       	rjmp	.-90     	; 0x11ae <vfprintf+0x672>
    1208:	08 e5       	ldi	r16, 0x58	; 88
    120a:	10 e0       	ldi	r17, 0x00	; 0
    120c:	d5 cf       	rjmp	.-86     	; 0x11b8 <vfprintf+0x67c>
    120e:	91 10       	cpse	r9, r1
    1210:	80 52       	subi	r24, 0x20	; 32
    1212:	b7 01       	movw	r22, r14
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <fputc>
    121a:	0f 5f       	subi	r16, 0xFF	; 255
    121c:	1f 4f       	sbci	r17, 0xFF	; 255
    121e:	cf cf       	rjmp	.-98     	; 0x11be <vfprintf+0x682>
    1220:	23 e0       	ldi	r18, 0x03	; 3
    1222:	25 15       	cp	r18, r5
    1224:	10 f4       	brcc	.+4      	; 0x122a <vfprintf+0x6ee>
    1226:	83 e0       	ldi	r24, 0x03	; 3
    1228:	bd cf       	rjmp	.-134    	; 0x11a4 <vfprintf+0x668>
    122a:	51 2c       	mov	r5, r1
    122c:	c0 cf       	rjmp	.-128    	; 0x11ae <vfprintf+0x672>
    122e:	60 96       	adiw	r28, 0x10	; 16
    1230:	e2 e1       	ldi	r30, 0x12	; 18
    1232:	0c 94 37 09 	jmp	0x126e	; 0x126e <__epilogue_restores__>

00001236 <__prologue_saves__>:
    1236:	2f 92       	push	r2
    1238:	3f 92       	push	r3
    123a:	4f 92       	push	r4
    123c:	5f 92       	push	r5
    123e:	6f 92       	push	r6
    1240:	7f 92       	push	r7
    1242:	8f 92       	push	r8
    1244:	9f 92       	push	r9
    1246:	af 92       	push	r10
    1248:	bf 92       	push	r11
    124a:	cf 92       	push	r12
    124c:	df 92       	push	r13
    124e:	ef 92       	push	r14
    1250:	ff 92       	push	r15
    1252:	0f 93       	push	r16
    1254:	1f 93       	push	r17
    1256:	cf 93       	push	r28
    1258:	df 93       	push	r29
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	ca 1b       	sub	r28, r26
    1260:	db 0b       	sbc	r29, r27
    1262:	0f b6       	in	r0, 0x3f	; 63
    1264:	f8 94       	cli
    1266:	de bf       	out	0x3e, r29	; 62
    1268:	0f be       	out	0x3f, r0	; 63
    126a:	cd bf       	out	0x3d, r28	; 61
    126c:	09 94       	ijmp

0000126e <__epilogue_restores__>:
    126e:	2a 88       	ldd	r2, Y+18	; 0x12
    1270:	39 88       	ldd	r3, Y+17	; 0x11
    1272:	48 88       	ldd	r4, Y+16	; 0x10
    1274:	5f 84       	ldd	r5, Y+15	; 0x0f
    1276:	6e 84       	ldd	r6, Y+14	; 0x0e
    1278:	7d 84       	ldd	r7, Y+13	; 0x0d
    127a:	8c 84       	ldd	r8, Y+12	; 0x0c
    127c:	9b 84       	ldd	r9, Y+11	; 0x0b
    127e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1280:	b9 84       	ldd	r11, Y+9	; 0x09
    1282:	c8 84       	ldd	r12, Y+8	; 0x08
    1284:	df 80       	ldd	r13, Y+7	; 0x07
    1286:	ee 80       	ldd	r14, Y+6	; 0x06
    1288:	fd 80       	ldd	r15, Y+5	; 0x05
    128a:	0c 81       	ldd	r16, Y+4	; 0x04
    128c:	1b 81       	ldd	r17, Y+3	; 0x03
    128e:	aa 81       	ldd	r26, Y+2	; 0x02
    1290:	b9 81       	ldd	r27, Y+1	; 0x01
    1292:	ce 0f       	add	r28, r30
    1294:	d1 1d       	adc	r29, r1
    1296:	0f b6       	in	r0, 0x3f	; 63
    1298:	f8 94       	cli
    129a:	de bf       	out	0x3e, r29	; 62
    129c:	0f be       	out	0x3f, r0	; 63
    129e:	cd bf       	out	0x3d, r28	; 61
    12a0:	ed 01       	movw	r28, r26
    12a2:	08 95       	ret

000012a4 <atof>:
    12a4:	66 27       	eor	r22, r22
    12a6:	77 27       	eor	r23, r23
    12a8:	0c 94 26 0b 	jmp	0x164c	; 0x164c <strtod>

000012ac <atoi>:
    12ac:	fc 01       	movw	r30, r24
    12ae:	88 27       	eor	r24, r24
    12b0:	99 27       	eor	r25, r25
    12b2:	e8 94       	clt
    12b4:	21 91       	ld	r18, Z+
    12b6:	20 32       	cpi	r18, 0x20	; 32
    12b8:	e9 f3       	breq	.-6      	; 0x12b4 <atoi+0x8>
    12ba:	29 30       	cpi	r18, 0x09	; 9
    12bc:	10 f0       	brcs	.+4      	; 0x12c2 <atoi+0x16>
    12be:	2e 30       	cpi	r18, 0x0E	; 14
    12c0:	c8 f3       	brcs	.-14     	; 0x12b4 <atoi+0x8>
    12c2:	2b 32       	cpi	r18, 0x2B	; 43
    12c4:	41 f0       	breq	.+16     	; 0x12d6 <atoi+0x2a>
    12c6:	2d 32       	cpi	r18, 0x2D	; 45
    12c8:	39 f4       	brne	.+14     	; 0x12d8 <atoi+0x2c>
    12ca:	68 94       	set
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <atoi+0x2a>
    12ce:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <__mulhi_const_10>
    12d2:	82 0f       	add	r24, r18
    12d4:	91 1d       	adc	r25, r1
    12d6:	21 91       	ld	r18, Z+
    12d8:	20 53       	subi	r18, 0x30	; 48
    12da:	2a 30       	cpi	r18, 0x0A	; 10
    12dc:	c0 f3       	brcs	.-16     	; 0x12ce <atoi+0x22>
    12de:	1e f4       	brtc	.+6      	; 0x12e6 <atoi+0x3a>
    12e0:	90 95       	com	r25
    12e2:	81 95       	neg	r24
    12e4:	9f 4f       	sbci	r25, 0xFF	; 255
    12e6:	08 95       	ret

000012e8 <__ftoa_engine>:
    12e8:	28 30       	cpi	r18, 0x08	; 8
    12ea:	08 f0       	brcs	.+2      	; 0x12ee <__ftoa_engine+0x6>
    12ec:	27 e0       	ldi	r18, 0x07	; 7
    12ee:	33 27       	eor	r19, r19
    12f0:	da 01       	movw	r26, r20
    12f2:	99 0f       	add	r25, r25
    12f4:	31 1d       	adc	r19, r1
    12f6:	87 fd       	sbrc	r24, 7
    12f8:	91 60       	ori	r25, 0x01	; 1
    12fa:	00 96       	adiw	r24, 0x00	; 0
    12fc:	61 05       	cpc	r22, r1
    12fe:	71 05       	cpc	r23, r1
    1300:	39 f4       	brne	.+14     	; 0x1310 <__ftoa_engine+0x28>
    1302:	32 60       	ori	r19, 0x02	; 2
    1304:	2e 5f       	subi	r18, 0xFE	; 254
    1306:	3d 93       	st	X+, r19
    1308:	30 e3       	ldi	r19, 0x30	; 48
    130a:	2a 95       	dec	r18
    130c:	e1 f7       	brne	.-8      	; 0x1306 <__ftoa_engine+0x1e>
    130e:	08 95       	ret
    1310:	9f 3f       	cpi	r25, 0xFF	; 255
    1312:	30 f0       	brcs	.+12     	; 0x1320 <__ftoa_engine+0x38>
    1314:	80 38       	cpi	r24, 0x80	; 128
    1316:	71 05       	cpc	r23, r1
    1318:	61 05       	cpc	r22, r1
    131a:	09 f0       	breq	.+2      	; 0x131e <__ftoa_engine+0x36>
    131c:	3c 5f       	subi	r19, 0xFC	; 252
    131e:	3c 5f       	subi	r19, 0xFC	; 252
    1320:	3d 93       	st	X+, r19
    1322:	91 30       	cpi	r25, 0x01	; 1
    1324:	08 f0       	brcs	.+2      	; 0x1328 <__ftoa_engine+0x40>
    1326:	80 68       	ori	r24, 0x80	; 128
    1328:	91 1d       	adc	r25, r1
    132a:	df 93       	push	r29
    132c:	cf 93       	push	r28
    132e:	1f 93       	push	r17
    1330:	0f 93       	push	r16
    1332:	ff 92       	push	r15
    1334:	ef 92       	push	r14
    1336:	19 2f       	mov	r17, r25
    1338:	98 7f       	andi	r25, 0xF8	; 248
    133a:	96 95       	lsr	r25
    133c:	e9 2f       	mov	r30, r25
    133e:	96 95       	lsr	r25
    1340:	96 95       	lsr	r25
    1342:	e9 0f       	add	r30, r25
    1344:	ff 27       	eor	r31, r31
    1346:	ea 54       	subi	r30, 0x4A	; 74
    1348:	ff 4f       	sbci	r31, 0xFF	; 255
    134a:	99 27       	eor	r25, r25
    134c:	33 27       	eor	r19, r19
    134e:	ee 24       	eor	r14, r14
    1350:	ff 24       	eor	r15, r15
    1352:	a7 01       	movw	r20, r14
    1354:	e7 01       	movw	r28, r14
    1356:	05 90       	lpm	r0, Z+
    1358:	08 94       	sec
    135a:	07 94       	ror	r0
    135c:	28 f4       	brcc	.+10     	; 0x1368 <__ftoa_engine+0x80>
    135e:	36 0f       	add	r19, r22
    1360:	e7 1e       	adc	r14, r23
    1362:	f8 1e       	adc	r15, r24
    1364:	49 1f       	adc	r20, r25
    1366:	51 1d       	adc	r21, r1
    1368:	66 0f       	add	r22, r22
    136a:	77 1f       	adc	r23, r23
    136c:	88 1f       	adc	r24, r24
    136e:	99 1f       	adc	r25, r25
    1370:	06 94       	lsr	r0
    1372:	a1 f7       	brne	.-24     	; 0x135c <__ftoa_engine+0x74>
    1374:	05 90       	lpm	r0, Z+
    1376:	07 94       	ror	r0
    1378:	28 f4       	brcc	.+10     	; 0x1384 <__ftoa_engine+0x9c>
    137a:	e7 0e       	add	r14, r23
    137c:	f8 1e       	adc	r15, r24
    137e:	49 1f       	adc	r20, r25
    1380:	56 1f       	adc	r21, r22
    1382:	c1 1d       	adc	r28, r1
    1384:	77 0f       	add	r23, r23
    1386:	88 1f       	adc	r24, r24
    1388:	99 1f       	adc	r25, r25
    138a:	66 1f       	adc	r22, r22
    138c:	06 94       	lsr	r0
    138e:	a1 f7       	brne	.-24     	; 0x1378 <__ftoa_engine+0x90>
    1390:	05 90       	lpm	r0, Z+
    1392:	07 94       	ror	r0
    1394:	28 f4       	brcc	.+10     	; 0x13a0 <__ftoa_engine+0xb8>
    1396:	f8 0e       	add	r15, r24
    1398:	49 1f       	adc	r20, r25
    139a:	56 1f       	adc	r21, r22
    139c:	c7 1f       	adc	r28, r23
    139e:	d1 1d       	adc	r29, r1
    13a0:	88 0f       	add	r24, r24
    13a2:	99 1f       	adc	r25, r25
    13a4:	66 1f       	adc	r22, r22
    13a6:	77 1f       	adc	r23, r23
    13a8:	06 94       	lsr	r0
    13aa:	a1 f7       	brne	.-24     	; 0x1394 <__ftoa_engine+0xac>
    13ac:	05 90       	lpm	r0, Z+
    13ae:	07 94       	ror	r0
    13b0:	20 f4       	brcc	.+8      	; 0x13ba <__ftoa_engine+0xd2>
    13b2:	49 0f       	add	r20, r25
    13b4:	56 1f       	adc	r21, r22
    13b6:	c7 1f       	adc	r28, r23
    13b8:	d8 1f       	adc	r29, r24
    13ba:	99 0f       	add	r25, r25
    13bc:	66 1f       	adc	r22, r22
    13be:	77 1f       	adc	r23, r23
    13c0:	88 1f       	adc	r24, r24
    13c2:	06 94       	lsr	r0
    13c4:	a9 f7       	brne	.-22     	; 0x13b0 <__ftoa_engine+0xc8>
    13c6:	84 91       	lpm	r24, Z
    13c8:	10 95       	com	r17
    13ca:	17 70       	andi	r17, 0x07	; 7
    13cc:	41 f0       	breq	.+16     	; 0x13de <__ftoa_engine+0xf6>
    13ce:	d6 95       	lsr	r29
    13d0:	c7 95       	ror	r28
    13d2:	57 95       	ror	r21
    13d4:	47 95       	ror	r20
    13d6:	f7 94       	ror	r15
    13d8:	e7 94       	ror	r14
    13da:	1a 95       	dec	r17
    13dc:	c1 f7       	brne	.-16     	; 0x13ce <__ftoa_engine+0xe6>
    13de:	ec e5       	ldi	r30, 0x5C	; 92
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	68 94       	set
    13e4:	15 90       	lpm	r1, Z+
    13e6:	15 91       	lpm	r17, Z+
    13e8:	35 91       	lpm	r19, Z+
    13ea:	65 91       	lpm	r22, Z+
    13ec:	95 91       	lpm	r25, Z+
    13ee:	05 90       	lpm	r0, Z+
    13f0:	7f e2       	ldi	r23, 0x2F	; 47
    13f2:	73 95       	inc	r23
    13f4:	e1 18       	sub	r14, r1
    13f6:	f1 0a       	sbc	r15, r17
    13f8:	43 0b       	sbc	r20, r19
    13fa:	56 0b       	sbc	r21, r22
    13fc:	c9 0b       	sbc	r28, r25
    13fe:	d0 09       	sbc	r29, r0
    1400:	c0 f7       	brcc	.-16     	; 0x13f2 <__ftoa_engine+0x10a>
    1402:	e1 0c       	add	r14, r1
    1404:	f1 1e       	adc	r15, r17
    1406:	43 1f       	adc	r20, r19
    1408:	56 1f       	adc	r21, r22
    140a:	c9 1f       	adc	r28, r25
    140c:	d0 1d       	adc	r29, r0
    140e:	7e f4       	brtc	.+30     	; 0x142e <__ftoa_engine+0x146>
    1410:	70 33       	cpi	r23, 0x30	; 48
    1412:	11 f4       	brne	.+4      	; 0x1418 <__ftoa_engine+0x130>
    1414:	8a 95       	dec	r24
    1416:	e6 cf       	rjmp	.-52     	; 0x13e4 <__ftoa_engine+0xfc>
    1418:	e8 94       	clt
    141a:	01 50       	subi	r16, 0x01	; 1
    141c:	30 f0       	brcs	.+12     	; 0x142a <__ftoa_engine+0x142>
    141e:	08 0f       	add	r16, r24
    1420:	0a f4       	brpl	.+2      	; 0x1424 <__ftoa_engine+0x13c>
    1422:	00 27       	eor	r16, r16
    1424:	02 17       	cp	r16, r18
    1426:	08 f4       	brcc	.+2      	; 0x142a <__ftoa_engine+0x142>
    1428:	20 2f       	mov	r18, r16
    142a:	23 95       	inc	r18
    142c:	02 2f       	mov	r16, r18
    142e:	7a 33       	cpi	r23, 0x3A	; 58
    1430:	28 f0       	brcs	.+10     	; 0x143c <__ftoa_engine+0x154>
    1432:	79 e3       	ldi	r23, 0x39	; 57
    1434:	7d 93       	st	X+, r23
    1436:	2a 95       	dec	r18
    1438:	e9 f7       	brne	.-6      	; 0x1434 <__ftoa_engine+0x14c>
    143a:	10 c0       	rjmp	.+32     	; 0x145c <__ftoa_engine+0x174>
    143c:	7d 93       	st	X+, r23
    143e:	2a 95       	dec	r18
    1440:	89 f6       	brne	.-94     	; 0x13e4 <__ftoa_engine+0xfc>
    1442:	06 94       	lsr	r0
    1444:	97 95       	ror	r25
    1446:	67 95       	ror	r22
    1448:	37 95       	ror	r19
    144a:	17 95       	ror	r17
    144c:	17 94       	ror	r1
    144e:	e1 18       	sub	r14, r1
    1450:	f1 0a       	sbc	r15, r17
    1452:	43 0b       	sbc	r20, r19
    1454:	56 0b       	sbc	r21, r22
    1456:	c9 0b       	sbc	r28, r25
    1458:	d0 09       	sbc	r29, r0
    145a:	98 f0       	brcs	.+38     	; 0x1482 <__ftoa_engine+0x19a>
    145c:	23 95       	inc	r18
    145e:	7e 91       	ld	r23, -X
    1460:	73 95       	inc	r23
    1462:	7a 33       	cpi	r23, 0x3A	; 58
    1464:	08 f0       	brcs	.+2      	; 0x1468 <__ftoa_engine+0x180>
    1466:	70 e3       	ldi	r23, 0x30	; 48
    1468:	7c 93       	st	X, r23
    146a:	20 13       	cpse	r18, r16
    146c:	b8 f7       	brcc	.-18     	; 0x145c <__ftoa_engine+0x174>
    146e:	7e 91       	ld	r23, -X
    1470:	70 61       	ori	r23, 0x10	; 16
    1472:	7d 93       	st	X+, r23
    1474:	30 f0       	brcs	.+12     	; 0x1482 <__ftoa_engine+0x19a>
    1476:	83 95       	inc	r24
    1478:	71 e3       	ldi	r23, 0x31	; 49
    147a:	7d 93       	st	X+, r23
    147c:	70 e3       	ldi	r23, 0x30	; 48
    147e:	2a 95       	dec	r18
    1480:	e1 f7       	brne	.-8      	; 0x147a <__ftoa_engine+0x192>
    1482:	11 24       	eor	r1, r1
    1484:	ef 90       	pop	r14
    1486:	ff 90       	pop	r15
    1488:	0f 91       	pop	r16
    148a:	1f 91       	pop	r17
    148c:	cf 91       	pop	r28
    148e:	df 91       	pop	r29
    1490:	99 27       	eor	r25, r25
    1492:	87 fd       	sbrc	r24, 7
    1494:	90 95       	com	r25
    1496:	08 95       	ret

00001498 <strnlen_P>:
    1498:	fc 01       	movw	r30, r24
    149a:	05 90       	lpm	r0, Z+
    149c:	61 50       	subi	r22, 0x01	; 1
    149e:	70 40       	sbci	r23, 0x00	; 0
    14a0:	01 10       	cpse	r0, r1
    14a2:	d8 f7       	brcc	.-10     	; 0x149a <strnlen_P+0x2>
    14a4:	80 95       	com	r24
    14a6:	90 95       	com	r25
    14a8:	8e 0f       	add	r24, r30
    14aa:	9f 1f       	adc	r25, r31
    14ac:	08 95       	ret

000014ae <strnlen>:
    14ae:	fc 01       	movw	r30, r24
    14b0:	61 50       	subi	r22, 0x01	; 1
    14b2:	70 40       	sbci	r23, 0x00	; 0
    14b4:	01 90       	ld	r0, Z+
    14b6:	01 10       	cpse	r0, r1
    14b8:	d8 f7       	brcc	.-10     	; 0x14b0 <strnlen+0x2>
    14ba:	80 95       	com	r24
    14bc:	90 95       	com	r25
    14be:	8e 0f       	add	r24, r30
    14c0:	9f 1f       	adc	r25, r31
    14c2:	08 95       	ret

000014c4 <__mulhi_const_10>:
    14c4:	7a e0       	ldi	r23, 0x0A	; 10
    14c6:	97 9f       	mul	r25, r23
    14c8:	90 2d       	mov	r25, r0
    14ca:	87 9f       	mul	r24, r23
    14cc:	80 2d       	mov	r24, r0
    14ce:	91 0d       	add	r25, r1
    14d0:	11 24       	eor	r1, r1
    14d2:	08 95       	ret

000014d4 <fputc>:
    14d4:	0f 93       	push	r16
    14d6:	1f 93       	push	r17
    14d8:	cf 93       	push	r28
    14da:	df 93       	push	r29
    14dc:	fb 01       	movw	r30, r22
    14de:	23 81       	ldd	r18, Z+3	; 0x03
    14e0:	21 fd       	sbrc	r18, 1
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <fputc+0x16>
    14e4:	8f ef       	ldi	r24, 0xFF	; 255
    14e6:	9f ef       	ldi	r25, 0xFF	; 255
    14e8:	2c c0       	rjmp	.+88     	; 0x1542 <fputc+0x6e>
    14ea:	22 ff       	sbrs	r18, 2
    14ec:	16 c0       	rjmp	.+44     	; 0x151a <fputc+0x46>
    14ee:	46 81       	ldd	r20, Z+6	; 0x06
    14f0:	57 81       	ldd	r21, Z+7	; 0x07
    14f2:	24 81       	ldd	r18, Z+4	; 0x04
    14f4:	35 81       	ldd	r19, Z+5	; 0x05
    14f6:	42 17       	cp	r20, r18
    14f8:	53 07       	cpc	r21, r19
    14fa:	44 f4       	brge	.+16     	; 0x150c <fputc+0x38>
    14fc:	a0 81       	ld	r26, Z
    14fe:	b1 81       	ldd	r27, Z+1	; 0x01
    1500:	9d 01       	movw	r18, r26
    1502:	2f 5f       	subi	r18, 0xFF	; 255
    1504:	3f 4f       	sbci	r19, 0xFF	; 255
    1506:	31 83       	std	Z+1, r19	; 0x01
    1508:	20 83       	st	Z, r18
    150a:	8c 93       	st	X, r24
    150c:	26 81       	ldd	r18, Z+6	; 0x06
    150e:	37 81       	ldd	r19, Z+7	; 0x07
    1510:	2f 5f       	subi	r18, 0xFF	; 255
    1512:	3f 4f       	sbci	r19, 0xFF	; 255
    1514:	37 83       	std	Z+7, r19	; 0x07
    1516:	26 83       	std	Z+6, r18	; 0x06
    1518:	14 c0       	rjmp	.+40     	; 0x1542 <fputc+0x6e>
    151a:	8b 01       	movw	r16, r22
    151c:	ec 01       	movw	r28, r24
    151e:	fb 01       	movw	r30, r22
    1520:	00 84       	ldd	r0, Z+8	; 0x08
    1522:	f1 85       	ldd	r31, Z+9	; 0x09
    1524:	e0 2d       	mov	r30, r0
    1526:	09 95       	icall
    1528:	89 2b       	or	r24, r25
    152a:	e1 f6       	brne	.-72     	; 0x14e4 <fputc+0x10>
    152c:	d8 01       	movw	r26, r16
    152e:	16 96       	adiw	r26, 0x06	; 6
    1530:	8d 91       	ld	r24, X+
    1532:	9c 91       	ld	r25, X
    1534:	17 97       	sbiw	r26, 0x07	; 7
    1536:	01 96       	adiw	r24, 0x01	; 1
    1538:	17 96       	adiw	r26, 0x07	; 7
    153a:	9c 93       	st	X, r25
    153c:	8e 93       	st	-X, r24
    153e:	16 97       	sbiw	r26, 0x06	; 6
    1540:	ce 01       	movw	r24, r28
    1542:	df 91       	pop	r29
    1544:	cf 91       	pop	r28
    1546:	1f 91       	pop	r17
    1548:	0f 91       	pop	r16
    154a:	08 95       	ret

0000154c <sprintf>:
    154c:	ae e0       	ldi	r26, 0x0E	; 14
    154e:	b0 e0       	ldi	r27, 0x00	; 0
    1550:	ec ea       	ldi	r30, 0xAC	; 172
    1552:	fa e0       	ldi	r31, 0x0A	; 10
    1554:	0c 94 29 09 	jmp	0x1252	; 0x1252 <__prologue_saves__+0x1c>
    1558:	0d 89       	ldd	r16, Y+21	; 0x15
    155a:	1e 89       	ldd	r17, Y+22	; 0x16
    155c:	86 e0       	ldi	r24, 0x06	; 6
    155e:	8c 83       	std	Y+4, r24	; 0x04
    1560:	1a 83       	std	Y+2, r17	; 0x02
    1562:	09 83       	std	Y+1, r16	; 0x01
    1564:	8f ef       	ldi	r24, 0xFF	; 255
    1566:	9f e7       	ldi	r25, 0x7F	; 127
    1568:	9e 83       	std	Y+6, r25	; 0x06
    156a:	8d 83       	std	Y+5, r24	; 0x05
    156c:	ae 01       	movw	r20, r28
    156e:	47 5e       	subi	r20, 0xE7	; 231
    1570:	5f 4f       	sbci	r21, 0xFF	; 255
    1572:	6f 89       	ldd	r22, Y+23	; 0x17
    1574:	78 8d       	ldd	r23, Y+24	; 0x18
    1576:	ce 01       	movw	r24, r28
    1578:	01 96       	adiw	r24, 0x01	; 1
    157a:	0e 94 9e 05 	call	0xb3c	; 0xb3c <vfprintf>
    157e:	ef 81       	ldd	r30, Y+7	; 0x07
    1580:	f8 85       	ldd	r31, Y+8	; 0x08
    1582:	e0 0f       	add	r30, r16
    1584:	f1 1f       	adc	r31, r17
    1586:	10 82       	st	Z, r1
    1588:	2e 96       	adiw	r28, 0x0e	; 14
    158a:	e4 e0       	ldi	r30, 0x04	; 4
    158c:	0c 94 45 09 	jmp	0x128a	; 0x128a <__epilogue_restores__+0x1c>

00001590 <__ultoa_invert>:
    1590:	fa 01       	movw	r30, r20
    1592:	aa 27       	eor	r26, r26
    1594:	28 30       	cpi	r18, 0x08	; 8
    1596:	51 f1       	breq	.+84     	; 0x15ec <__ultoa_invert+0x5c>
    1598:	20 31       	cpi	r18, 0x10	; 16
    159a:	81 f1       	breq	.+96     	; 0x15fc <__ultoa_invert+0x6c>
    159c:	e8 94       	clt
    159e:	6f 93       	push	r22
    15a0:	6e 7f       	andi	r22, 0xFE	; 254
    15a2:	6e 5f       	subi	r22, 0xFE	; 254
    15a4:	7f 4f       	sbci	r23, 0xFF	; 255
    15a6:	8f 4f       	sbci	r24, 0xFF	; 255
    15a8:	9f 4f       	sbci	r25, 0xFF	; 255
    15aa:	af 4f       	sbci	r26, 0xFF	; 255
    15ac:	b1 e0       	ldi	r27, 0x01	; 1
    15ae:	3e d0       	rcall	.+124    	; 0x162c <__ultoa_invert+0x9c>
    15b0:	b4 e0       	ldi	r27, 0x04	; 4
    15b2:	3c d0       	rcall	.+120    	; 0x162c <__ultoa_invert+0x9c>
    15b4:	67 0f       	add	r22, r23
    15b6:	78 1f       	adc	r23, r24
    15b8:	89 1f       	adc	r24, r25
    15ba:	9a 1f       	adc	r25, r26
    15bc:	a1 1d       	adc	r26, r1
    15be:	68 0f       	add	r22, r24
    15c0:	79 1f       	adc	r23, r25
    15c2:	8a 1f       	adc	r24, r26
    15c4:	91 1d       	adc	r25, r1
    15c6:	a1 1d       	adc	r26, r1
    15c8:	6a 0f       	add	r22, r26
    15ca:	71 1d       	adc	r23, r1
    15cc:	81 1d       	adc	r24, r1
    15ce:	91 1d       	adc	r25, r1
    15d0:	a1 1d       	adc	r26, r1
    15d2:	20 d0       	rcall	.+64     	; 0x1614 <__ultoa_invert+0x84>
    15d4:	09 f4       	brne	.+2      	; 0x15d8 <__ultoa_invert+0x48>
    15d6:	68 94       	set
    15d8:	3f 91       	pop	r19
    15da:	2a e0       	ldi	r18, 0x0A	; 10
    15dc:	26 9f       	mul	r18, r22
    15de:	11 24       	eor	r1, r1
    15e0:	30 19       	sub	r19, r0
    15e2:	30 5d       	subi	r19, 0xD0	; 208
    15e4:	31 93       	st	Z+, r19
    15e6:	de f6       	brtc	.-74     	; 0x159e <__ultoa_invert+0xe>
    15e8:	cf 01       	movw	r24, r30
    15ea:	08 95       	ret
    15ec:	46 2f       	mov	r20, r22
    15ee:	47 70       	andi	r20, 0x07	; 7
    15f0:	40 5d       	subi	r20, 0xD0	; 208
    15f2:	41 93       	st	Z+, r20
    15f4:	b3 e0       	ldi	r27, 0x03	; 3
    15f6:	0f d0       	rcall	.+30     	; 0x1616 <__ultoa_invert+0x86>
    15f8:	c9 f7       	brne	.-14     	; 0x15ec <__ultoa_invert+0x5c>
    15fa:	f6 cf       	rjmp	.-20     	; 0x15e8 <__ultoa_invert+0x58>
    15fc:	46 2f       	mov	r20, r22
    15fe:	4f 70       	andi	r20, 0x0F	; 15
    1600:	40 5d       	subi	r20, 0xD0	; 208
    1602:	4a 33       	cpi	r20, 0x3A	; 58
    1604:	18 f0       	brcs	.+6      	; 0x160c <__ultoa_invert+0x7c>
    1606:	49 5d       	subi	r20, 0xD9	; 217
    1608:	31 fd       	sbrc	r19, 1
    160a:	40 52       	subi	r20, 0x20	; 32
    160c:	41 93       	st	Z+, r20
    160e:	02 d0       	rcall	.+4      	; 0x1614 <__ultoa_invert+0x84>
    1610:	a9 f7       	brne	.-22     	; 0x15fc <__ultoa_invert+0x6c>
    1612:	ea cf       	rjmp	.-44     	; 0x15e8 <__ultoa_invert+0x58>
    1614:	b4 e0       	ldi	r27, 0x04	; 4
    1616:	a6 95       	lsr	r26
    1618:	97 95       	ror	r25
    161a:	87 95       	ror	r24
    161c:	77 95       	ror	r23
    161e:	67 95       	ror	r22
    1620:	ba 95       	dec	r27
    1622:	c9 f7       	brne	.-14     	; 0x1616 <__ultoa_invert+0x86>
    1624:	00 97       	sbiw	r24, 0x00	; 0
    1626:	61 05       	cpc	r22, r1
    1628:	71 05       	cpc	r23, r1
    162a:	08 95       	ret
    162c:	9b 01       	movw	r18, r22
    162e:	ac 01       	movw	r20, r24
    1630:	0a 2e       	mov	r0, r26
    1632:	06 94       	lsr	r0
    1634:	57 95       	ror	r21
    1636:	47 95       	ror	r20
    1638:	37 95       	ror	r19
    163a:	27 95       	ror	r18
    163c:	ba 95       	dec	r27
    163e:	c9 f7       	brne	.-14     	; 0x1632 <__ultoa_invert+0xa2>
    1640:	62 0f       	add	r22, r18
    1642:	73 1f       	adc	r23, r19
    1644:	84 1f       	adc	r24, r20
    1646:	95 1f       	adc	r25, r21
    1648:	a0 1d       	adc	r26, r0
    164a:	08 95       	ret

0000164c <strtod>:
    164c:	a0 e0       	ldi	r26, 0x00	; 0
    164e:	b0 e0       	ldi	r27, 0x00	; 0
    1650:	ec e2       	ldi	r30, 0x2C	; 44
    1652:	fb e0       	ldi	r31, 0x0B	; 11
    1654:	0c 94 21 09 	jmp	0x1242	; 0x1242 <__prologue_saves__+0xc>
    1658:	ec 01       	movw	r28, r24
    165a:	6b 01       	movw	r12, r22
    165c:	61 15       	cp	r22, r1
    165e:	71 05       	cpc	r23, r1
    1660:	19 f0       	breq	.+6      	; 0x1668 <strtod+0x1c>
    1662:	fb 01       	movw	r30, r22
    1664:	91 83       	std	Z+1, r25	; 0x01
    1666:	80 83       	st	Z, r24
    1668:	7e 01       	movw	r14, r28
    166a:	ff ef       	ldi	r31, 0xFF	; 255
    166c:	ef 1a       	sub	r14, r31
    166e:	ff 0a       	sbc	r15, r31
    1670:	08 81       	ld	r16, Y
    1672:	80 2f       	mov	r24, r16
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <isspace>
    167a:	89 2b       	or	r24, r25
    167c:	11 f0       	breq	.+4      	; 0x1682 <strtod+0x36>
    167e:	e7 01       	movw	r28, r14
    1680:	f3 cf       	rjmp	.-26     	; 0x1668 <strtod+0x1c>
    1682:	0d 32       	cpi	r16, 0x2D	; 45
    1684:	39 f4       	brne	.+14     	; 0x1694 <strtod+0x48>
    1686:	7e 01       	movw	r14, r28
    1688:	82 e0       	ldi	r24, 0x02	; 2
    168a:	e8 0e       	add	r14, r24
    168c:	f1 1c       	adc	r15, r1
    168e:	09 81       	ldd	r16, Y+1	; 0x01
    1690:	11 e0       	ldi	r17, 0x01	; 1
    1692:	08 c0       	rjmp	.+16     	; 0x16a4 <strtod+0x58>
    1694:	0b 32       	cpi	r16, 0x2B	; 43
    1696:	29 f4       	brne	.+10     	; 0x16a2 <strtod+0x56>
    1698:	7e 01       	movw	r14, r28
    169a:	92 e0       	ldi	r25, 0x02	; 2
    169c:	e9 0e       	add	r14, r25
    169e:	f1 1c       	adc	r15, r1
    16a0:	09 81       	ldd	r16, Y+1	; 0x01
    16a2:	10 e0       	ldi	r17, 0x00	; 0
    16a4:	e7 01       	movw	r28, r14
    16a6:	21 97       	sbiw	r28, 0x01	; 1
    16a8:	43 e0       	ldi	r20, 0x03	; 3
    16aa:	50 e0       	ldi	r21, 0x00	; 0
    16ac:	6e e5       	ldi	r22, 0x5E	; 94
    16ae:	71 e0       	ldi	r23, 0x01	; 1
    16b0:	ce 01       	movw	r24, r28
    16b2:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <strncasecmp_P>
    16b6:	89 2b       	or	r24, r25
    16b8:	c1 f4       	brne	.+48     	; 0x16ea <strtod+0x9e>
    16ba:	23 96       	adiw	r28, 0x03	; 3
    16bc:	45 e0       	ldi	r20, 0x05	; 5
    16be:	50 e0       	ldi	r21, 0x00	; 0
    16c0:	69 e5       	ldi	r22, 0x59	; 89
    16c2:	71 e0       	ldi	r23, 0x01	; 1
    16c4:	ce 01       	movw	r24, r28
    16c6:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <strncasecmp_P>
    16ca:	89 2b       	or	r24, r25
    16cc:	09 f4       	brne	.+2      	; 0x16d0 <strtod+0x84>
    16ce:	25 96       	adiw	r28, 0x05	; 5
    16d0:	c1 14       	cp	r12, r1
    16d2:	d1 04       	cpc	r13, r1
    16d4:	19 f0       	breq	.+6      	; 0x16dc <strtod+0x90>
    16d6:	f6 01       	movw	r30, r12
    16d8:	d1 83       	std	Z+1, r29	; 0x01
    16da:	c0 83       	st	Z, r28
    16dc:	11 11       	cpse	r17, r1
    16de:	f6 c0       	rjmp	.+492    	; 0x18cc <strtod+0x280>
    16e0:	60 e0       	ldi	r22, 0x00	; 0
    16e2:	70 e0       	ldi	r23, 0x00	; 0
    16e4:	80 e8       	ldi	r24, 0x80	; 128
    16e6:	9f e7       	ldi	r25, 0x7F	; 127
    16e8:	fa c0       	rjmp	.+500    	; 0x18de <strtod+0x292>
    16ea:	43 e0       	ldi	r20, 0x03	; 3
    16ec:	50 e0       	ldi	r21, 0x00	; 0
    16ee:	66 e5       	ldi	r22, 0x56	; 86
    16f0:	71 e0       	ldi	r23, 0x01	; 1
    16f2:	ce 01       	movw	r24, r28
    16f4:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <strncasecmp_P>
    16f8:	89 2b       	or	r24, r25
    16fa:	59 f4       	brne	.+22     	; 0x1712 <strtod+0xc6>
    16fc:	c1 14       	cp	r12, r1
    16fe:	d1 04       	cpc	r13, r1
    1700:	09 f4       	brne	.+2      	; 0x1704 <strtod+0xb8>
    1702:	e9 c0       	rjmp	.+466    	; 0x18d6 <strtod+0x28a>
    1704:	f2 e0       	ldi	r31, 0x02	; 2
    1706:	ef 0e       	add	r14, r31
    1708:	f1 1c       	adc	r15, r1
    170a:	f6 01       	movw	r30, r12
    170c:	f1 82       	std	Z+1, r15	; 0x01
    170e:	e0 82       	st	Z, r14
    1710:	e2 c0       	rjmp	.+452    	; 0x18d6 <strtod+0x28a>
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	a9 01       	movw	r20, r18
    1718:	c0 e0       	ldi	r28, 0x00	; 0
    171a:	d0 e0       	ldi	r29, 0x00	; 0
    171c:	f7 01       	movw	r30, r14
    171e:	80 ed       	ldi	r24, 0xD0	; 208
    1720:	a8 2e       	mov	r10, r24
    1722:	a0 0e       	add	r10, r16
    1724:	89 e0       	ldi	r24, 0x09	; 9
    1726:	8a 15       	cp	r24, r10
    1728:	30 f1       	brcs	.+76     	; 0x1776 <strtod+0x12a>
    172a:	91 2f       	mov	r25, r17
    172c:	92 60       	ori	r25, 0x02	; 2
    172e:	b9 2e       	mov	r11, r25
    1730:	81 2f       	mov	r24, r17
    1732:	88 70       	andi	r24, 0x08	; 8
    1734:	12 ff       	sbrs	r17, 2
    1736:	04 c0       	rjmp	.+8      	; 0x1740 <strtod+0xf4>
    1738:	81 11       	cpse	r24, r1
    173a:	24 c0       	rjmp	.+72     	; 0x1784 <strtod+0x138>
    173c:	21 96       	adiw	r28, 0x01	; 1
    173e:	22 c0       	rjmp	.+68     	; 0x1784 <strtod+0x138>
    1740:	81 11       	cpse	r24, r1
    1742:	21 97       	sbiw	r28, 0x01	; 1
    1744:	a5 e0       	ldi	r26, 0x05	; 5
    1746:	b0 e0       	ldi	r27, 0x00	; 0
    1748:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__muluhisi3>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	88 0f       	add	r24, r24
    1752:	99 1f       	adc	r25, r25
    1754:	aa 1f       	adc	r26, r26
    1756:	bb 1f       	adc	r27, r27
    1758:	9c 01       	movw	r18, r24
    175a:	ad 01       	movw	r20, r26
    175c:	2a 0d       	add	r18, r10
    175e:	31 1d       	adc	r19, r1
    1760:	41 1d       	adc	r20, r1
    1762:	51 1d       	adc	r21, r1
    1764:	28 39       	cpi	r18, 0x98	; 152
    1766:	89 e9       	ldi	r24, 0x99	; 153
    1768:	38 07       	cpc	r19, r24
    176a:	48 07       	cpc	r20, r24
    176c:	89 e1       	ldi	r24, 0x19	; 25
    176e:	58 07       	cpc	r21, r24
    1770:	48 f0       	brcs	.+18     	; 0x1784 <strtod+0x138>
    1772:	16 60       	ori	r17, 0x06	; 6
    1774:	06 c0       	rjmp	.+12     	; 0x1782 <strtod+0x136>
    1776:	9e ef       	ldi	r25, 0xFE	; 254
    1778:	a9 12       	cpse	r10, r25
    177a:	0a c0       	rjmp	.+20     	; 0x1790 <strtod+0x144>
    177c:	13 fd       	sbrc	r17, 3
    177e:	40 c0       	rjmp	.+128    	; 0x1800 <strtod+0x1b4>
    1780:	18 60       	ori	r17, 0x08	; 8
    1782:	b1 2e       	mov	r11, r17
    1784:	8f ef       	ldi	r24, 0xFF	; 255
    1786:	e8 1a       	sub	r14, r24
    1788:	f8 0a       	sbc	r15, r24
    178a:	00 81       	ld	r16, Z
    178c:	1b 2d       	mov	r17, r11
    178e:	c6 cf       	rjmp	.-116    	; 0x171c <strtod+0xd0>
    1790:	80 2f       	mov	r24, r16
    1792:	8f 7d       	andi	r24, 0xDF	; 223
    1794:	85 34       	cpi	r24, 0x45	; 69
    1796:	a1 f5       	brne	.+104    	; 0x1800 <strtod+0x1b4>
    1798:	80 81       	ld	r24, Z
    179a:	8d 32       	cpi	r24, 0x2D	; 45
    179c:	11 f4       	brne	.+4      	; 0x17a2 <strtod+0x156>
    179e:	10 61       	ori	r17, 0x10	; 16
    17a0:	06 c0       	rjmp	.+12     	; 0x17ae <strtod+0x162>
    17a2:	8b 32       	cpi	r24, 0x2B	; 43
    17a4:	21 f0       	breq	.+8      	; 0x17ae <strtod+0x162>
    17a6:	31 96       	adiw	r30, 0x01	; 1
    17a8:	61 e0       	ldi	r22, 0x01	; 1
    17aa:	70 e0       	ldi	r23, 0x00	; 0
    17ac:	04 c0       	rjmp	.+8      	; 0x17b6 <strtod+0x16a>
    17ae:	81 81       	ldd	r24, Z+1	; 0x01
    17b0:	32 96       	adiw	r30, 0x02	; 2
    17b2:	62 e0       	ldi	r22, 0x02	; 2
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	80 53       	subi	r24, 0x30	; 48
    17b8:	8a 30       	cpi	r24, 0x0A	; 10
    17ba:	18 f0       	brcs	.+6      	; 0x17c2 <strtod+0x176>
    17bc:	e6 1b       	sub	r30, r22
    17be:	f7 0b       	sbc	r31, r23
    17c0:	1f c0       	rjmp	.+62     	; 0x1800 <strtod+0x1b4>
    17c2:	60 e0       	ldi	r22, 0x00	; 0
    17c4:	70 e0       	ldi	r23, 0x00	; 0
    17c6:	60 38       	cpi	r22, 0x80	; 128
    17c8:	9c e0       	ldi	r25, 0x0C	; 12
    17ca:	79 07       	cpc	r23, r25
    17cc:	5c f4       	brge	.+22     	; 0x17e4 <strtod+0x198>
    17ce:	db 01       	movw	r26, r22
    17d0:	aa 0f       	add	r26, r26
    17d2:	bb 1f       	adc	r27, r27
    17d4:	aa 0f       	add	r26, r26
    17d6:	bb 1f       	adc	r27, r27
    17d8:	6a 0f       	add	r22, r26
    17da:	7b 1f       	adc	r23, r27
    17dc:	66 0f       	add	r22, r22
    17de:	77 1f       	adc	r23, r23
    17e0:	68 0f       	add	r22, r24
    17e2:	71 1d       	adc	r23, r1
    17e4:	31 96       	adiw	r30, 0x01	; 1
    17e6:	df 01       	movw	r26, r30
    17e8:	11 97       	sbiw	r26, 0x01	; 1
    17ea:	8c 91       	ld	r24, X
    17ec:	80 53       	subi	r24, 0x30	; 48
    17ee:	8a 30       	cpi	r24, 0x0A	; 10
    17f0:	50 f3       	brcs	.-44     	; 0x17c6 <strtod+0x17a>
    17f2:	14 ff       	sbrs	r17, 4
    17f4:	03 c0       	rjmp	.+6      	; 0x17fc <strtod+0x1b0>
    17f6:	71 95       	neg	r23
    17f8:	61 95       	neg	r22
    17fa:	71 09       	sbc	r23, r1
    17fc:	c6 0f       	add	r28, r22
    17fe:	d7 1f       	adc	r29, r23
    1800:	11 ff       	sbrs	r17, 1
    1802:	08 c0       	rjmp	.+16     	; 0x1814 <strtod+0x1c8>
    1804:	c1 14       	cp	r12, r1
    1806:	d1 04       	cpc	r13, r1
    1808:	29 f0       	breq	.+10     	; 0x1814 <strtod+0x1c8>
    180a:	cf 01       	movw	r24, r30
    180c:	01 97       	sbiw	r24, 0x01	; 1
    180e:	f6 01       	movw	r30, r12
    1810:	91 83       	std	Z+1, r25	; 0x01
    1812:	80 83       	st	Z, r24
    1814:	ca 01       	movw	r24, r20
    1816:	b9 01       	movw	r22, r18
    1818:	0e 94 a3 04 	call	0x946	; 0x946 <__floatunsisf>
    181c:	21 2f       	mov	r18, r17
    181e:	23 70       	andi	r18, 0x03	; 3
    1820:	23 30       	cpi	r18, 0x03	; 3
    1822:	19 f0       	breq	.+6      	; 0x182a <strtod+0x1de>
    1824:	4b 01       	movw	r8, r22
    1826:	5c 01       	movw	r10, r24
    1828:	06 c0       	rjmp	.+12     	; 0x1836 <strtod+0x1ea>
    182a:	4b 01       	movw	r8, r22
    182c:	5c 01       	movw	r10, r24
    182e:	b7 fa       	bst	r11, 7
    1830:	b0 94       	com	r11
    1832:	b7 f8       	bld	r11, 7
    1834:	b0 94       	com	r11
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	a9 01       	movw	r20, r18
    183c:	c5 01       	movw	r24, r10
    183e:	b4 01       	movw	r22, r8
    1840:	0e 94 95 0c 	call	0x192a	; 0x192a <__cmpsf2>
    1844:	88 23       	and	r24, r24
    1846:	09 f4       	brne	.+2      	; 0x184a <strtod+0x1fe>
    1848:	3e c0       	rjmp	.+124    	; 0x18c6 <strtod+0x27a>
    184a:	d7 ff       	sbrs	r29, 7
    184c:	06 c0       	rjmp	.+12     	; 0x185a <strtod+0x20e>
    184e:	d1 95       	neg	r29
    1850:	c1 95       	neg	r28
    1852:	d1 09       	sbc	r29, r1
    1854:	05 e7       	ldi	r16, 0x75	; 117
    1856:	11 e0       	ldi	r17, 0x01	; 1
    1858:	02 c0       	rjmp	.+4      	; 0x185e <strtod+0x212>
    185a:	0d e8       	ldi	r16, 0x8D	; 141
    185c:	11 e0       	ldi	r17, 0x01	; 1
    185e:	68 01       	movw	r12, r16
    1860:	f8 e1       	ldi	r31, 0x18	; 24
    1862:	cf 1a       	sub	r12, r31
    1864:	d1 08       	sbc	r13, r1
    1866:	90 e2       	ldi	r25, 0x20	; 32
    1868:	e9 2e       	mov	r14, r25
    186a:	f1 2c       	mov	r15, r1
    186c:	ce 15       	cp	r28, r14
    186e:	df 05       	cpc	r29, r15
    1870:	74 f0       	brlt	.+28     	; 0x188e <strtod+0x242>
    1872:	f8 01       	movw	r30, r16
    1874:	25 91       	lpm	r18, Z+
    1876:	35 91       	lpm	r19, Z+
    1878:	45 91       	lpm	r20, Z+
    187a:	54 91       	lpm	r21, Z
    187c:	c5 01       	movw	r24, r10
    187e:	b4 01       	movw	r22, r8
    1880:	0e 94 31 05 	call	0xa62	; 0xa62 <__mulsf3>
    1884:	4b 01       	movw	r8, r22
    1886:	5c 01       	movw	r10, r24
    1888:	ce 19       	sub	r28, r14
    188a:	df 09       	sbc	r29, r15
    188c:	ef cf       	rjmp	.-34     	; 0x186c <strtod+0x220>
    188e:	04 50       	subi	r16, 0x04	; 4
    1890:	11 09       	sbc	r17, r1
    1892:	f5 94       	asr	r15
    1894:	e7 94       	ror	r14
    1896:	0c 15       	cp	r16, r12
    1898:	1d 05       	cpc	r17, r13
    189a:	41 f7       	brne	.-48     	; 0x186c <strtod+0x220>
    189c:	8a 2d       	mov	r24, r10
    189e:	88 0f       	add	r24, r24
    18a0:	8b 2d       	mov	r24, r11
    18a2:	88 1f       	adc	r24, r24
    18a4:	8f 3f       	cpi	r24, 0xFF	; 255
    18a6:	49 f0       	breq	.+18     	; 0x18ba <strtod+0x26e>
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	a9 01       	movw	r20, r18
    18ae:	c5 01       	movw	r24, r10
    18b0:	b4 01       	movw	r22, r8
    18b2:	0e 94 95 0c 	call	0x192a	; 0x192a <__cmpsf2>
    18b6:	81 11       	cpse	r24, r1
    18b8:	06 c0       	rjmp	.+12     	; 0x18c6 <strtod+0x27a>
    18ba:	82 e2       	ldi	r24, 0x22	; 34
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <errno+0x1>
    18c2:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <errno>
    18c6:	c5 01       	movw	r24, r10
    18c8:	b4 01       	movw	r22, r8
    18ca:	09 c0       	rjmp	.+18     	; 0x18de <strtod+0x292>
    18cc:	60 e0       	ldi	r22, 0x00	; 0
    18ce:	70 e0       	ldi	r23, 0x00	; 0
    18d0:	80 e8       	ldi	r24, 0x80	; 128
    18d2:	9f ef       	ldi	r25, 0xFF	; 255
    18d4:	04 c0       	rjmp	.+8      	; 0x18de <strtod+0x292>
    18d6:	60 e0       	ldi	r22, 0x00	; 0
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	80 ec       	ldi	r24, 0xC0	; 192
    18dc:	9f e7       	ldi	r25, 0x7F	; 127
    18de:	cd b7       	in	r28, 0x3d	; 61
    18e0:	de b7       	in	r29, 0x3e	; 62
    18e2:	ec e0       	ldi	r30, 0x0C	; 12
    18e4:	0c 94 3d 09 	jmp	0x127a	; 0x127a <__epilogue_restores__+0xc>

000018e8 <isspace>:
    18e8:	91 11       	cpse	r25, r1
    18ea:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__ctype_isfalse>
    18ee:	80 32       	cpi	r24, 0x20	; 32
    18f0:	19 f0       	breq	.+6      	; 0x18f8 <isspace+0x10>
    18f2:	89 50       	subi	r24, 0x09	; 9
    18f4:	85 50       	subi	r24, 0x05	; 5
    18f6:	c8 f7       	brcc	.-14     	; 0x18ea <isspace+0x2>
    18f8:	08 95       	ret

000018fa <strncasecmp_P>:
    18fa:	fb 01       	movw	r30, r22
    18fc:	dc 01       	movw	r26, r24
    18fe:	41 50       	subi	r20, 0x01	; 1
    1900:	50 40       	sbci	r21, 0x00	; 0
    1902:	88 f0       	brcs	.+34     	; 0x1926 <strncasecmp_P+0x2c>
    1904:	8d 91       	ld	r24, X+
    1906:	81 34       	cpi	r24, 0x41	; 65
    1908:	1c f0       	brlt	.+6      	; 0x1910 <strncasecmp_P+0x16>
    190a:	8b 35       	cpi	r24, 0x5B	; 91
    190c:	0c f4       	brge	.+2      	; 0x1910 <strncasecmp_P+0x16>
    190e:	80 5e       	subi	r24, 0xE0	; 224
    1910:	65 91       	lpm	r22, Z+
    1912:	61 34       	cpi	r22, 0x41	; 65
    1914:	1c f0       	brlt	.+6      	; 0x191c <strncasecmp_P+0x22>
    1916:	6b 35       	cpi	r22, 0x5B	; 91
    1918:	0c f4       	brge	.+2      	; 0x191c <strncasecmp_P+0x22>
    191a:	60 5e       	subi	r22, 0xE0	; 224
    191c:	86 1b       	sub	r24, r22
    191e:	61 11       	cpse	r22, r1
    1920:	71 f3       	breq	.-36     	; 0x18fe <strncasecmp_P+0x4>
    1922:	99 0b       	sbc	r25, r25
    1924:	08 95       	ret
    1926:	88 1b       	sub	r24, r24
    1928:	fc cf       	rjmp	.-8      	; 0x1922 <strncasecmp_P+0x28>

0000192a <__cmpsf2>:
    192a:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fp_cmp>
    192e:	08 f4       	brcc	.+2      	; 0x1932 <__cmpsf2+0x8>
    1930:	81 e0       	ldi	r24, 0x01	; 1
    1932:	08 95       	ret

00001934 <__fp_cmp>:
    1934:	99 0f       	add	r25, r25
    1936:	00 08       	sbc	r0, r0
    1938:	55 0f       	add	r21, r21
    193a:	aa 0b       	sbc	r26, r26
    193c:	e0 e8       	ldi	r30, 0x80	; 128
    193e:	fe ef       	ldi	r31, 0xFE	; 254
    1940:	16 16       	cp	r1, r22
    1942:	17 06       	cpc	r1, r23
    1944:	e8 07       	cpc	r30, r24
    1946:	f9 07       	cpc	r31, r25
    1948:	c0 f0       	brcs	.+48     	; 0x197a <__fp_cmp+0x46>
    194a:	12 16       	cp	r1, r18
    194c:	13 06       	cpc	r1, r19
    194e:	e4 07       	cpc	r30, r20
    1950:	f5 07       	cpc	r31, r21
    1952:	98 f0       	brcs	.+38     	; 0x197a <__fp_cmp+0x46>
    1954:	62 1b       	sub	r22, r18
    1956:	73 0b       	sbc	r23, r19
    1958:	84 0b       	sbc	r24, r20
    195a:	95 0b       	sbc	r25, r21
    195c:	39 f4       	brne	.+14     	; 0x196c <__fp_cmp+0x38>
    195e:	0a 26       	eor	r0, r26
    1960:	61 f0       	breq	.+24     	; 0x197a <__fp_cmp+0x46>
    1962:	23 2b       	or	r18, r19
    1964:	24 2b       	or	r18, r20
    1966:	25 2b       	or	r18, r21
    1968:	21 f4       	brne	.+8      	; 0x1972 <__fp_cmp+0x3e>
    196a:	08 95       	ret
    196c:	0a 26       	eor	r0, r26
    196e:	09 f4       	brne	.+2      	; 0x1972 <__fp_cmp+0x3e>
    1970:	a1 40       	sbci	r26, 0x01	; 1
    1972:	a6 95       	lsr	r26
    1974:	8f ef       	ldi	r24, 0xFF	; 255
    1976:	81 1d       	adc	r24, r1
    1978:	81 1d       	adc	r24, r1
    197a:	08 95       	ret

0000197c <__ctype_isfalse>:
    197c:	99 27       	eor	r25, r25
    197e:	88 27       	eor	r24, r24

00001980 <__ctype_istrue>:
    1980:	08 95       	ret

00001982 <__muluhisi3>:
    1982:	0e 94 cc 0c 	call	0x1998	; 0x1998 <__umulhisi3>
    1986:	a5 9f       	mul	r26, r21
    1988:	90 0d       	add	r25, r0
    198a:	b4 9f       	mul	r27, r20
    198c:	90 0d       	add	r25, r0
    198e:	a4 9f       	mul	r26, r20
    1990:	80 0d       	add	r24, r0
    1992:	91 1d       	adc	r25, r1
    1994:	11 24       	eor	r1, r1
    1996:	08 95       	ret

00001998 <__umulhisi3>:
    1998:	a2 9f       	mul	r26, r18
    199a:	b0 01       	movw	r22, r0
    199c:	b3 9f       	mul	r27, r19
    199e:	c0 01       	movw	r24, r0
    19a0:	a3 9f       	mul	r26, r19
    19a2:	70 0d       	add	r23, r0
    19a4:	81 1d       	adc	r24, r1
    19a6:	11 24       	eor	r1, r1
    19a8:	91 1d       	adc	r25, r1
    19aa:	b2 9f       	mul	r27, r18
    19ac:	70 0d       	add	r23, r0
    19ae:	81 1d       	adc	r24, r1
    19b0:	11 24       	eor	r1, r1
    19b2:	91 1d       	adc	r25, r1
    19b4:	08 95       	ret

000019b6 <_exit>:
    19b6:	f8 94       	cli

000019b8 <__stop_program>:
    19b8:	ff cf       	rjmp	.-2      	; 0x19b8 <__stop_program>
