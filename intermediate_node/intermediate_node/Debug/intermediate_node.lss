
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001bf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000230  00800060  00001bf8  00001c8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000011b  00800290  00800290  00001ebc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00001f58  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c53  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070c  00000000  00000000  00002c33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a89  00000000  00000000  0000333f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000023c  00000000  00000000  00003dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000453  00000000  00000000  00004004  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000793  00000000  00000000  00004457  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00004bea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e8 ef       	ldi	r30, 0xF8	; 248
     1a6:	fb e1       	ldi	r31, 0x1B	; 27
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a0 39       	cpi	r26, 0x90	; 144
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	a0 e9       	ldi	r26, 0x90	; 144
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	ab 3a       	cpi	r26, 0xAB	; 171
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 83 04 	call	0x906	; 0x906 <main>
     1c8:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     1d0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     1d2:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     1d4:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     1d6:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     1d8:	6d d0       	rcall	.+218    	; 0x2b4 <wait_msec>
ldi r24, 0x30
     1da:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1dc:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1de:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1e0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1e2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1e4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1e6:	70 d0       	rcall	.+224    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1e8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ea:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1ec:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ee:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1f0:	6b d0       	rcall	.+214    	; 0x2c8 <wait_usec>
pop r25
     1f2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1f4:	8f 91       	pop	r24
ldi r24, 0x30
     1f6:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1f8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1fa:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1fc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1fe:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     200:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     202:	62 d0       	rcall	.+196    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     204:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     206:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     208:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     20a:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     20c:	5d d0       	rcall	.+186    	; 0x2c8 <wait_usec>
pop r25
     20e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     210:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     212:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     214:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     216:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     218:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     21a:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     21e:	54 d0       	rcall	.+168    	; 0x2c8 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     220:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     222:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     224:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     226:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     228:	4f d0       	rcall	.+158    	; 0x2c8 <wait_usec>
pop r25
     22a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     22c:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     22e:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     230:	0f d0       	rcall	.+30     	; 0x250 <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     232:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     234:	0d d0       	rcall	.+26     	; 0x250 <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     236:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     238:	0b d0       	rcall	.+22     	; 0x250 <lcd_command_sim>
ldi r24, lo8(1530)
     23a:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     23c:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     23e:	44 d0       	rcall	.+136    	; 0x2c8 <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     240:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     242:	06 d0       	rcall	.+12     	; 0x250 <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     244:	9f 91       	pop	r25
pop r24
     246:	8f 91       	pop	r24
ret
     248:	08 95       	ret

0000024a <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     24a:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     24c:	01 d0       	rcall	.+2      	; 0x250 <lcd_command_sim>
ret
     24e:	08 95       	ret

00000250 <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     250:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     252:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     254:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     256:	06 d0       	rcall	.+12     	; 0x264 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     258:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     25a:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     25c:	35 d0       	rcall	.+106    	; 0x2c8 <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     25e:	9f 91       	pop	r25
pop r24
     260:	8f 91       	pop	r24
ret
     262:	08 95       	ret

00000264 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     264:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     266:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     268:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     26a:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     26c:	2d d0       	rcall	.+90     	; 0x2c8 <wait_usec>
pop r25
     26e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     270:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     272:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     274:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     276:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     278:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     27a:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     27c:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     27e:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     280:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     282:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     284:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     286:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     288:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     28a:	1e d0       	rcall	.+60     	; 0x2c8 <wait_usec>
pop r25
     28c:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     28e:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     290:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     292:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     294:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     296:	89 0f       	add	r24, r25
out PORTD, r24
     298:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     29a:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     29c:	93 98       	cbi	0x12, 3	; 18
ret
     29e:	08 95       	ret

000002a0 <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     2a0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     2a2:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     2a4:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     2a6:	de df       	rcall	.-68     	; 0x264 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     2a8:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     2aa:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2ac:	0d d0       	rcall	.+26     	; 0x2c8 <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     2ae:	9f 91       	pop	r25
pop r24
     2b0:	8f 91       	pop	r24
ret
     2b2:	08 95       	ret

000002b4 <wait_msec>:

.global wait_msec
wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     2b4:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     2b6:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     2b8:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     2ba:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     2bc:	05 d0       	rcall	.+10     	; 0x2c8 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     2be:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     2c0:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     2c2:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2c4:	b9 f7       	brne	.-18     	; 0x2b4 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     2c6:	08 95       	ret

000002c8 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     2c8:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2d2:	d1 f7       	brne	.-12     	; 0x2c8 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     2d4:	08 95       	ret

000002d6 <print>:


.global print
print:
rcall lcd_data_sim
     2d6:	e4 df       	rcall	.-56     	; 0x2a0 <lcd_data_sim>
     2d8:	08 95       	ret

000002da <print_string>:
    while(c!='S') {
        c=usart_receive();
    }
    while(UCSRA&(1<<RXC))
		usart_receive(); //flush ServedClient out of read buffer
}
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	ec 01       	movw	r28, r24
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	07 c0       	rjmp	.+14     	; 0x2f4 <print_string+0x1a>
     2e6:	fe 01       	movw	r30, r28
     2e8:	e8 0f       	add	r30, r24
     2ea:	f9 1f       	adc	r31, r25
     2ec:	80 81       	ld	r24, Z
     2ee:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <print>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	81 2f       	mov	r24, r17
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	fe 01       	movw	r30, r28
     2fa:	01 90       	ld	r0, Z+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <print_string+0x20>
     300:	31 97       	sbiw	r30, 0x01	; 1
     302:	ec 1b       	sub	r30, r28
     304:	fd 0b       	sbc	r31, r29
     306:	8e 17       	cp	r24, r30
     308:	9f 07       	cpc	r25, r31
     30a:	68 f3       	brcs	.-38     	; 0x2e6 <print_string+0xc>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	08 95       	ret

00000314 <usart_init>:
     314:	1b b8       	out	0x0b, r1	; 11
     316:	28 e1       	ldi	r18, 0x18	; 24
     318:	2a b9       	out	0x0a, r18	; 10
     31a:	90 bd       	out	0x20, r25	; 32
     31c:	89 b9       	out	0x09, r24	; 9
     31e:	86 e8       	ldi	r24, 0x86	; 134
     320:	80 bd       	out	0x20, r24	; 32
     322:	08 95       	ret

00000324 <usart_transmit>:
     324:	5d 9b       	sbis	0x0b, 5	; 11
     326:	fe cf       	rjmp	.-4      	; 0x324 <usart_transmit>
     328:	8c b9       	out	0x0c, r24	; 12
     32a:	08 95       	ret

0000032c <usart_receive>:
     32c:	5f 9b       	sbis	0x0b, 7	; 11
     32e:	fe cf       	rjmp	.-4      	; 0x32c <usart_receive>
     330:	8c b1       	in	r24, 0x0c	; 12
     332:	08 95       	ret

00000334 <serialWrite>:
     334:	1f 93       	push	r17
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	ec 01       	movw	r28, r24
     33c:	10 e0       	ldi	r17, 0x00	; 0
     33e:	07 c0       	rjmp	.+14     	; 0x34e <serialWrite+0x1a>
     340:	fe 01       	movw	r30, r28
     342:	e8 0f       	add	r30, r24
     344:	f9 1f       	adc	r31, r25
     346:	80 81       	ld	r24, Z
     348:	0e 94 92 01 	call	0x324	; 0x324 <usart_transmit>
     34c:	1f 5f       	subi	r17, 0xFF	; 255
     34e:	81 2f       	mov	r24, r17
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	fe 01       	movw	r30, r28
     354:	01 90       	ld	r0, Z+
     356:	00 20       	and	r0, r0
     358:	e9 f7       	brne	.-6      	; 0x354 <serialWrite+0x20>
     35a:	31 97       	sbiw	r30, 0x01	; 1
     35c:	ec 1b       	sub	r30, r28
     35e:	fd 0b       	sbc	r31, r29
     360:	8e 17       	cp	r24, r30
     362:	9f 07       	cpc	r25, r31
     364:	68 f3       	brcs	.-38     	; 0x340 <serialWrite+0xc>
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	08 95       	ret

0000036e <sendCommand>:
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	ec 01       	movw	r28, r24
     374:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>
     378:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     37c:	0c c0       	rjmp	.+24     	; 0x396 <sendCommand+0x28>
     37e:	86 34       	cpi	r24, 0x46	; 70
     380:	41 f4       	brne	.+16     	; 0x392 <sendCommand+0x24>
     382:	02 c0       	rjmp	.+4      	; 0x388 <sendCommand+0x1a>
     384:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     388:	5f 99       	sbic	0x0b, 7	; 11
     38a:	fc cf       	rjmp	.-8      	; 0x384 <sendCommand+0x16>
     38c:	ce 01       	movw	r24, r28
     38e:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>
     392:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     396:	83 35       	cpi	r24, 0x53	; 83
     398:	91 f7       	brne	.-28     	; 0x37e <sendCommand+0x10>
     39a:	02 c0       	rjmp	.+4      	; 0x3a0 <sendCommand+0x32>
     39c:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     3a0:	5f 99       	sbic	0x0b, 7	; 11
     3a2:	fc cf       	rjmp	.-8      	; 0x39c <sendCommand+0x2e>
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <printResponse>:
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	c0 e0       	ldi	r28, 0x00	; 0
     3b0:	d0 e0       	ldi	r29, 0x00	; 0
     3b2:	0a c0       	rjmp	.+20     	; 0x3c8 <printResponse+0x1e>
     3b4:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     3b8:	8a 30       	cpi	r24, 0x0A	; 10
     3ba:	09 f4       	brne	.+2      	; 0x3be <printResponse+0x14>
     3bc:	85 e5       	ldi	r24, 0x55	; 85
     3be:	fe 01       	movw	r30, r28
     3c0:	e2 5e       	subi	r30, 0xE2	; 226
     3c2:	fc 4f       	sbci	r31, 0xFC	; 252
     3c4:	80 83       	st	Z, r24
     3c6:	21 96       	adiw	r28, 0x01	; 1
     3c8:	cd 34       	cpi	r28, 0x4D	; 77
     3ca:	d1 05       	cpc	r29, r1
     3cc:	9c f3       	brlt	.-26     	; 0x3b4 <printResponse+0xa>
     3ce:	8e e1       	ldi	r24, 0x1E	; 30
     3d0:	93 e0       	ldi	r25, 0x03	; 3
     3d2:	0e 94 6d 01 	call	0x2da	; 0x2da <print_string>
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	08 95       	ret

000003dc <__vector_8>:

ISR(TIMER1_OVF_vect) {
     3dc:	1f 92       	push	r1
     3de:	0f 92       	push	r0
     3e0:	0f b6       	in	r0, 0x3f	; 63
     3e2:	0f 92       	push	r0
     3e4:	11 24       	eor	r1, r1
     3e6:	cf 92       	push	r12
     3e8:	df 92       	push	r13
     3ea:	ef 92       	push	r14
     3ec:	ff 92       	push	r15
     3ee:	0f 93       	push	r16
     3f0:	1f 93       	push	r17
     3f2:	2f 93       	push	r18
     3f4:	3f 93       	push	r19
     3f6:	4f 93       	push	r20
     3f8:	5f 93       	push	r21
     3fa:	6f 93       	push	r22
     3fc:	7f 93       	push	r23
     3fe:	8f 93       	push	r24
     400:	9f 93       	push	r25
     402:	af 93       	push	r26
     404:	bf 93       	push	r27
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	ef 93       	push	r30
     40c:	ff 93       	push	r31
    bool failed;
    int counter =0;
	
	//PORTB=PORTB^0xFF;
	
    if(!first) {
     40e:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <first>
     412:	81 11       	cpse	r24, r1
     414:	59 c2       	rjmp	.+1202   	; 0x8c8 <__stack+0x469>
     416:	ee 24       	eor	r14, r14
     418:	e3 94       	inc	r14
     41a:	f1 2c       	mov	r15, r1
     41c:	15 c1       	rjmp	.+554    	; 0x648 <__stack+0x1e9>
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;

            sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k); //connect to sensor boards and receive values
     41e:	ff 92       	push	r15
     420:	ef 92       	push	r14
     422:	80 e6       	ldi	r24, 0x60	; 96
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	9f 93       	push	r25
     428:	8f 93       	push	r24
     42a:	8c e9       	ldi	r24, 0x9C	; 156
     42c:	92 e0       	ldi	r25, 0x02	; 2
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
            //strcpy(string_to_send, "ESP:ssid:\"Sens_Board1\"\n");
			sendCommand(string_to_send);
     436:	8c e9       	ldi	r24, 0x9C	; 156
     438:	92 e0       	ldi	r25, 0x02	; 2
     43a:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
			
            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     43e:	80 e2       	ldi	r24, 0x20	; 32
     440:	e9 e7       	ldi	r30, 0x79	; 121
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	ac e9       	ldi	r26, 0x9C	; 156
     446:	b2 e0       	ldi	r27, 0x02	; 2
     448:	01 90       	ld	r0, Z+
     44a:	0d 92       	st	X+, r0
     44c:	8a 95       	dec	r24
     44e:	e1 f7       	brne	.-8      	; 0x448 <__DATA_REGION_LENGTH__+0x48>
			//print_string(string_to_send);
            sendCommand(string_to_send);
     450:	8c e9       	ldi	r24, 0x9C	; 156
     452:	92 e0       	ldi	r25, 0x02	; 2
     454:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
			//sendCommand(string_to_send);
			//while(UCSRA&(1<<RXC))
				//usart_receive();
			
			//PORTB=0x00;
            strcpy(string_to_send, "ESP:getAllValues\n");
     458:	82 e1       	ldi	r24, 0x12	; 18
     45a:	e9 e9       	ldi	r30, 0x99	; 153
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	ac e9       	ldi	r26, 0x9C	; 156
     460:	b2 e0       	ldi	r27, 0x02	; 2
     462:	01 90       	ld	r0, Z+
     464:	0d 92       	st	X+, r0
     466:	8a 95       	dec	r24
     468:	e1 f7       	brne	.-8      	; 0x462 <__stack+0x3>
			serialWrite(string_to_send);
     46a:	8c e9       	ldi	r24, 0x9C	; 156
     46c:	92 e0       	ldi	r25, 0x02	; 2
     46e:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>
			printResponse();
     472:	0e 94 d5 01 	call	0x3aa	; 0x3aa <printResponse>
            //sendCommand(string_to_send);
			PORTB=0x00;
     476:	18 ba       	out	0x18, r1	; 24
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     478:	87 e2       	ldi	r24, 0x27	; 39
     47a:	eb ea       	ldi	r30, 0xAB	; 171
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	ac e9       	ldi	r26, 0x9C	; 156
     480:	b2 e0       	ldi	r27, 0x02	; 2
     482:	01 90       	ld	r0, Z+
     484:	0d 92       	st	X+, r0
     486:	8a 95       	dec	r24
     488:	e1 f7       	brne	.-8      	; 0x482 <__stack+0x23>
            sendCommand(string_to_send);
     48a:	8c e9       	ldi	r24, 0x9C	; 156
     48c:	92 e0       	ldi	r25, 0x02	; 2
     48e:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
			//PORTB=0xFF;
			//PORTB=0x00;
            strcpy(string_to_send, "ESP:connect\n");
     492:	8d e0       	ldi	r24, 0x0D	; 13
     494:	e2 ed       	ldi	r30, 0xD2	; 210
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	ac e9       	ldi	r26, 0x9C	; 156
     49a:	b2 e0       	ldi	r27, 0x02	; 2
     49c:	01 90       	ld	r0, Z+
     49e:	0d 92       	st	X+, r0
     4a0:	8a 95       	dec	r24
     4a2:	e1 f7       	brne	.-8      	; 0x49c <__stack+0x3d>
            sendCommand(string_to_send);
     4a4:	8c e9       	ldi	r24, 0x9C	; 156
     4a6:	92 e0       	ldi	r25, 0x02	; 2
     4a8:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
			//PORTB=0x00;
			
            strcpy(string_to_send, "ESP:clientTransmit\n");
     4ac:	84 e1       	ldi	r24, 0x14	; 20
     4ae:	ef ed       	ldi	r30, 0xDF	; 223
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	ac e9       	ldi	r26, 0x9C	; 156
     4b4:	b2 e0       	ldi	r27, 0x02	; 2
     4b6:	01 90       	ld	r0, Z+
     4b8:	0d 92       	st	X+, r0
     4ba:	8a 95       	dec	r24
     4bc:	e1 f7       	brne	.-8      	; 0x4b6 <__stack+0x57>
            sendCommand(string_to_send);
     4be:	8c e9       	ldi	r24, 0x9C	; 156
     4c0:	92 e0       	ldi	r25, 0x02	; 2
     4c2:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
            strcpy(string_to_send, "ESP:getValue:\"Moist_Sensor\"\n");
     4c6:	8d e1       	ldi	r24, 0x1D	; 29
     4c8:	e3 ef       	ldi	r30, 0xF3	; 243
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	ac e9       	ldi	r26, 0x9C	; 156
     4ce:	b2 e0       	ldi	r27, 0x02	; 2
     4d0:	01 90       	ld	r0, Z+
     4d2:	0d 92       	st	X+, r0
     4d4:	8a 95       	dec	r24
     4d6:	e1 f7       	brne	.-8      	; 0x4d0 <__stack+0x71>
            serialWrite(string_to_send);
     4d8:	8c e9       	ldi	r24, 0x9C	; 156
     4da:	92 e0       	ldi	r25, 0x02	; 2
     4dc:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>
            
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	0f 90       	pop	r0
     4e6:	0f 90       	pop	r0
     4e8:	0f 90       	pop	r0
     4ea:	0f 90       	pop	r0
     4ec:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     4f0:	82 32       	cpi	r24, 0x22	; 34
     4f2:	e1 f7       	brne	.-8      	; 0x4ec <__stack+0x8d>
            c=usart_receive(); //read most significant digit
     4f4:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            if(c=='F')
     4f8:	86 34       	cpi	r24, 0x46	; 70
     4fa:	11 f0       	breq	.+4      	; 0x500 <__stack+0xa1>
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;
     4fc:	d1 2c       	mov	r13, r1
     4fe:	02 c0       	rjmp	.+4      	; 0x504 <__stack+0xa5>
            
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
     500:	dd 24       	eor	r13, r13
     502:	d3 94       	inc	r13
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;
     504:	c0 e0       	ldi	r28, 0x00	; 0
     506:	d0 e0       	ldi	r29, 0x00	; 0
     508:	09 c0       	rjmp	.+18     	; 0x51c <__stack+0xbd>
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     50a:	8e 01       	movw	r16, r28
     50c:	0f 5f       	subi	r16, 0xFF	; 255
     50e:	1f 4f       	sbci	r17, 0xFF	; 255
     510:	cf 55       	subi	r28, 0x5F	; 95
     512:	dc 4f       	sbci	r29, 0xFC	; 252
     514:	88 83       	st	Y, r24
                c = usart_receive();
     516:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     51a:	e8 01       	movw	r28, r16
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
     51c:	82 32       	cpi	r24, 0x22	; 34
     51e:	11 f0       	breq	.+4      	; 0x524 <__stack+0xc5>
     520:	dd 20       	and	r13, r13
     522:	99 f3       	breq	.-26     	; 0x50a <__stack+0xab>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     524:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            if(!failed){ 
     528:	d1 10       	cpse	r13, r1
     52a:	2e c0       	rjmp	.+92     	; 0x588 <__stack+0x129>
     52c:	25 e0       	ldi	r18, 0x05	; 5
     52e:	30 e0       	ldi	r19, 0x00	; 0
     530:	0c c0       	rjmp	.+24     	; 0x54a <__stack+0xeb>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     532:	f9 01       	movw	r30, r18
     534:	e8 1b       	sub	r30, r24
     536:	f9 0b       	sbc	r31, r25
     538:	ef 55       	subi	r30, 0x5F	; 95
     53a:	fc 4f       	sbci	r31, 0xFC	; 252
     53c:	80 81       	ld	r24, Z
     53e:	f9 01       	movw	r30, r18
     540:	ef 55       	subi	r30, 0x5F	; 95
     542:	fc 4f       	sbci	r31, 0xFC	; 252
     544:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     546:	21 50       	subi	r18, 0x01	; 1
     548:	31 09       	sbc	r19, r1
     54a:	86 e0       	ldi	r24, 0x06	; 6
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	8c 1b       	sub	r24, r28
     550:	9d 0b       	sbc	r25, r29
     552:	28 17       	cp	r18, r24
     554:	39 07       	cpc	r19, r25
     556:	6c f7       	brge	.-38     	; 0x532 <__stack+0xd3>
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	07 c0       	rjmp	.+14     	; 0x56c <__stack+0x10d>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     55e:	f9 01       	movw	r30, r18
     560:	ef 55       	subi	r30, 0x5F	; 95
     562:	fc 4f       	sbci	r31, 0xFC	; 252
     564:	40 e3       	ldi	r20, 0x30	; 48
     566:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     568:	2f 5f       	subi	r18, 0xFF	; 255
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	28 17       	cp	r18, r24
     56e:	39 07       	cpc	r19, r25
     570:	b4 f3       	brlt	.-20     	; 0x55e <__stack+0xff>
                    conv_buffer[i] = '0';
                }
                moistures[k]=atoi(conv_buffer);
     572:	81 ea       	ldi	r24, 0xA1	; 161
     574:	93 e0       	ldi	r25, 0x03	; 3
     576:	0e 94 75 0a 	call	0x14ea	; 0x14ea <atoi>
     57a:	f7 01       	movw	r30, r14
     57c:	ee 0f       	add	r30, r30
     57e:	ff 1f       	adc	r31, r31
     580:	ec 56       	subi	r30, 0x6C	; 108
     582:	fd 4f       	sbci	r31, 0xFD	; 253
     584:	91 83       	std	Z+1, r25	; 0x01
     586:	80 83       	st	Z, r24
            }
            
            strcpy(string_to_send, "ESP:getValue:\"Tmp_Sensor\"\n");
     588:	8b e1       	ldi	r24, 0x1B	; 27
     58a:	e0 e1       	ldi	r30, 0x10	; 16
     58c:	f1 e0       	ldi	r31, 0x01	; 1
     58e:	ac e9       	ldi	r26, 0x9C	; 156
     590:	b2 e0       	ldi	r27, 0x02	; 2
     592:	01 90       	ld	r0, Z+
     594:	0d 92       	st	X+, r0
     596:	8a 95       	dec	r24
     598:	e1 f7       	brne	.-8      	; 0x592 <__stack+0x133>
            serialWrite(string_to_send);
     59a:	8c e9       	ldi	r24, 0x9C	; 156
     59c:	92 e0       	ldi	r25, 0x02	; 2
     59e:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>

            //c=getChar();
			counter = 0;
            while(usart_receive() != '"' && !failed);
     5a2:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
     5a6:	82 32       	cpi	r24, 0x22	; 34
     5a8:	11 f0       	breq	.+4      	; 0x5ae <__stack+0x14f>
     5aa:	dd 20       	and	r13, r13
     5ac:	d1 f3       	breq	.-12     	; 0x5a2 <__stack+0x143>
            c = usart_receive();
     5ae:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            if(c=='F')
     5b2:	86 34       	cpi	r24, 0x46	; 70
     5b4:	11 f4       	brne	.+4      	; 0x5ba <__stack+0x15b>
                failed=true;
     5b6:	dd 24       	eor	r13, r13
     5b8:	d3 94       	inc	r13
     5ba:	c0 e0       	ldi	r28, 0x00	; 0
     5bc:	d0 e0       	ldi	r29, 0x00	; 0
     5be:	09 c0       	rjmp	.+18     	; 0x5d2 <__stack+0x173>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     5c0:	8e 01       	movw	r16, r28
     5c2:	0f 5f       	subi	r16, 0xFF	; 255
     5c4:	1f 4f       	sbci	r17, 0xFF	; 255
     5c6:	cf 55       	subi	r28, 0x5F	; 95
     5c8:	dc 4f       	sbci	r29, 0xFC	; 252
     5ca:	88 83       	st	Y, r24
                c = usart_receive();
     5cc:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            while(usart_receive() != '"' && !failed);
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     5d0:	e8 01       	movw	r28, r16
			counter = 0;
            while(usart_receive() != '"' && !failed);
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     5d2:	82 32       	cpi	r24, 0x22	; 34
     5d4:	11 f0       	breq	.+4      	; 0x5da <__stack+0x17b>
     5d6:	dd 20       	and	r13, r13
     5d8:	99 f3       	breq	.-26     	; 0x5c0 <__stack+0x161>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     5da:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
            if(!failed){
     5de:	d1 10       	cpse	r13, r1
     5e0:	30 c0       	rjmp	.+96     	; 0x642 <__stack+0x1e3>
     5e2:	25 e0       	ldi	r18, 0x05	; 5
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	0c c0       	rjmp	.+24     	; 0x600 <__stack+0x1a1>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     5e8:	f9 01       	movw	r30, r18
     5ea:	e8 1b       	sub	r30, r24
     5ec:	f9 0b       	sbc	r31, r25
     5ee:	ef 55       	subi	r30, 0x5F	; 95
     5f0:	fc 4f       	sbci	r31, 0xFC	; 252
     5f2:	80 81       	ld	r24, Z
     5f4:	f9 01       	movw	r30, r18
     5f6:	ef 55       	subi	r30, 0x5F	; 95
     5f8:	fc 4f       	sbci	r31, 0xFC	; 252
     5fa:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     5fc:	21 50       	subi	r18, 0x01	; 1
     5fe:	31 09       	sbc	r19, r1
     600:	86 e0       	ldi	r24, 0x06	; 6
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	8c 1b       	sub	r24, r28
     606:	9d 0b       	sbc	r25, r29
     608:	28 17       	cp	r18, r24
     60a:	39 07       	cpc	r19, r25
     60c:	6c f7       	brge	.-38     	; 0x5e8 <__stack+0x189>
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	07 c0       	rjmp	.+14     	; 0x622 <__stack+0x1c3>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     614:	f9 01       	movw	r30, r18
     616:	ef 55       	subi	r30, 0x5F	; 95
     618:	fc 4f       	sbci	r31, 0xFC	; 252
     61a:	40 e3       	ldi	r20, 0x30	; 48
     61c:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     61e:	2f 5f       	subi	r18, 0xFF	; 255
     620:	3f 4f       	sbci	r19, 0xFF	; 255
     622:	28 17       	cp	r18, r24
     624:	39 07       	cpc	r19, r25
     626:	b4 f3       	brlt	.-20     	; 0x614 <__stack+0x1b5>
                    conv_buffer[i] = '0';
                }
                temperatures[k]=atof(conv_buffer);
     628:	81 ea       	ldi	r24, 0xA1	; 161
     62a:	93 e0       	ldi	r25, 0x03	; 3
     62c:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <atof>
     630:	e7 01       	movw	r28, r14
     632:	cc 0f       	add	r28, r28
     634:	dd 1f       	adc	r29, r29
     636:	c2 56       	subi	r28, 0x62	; 98
     638:	dc 4f       	sbci	r29, 0xFC	; 252
     63a:	0e 94 8c 05 	call	0xb18	; 0xb18 <__fixsfsi>
     63e:	79 83       	std	Y+1, r23	; 0x01
     640:	68 83       	st	Y, r22
    int counter =0;
	
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
     642:	8f ef       	ldi	r24, 0xFF	; 255
     644:	e8 1a       	sub	r14, r24
     646:	f8 0a       	sbc	r15, r24
     648:	92 e0       	ldi	r25, 0x02	; 2
     64a:	e9 16       	cp	r14, r25
     64c:	f1 04       	cpc	r15, r1
     64e:	0c f4       	brge	.+2      	; 0x652 <__stack+0x1f3>
     650:	e6 ce       	rjmp	.-564    	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
        }


        //calculate averages and variances and transmit them to main node

        tmp_avg=0.0;
     652:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <__data_end>
     656:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <__data_end+0x1>
     65a:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <__data_end+0x2>
     65e:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <__data_end+0x3>
        moist_avg=0;
     662:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <moist_avg+0x1>
     666:	10 92 1c 03 	sts	0x031C, r1	; 0x80031c <moist_avg>
        for(int i=0; i<sensor_boards; ++i) {
     66a:	c0 e0       	ldi	r28, 0x00	; 0
     66c:	d0 e0       	ldi	r29, 0x00	; 0
     66e:	32 c0       	rjmp	.+100    	; 0x6d4 <__stack+0x275>
            moist_avg += moistures[i];
     670:	ce 01       	movw	r24, r28
     672:	88 0f       	add	r24, r24
     674:	99 1f       	adc	r25, r25
     676:	fc 01       	movw	r30, r24
     678:	ec 56       	subi	r30, 0x6C	; 108
     67a:	fd 4f       	sbci	r31, 0xFD	; 253
     67c:	20 81       	ld	r18, Z
     67e:	31 81       	ldd	r19, Z+1	; 0x01
     680:	40 91 1c 03 	lds	r20, 0x031C	; 0x80031c <moist_avg>
     684:	50 91 1d 03 	lds	r21, 0x031D	; 0x80031d <moist_avg+0x1>
     688:	24 0f       	add	r18, r20
     68a:	35 1f       	adc	r19, r21
     68c:	30 93 1d 03 	sts	0x031D, r19	; 0x80031d <moist_avg+0x1>
     690:	20 93 1c 03 	sts	0x031C, r18	; 0x80031c <moist_avg>
            tmp_avg += temperatures[i];
     694:	fc 01       	movw	r30, r24
     696:	e2 56       	subi	r30, 0x62	; 98
     698:	fc 4f       	sbci	r31, 0xFC	; 252
     69a:	60 81       	ld	r22, Z
     69c:	71 81       	ldd	r23, Z+1	; 0x01
     69e:	07 2e       	mov	r0, r23
     6a0:	00 0c       	add	r0, r0
     6a2:	88 0b       	sbc	r24, r24
     6a4:	99 0b       	sbc	r25, r25
     6a6:	0e 94 c4 05 	call	0xb88	; 0xb88 <__floatsisf>
     6aa:	9b 01       	movw	r18, r22
     6ac:	ac 01       	movw	r20, r24
     6ae:	60 91 90 02 	lds	r22, 0x0290	; 0x800290 <__data_end>
     6b2:	70 91 91 02 	lds	r23, 0x0291	; 0x800291 <__data_end+0x1>
     6b6:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <__data_end+0x2>
     6ba:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <__data_end+0x3>
     6be:	0e 94 20 05 	call	0xa40	; 0xa40 <__addsf3>
     6c2:	60 93 90 02 	sts	0x0290, r22	; 0x800290 <__data_end>
     6c6:	70 93 91 02 	sts	0x0291, r23	; 0x800291 <__data_end+0x1>
     6ca:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <__data_end+0x2>
     6ce:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <__data_end+0x3>

        //calculate averages and variances and transmit them to main node

        tmp_avg=0.0;
        moist_avg=0;
        for(int i=0; i<sensor_boards; ++i) {
     6d2:	21 96       	adiw	r28, 0x01	; 1
     6d4:	1c 16       	cp	r1, r28
     6d6:	1d 06       	cpc	r1, r29
     6d8:	5c f6       	brge	.-106    	; 0x670 <__stack+0x211>
            moist_avg += moistures[i];
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
     6da:	00 91 1c 03 	lds	r16, 0x031C	; 0x80031c <moist_avg>
     6de:	10 91 1d 03 	lds	r17, 0x031D	; 0x80031d <moist_avg+0x1>
        tmp_avg /= sensor_boards;
     6e2:	f0 90 90 02 	lds	r15, 0x0290	; 0x800290 <__data_end>
     6e6:	e0 90 91 02 	lds	r14, 0x0291	; 0x800291 <__data_end+0x1>
     6ea:	d0 90 92 02 	lds	r13, 0x0292	; 0x800292 <__data_end+0x2>
     6ee:	c0 90 93 02 	lds	r12, 0x0293	; 0x800293 <__data_end+0x3>

        for(int i=0; i<sensor_boards; ++i) {
     6f2:	c0 e0       	ldi	r28, 0x00	; 0
     6f4:	d0 e0       	ldi	r29, 0x00	; 0
     6f6:	44 c0       	rjmp	.+136    	; 0x780 <__stack+0x321>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     6f8:	ce 01       	movw	r24, r28
     6fa:	88 0f       	add	r24, r24
     6fc:	99 1f       	adc	r25, r25
     6fe:	fc 01       	movw	r30, r24
     700:	ec 56       	subi	r30, 0x6C	; 108
     702:	fd 4f       	sbci	r31, 0xFD	; 253
     704:	20 81       	ld	r18, Z
     706:	31 81       	ldd	r19, Z+1	; 0x01
     708:	20 1b       	sub	r18, r16
     70a:	31 0b       	sbc	r19, r17
     70c:	22 9f       	mul	r18, r18
     70e:	a0 01       	movw	r20, r0
     710:	23 9f       	mul	r18, r19
     712:	50 0d       	add	r21, r0
     714:	50 0d       	add	r21, r0
     716:	11 24       	eor	r1, r1
     718:	20 91 96 02 	lds	r18, 0x0296	; 0x800296 <moist_var>
     71c:	30 91 97 02 	lds	r19, 0x0297	; 0x800297 <moist_var+0x1>
     720:	24 0f       	add	r18, r20
     722:	35 1f       	adc	r19, r21
     724:	30 93 97 02 	sts	0x0297, r19	; 0x800297 <moist_var+0x1>
     728:	20 93 96 02 	sts	0x0296, r18	; 0x800296 <moist_var>
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     72c:	fc 01       	movw	r30, r24
     72e:	e2 56       	subi	r30, 0x62	; 98
     730:	fc 4f       	sbci	r31, 0xFC	; 252
     732:	60 81       	ld	r22, Z
     734:	71 81       	ldd	r23, Z+1	; 0x01
     736:	07 2e       	mov	r0, r23
     738:	00 0c       	add	r0, r0
     73a:	88 0b       	sbc	r24, r24
     73c:	99 0b       	sbc	r25, r25
     73e:	0e 94 c4 05 	call	0xb88	; 0xb88 <__floatsisf>
     742:	2f 2d       	mov	r18, r15
     744:	3e 2d       	mov	r19, r14
     746:	4d 2d       	mov	r20, r13
     748:	5c 2d       	mov	r21, r12
     74a:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__subsf3>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3>
     756:	9b 01       	movw	r18, r22
     758:	ac 01       	movw	r20, r24
     75a:	60 91 98 02 	lds	r22, 0x0298	; 0x800298 <tmp_var_f>
     75e:	70 91 99 02 	lds	r23, 0x0299	; 0x800299 <tmp_var_f+0x1>
     762:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <tmp_var_f+0x2>
     766:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <tmp_var_f+0x3>
     76a:	0e 94 20 05 	call	0xa40	; 0xa40 <__addsf3>
     76e:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <tmp_var_f>
     772:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <tmp_var_f+0x1>
     776:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <tmp_var_f+0x2>
     77a:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <tmp_var_f+0x3>
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
        tmp_avg /= sensor_boards;

        for(int i=0; i<sensor_boards; ++i) {
     77e:	21 96       	adiw	r28, 0x01	; 1
     780:	1c 16       	cp	r1, r28
     782:	1d 06       	cpc	r1, r29
     784:	0c f0       	brlt	.+2      	; 0x788 <__stack+0x329>
     786:	b8 cf       	rjmp	.-144    	; 0x6f8 <__stack+0x299>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
        }
        moist_var /= sensor_boards;
     788:	c0 91 96 02 	lds	r28, 0x0296	; 0x800296 <moist_var>
     78c:	d0 91 97 02 	lds	r29, 0x0297	; 0x800297 <moist_var+0x1>
        tmp_var_f /= sensor_boards;
     790:	60 91 98 02 	lds	r22, 0x0298	; 0x800298 <tmp_var_f>
     794:	70 91 99 02 	lds	r23, 0x0299	; 0x800299 <tmp_var_f+0x1>
     798:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <tmp_var_f+0x2>
     79c:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <tmp_var_f+0x3>
        tmp_var = (int)tmp_var_f;
     7a0:	0e 94 8c 05 	call	0xb18	; 0xb18 <__fixsfsi>
     7a4:	60 93 a7 03 	sts	0x03A7, r22	; 0x8003a7 <tmp_var>
     7a8:	70 93 a8 03 	sts	0x03A8, r23	; 0x8003a8 <tmp_var+0x1>
		
		//PORTB=0x00;

        //debug
        sprintf(string_to_send, "%d %.1f %d %d", moist_avg, tmp_avg, moist_var, tmp_var);
     7ac:	7f 93       	push	r23
     7ae:	6f 93       	push	r22
     7b0:	df 93       	push	r29
     7b2:	cf 93       	push	r28
     7b4:	cf 92       	push	r12
     7b6:	df 92       	push	r13
     7b8:	ef 92       	push	r14
     7ba:	ff 92       	push	r15
     7bc:	1f 93       	push	r17
     7be:	0f 93       	push	r16
     7c0:	8b e2       	ldi	r24, 0x2B	; 43
     7c2:	91 e0       	ldi	r25, 0x01	; 1
     7c4:	9f 93       	push	r25
     7c6:	8f 93       	push	r24
     7c8:	cc e9       	ldi	r28, 0x9C	; 156
     7ca:	d2 e0       	ldi	r29, 0x02	; 2
     7cc:	df 93       	push	r29
     7ce:	cf 93       	push	r28
     7d0:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
        //end_debug




        strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     7d4:	87 e1       	ldi	r24, 0x17	; 23
     7d6:	e9 e3       	ldi	r30, 0x39	; 57
     7d8:	f1 e0       	ldi	r31, 0x01	; 1
     7da:	de 01       	movw	r26, r28
     7dc:	01 90       	ld	r0, Z+
     7de:	0d 92       	st	X+, r0
     7e0:	8a 95       	dec	r24
     7e2:	e1 f7       	brne	.-8      	; 0x7dc <__stack+0x37d>
        sendCommand(string_to_send);
     7e4:	ce 01       	movw	r24, r28
     7e6:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

        strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     7ea:	80 e2       	ldi	r24, 0x20	; 32
     7ec:	e9 e7       	ldi	r30, 0x79	; 121
     7ee:	f0 e0       	ldi	r31, 0x00	; 0
     7f0:	de 01       	movw	r26, r28
     7f2:	01 90       	ld	r0, Z+
     7f4:	0d 92       	st	X+, r0
     7f6:	8a 95       	dec	r24
     7f8:	e1 f7       	brne	.-8      	; 0x7f2 <__stack+0x393>
        sendCommand(string_to_send);
     7fa:	ce 01       	movw	r24, r28
     7fc:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg\"[%d]\n", moist_avg);
     800:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <moist_avg+0x1>
     804:	8f 93       	push	r24
     806:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <moist_avg>
     80a:	8f 93       	push	r24
     80c:	80 e5       	ldi	r24, 0x50	; 80
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	9f 93       	push	r25
     812:	8f 93       	push	r24
     814:	df 93       	push	r29
     816:	cf 93       	push	r28
     818:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     81c:	ce 01       	movw	r24, r28
     81e:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[%.1f]\n", tmp_avg);
     822:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <__data_end+0x3>
     826:	8f 93       	push	r24
     828:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <__data_end+0x2>
     82c:	8f 93       	push	r24
     82e:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <__data_end+0x1>
     832:	8f 93       	push	r24
     834:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
     838:	8f 93       	push	r24
     83a:	81 e7       	ldi	r24, 0x71	; 113
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	9f 93       	push	r25
     840:	8f 93       	push	r24
     842:	df 93       	push	r29
     844:	cf 93       	push	r28
     846:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     84a:	ce 01       	movw	r24, r28
     84c:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Moist_var\"[%d]\n", moist_var);
     850:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <moist_var+0x1>
     854:	8f 93       	push	r24
     856:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <moist_var>
     85a:	8f 93       	push	r24
     85c:	82 e9       	ldi	r24, 0x92	; 146
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	9f 93       	push	r25
     862:	8f 93       	push	r24
     864:	df 93       	push	r29
     866:	cf 93       	push	r28
     868:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     86c:	8d b7       	in	r24, 0x3d	; 61
     86e:	9e b7       	in	r25, 0x3e	; 62
     870:	82 96       	adiw	r24, 0x22	; 34
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	f8 94       	cli
     876:	9e bf       	out	0x3e, r25	; 62
     878:	0f be       	out	0x3f, r0	; 63
     87a:	8d bf       	out	0x3d, r24	; 61
     87c:	ce 01       	movw	r24, r28
     87e:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var\"[%d]\n", tmp_var);
     882:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <tmp_var+0x1>
     886:	8f 93       	push	r24
     888:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <tmp_var>
     88c:	8f 93       	push	r24
     88e:	83 eb       	ldi	r24, 0xB3	; 179
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	9f 93       	push	r25
     894:	8f 93       	push	r24
     896:	df 93       	push	r29
     898:	cf 93       	push	r28
     89a:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     89e:	ce 01       	movw	r24, r28
     8a0:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

		strcpy(string_to_send, "ESP:clientTransmit\n");
     8a4:	84 e1       	ldi	r24, 0x14	; 20
     8a6:	ef ed       	ldi	r30, 0xDF	; 223
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	de 01       	movw	r26, r28
     8ac:	01 90       	ld	r0, Z+
     8ae:	0d 92       	st	X+, r0
     8b0:	8a 95       	dec	r24
     8b2:	e1 f7       	brne	.-8      	; 0x8ac <__stack+0x44d>
		sendCommand(string_to_send);
     8b4:	ce 01       	movw	r24, r28
     8b6:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>
     8ba:	0f 90       	pop	r0
     8bc:	0f 90       	pop	r0
     8be:	0f 90       	pop	r0
     8c0:	0f 90       	pop	r0
     8c2:	0f 90       	pop	r0
     8c4:	0f 90       	pop	r0
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <__stack+0x46d>
     
    }
    else
        first=false;
     8c8:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <first>

    //TCNT1 = 3036;
	TCNT1 = 34286; //4s between interrupts
     8cc:	8e ee       	ldi	r24, 0xEE	; 238
     8ce:	95 e8       	ldi	r25, 0x85	; 133
     8d0:	9d bd       	out	0x2d, r25	; 45
     8d2:	8c bd       	out	0x2c, r24	; 44
}
     8d4:	ff 91       	pop	r31
     8d6:	ef 91       	pop	r30
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	bf 91       	pop	r27
     8de:	af 91       	pop	r26
     8e0:	9f 91       	pop	r25
     8e2:	8f 91       	pop	r24
     8e4:	7f 91       	pop	r23
     8e6:	6f 91       	pop	r22
     8e8:	5f 91       	pop	r21
     8ea:	4f 91       	pop	r20
     8ec:	3f 91       	pop	r19
     8ee:	2f 91       	pop	r18
     8f0:	1f 91       	pop	r17
     8f2:	0f 91       	pop	r16
     8f4:	ff 90       	pop	r15
     8f6:	ef 90       	pop	r14
     8f8:	df 90       	pop	r13
     8fa:	cf 90       	pop	r12
     8fc:	0f 90       	pop	r0
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	0f 90       	pop	r0
     902:	1f 90       	pop	r1
     904:	18 95       	reti

00000906 <main>:


int main(){
    DDRB=0xFF;
     906:	8f ef       	ldi	r24, 0xFF	; 255
     908:	87 bb       	out	0x17, r24	; 23
    DDRD=0xFF;
     90a:	81 bb       	out	0x11, r24	; 17
	
	//PORTB=0xFF;

	first=true;
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	80 93 a0 03 	sts	0x03A0, r24	; 0x8003a0 <first>
	
    lcd_init_sim();
     912:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init_sim>
	usart_init(MYUBRR);
     916:	83 e3       	ldi	r24, 0x33	; 51
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	0e 94 8a 01 	call	0x314	; 0x314 <usart_init>
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e c0       	rjmp	.+28     	; 0x940 <main+0x3a>
        moistures[i]=0;
     924:	9c 01       	movw	r18, r24
     926:	22 0f       	add	r18, r18
     928:	33 1f       	adc	r19, r19
     92a:	f9 01       	movw	r30, r18
     92c:	ec 56       	subi	r30, 0x6C	; 108
     92e:	fd 4f       	sbci	r31, 0xFD	; 253
     930:	11 82       	std	Z+1, r1	; 0x01
     932:	10 82       	st	Z, r1
        temperatures[i]=0;
     934:	f9 01       	movw	r30, r18
     936:	e2 56       	subi	r30, 0x62	; 98
     938:	fc 4f       	sbci	r31, 0xFC	; 252
     93a:	11 82       	std	Z+1, r1	; 0x01
     93c:	10 82       	st	Z, r1
	first=true;
	
    lcd_init_sim();
	usart_init(MYUBRR);
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	18 16       	cp	r1, r24
     942:	19 06       	cpc	r1, r25
     944:	7c f7       	brge	.-34     	; 0x924 <main+0x1e>
        moistures[i]=0;
        temperatures[i]=0;
    }

	//PORTB=0xFF;
    usart_transmit('\n'); //to flush serial
     946:	8a e0       	ldi	r24, 0x0A	; 10
     948:	0e 94 92 01 	call	0x324	; 0x324 <usart_transmit>
    	
    strcpy(string_to_send, "ESP:restart\n");
     94c:	8d e0       	ldi	r24, 0x0D	; 13
     94e:	e2 ed       	ldi	r30, 0xD2	; 210
     950:	f1 e0       	ldi	r31, 0x01	; 1
     952:	ac e9       	ldi	r26, 0x9C	; 156
     954:	b2 e0       	ldi	r27, 0x02	; 2
     956:	01 90       	ld	r0, Z+
     958:	0d 92       	st	X+, r0
     95a:	8a 95       	dec	r24
     95c:	e1 f7       	brne	.-8      	; 0x956 <main+0x50>
    serialWrite(string_to_send);
     95e:	8c e9       	ldi	r24, 0x9C	; 156
     960:	92 e0       	ldi	r25, 0x02	; 2
     962:	0e 94 9a 01 	call	0x334	; 0x334 <serialWrite>
    
    usart_receive(); //wait until restart is complete
     966:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
    while(UCSRA&(1<<RXC)) //flush read buffer
     96a:	02 c0       	rjmp	.+4      	; 0x970 <main+0x6a>
    usart_receive();
     96c:	0e 94 96 01 	call	0x32c	; 0x32c <usart_receive>
    	
    strcpy(string_to_send, "ESP:restart\n");
    serialWrite(string_to_send);
    
    usart_receive(); //wait until restart is complete
    while(UCSRA&(1<<RXC)) //flush read buffer
     970:	5f 99       	sbic	0x0b, 7	; 11
     972:	fc cf       	rjmp	.-8      	; 0x96c <main+0x66>
    usart_receive();
	
	wait_msec(2000);
     974:	80 ed       	ldi	r24, 0xD0	; 208
     976:	97 e0       	ldi	r25, 0x07	; 7
     978:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <wait_msec>
	

    strcpy(string_to_send, "ESP:addSensor: \"Moist_Sensor\"\n");
     97c:	cc e9       	ldi	r28, 0x9C	; 156
     97e:	d2 e0       	ldi	r29, 0x02	; 2
     980:	8f e1       	ldi	r24, 0x1F	; 31
     982:	ef ed       	ldi	r30, 0xDF	; 223
     984:	f1 e0       	ldi	r31, 0x01	; 1
     986:	de 01       	movw	r26, r28
     988:	01 90       	ld	r0, Z+
     98a:	0d 92       	st	X+, r0
     98c:	8a 95       	dec	r24
     98e:	e1 f7       	brne	.-8      	; 0x988 <main+0x82>
    sendCommand(string_to_send);
     990:	ce 01       	movw	r24, r28
     992:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

    strcpy(string_to_send, "ESP:addSensor: \"Tmp_Sensor\"\n");
     996:	8d e1       	ldi	r24, 0x1D	; 29
     998:	ee ef       	ldi	r30, 0xFE	; 254
     99a:	f1 e0       	ldi	r31, 0x01	; 1
     99c:	de 01       	movw	r26, r28
     99e:	01 90       	ld	r0, Z+
     9a0:	0d 92       	st	X+, r0
     9a2:	8a 95       	dec	r24
     9a4:	e1 f7       	brne	.-8      	; 0x99e <main+0x98>
    sendCommand(string_to_send);
     9a6:	ce 01       	movw	r24, r28
     9a8:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Moist_avg%d\"\n", board_no);
     9ac:	1f 92       	push	r1
     9ae:	11 e0       	ldi	r17, 0x01	; 1
     9b0:	1f 93       	push	r17
     9b2:	8b e1       	ldi	r24, 0x1B	; 27
     9b4:	92 e0       	ldi	r25, 0x02	; 2
     9b6:	9f 93       	push	r25
     9b8:	8f 93       	push	r24
     9ba:	df 93       	push	r29
     9bc:	cf 93       	push	r28
     9be:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
    sendCommand(string_to_send);
     9c2:	ce 01       	movw	r24, r28
     9c4:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Tmp_avg%d\"\n", board_no);
     9c8:	1f 92       	push	r1
     9ca:	1f 93       	push	r17
     9cc:	89 e3       	ldi	r24, 0x39	; 57
     9ce:	92 e0       	ldi	r25, 0x02	; 2
     9d0:	9f 93       	push	r25
     9d2:	8f 93       	push	r24
     9d4:	df 93       	push	r29
     9d6:	cf 93       	push	r28
     9d8:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
    sendCommand(string_to_send);
     9dc:	ce 01       	movw	r24, r28
     9de:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Moist_var%d\"\n", board_no);
     9e2:	1f 92       	push	r1
     9e4:	1f 93       	push	r17
     9e6:	85 e5       	ldi	r24, 0x55	; 85
     9e8:	92 e0       	ldi	r25, 0x02	; 2
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	df 93       	push	r29
     9f0:	cf 93       	push	r28
     9f2:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
    sendCommand(string_to_send);
     9f6:	ce 01       	movw	r24, r28
     9f8:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Tmp_var%d\"\n", board_no);
     9fc:	1f 92       	push	r1
     9fe:	1f 93       	push	r17
     a00:	83 e7       	ldi	r24, 0x73	; 115
     a02:	92 e0       	ldi	r25, 0x02	; 2
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	df 93       	push	r29
     a0a:	cf 93       	push	r28
     a0c:	0e 94 c5 0b 	call	0x178a	; 0x178a <sprintf>
    sendCommand(string_to_send);
     a10:	ce 01       	movw	r24, r28
     a12:	0e 94 b7 01 	call	0x36e	; 0x36e <sendCommand>

	PORTB=0xFF;
     a16:	8f ef       	ldi	r24, 0xFF	; 255
     a18:	88 bb       	out	0x18, r24	; 24

    TCCR1B = 0x05; //CK/1024
     a1a:	85 e0       	ldi	r24, 0x05	; 5
     a1c:	8e bd       	out	0x2e, r24	; 46
	//TCNT1 = 3036; //8 seconds
	TCNT1 = 34286; //4s between interrupts
     a1e:	8e ee       	ldi	r24, 0xEE	; 238
     a20:	95 e8       	ldi	r25, 0x85	; 133
     a22:	9d bd       	out	0x2d, r25	; 45
     a24:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     a26:	84 e0       	ldi	r24, 0x04	; 4
     a28:	89 bf       	out	0x39, r24	; 57
    sei();
     a2a:	78 94       	sei
     a2c:	8d b7       	in	r24, 0x3d	; 61
     a2e:	9e b7       	in	r25, 0x3e	; 62
     a30:	48 96       	adiw	r24, 0x18	; 24
     a32:	0f b6       	in	r0, 0x3f	; 63
     a34:	f8 94       	cli
     a36:	9e bf       	out	0x3e, r25	; 62
     a38:	0f be       	out	0x3f, r0	; 63
     a3a:	8d bf       	out	0x3d, r24	; 61
     a3c:	ff cf       	rjmp	.-2      	; 0xa3c <main+0x136>

00000a3e <__subsf3>:
     a3e:	50 58       	subi	r21, 0x80	; 128

00000a40 <__addsf3>:
     a40:	bb 27       	eor	r27, r27
     a42:	aa 27       	eor	r26, r26
     a44:	0e 94 37 05 	call	0xa6e	; 0xa6e <__addsf3x>
     a48:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__fp_round>
     a4c:	0e 94 08 06 	call	0xc10	; 0xc10 <__fp_pscA>
     a50:	38 f0       	brcs	.+14     	; 0xa60 <__addsf3+0x20>
     a52:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fp_pscB>
     a56:	20 f0       	brcs	.+8      	; 0xa60 <__addsf3+0x20>
     a58:	39 f4       	brne	.+14     	; 0xa68 <__addsf3+0x28>
     a5a:	9f 3f       	cpi	r25, 0xFF	; 255
     a5c:	19 f4       	brne	.+6      	; 0xa64 <__addsf3+0x24>
     a5e:	26 f4       	brtc	.+8      	; 0xa68 <__addsf3+0x28>
     a60:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__fp_nan>
     a64:	0e f4       	brtc	.+2      	; 0xa68 <__addsf3+0x28>
     a66:	e0 95       	com	r30
     a68:	e7 fb       	bst	r30, 7
     a6a:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__fp_inf>

00000a6e <__addsf3x>:
     a6e:	e9 2f       	mov	r30, r25
     a70:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fp_split3>
     a74:	58 f3       	brcs	.-42     	; 0xa4c <__addsf3+0xc>
     a76:	ba 17       	cp	r27, r26
     a78:	62 07       	cpc	r22, r18
     a7a:	73 07       	cpc	r23, r19
     a7c:	84 07       	cpc	r24, r20
     a7e:	95 07       	cpc	r25, r21
     a80:	20 f0       	brcs	.+8      	; 0xa8a <__addsf3x+0x1c>
     a82:	79 f4       	brne	.+30     	; 0xaa2 <__addsf3x+0x34>
     a84:	a6 f5       	brtc	.+104    	; 0xaee <__addsf3x+0x80>
     a86:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__fp_zero>
     a8a:	0e f4       	brtc	.+2      	; 0xa8e <__addsf3x+0x20>
     a8c:	e0 95       	com	r30
     a8e:	0b 2e       	mov	r0, r27
     a90:	ba 2f       	mov	r27, r26
     a92:	a0 2d       	mov	r26, r0
     a94:	0b 01       	movw	r0, r22
     a96:	b9 01       	movw	r22, r18
     a98:	90 01       	movw	r18, r0
     a9a:	0c 01       	movw	r0, r24
     a9c:	ca 01       	movw	r24, r20
     a9e:	a0 01       	movw	r20, r0
     aa0:	11 24       	eor	r1, r1
     aa2:	ff 27       	eor	r31, r31
     aa4:	59 1b       	sub	r21, r25
     aa6:	99 f0       	breq	.+38     	; 0xace <__addsf3x+0x60>
     aa8:	59 3f       	cpi	r21, 0xF9	; 249
     aaa:	50 f4       	brcc	.+20     	; 0xac0 <__addsf3x+0x52>
     aac:	50 3e       	cpi	r21, 0xE0	; 224
     aae:	68 f1       	brcs	.+90     	; 0xb0a <__addsf3x+0x9c>
     ab0:	1a 16       	cp	r1, r26
     ab2:	f0 40       	sbci	r31, 0x00	; 0
     ab4:	a2 2f       	mov	r26, r18
     ab6:	23 2f       	mov	r18, r19
     ab8:	34 2f       	mov	r19, r20
     aba:	44 27       	eor	r20, r20
     abc:	58 5f       	subi	r21, 0xF8	; 248
     abe:	f3 cf       	rjmp	.-26     	; 0xaa6 <__addsf3x+0x38>
     ac0:	46 95       	lsr	r20
     ac2:	37 95       	ror	r19
     ac4:	27 95       	ror	r18
     ac6:	a7 95       	ror	r26
     ac8:	f0 40       	sbci	r31, 0x00	; 0
     aca:	53 95       	inc	r21
     acc:	c9 f7       	brne	.-14     	; 0xac0 <__addsf3x+0x52>
     ace:	7e f4       	brtc	.+30     	; 0xaee <__addsf3x+0x80>
     ad0:	1f 16       	cp	r1, r31
     ad2:	ba 0b       	sbc	r27, r26
     ad4:	62 0b       	sbc	r22, r18
     ad6:	73 0b       	sbc	r23, r19
     ad8:	84 0b       	sbc	r24, r20
     ada:	ba f0       	brmi	.+46     	; 0xb0a <__addsf3x+0x9c>
     adc:	91 50       	subi	r25, 0x01	; 1
     ade:	a1 f0       	breq	.+40     	; 0xb08 <__addsf3x+0x9a>
     ae0:	ff 0f       	add	r31, r31
     ae2:	bb 1f       	adc	r27, r27
     ae4:	66 1f       	adc	r22, r22
     ae6:	77 1f       	adc	r23, r23
     ae8:	88 1f       	adc	r24, r24
     aea:	c2 f7       	brpl	.-16     	; 0xadc <__addsf3x+0x6e>
     aec:	0e c0       	rjmp	.+28     	; 0xb0a <__addsf3x+0x9c>
     aee:	ba 0f       	add	r27, r26
     af0:	62 1f       	adc	r22, r18
     af2:	73 1f       	adc	r23, r19
     af4:	84 1f       	adc	r24, r20
     af6:	48 f4       	brcc	.+18     	; 0xb0a <__addsf3x+0x9c>
     af8:	87 95       	ror	r24
     afa:	77 95       	ror	r23
     afc:	67 95       	ror	r22
     afe:	b7 95       	ror	r27
     b00:	f7 95       	ror	r31
     b02:	9e 3f       	cpi	r25, 0xFE	; 254
     b04:	08 f0       	brcs	.+2      	; 0xb08 <__addsf3x+0x9a>
     b06:	b0 cf       	rjmp	.-160    	; 0xa68 <__addsf3+0x28>
     b08:	93 95       	inc	r25
     b0a:	88 0f       	add	r24, r24
     b0c:	08 f0       	brcs	.+2      	; 0xb10 <__addsf3x+0xa2>
     b0e:	99 27       	eor	r25, r25
     b10:	ee 0f       	add	r30, r30
     b12:	97 95       	ror	r25
     b14:	87 95       	ror	r24
     b16:	08 95       	ret

00000b18 <__fixsfsi>:
     b18:	0e 94 93 05 	call	0xb26	; 0xb26 <__fixunssfsi>
     b1c:	68 94       	set
     b1e:	b1 11       	cpse	r27, r1
     b20:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_szero>
     b24:	08 95       	ret

00000b26 <__fixunssfsi>:
     b26:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__fp_splitA>
     b2a:	88 f0       	brcs	.+34     	; 0xb4e <__fixunssfsi+0x28>
     b2c:	9f 57       	subi	r25, 0x7F	; 127
     b2e:	98 f0       	brcs	.+38     	; 0xb56 <__fixunssfsi+0x30>
     b30:	b9 2f       	mov	r27, r25
     b32:	99 27       	eor	r25, r25
     b34:	b7 51       	subi	r27, 0x17	; 23
     b36:	b0 f0       	brcs	.+44     	; 0xb64 <__fixunssfsi+0x3e>
     b38:	e1 f0       	breq	.+56     	; 0xb72 <__fixunssfsi+0x4c>
     b3a:	66 0f       	add	r22, r22
     b3c:	77 1f       	adc	r23, r23
     b3e:	88 1f       	adc	r24, r24
     b40:	99 1f       	adc	r25, r25
     b42:	1a f0       	brmi	.+6      	; 0xb4a <__fixunssfsi+0x24>
     b44:	ba 95       	dec	r27
     b46:	c9 f7       	brne	.-14     	; 0xb3a <__fixunssfsi+0x14>
     b48:	14 c0       	rjmp	.+40     	; 0xb72 <__fixunssfsi+0x4c>
     b4a:	b1 30       	cpi	r27, 0x01	; 1
     b4c:	91 f0       	breq	.+36     	; 0xb72 <__fixunssfsi+0x4c>
     b4e:	0e 94 49 06 	call	0xc92	; 0xc92 <__fp_zero>
     b52:	b1 e0       	ldi	r27, 0x01	; 1
     b54:	08 95       	ret
     b56:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__fp_zero>
     b5a:	67 2f       	mov	r22, r23
     b5c:	78 2f       	mov	r23, r24
     b5e:	88 27       	eor	r24, r24
     b60:	b8 5f       	subi	r27, 0xF8	; 248
     b62:	39 f0       	breq	.+14     	; 0xb72 <__fixunssfsi+0x4c>
     b64:	b9 3f       	cpi	r27, 0xF9	; 249
     b66:	cc f3       	brlt	.-14     	; 0xb5a <__fixunssfsi+0x34>
     b68:	86 95       	lsr	r24
     b6a:	77 95       	ror	r23
     b6c:	67 95       	ror	r22
     b6e:	b3 95       	inc	r27
     b70:	d9 f7       	brne	.-10     	; 0xb68 <__fixunssfsi+0x42>
     b72:	3e f4       	brtc	.+14     	; 0xb82 <__fixunssfsi+0x5c>
     b74:	90 95       	com	r25
     b76:	80 95       	com	r24
     b78:	70 95       	com	r23
     b7a:	61 95       	neg	r22
     b7c:	7f 4f       	sbci	r23, 0xFF	; 255
     b7e:	8f 4f       	sbci	r24, 0xFF	; 255
     b80:	9f 4f       	sbci	r25, 0xFF	; 255
     b82:	08 95       	ret

00000b84 <__floatunsisf>:
     b84:	e8 94       	clt
     b86:	09 c0       	rjmp	.+18     	; 0xb9a <__floatsisf+0x12>

00000b88 <__floatsisf>:
     b88:	97 fb       	bst	r25, 7
     b8a:	3e f4       	brtc	.+14     	; 0xb9a <__floatsisf+0x12>
     b8c:	90 95       	com	r25
     b8e:	80 95       	com	r24
     b90:	70 95       	com	r23
     b92:	61 95       	neg	r22
     b94:	7f 4f       	sbci	r23, 0xFF	; 255
     b96:	8f 4f       	sbci	r24, 0xFF	; 255
     b98:	9f 4f       	sbci	r25, 0xFF	; 255
     b9a:	99 23       	and	r25, r25
     b9c:	a9 f0       	breq	.+42     	; 0xbc8 <__floatsisf+0x40>
     b9e:	f9 2f       	mov	r31, r25
     ba0:	96 e9       	ldi	r25, 0x96	; 150
     ba2:	bb 27       	eor	r27, r27
     ba4:	93 95       	inc	r25
     ba6:	f6 95       	lsr	r31
     ba8:	87 95       	ror	r24
     baa:	77 95       	ror	r23
     bac:	67 95       	ror	r22
     bae:	b7 95       	ror	r27
     bb0:	f1 11       	cpse	r31, r1
     bb2:	f8 cf       	rjmp	.-16     	; 0xba4 <__floatsisf+0x1c>
     bb4:	fa f4       	brpl	.+62     	; 0xbf4 <__floatsisf+0x6c>
     bb6:	bb 0f       	add	r27, r27
     bb8:	11 f4       	brne	.+4      	; 0xbbe <__floatsisf+0x36>
     bba:	60 ff       	sbrs	r22, 0
     bbc:	1b c0       	rjmp	.+54     	; 0xbf4 <__floatsisf+0x6c>
     bbe:	6f 5f       	subi	r22, 0xFF	; 255
     bc0:	7f 4f       	sbci	r23, 0xFF	; 255
     bc2:	8f 4f       	sbci	r24, 0xFF	; 255
     bc4:	9f 4f       	sbci	r25, 0xFF	; 255
     bc6:	16 c0       	rjmp	.+44     	; 0xbf4 <__floatsisf+0x6c>
     bc8:	88 23       	and	r24, r24
     bca:	11 f0       	breq	.+4      	; 0xbd0 <__floatsisf+0x48>
     bcc:	96 e9       	ldi	r25, 0x96	; 150
     bce:	11 c0       	rjmp	.+34     	; 0xbf2 <__floatsisf+0x6a>
     bd0:	77 23       	and	r23, r23
     bd2:	21 f0       	breq	.+8      	; 0xbdc <__floatsisf+0x54>
     bd4:	9e e8       	ldi	r25, 0x8E	; 142
     bd6:	87 2f       	mov	r24, r23
     bd8:	76 2f       	mov	r23, r22
     bda:	05 c0       	rjmp	.+10     	; 0xbe6 <__floatsisf+0x5e>
     bdc:	66 23       	and	r22, r22
     bde:	71 f0       	breq	.+28     	; 0xbfc <__floatsisf+0x74>
     be0:	96 e8       	ldi	r25, 0x86	; 134
     be2:	86 2f       	mov	r24, r22
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	60 e0       	ldi	r22, 0x00	; 0
     be8:	2a f0       	brmi	.+10     	; 0xbf4 <__floatsisf+0x6c>
     bea:	9a 95       	dec	r25
     bec:	66 0f       	add	r22, r22
     bee:	77 1f       	adc	r23, r23
     bf0:	88 1f       	adc	r24, r24
     bf2:	da f7       	brpl	.-10     	; 0xbea <__floatsisf+0x62>
     bf4:	88 0f       	add	r24, r24
     bf6:	96 95       	lsr	r25
     bf8:	87 95       	ror	r24
     bfa:	97 f9       	bld	r25, 7
     bfc:	08 95       	ret

00000bfe <__fp_inf>:
     bfe:	97 f9       	bld	r25, 7
     c00:	9f 67       	ori	r25, 0x7F	; 127
     c02:	80 e8       	ldi	r24, 0x80	; 128
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	08 95       	ret

00000c0a <__fp_nan>:
     c0a:	9f ef       	ldi	r25, 0xFF	; 255
     c0c:	80 ec       	ldi	r24, 0xC0	; 192
     c0e:	08 95       	ret

00000c10 <__fp_pscA>:
     c10:	00 24       	eor	r0, r0
     c12:	0a 94       	dec	r0
     c14:	16 16       	cp	r1, r22
     c16:	17 06       	cpc	r1, r23
     c18:	18 06       	cpc	r1, r24
     c1a:	09 06       	cpc	r0, r25
     c1c:	08 95       	ret

00000c1e <__fp_pscB>:
     c1e:	00 24       	eor	r0, r0
     c20:	0a 94       	dec	r0
     c22:	12 16       	cp	r1, r18
     c24:	13 06       	cpc	r1, r19
     c26:	14 06       	cpc	r1, r20
     c28:	05 06       	cpc	r0, r21
     c2a:	08 95       	ret

00000c2c <__fp_round>:
     c2c:	09 2e       	mov	r0, r25
     c2e:	03 94       	inc	r0
     c30:	00 0c       	add	r0, r0
     c32:	11 f4       	brne	.+4      	; 0xc38 <__fp_round+0xc>
     c34:	88 23       	and	r24, r24
     c36:	52 f0       	brmi	.+20     	; 0xc4c <__fp_round+0x20>
     c38:	bb 0f       	add	r27, r27
     c3a:	40 f4       	brcc	.+16     	; 0xc4c <__fp_round+0x20>
     c3c:	bf 2b       	or	r27, r31
     c3e:	11 f4       	brne	.+4      	; 0xc44 <__fp_round+0x18>
     c40:	60 ff       	sbrs	r22, 0
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <__fp_round+0x20>
     c44:	6f 5f       	subi	r22, 0xFF	; 255
     c46:	7f 4f       	sbci	r23, 0xFF	; 255
     c48:	8f 4f       	sbci	r24, 0xFF	; 255
     c4a:	9f 4f       	sbci	r25, 0xFF	; 255
     c4c:	08 95       	ret

00000c4e <__fp_split3>:
     c4e:	57 fd       	sbrc	r21, 7
     c50:	90 58       	subi	r25, 0x80	; 128
     c52:	44 0f       	add	r20, r20
     c54:	55 1f       	adc	r21, r21
     c56:	59 f0       	breq	.+22     	; 0xc6e <__fp_splitA+0x10>
     c58:	5f 3f       	cpi	r21, 0xFF	; 255
     c5a:	71 f0       	breq	.+28     	; 0xc78 <__fp_splitA+0x1a>
     c5c:	47 95       	ror	r20

00000c5e <__fp_splitA>:
     c5e:	88 0f       	add	r24, r24
     c60:	97 fb       	bst	r25, 7
     c62:	99 1f       	adc	r25, r25
     c64:	61 f0       	breq	.+24     	; 0xc7e <__fp_splitA+0x20>
     c66:	9f 3f       	cpi	r25, 0xFF	; 255
     c68:	79 f0       	breq	.+30     	; 0xc88 <__fp_splitA+0x2a>
     c6a:	87 95       	ror	r24
     c6c:	08 95       	ret
     c6e:	12 16       	cp	r1, r18
     c70:	13 06       	cpc	r1, r19
     c72:	14 06       	cpc	r1, r20
     c74:	55 1f       	adc	r21, r21
     c76:	f2 cf       	rjmp	.-28     	; 0xc5c <__fp_split3+0xe>
     c78:	46 95       	lsr	r20
     c7a:	f1 df       	rcall	.-30     	; 0xc5e <__fp_splitA>
     c7c:	08 c0       	rjmp	.+16     	; 0xc8e <__fp_splitA+0x30>
     c7e:	16 16       	cp	r1, r22
     c80:	17 06       	cpc	r1, r23
     c82:	18 06       	cpc	r1, r24
     c84:	99 1f       	adc	r25, r25
     c86:	f1 cf       	rjmp	.-30     	; 0xc6a <__fp_splitA+0xc>
     c88:	86 95       	lsr	r24
     c8a:	71 05       	cpc	r23, r1
     c8c:	61 05       	cpc	r22, r1
     c8e:	08 94       	sec
     c90:	08 95       	ret

00000c92 <__fp_zero>:
     c92:	e8 94       	clt

00000c94 <__fp_szero>:
     c94:	bb 27       	eor	r27, r27
     c96:	66 27       	eor	r22, r22
     c98:	77 27       	eor	r23, r23
     c9a:	cb 01       	movw	r24, r22
     c9c:	97 f9       	bld	r25, 7
     c9e:	08 95       	ret

00000ca0 <__mulsf3>:
     ca0:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__mulsf3x>
     ca4:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__fp_round>
     ca8:	0e 94 08 06 	call	0xc10	; 0xc10 <__fp_pscA>
     cac:	38 f0       	brcs	.+14     	; 0xcbc <__mulsf3+0x1c>
     cae:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fp_pscB>
     cb2:	20 f0       	brcs	.+8      	; 0xcbc <__mulsf3+0x1c>
     cb4:	95 23       	and	r25, r21
     cb6:	11 f0       	breq	.+4      	; 0xcbc <__mulsf3+0x1c>
     cb8:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__fp_inf>
     cbc:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__fp_nan>
     cc0:	11 24       	eor	r1, r1
     cc2:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_szero>

00000cc6 <__mulsf3x>:
     cc6:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fp_split3>
     cca:	70 f3       	brcs	.-36     	; 0xca8 <__mulsf3+0x8>

00000ccc <__mulsf3_pse>:
     ccc:	95 9f       	mul	r25, r21
     cce:	c1 f3       	breq	.-16     	; 0xcc0 <__mulsf3+0x20>
     cd0:	95 0f       	add	r25, r21
     cd2:	50 e0       	ldi	r21, 0x00	; 0
     cd4:	55 1f       	adc	r21, r21
     cd6:	62 9f       	mul	r22, r18
     cd8:	f0 01       	movw	r30, r0
     cda:	72 9f       	mul	r23, r18
     cdc:	bb 27       	eor	r27, r27
     cde:	f0 0d       	add	r31, r0
     ce0:	b1 1d       	adc	r27, r1
     ce2:	63 9f       	mul	r22, r19
     ce4:	aa 27       	eor	r26, r26
     ce6:	f0 0d       	add	r31, r0
     ce8:	b1 1d       	adc	r27, r1
     cea:	aa 1f       	adc	r26, r26
     cec:	64 9f       	mul	r22, r20
     cee:	66 27       	eor	r22, r22
     cf0:	b0 0d       	add	r27, r0
     cf2:	a1 1d       	adc	r26, r1
     cf4:	66 1f       	adc	r22, r22
     cf6:	82 9f       	mul	r24, r18
     cf8:	22 27       	eor	r18, r18
     cfa:	b0 0d       	add	r27, r0
     cfc:	a1 1d       	adc	r26, r1
     cfe:	62 1f       	adc	r22, r18
     d00:	73 9f       	mul	r23, r19
     d02:	b0 0d       	add	r27, r0
     d04:	a1 1d       	adc	r26, r1
     d06:	62 1f       	adc	r22, r18
     d08:	83 9f       	mul	r24, r19
     d0a:	a0 0d       	add	r26, r0
     d0c:	61 1d       	adc	r22, r1
     d0e:	22 1f       	adc	r18, r18
     d10:	74 9f       	mul	r23, r20
     d12:	33 27       	eor	r19, r19
     d14:	a0 0d       	add	r26, r0
     d16:	61 1d       	adc	r22, r1
     d18:	23 1f       	adc	r18, r19
     d1a:	84 9f       	mul	r24, r20
     d1c:	60 0d       	add	r22, r0
     d1e:	21 1d       	adc	r18, r1
     d20:	82 2f       	mov	r24, r18
     d22:	76 2f       	mov	r23, r22
     d24:	6a 2f       	mov	r22, r26
     d26:	11 24       	eor	r1, r1
     d28:	9f 57       	subi	r25, 0x7F	; 127
     d2a:	50 40       	sbci	r21, 0x00	; 0
     d2c:	9a f0       	brmi	.+38     	; 0xd54 <__mulsf3_pse+0x88>
     d2e:	f1 f0       	breq	.+60     	; 0xd6c <__mulsf3_pse+0xa0>
     d30:	88 23       	and	r24, r24
     d32:	4a f0       	brmi	.+18     	; 0xd46 <__mulsf3_pse+0x7a>
     d34:	ee 0f       	add	r30, r30
     d36:	ff 1f       	adc	r31, r31
     d38:	bb 1f       	adc	r27, r27
     d3a:	66 1f       	adc	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	91 50       	subi	r25, 0x01	; 1
     d42:	50 40       	sbci	r21, 0x00	; 0
     d44:	a9 f7       	brne	.-22     	; 0xd30 <__mulsf3_pse+0x64>
     d46:	9e 3f       	cpi	r25, 0xFE	; 254
     d48:	51 05       	cpc	r21, r1
     d4a:	80 f0       	brcs	.+32     	; 0xd6c <__mulsf3_pse+0xa0>
     d4c:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__fp_inf>
     d50:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_szero>
     d54:	5f 3f       	cpi	r21, 0xFF	; 255
     d56:	e4 f3       	brlt	.-8      	; 0xd50 <__mulsf3_pse+0x84>
     d58:	98 3e       	cpi	r25, 0xE8	; 232
     d5a:	d4 f3       	brlt	.-12     	; 0xd50 <__mulsf3_pse+0x84>
     d5c:	86 95       	lsr	r24
     d5e:	77 95       	ror	r23
     d60:	67 95       	ror	r22
     d62:	b7 95       	ror	r27
     d64:	f7 95       	ror	r31
     d66:	e7 95       	ror	r30
     d68:	9f 5f       	subi	r25, 0xFF	; 255
     d6a:	c1 f7       	brne	.-16     	; 0xd5c <__mulsf3_pse+0x90>
     d6c:	fe 2b       	or	r31, r30
     d6e:	88 0f       	add	r24, r24
     d70:	91 1d       	adc	r25, r1
     d72:	96 95       	lsr	r25
     d74:	87 95       	ror	r24
     d76:	97 f9       	bld	r25, 7
     d78:	08 95       	ret

00000d7a <vfprintf>:
     d7a:	a0 e1       	ldi	r26, 0x10	; 16
     d7c:	b0 e0       	ldi	r27, 0x00	; 0
     d7e:	e3 ec       	ldi	r30, 0xC3	; 195
     d80:	f6 e0       	ldi	r31, 0x06	; 6
     d82:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <__prologue_saves__>
     d86:	7c 01       	movw	r14, r24
     d88:	1b 01       	movw	r2, r22
     d8a:	6a 01       	movw	r12, r20
     d8c:	fc 01       	movw	r30, r24
     d8e:	17 82       	std	Z+7, r1	; 0x07
     d90:	16 82       	std	Z+6, r1	; 0x06
     d92:	83 81       	ldd	r24, Z+3	; 0x03
     d94:	81 ff       	sbrs	r24, 1
     d96:	44 c3       	rjmp	.+1672   	; 0x1420 <vfprintf+0x6a6>
     d98:	9e 01       	movw	r18, r28
     d9a:	2f 5f       	subi	r18, 0xFF	; 255
     d9c:	3f 4f       	sbci	r19, 0xFF	; 255
     d9e:	39 01       	movw	r6, r18
     da0:	f7 01       	movw	r30, r14
     da2:	93 81       	ldd	r25, Z+3	; 0x03
     da4:	f1 01       	movw	r30, r2
     da6:	93 fd       	sbrc	r25, 3
     da8:	85 91       	lpm	r24, Z+
     daa:	93 ff       	sbrs	r25, 3
     dac:	81 91       	ld	r24, Z+
     dae:	1f 01       	movw	r2, r30
     db0:	88 23       	and	r24, r24
     db2:	09 f4       	brne	.+2      	; 0xdb6 <vfprintf+0x3c>
     db4:	31 c3       	rjmp	.+1634   	; 0x1418 <vfprintf+0x69e>
     db6:	85 32       	cpi	r24, 0x25	; 37
     db8:	39 f4       	brne	.+14     	; 0xdc8 <vfprintf+0x4e>
     dba:	93 fd       	sbrc	r25, 3
     dbc:	85 91       	lpm	r24, Z+
     dbe:	93 ff       	sbrs	r25, 3
     dc0:	81 91       	ld	r24, Z+
     dc2:	1f 01       	movw	r2, r30
     dc4:	85 32       	cpi	r24, 0x25	; 37
     dc6:	39 f4       	brne	.+14     	; 0xdd6 <vfprintf+0x5c>
     dc8:	b7 01       	movw	r22, r14
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
     dd0:	56 01       	movw	r10, r12
     dd2:	65 01       	movw	r12, r10
     dd4:	e5 cf       	rjmp	.-54     	; 0xda0 <vfprintf+0x26>
     dd6:	10 e0       	ldi	r17, 0x00	; 0
     dd8:	51 2c       	mov	r5, r1
     dda:	91 2c       	mov	r9, r1
     ddc:	ff e1       	ldi	r31, 0x1F	; 31
     dde:	f9 15       	cp	r31, r9
     de0:	d8 f0       	brcs	.+54     	; 0xe18 <vfprintf+0x9e>
     de2:	8b 32       	cpi	r24, 0x2B	; 43
     de4:	79 f0       	breq	.+30     	; 0xe04 <vfprintf+0x8a>
     de6:	38 f4       	brcc	.+14     	; 0xdf6 <vfprintf+0x7c>
     de8:	80 32       	cpi	r24, 0x20	; 32
     dea:	79 f0       	breq	.+30     	; 0xe0a <vfprintf+0x90>
     dec:	83 32       	cpi	r24, 0x23	; 35
     dee:	a1 f4       	brne	.+40     	; 0xe18 <vfprintf+0x9e>
     df0:	f9 2d       	mov	r31, r9
     df2:	f0 61       	ori	r31, 0x10	; 16
     df4:	2e c0       	rjmp	.+92     	; 0xe52 <vfprintf+0xd8>
     df6:	8d 32       	cpi	r24, 0x2D	; 45
     df8:	61 f0       	breq	.+24     	; 0xe12 <vfprintf+0x98>
     dfa:	80 33       	cpi	r24, 0x30	; 48
     dfc:	69 f4       	brne	.+26     	; 0xe18 <vfprintf+0x9e>
     dfe:	29 2d       	mov	r18, r9
     e00:	21 60       	ori	r18, 0x01	; 1
     e02:	2d c0       	rjmp	.+90     	; 0xe5e <vfprintf+0xe4>
     e04:	39 2d       	mov	r19, r9
     e06:	32 60       	ori	r19, 0x02	; 2
     e08:	93 2e       	mov	r9, r19
     e0a:	89 2d       	mov	r24, r9
     e0c:	84 60       	ori	r24, 0x04	; 4
     e0e:	98 2e       	mov	r9, r24
     e10:	2a c0       	rjmp	.+84     	; 0xe66 <vfprintf+0xec>
     e12:	e9 2d       	mov	r30, r9
     e14:	e8 60       	ori	r30, 0x08	; 8
     e16:	15 c0       	rjmp	.+42     	; 0xe42 <vfprintf+0xc8>
     e18:	97 fc       	sbrc	r9, 7
     e1a:	2d c0       	rjmp	.+90     	; 0xe76 <vfprintf+0xfc>
     e1c:	20 ed       	ldi	r18, 0xD0	; 208
     e1e:	28 0f       	add	r18, r24
     e20:	2a 30       	cpi	r18, 0x0A	; 10
     e22:	88 f4       	brcc	.+34     	; 0xe46 <vfprintf+0xcc>
     e24:	96 fe       	sbrs	r9, 6
     e26:	06 c0       	rjmp	.+12     	; 0xe34 <vfprintf+0xba>
     e28:	3a e0       	ldi	r19, 0x0A	; 10
     e2a:	13 9f       	mul	r17, r19
     e2c:	20 0d       	add	r18, r0
     e2e:	11 24       	eor	r1, r1
     e30:	12 2f       	mov	r17, r18
     e32:	19 c0       	rjmp	.+50     	; 0xe66 <vfprintf+0xec>
     e34:	8a e0       	ldi	r24, 0x0A	; 10
     e36:	58 9e       	mul	r5, r24
     e38:	20 0d       	add	r18, r0
     e3a:	11 24       	eor	r1, r1
     e3c:	52 2e       	mov	r5, r18
     e3e:	e9 2d       	mov	r30, r9
     e40:	e0 62       	ori	r30, 0x20	; 32
     e42:	9e 2e       	mov	r9, r30
     e44:	10 c0       	rjmp	.+32     	; 0xe66 <vfprintf+0xec>
     e46:	8e 32       	cpi	r24, 0x2E	; 46
     e48:	31 f4       	brne	.+12     	; 0xe56 <vfprintf+0xdc>
     e4a:	96 fc       	sbrc	r9, 6
     e4c:	e5 c2       	rjmp	.+1482   	; 0x1418 <vfprintf+0x69e>
     e4e:	f9 2d       	mov	r31, r9
     e50:	f0 64       	ori	r31, 0x40	; 64
     e52:	9f 2e       	mov	r9, r31
     e54:	08 c0       	rjmp	.+16     	; 0xe66 <vfprintf+0xec>
     e56:	8c 36       	cpi	r24, 0x6C	; 108
     e58:	21 f4       	brne	.+8      	; 0xe62 <vfprintf+0xe8>
     e5a:	29 2d       	mov	r18, r9
     e5c:	20 68       	ori	r18, 0x80	; 128
     e5e:	92 2e       	mov	r9, r18
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <vfprintf+0xec>
     e62:	88 36       	cpi	r24, 0x68	; 104
     e64:	41 f4       	brne	.+16     	; 0xe76 <vfprintf+0xfc>
     e66:	f1 01       	movw	r30, r2
     e68:	93 fd       	sbrc	r25, 3
     e6a:	85 91       	lpm	r24, Z+
     e6c:	93 ff       	sbrs	r25, 3
     e6e:	81 91       	ld	r24, Z+
     e70:	1f 01       	movw	r2, r30
     e72:	81 11       	cpse	r24, r1
     e74:	b3 cf       	rjmp	.-154    	; 0xddc <vfprintf+0x62>
     e76:	9b eb       	ldi	r25, 0xBB	; 187
     e78:	98 0f       	add	r25, r24
     e7a:	93 30       	cpi	r25, 0x03	; 3
     e7c:	20 f4       	brcc	.+8      	; 0xe86 <vfprintf+0x10c>
     e7e:	99 2d       	mov	r25, r9
     e80:	90 61       	ori	r25, 0x10	; 16
     e82:	80 5e       	subi	r24, 0xE0	; 224
     e84:	07 c0       	rjmp	.+14     	; 0xe94 <vfprintf+0x11a>
     e86:	9b e9       	ldi	r25, 0x9B	; 155
     e88:	98 0f       	add	r25, r24
     e8a:	93 30       	cpi	r25, 0x03	; 3
     e8c:	08 f0       	brcs	.+2      	; 0xe90 <vfprintf+0x116>
     e8e:	66 c1       	rjmp	.+716    	; 0x115c <vfprintf+0x3e2>
     e90:	99 2d       	mov	r25, r9
     e92:	9f 7e       	andi	r25, 0xEF	; 239
     e94:	96 ff       	sbrs	r25, 6
     e96:	16 e0       	ldi	r17, 0x06	; 6
     e98:	9f 73       	andi	r25, 0x3F	; 63
     e9a:	99 2e       	mov	r9, r25
     e9c:	85 36       	cpi	r24, 0x65	; 101
     e9e:	19 f4       	brne	.+6      	; 0xea6 <vfprintf+0x12c>
     ea0:	90 64       	ori	r25, 0x40	; 64
     ea2:	99 2e       	mov	r9, r25
     ea4:	08 c0       	rjmp	.+16     	; 0xeb6 <vfprintf+0x13c>
     ea6:	86 36       	cpi	r24, 0x66	; 102
     ea8:	21 f4       	brne	.+8      	; 0xeb2 <vfprintf+0x138>
     eaa:	39 2f       	mov	r19, r25
     eac:	30 68       	ori	r19, 0x80	; 128
     eae:	93 2e       	mov	r9, r19
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <vfprintf+0x13c>
     eb2:	11 11       	cpse	r17, r1
     eb4:	11 50       	subi	r17, 0x01	; 1
     eb6:	97 fe       	sbrs	r9, 7
     eb8:	07 c0       	rjmp	.+14     	; 0xec8 <vfprintf+0x14e>
     eba:	1c 33       	cpi	r17, 0x3C	; 60
     ebc:	50 f4       	brcc	.+20     	; 0xed2 <vfprintf+0x158>
     ebe:	44 24       	eor	r4, r4
     ec0:	43 94       	inc	r4
     ec2:	41 0e       	add	r4, r17
     ec4:	27 e0       	ldi	r18, 0x07	; 7
     ec6:	0b c0       	rjmp	.+22     	; 0xede <vfprintf+0x164>
     ec8:	18 30       	cpi	r17, 0x08	; 8
     eca:	38 f0       	brcs	.+14     	; 0xeda <vfprintf+0x160>
     ecc:	27 e0       	ldi	r18, 0x07	; 7
     ece:	17 e0       	ldi	r17, 0x07	; 7
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <vfprintf+0x162>
     ed2:	27 e0       	ldi	r18, 0x07	; 7
     ed4:	9c e3       	ldi	r25, 0x3C	; 60
     ed6:	49 2e       	mov	r4, r25
     ed8:	02 c0       	rjmp	.+4      	; 0xede <vfprintf+0x164>
     eda:	21 2f       	mov	r18, r17
     edc:	41 2c       	mov	r4, r1
     ede:	56 01       	movw	r10, r12
     ee0:	84 e0       	ldi	r24, 0x04	; 4
     ee2:	a8 0e       	add	r10, r24
     ee4:	b1 1c       	adc	r11, r1
     ee6:	f6 01       	movw	r30, r12
     ee8:	60 81       	ld	r22, Z
     eea:	71 81       	ldd	r23, Z+1	; 0x01
     eec:	82 81       	ldd	r24, Z+2	; 0x02
     eee:	93 81       	ldd	r25, Z+3	; 0x03
     ef0:	04 2d       	mov	r16, r4
     ef2:	a3 01       	movw	r20, r6
     ef4:	0e 94 93 0a 	call	0x1526	; 0x1526 <__ftoa_engine>
     ef8:	6c 01       	movw	r12, r24
     efa:	f9 81       	ldd	r31, Y+1	; 0x01
     efc:	fc 87       	std	Y+12, r31	; 0x0c
     efe:	f0 ff       	sbrs	r31, 0
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <vfprintf+0x18c>
     f02:	f3 ff       	sbrs	r31, 3
     f04:	06 c0       	rjmp	.+12     	; 0xf12 <vfprintf+0x198>
     f06:	91 fc       	sbrc	r9, 1
     f08:	06 c0       	rjmp	.+12     	; 0xf16 <vfprintf+0x19c>
     f0a:	92 fe       	sbrs	r9, 2
     f0c:	06 c0       	rjmp	.+12     	; 0xf1a <vfprintf+0x1a0>
     f0e:	00 e2       	ldi	r16, 0x20	; 32
     f10:	05 c0       	rjmp	.+10     	; 0xf1c <vfprintf+0x1a2>
     f12:	0d e2       	ldi	r16, 0x2D	; 45
     f14:	03 c0       	rjmp	.+6      	; 0xf1c <vfprintf+0x1a2>
     f16:	0b e2       	ldi	r16, 0x2B	; 43
     f18:	01 c0       	rjmp	.+2      	; 0xf1c <vfprintf+0x1a2>
     f1a:	00 e0       	ldi	r16, 0x00	; 0
     f1c:	8c 85       	ldd	r24, Y+12	; 0x0c
     f1e:	8c 70       	andi	r24, 0x0C	; 12
     f20:	19 f0       	breq	.+6      	; 0xf28 <vfprintf+0x1ae>
     f22:	01 11       	cpse	r16, r1
     f24:	5a c2       	rjmp	.+1204   	; 0x13da <vfprintf+0x660>
     f26:	9b c2       	rjmp	.+1334   	; 0x145e <vfprintf+0x6e4>
     f28:	97 fe       	sbrs	r9, 7
     f2a:	10 c0       	rjmp	.+32     	; 0xf4c <vfprintf+0x1d2>
     f2c:	4c 0c       	add	r4, r12
     f2e:	fc 85       	ldd	r31, Y+12	; 0x0c
     f30:	f4 ff       	sbrs	r31, 4
     f32:	04 c0       	rjmp	.+8      	; 0xf3c <vfprintf+0x1c2>
     f34:	8a 81       	ldd	r24, Y+2	; 0x02
     f36:	81 33       	cpi	r24, 0x31	; 49
     f38:	09 f4       	brne	.+2      	; 0xf3c <vfprintf+0x1c2>
     f3a:	4a 94       	dec	r4
     f3c:	14 14       	cp	r1, r4
     f3e:	74 f5       	brge	.+92     	; 0xf9c <vfprintf+0x222>
     f40:	28 e0       	ldi	r18, 0x08	; 8
     f42:	24 15       	cp	r18, r4
     f44:	78 f5       	brcc	.+94     	; 0xfa4 <vfprintf+0x22a>
     f46:	88 e0       	ldi	r24, 0x08	; 8
     f48:	48 2e       	mov	r4, r24
     f4a:	2c c0       	rjmp	.+88     	; 0xfa4 <vfprintf+0x22a>
     f4c:	96 fc       	sbrc	r9, 6
     f4e:	2a c0       	rjmp	.+84     	; 0xfa4 <vfprintf+0x22a>
     f50:	81 2f       	mov	r24, r17
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	8c 15       	cp	r24, r12
     f56:	9d 05       	cpc	r25, r13
     f58:	9c f0       	brlt	.+38     	; 0xf80 <vfprintf+0x206>
     f5a:	3c ef       	ldi	r19, 0xFC	; 252
     f5c:	c3 16       	cp	r12, r19
     f5e:	3f ef       	ldi	r19, 0xFF	; 255
     f60:	d3 06       	cpc	r13, r19
     f62:	74 f0       	brlt	.+28     	; 0xf80 <vfprintf+0x206>
     f64:	89 2d       	mov	r24, r9
     f66:	80 68       	ori	r24, 0x80	; 128
     f68:	98 2e       	mov	r9, r24
     f6a:	0a c0       	rjmp	.+20     	; 0xf80 <vfprintf+0x206>
     f6c:	e2 e0       	ldi	r30, 0x02	; 2
     f6e:	f0 e0       	ldi	r31, 0x00	; 0
     f70:	ec 0f       	add	r30, r28
     f72:	fd 1f       	adc	r31, r29
     f74:	e1 0f       	add	r30, r17
     f76:	f1 1d       	adc	r31, r1
     f78:	80 81       	ld	r24, Z
     f7a:	80 33       	cpi	r24, 0x30	; 48
     f7c:	19 f4       	brne	.+6      	; 0xf84 <vfprintf+0x20a>
     f7e:	11 50       	subi	r17, 0x01	; 1
     f80:	11 11       	cpse	r17, r1
     f82:	f4 cf       	rjmp	.-24     	; 0xf6c <vfprintf+0x1f2>
     f84:	97 fe       	sbrs	r9, 7
     f86:	0e c0       	rjmp	.+28     	; 0xfa4 <vfprintf+0x22a>
     f88:	44 24       	eor	r4, r4
     f8a:	43 94       	inc	r4
     f8c:	41 0e       	add	r4, r17
     f8e:	81 2f       	mov	r24, r17
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	c8 16       	cp	r12, r24
     f94:	d9 06       	cpc	r13, r25
     f96:	2c f4       	brge	.+10     	; 0xfa2 <vfprintf+0x228>
     f98:	1c 19       	sub	r17, r12
     f9a:	04 c0       	rjmp	.+8      	; 0xfa4 <vfprintf+0x22a>
     f9c:	44 24       	eor	r4, r4
     f9e:	43 94       	inc	r4
     fa0:	01 c0       	rjmp	.+2      	; 0xfa4 <vfprintf+0x22a>
     fa2:	10 e0       	ldi	r17, 0x00	; 0
     fa4:	97 fe       	sbrs	r9, 7
     fa6:	06 c0       	rjmp	.+12     	; 0xfb4 <vfprintf+0x23a>
     fa8:	1c 14       	cp	r1, r12
     faa:	1d 04       	cpc	r1, r13
     fac:	34 f4       	brge	.+12     	; 0xfba <vfprintf+0x240>
     fae:	c6 01       	movw	r24, r12
     fb0:	01 96       	adiw	r24, 0x01	; 1
     fb2:	05 c0       	rjmp	.+10     	; 0xfbe <vfprintf+0x244>
     fb4:	85 e0       	ldi	r24, 0x05	; 5
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <vfprintf+0x244>
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	01 11       	cpse	r16, r1
     fc0:	01 96       	adiw	r24, 0x01	; 1
     fc2:	11 23       	and	r17, r17
     fc4:	31 f0       	breq	.+12     	; 0xfd2 <vfprintf+0x258>
     fc6:	21 2f       	mov	r18, r17
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	2f 5f       	subi	r18, 0xFF	; 255
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	82 0f       	add	r24, r18
     fd0:	93 1f       	adc	r25, r19
     fd2:	25 2d       	mov	r18, r5
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	82 17       	cp	r24, r18
     fd8:	93 07       	cpc	r25, r19
     fda:	14 f4       	brge	.+4      	; 0xfe0 <vfprintf+0x266>
     fdc:	58 1a       	sub	r5, r24
     fde:	01 c0       	rjmp	.+2      	; 0xfe2 <vfprintf+0x268>
     fe0:	51 2c       	mov	r5, r1
     fe2:	89 2d       	mov	r24, r9
     fe4:	89 70       	andi	r24, 0x09	; 9
     fe6:	49 f4       	brne	.+18     	; 0xffa <vfprintf+0x280>
     fe8:	55 20       	and	r5, r5
     fea:	39 f0       	breq	.+14     	; 0xffa <vfprintf+0x280>
     fec:	b7 01       	movw	r22, r14
     fee:	80 e2       	ldi	r24, 0x20	; 32
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
     ff6:	5a 94       	dec	r5
     ff8:	f7 cf       	rjmp	.-18     	; 0xfe8 <vfprintf+0x26e>
     ffa:	00 23       	and	r16, r16
     ffc:	29 f0       	breq	.+10     	; 0x1008 <vfprintf+0x28e>
     ffe:	b7 01       	movw	r22, r14
    1000:	80 2f       	mov	r24, r16
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1008:	93 fc       	sbrc	r9, 3
    100a:	09 c0       	rjmp	.+18     	; 0x101e <vfprintf+0x2a4>
    100c:	55 20       	and	r5, r5
    100e:	39 f0       	breq	.+14     	; 0x101e <vfprintf+0x2a4>
    1010:	b7 01       	movw	r22, r14
    1012:	80 e3       	ldi	r24, 0x30	; 48
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    101a:	5a 94       	dec	r5
    101c:	f7 cf       	rjmp	.-18     	; 0x100c <vfprintf+0x292>
    101e:	97 fe       	sbrs	r9, 7
    1020:	4c c0       	rjmp	.+152    	; 0x10ba <vfprintf+0x340>
    1022:	46 01       	movw	r8, r12
    1024:	d7 fe       	sbrs	r13, 7
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x2b2>
    1028:	81 2c       	mov	r8, r1
    102a:	91 2c       	mov	r9, r1
    102c:	c6 01       	movw	r24, r12
    102e:	88 19       	sub	r24, r8
    1030:	99 09       	sbc	r25, r9
    1032:	f3 01       	movw	r30, r6
    1034:	e8 0f       	add	r30, r24
    1036:	f9 1f       	adc	r31, r25
    1038:	fe 87       	std	Y+14, r31	; 0x0e
    103a:	ed 87       	std	Y+13, r30	; 0x0d
    103c:	96 01       	movw	r18, r12
    103e:	24 19       	sub	r18, r4
    1040:	31 09       	sbc	r19, r1
    1042:	38 8b       	std	Y+16, r19	; 0x10
    1044:	2f 87       	std	Y+15, r18	; 0x0f
    1046:	01 2f       	mov	r16, r17
    1048:	10 e0       	ldi	r17, 0x00	; 0
    104a:	11 95       	neg	r17
    104c:	01 95       	neg	r16
    104e:	11 09       	sbc	r17, r1
    1050:	3f ef       	ldi	r19, 0xFF	; 255
    1052:	83 16       	cp	r8, r19
    1054:	93 06       	cpc	r9, r19
    1056:	29 f4       	brne	.+10     	; 0x1062 <vfprintf+0x2e8>
    1058:	b7 01       	movw	r22, r14
    105a:	8e e2       	ldi	r24, 0x2E	; 46
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1062:	c8 14       	cp	r12, r8
    1064:	d9 04       	cpc	r13, r9
    1066:	4c f0       	brlt	.+18     	; 0x107a <vfprintf+0x300>
    1068:	8f 85       	ldd	r24, Y+15	; 0x0f
    106a:	98 89       	ldd	r25, Y+16	; 0x10
    106c:	88 15       	cp	r24, r8
    106e:	99 05       	cpc	r25, r9
    1070:	24 f4       	brge	.+8      	; 0x107a <vfprintf+0x300>
    1072:	ed 85       	ldd	r30, Y+13	; 0x0d
    1074:	fe 85       	ldd	r31, Y+14	; 0x0e
    1076:	81 81       	ldd	r24, Z+1	; 0x01
    1078:	01 c0       	rjmp	.+2      	; 0x107c <vfprintf+0x302>
    107a:	80 e3       	ldi	r24, 0x30	; 48
    107c:	f1 e0       	ldi	r31, 0x01	; 1
    107e:	8f 1a       	sub	r8, r31
    1080:	91 08       	sbc	r9, r1
    1082:	2d 85       	ldd	r18, Y+13	; 0x0d
    1084:	3e 85       	ldd	r19, Y+14	; 0x0e
    1086:	2f 5f       	subi	r18, 0xFF	; 255
    1088:	3f 4f       	sbci	r19, 0xFF	; 255
    108a:	3e 87       	std	Y+14, r19	; 0x0e
    108c:	2d 87       	std	Y+13, r18	; 0x0d
    108e:	80 16       	cp	r8, r16
    1090:	91 06       	cpc	r9, r17
    1092:	2c f0       	brlt	.+10     	; 0x109e <vfprintf+0x324>
    1094:	b7 01       	movw	r22, r14
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    109c:	d9 cf       	rjmp	.-78     	; 0x1050 <vfprintf+0x2d6>
    109e:	c8 14       	cp	r12, r8
    10a0:	d9 04       	cpc	r13, r9
    10a2:	41 f4       	brne	.+16     	; 0x10b4 <vfprintf+0x33a>
    10a4:	9a 81       	ldd	r25, Y+2	; 0x02
    10a6:	96 33       	cpi	r25, 0x36	; 54
    10a8:	20 f4       	brcc	.+8      	; 0x10b2 <vfprintf+0x338>
    10aa:	95 33       	cpi	r25, 0x35	; 53
    10ac:	19 f4       	brne	.+6      	; 0x10b4 <vfprintf+0x33a>
    10ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    10b0:	34 ff       	sbrs	r19, 4
    10b2:	81 e3       	ldi	r24, 0x31	; 49
    10b4:	b7 01       	movw	r22, r14
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	4e c0       	rjmp	.+156    	; 0x1156 <vfprintf+0x3dc>
    10ba:	8a 81       	ldd	r24, Y+2	; 0x02
    10bc:	81 33       	cpi	r24, 0x31	; 49
    10be:	19 f0       	breq	.+6      	; 0x10c6 <vfprintf+0x34c>
    10c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    10c2:	9f 7e       	andi	r25, 0xEF	; 239
    10c4:	9c 87       	std	Y+12, r25	; 0x0c
    10c6:	b7 01       	movw	r22, r14
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    10ce:	11 11       	cpse	r17, r1
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <vfprintf+0x362>
    10d2:	94 fc       	sbrc	r9, 4
    10d4:	18 c0       	rjmp	.+48     	; 0x1106 <vfprintf+0x38c>
    10d6:	85 e6       	ldi	r24, 0x65	; 101
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	17 c0       	rjmp	.+46     	; 0x110a <vfprintf+0x390>
    10dc:	b7 01       	movw	r22, r14
    10de:	8e e2       	ldi	r24, 0x2E	; 46
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    10e6:	1e 5f       	subi	r17, 0xFE	; 254
    10e8:	82 e0       	ldi	r24, 0x02	; 2
    10ea:	01 e0       	ldi	r16, 0x01	; 1
    10ec:	08 0f       	add	r16, r24
    10ee:	f3 01       	movw	r30, r6
    10f0:	e8 0f       	add	r30, r24
    10f2:	f1 1d       	adc	r31, r1
    10f4:	80 81       	ld	r24, Z
    10f6:	b7 01       	movw	r22, r14
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    10fe:	80 2f       	mov	r24, r16
    1100:	01 13       	cpse	r16, r17
    1102:	f3 cf       	rjmp	.-26     	; 0x10ea <vfprintf+0x370>
    1104:	e6 cf       	rjmp	.-52     	; 0x10d2 <vfprintf+0x358>
    1106:	85 e4       	ldi	r24, 0x45	; 69
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	b7 01       	movw	r22, r14
    110c:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1110:	d7 fc       	sbrc	r13, 7
    1112:	06 c0       	rjmp	.+12     	; 0x1120 <vfprintf+0x3a6>
    1114:	c1 14       	cp	r12, r1
    1116:	d1 04       	cpc	r13, r1
    1118:	41 f4       	brne	.+16     	; 0x112a <vfprintf+0x3b0>
    111a:	ec 85       	ldd	r30, Y+12	; 0x0c
    111c:	e4 ff       	sbrs	r30, 4
    111e:	05 c0       	rjmp	.+10     	; 0x112a <vfprintf+0x3b0>
    1120:	d1 94       	neg	r13
    1122:	c1 94       	neg	r12
    1124:	d1 08       	sbc	r13, r1
    1126:	8d e2       	ldi	r24, 0x2D	; 45
    1128:	01 c0       	rjmp	.+2      	; 0x112c <vfprintf+0x3b2>
    112a:	8b e2       	ldi	r24, 0x2B	; 43
    112c:	b7 01       	movw	r22, r14
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	2a e0       	ldi	r18, 0x0A	; 10
    1138:	c2 16       	cp	r12, r18
    113a:	d1 04       	cpc	r13, r1
    113c:	2c f0       	brlt	.+10     	; 0x1148 <vfprintf+0x3ce>
    113e:	8f 5f       	subi	r24, 0xFF	; 255
    1140:	fa e0       	ldi	r31, 0x0A	; 10
    1142:	cf 1a       	sub	r12, r31
    1144:	d1 08       	sbc	r13, r1
    1146:	f7 cf       	rjmp	.-18     	; 0x1136 <vfprintf+0x3bc>
    1148:	b7 01       	movw	r22, r14
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1150:	b7 01       	movw	r22, r14
    1152:	c6 01       	movw	r24, r12
    1154:	c0 96       	adiw	r24, 0x30	; 48
    1156:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    115a:	54 c1       	rjmp	.+680    	; 0x1404 <vfprintf+0x68a>
    115c:	83 36       	cpi	r24, 0x63	; 99
    115e:	31 f0       	breq	.+12     	; 0x116c <vfprintf+0x3f2>
    1160:	83 37       	cpi	r24, 0x73	; 115
    1162:	79 f0       	breq	.+30     	; 0x1182 <vfprintf+0x408>
    1164:	83 35       	cpi	r24, 0x53	; 83
    1166:	09 f0       	breq	.+2      	; 0x116a <vfprintf+0x3f0>
    1168:	56 c0       	rjmp	.+172    	; 0x1216 <vfprintf+0x49c>
    116a:	20 c0       	rjmp	.+64     	; 0x11ac <vfprintf+0x432>
    116c:	56 01       	movw	r10, r12
    116e:	32 e0       	ldi	r19, 0x02	; 2
    1170:	a3 0e       	add	r10, r19
    1172:	b1 1c       	adc	r11, r1
    1174:	f6 01       	movw	r30, r12
    1176:	80 81       	ld	r24, Z
    1178:	89 83       	std	Y+1, r24	; 0x01
    117a:	01 e0       	ldi	r16, 0x01	; 1
    117c:	10 e0       	ldi	r17, 0x00	; 0
    117e:	63 01       	movw	r12, r6
    1180:	12 c0       	rjmp	.+36     	; 0x11a6 <vfprintf+0x42c>
    1182:	56 01       	movw	r10, r12
    1184:	f2 e0       	ldi	r31, 0x02	; 2
    1186:	af 0e       	add	r10, r31
    1188:	b1 1c       	adc	r11, r1
    118a:	f6 01       	movw	r30, r12
    118c:	c0 80       	ld	r12, Z
    118e:	d1 80       	ldd	r13, Z+1	; 0x01
    1190:	96 fe       	sbrs	r9, 6
    1192:	03 c0       	rjmp	.+6      	; 0x119a <vfprintf+0x420>
    1194:	61 2f       	mov	r22, r17
    1196:	70 e0       	ldi	r23, 0x00	; 0
    1198:	02 c0       	rjmp	.+4      	; 0x119e <vfprintf+0x424>
    119a:	6f ef       	ldi	r22, 0xFF	; 255
    119c:	7f ef       	ldi	r23, 0xFF	; 255
    119e:	c6 01       	movw	r24, r12
    11a0:	0e 94 76 0b 	call	0x16ec	; 0x16ec <strnlen>
    11a4:	8c 01       	movw	r16, r24
    11a6:	f9 2d       	mov	r31, r9
    11a8:	ff 77       	andi	r31, 0x7F	; 127
    11aa:	14 c0       	rjmp	.+40     	; 0x11d4 <vfprintf+0x45a>
    11ac:	56 01       	movw	r10, r12
    11ae:	22 e0       	ldi	r18, 0x02	; 2
    11b0:	a2 0e       	add	r10, r18
    11b2:	b1 1c       	adc	r11, r1
    11b4:	f6 01       	movw	r30, r12
    11b6:	c0 80       	ld	r12, Z
    11b8:	d1 80       	ldd	r13, Z+1	; 0x01
    11ba:	96 fe       	sbrs	r9, 6
    11bc:	03 c0       	rjmp	.+6      	; 0x11c4 <vfprintf+0x44a>
    11be:	61 2f       	mov	r22, r17
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <vfprintf+0x44e>
    11c4:	6f ef       	ldi	r22, 0xFF	; 255
    11c6:	7f ef       	ldi	r23, 0xFF	; 255
    11c8:	c6 01       	movw	r24, r12
    11ca:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <strnlen_P>
    11ce:	8c 01       	movw	r16, r24
    11d0:	f9 2d       	mov	r31, r9
    11d2:	f0 68       	ori	r31, 0x80	; 128
    11d4:	9f 2e       	mov	r9, r31
    11d6:	f3 fd       	sbrc	r31, 3
    11d8:	1a c0       	rjmp	.+52     	; 0x120e <vfprintf+0x494>
    11da:	85 2d       	mov	r24, r5
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	08 17       	cp	r16, r24
    11e0:	19 07       	cpc	r17, r25
    11e2:	a8 f4       	brcc	.+42     	; 0x120e <vfprintf+0x494>
    11e4:	b7 01       	movw	r22, r14
    11e6:	80 e2       	ldi	r24, 0x20	; 32
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    11ee:	5a 94       	dec	r5
    11f0:	f4 cf       	rjmp	.-24     	; 0x11da <vfprintf+0x460>
    11f2:	f6 01       	movw	r30, r12
    11f4:	97 fc       	sbrc	r9, 7
    11f6:	85 91       	lpm	r24, Z+
    11f8:	97 fe       	sbrs	r9, 7
    11fa:	81 91       	ld	r24, Z+
    11fc:	6f 01       	movw	r12, r30
    11fe:	b7 01       	movw	r22, r14
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1206:	51 10       	cpse	r5, r1
    1208:	5a 94       	dec	r5
    120a:	01 50       	subi	r16, 0x01	; 1
    120c:	11 09       	sbc	r17, r1
    120e:	01 15       	cp	r16, r1
    1210:	11 05       	cpc	r17, r1
    1212:	79 f7       	brne	.-34     	; 0x11f2 <vfprintf+0x478>
    1214:	f7 c0       	rjmp	.+494    	; 0x1404 <vfprintf+0x68a>
    1216:	84 36       	cpi	r24, 0x64	; 100
    1218:	11 f0       	breq	.+4      	; 0x121e <vfprintf+0x4a4>
    121a:	89 36       	cpi	r24, 0x69	; 105
    121c:	61 f5       	brne	.+88     	; 0x1276 <vfprintf+0x4fc>
    121e:	56 01       	movw	r10, r12
    1220:	97 fe       	sbrs	r9, 7
    1222:	09 c0       	rjmp	.+18     	; 0x1236 <vfprintf+0x4bc>
    1224:	24 e0       	ldi	r18, 0x04	; 4
    1226:	a2 0e       	add	r10, r18
    1228:	b1 1c       	adc	r11, r1
    122a:	f6 01       	movw	r30, r12
    122c:	60 81       	ld	r22, Z
    122e:	71 81       	ldd	r23, Z+1	; 0x01
    1230:	82 81       	ldd	r24, Z+2	; 0x02
    1232:	93 81       	ldd	r25, Z+3	; 0x03
    1234:	0a c0       	rjmp	.+20     	; 0x124a <vfprintf+0x4d0>
    1236:	f2 e0       	ldi	r31, 0x02	; 2
    1238:	af 0e       	add	r10, r31
    123a:	b1 1c       	adc	r11, r1
    123c:	f6 01       	movw	r30, r12
    123e:	60 81       	ld	r22, Z
    1240:	71 81       	ldd	r23, Z+1	; 0x01
    1242:	07 2e       	mov	r0, r23
    1244:	00 0c       	add	r0, r0
    1246:	88 0b       	sbc	r24, r24
    1248:	99 0b       	sbc	r25, r25
    124a:	f9 2d       	mov	r31, r9
    124c:	ff 76       	andi	r31, 0x6F	; 111
    124e:	9f 2e       	mov	r9, r31
    1250:	97 ff       	sbrs	r25, 7
    1252:	09 c0       	rjmp	.+18     	; 0x1266 <vfprintf+0x4ec>
    1254:	90 95       	com	r25
    1256:	80 95       	com	r24
    1258:	70 95       	com	r23
    125a:	61 95       	neg	r22
    125c:	7f 4f       	sbci	r23, 0xFF	; 255
    125e:	8f 4f       	sbci	r24, 0xFF	; 255
    1260:	9f 4f       	sbci	r25, 0xFF	; 255
    1262:	f0 68       	ori	r31, 0x80	; 128
    1264:	9f 2e       	mov	r9, r31
    1266:	2a e0       	ldi	r18, 0x0A	; 10
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	a3 01       	movw	r20, r6
    126c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__ultoa_invert>
    1270:	c8 2e       	mov	r12, r24
    1272:	c6 18       	sub	r12, r6
    1274:	3f c0       	rjmp	.+126    	; 0x12f4 <vfprintf+0x57a>
    1276:	09 2d       	mov	r16, r9
    1278:	85 37       	cpi	r24, 0x75	; 117
    127a:	21 f4       	brne	.+8      	; 0x1284 <vfprintf+0x50a>
    127c:	0f 7e       	andi	r16, 0xEF	; 239
    127e:	2a e0       	ldi	r18, 0x0A	; 10
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	1d c0       	rjmp	.+58     	; 0x12be <vfprintf+0x544>
    1284:	09 7f       	andi	r16, 0xF9	; 249
    1286:	8f 36       	cpi	r24, 0x6F	; 111
    1288:	91 f0       	breq	.+36     	; 0x12ae <vfprintf+0x534>
    128a:	18 f4       	brcc	.+6      	; 0x1292 <vfprintf+0x518>
    128c:	88 35       	cpi	r24, 0x58	; 88
    128e:	59 f0       	breq	.+22     	; 0x12a6 <vfprintf+0x52c>
    1290:	c3 c0       	rjmp	.+390    	; 0x1418 <vfprintf+0x69e>
    1292:	80 37       	cpi	r24, 0x70	; 112
    1294:	19 f0       	breq	.+6      	; 0x129c <vfprintf+0x522>
    1296:	88 37       	cpi	r24, 0x78	; 120
    1298:	11 f0       	breq	.+4      	; 0x129e <vfprintf+0x524>
    129a:	be c0       	rjmp	.+380    	; 0x1418 <vfprintf+0x69e>
    129c:	00 61       	ori	r16, 0x10	; 16
    129e:	04 ff       	sbrs	r16, 4
    12a0:	09 c0       	rjmp	.+18     	; 0x12b4 <vfprintf+0x53a>
    12a2:	04 60       	ori	r16, 0x04	; 4
    12a4:	07 c0       	rjmp	.+14     	; 0x12b4 <vfprintf+0x53a>
    12a6:	94 fe       	sbrs	r9, 4
    12a8:	08 c0       	rjmp	.+16     	; 0x12ba <vfprintf+0x540>
    12aa:	06 60       	ori	r16, 0x06	; 6
    12ac:	06 c0       	rjmp	.+12     	; 0x12ba <vfprintf+0x540>
    12ae:	28 e0       	ldi	r18, 0x08	; 8
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <vfprintf+0x544>
    12b4:	20 e1       	ldi	r18, 0x10	; 16
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <vfprintf+0x544>
    12ba:	20 e1       	ldi	r18, 0x10	; 16
    12bc:	32 e0       	ldi	r19, 0x02	; 2
    12be:	56 01       	movw	r10, r12
    12c0:	07 ff       	sbrs	r16, 7
    12c2:	09 c0       	rjmp	.+18     	; 0x12d6 <vfprintf+0x55c>
    12c4:	84 e0       	ldi	r24, 0x04	; 4
    12c6:	a8 0e       	add	r10, r24
    12c8:	b1 1c       	adc	r11, r1
    12ca:	f6 01       	movw	r30, r12
    12cc:	60 81       	ld	r22, Z
    12ce:	71 81       	ldd	r23, Z+1	; 0x01
    12d0:	82 81       	ldd	r24, Z+2	; 0x02
    12d2:	93 81       	ldd	r25, Z+3	; 0x03
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <vfprintf+0x56c>
    12d6:	f2 e0       	ldi	r31, 0x02	; 2
    12d8:	af 0e       	add	r10, r31
    12da:	b1 1c       	adc	r11, r1
    12dc:	f6 01       	movw	r30, r12
    12de:	60 81       	ld	r22, Z
    12e0:	71 81       	ldd	r23, Z+1	; 0x01
    12e2:	80 e0       	ldi	r24, 0x00	; 0
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	a3 01       	movw	r20, r6
    12e8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__ultoa_invert>
    12ec:	c8 2e       	mov	r12, r24
    12ee:	c6 18       	sub	r12, r6
    12f0:	0f 77       	andi	r16, 0x7F	; 127
    12f2:	90 2e       	mov	r9, r16
    12f4:	96 fe       	sbrs	r9, 6
    12f6:	0b c0       	rjmp	.+22     	; 0x130e <vfprintf+0x594>
    12f8:	09 2d       	mov	r16, r9
    12fa:	0e 7f       	andi	r16, 0xFE	; 254
    12fc:	c1 16       	cp	r12, r17
    12fe:	50 f4       	brcc	.+20     	; 0x1314 <vfprintf+0x59a>
    1300:	94 fe       	sbrs	r9, 4
    1302:	0a c0       	rjmp	.+20     	; 0x1318 <vfprintf+0x59e>
    1304:	92 fc       	sbrc	r9, 2
    1306:	08 c0       	rjmp	.+16     	; 0x1318 <vfprintf+0x59e>
    1308:	09 2d       	mov	r16, r9
    130a:	0e 7e       	andi	r16, 0xEE	; 238
    130c:	05 c0       	rjmp	.+10     	; 0x1318 <vfprintf+0x59e>
    130e:	dc 2c       	mov	r13, r12
    1310:	09 2d       	mov	r16, r9
    1312:	03 c0       	rjmp	.+6      	; 0x131a <vfprintf+0x5a0>
    1314:	dc 2c       	mov	r13, r12
    1316:	01 c0       	rjmp	.+2      	; 0x131a <vfprintf+0x5a0>
    1318:	d1 2e       	mov	r13, r17
    131a:	04 ff       	sbrs	r16, 4
    131c:	0d c0       	rjmp	.+26     	; 0x1338 <vfprintf+0x5be>
    131e:	fe 01       	movw	r30, r28
    1320:	ec 0d       	add	r30, r12
    1322:	f1 1d       	adc	r31, r1
    1324:	80 81       	ld	r24, Z
    1326:	80 33       	cpi	r24, 0x30	; 48
    1328:	11 f4       	brne	.+4      	; 0x132e <vfprintf+0x5b4>
    132a:	09 7e       	andi	r16, 0xE9	; 233
    132c:	09 c0       	rjmp	.+18     	; 0x1340 <vfprintf+0x5c6>
    132e:	02 ff       	sbrs	r16, 2
    1330:	06 c0       	rjmp	.+12     	; 0x133e <vfprintf+0x5c4>
    1332:	d3 94       	inc	r13
    1334:	d3 94       	inc	r13
    1336:	04 c0       	rjmp	.+8      	; 0x1340 <vfprintf+0x5c6>
    1338:	80 2f       	mov	r24, r16
    133a:	86 78       	andi	r24, 0x86	; 134
    133c:	09 f0       	breq	.+2      	; 0x1340 <vfprintf+0x5c6>
    133e:	d3 94       	inc	r13
    1340:	03 fd       	sbrc	r16, 3
    1342:	11 c0       	rjmp	.+34     	; 0x1366 <vfprintf+0x5ec>
    1344:	00 ff       	sbrs	r16, 0
    1346:	06 c0       	rjmp	.+12     	; 0x1354 <vfprintf+0x5da>
    1348:	1c 2d       	mov	r17, r12
    134a:	d5 14       	cp	r13, r5
    134c:	80 f4       	brcc	.+32     	; 0x136e <vfprintf+0x5f4>
    134e:	15 0d       	add	r17, r5
    1350:	1d 19       	sub	r17, r13
    1352:	0d c0       	rjmp	.+26     	; 0x136e <vfprintf+0x5f4>
    1354:	d5 14       	cp	r13, r5
    1356:	58 f4       	brcc	.+22     	; 0x136e <vfprintf+0x5f4>
    1358:	b7 01       	movw	r22, r14
    135a:	80 e2       	ldi	r24, 0x20	; 32
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1362:	d3 94       	inc	r13
    1364:	f7 cf       	rjmp	.-18     	; 0x1354 <vfprintf+0x5da>
    1366:	d5 14       	cp	r13, r5
    1368:	10 f4       	brcc	.+4      	; 0x136e <vfprintf+0x5f4>
    136a:	5d 18       	sub	r5, r13
    136c:	01 c0       	rjmp	.+2      	; 0x1370 <vfprintf+0x5f6>
    136e:	51 2c       	mov	r5, r1
    1370:	04 ff       	sbrs	r16, 4
    1372:	10 c0       	rjmp	.+32     	; 0x1394 <vfprintf+0x61a>
    1374:	b7 01       	movw	r22, r14
    1376:	80 e3       	ldi	r24, 0x30	; 48
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    137e:	02 ff       	sbrs	r16, 2
    1380:	17 c0       	rjmp	.+46     	; 0x13b0 <vfprintf+0x636>
    1382:	01 fd       	sbrc	r16, 1
    1384:	03 c0       	rjmp	.+6      	; 0x138c <vfprintf+0x612>
    1386:	88 e7       	ldi	r24, 0x78	; 120
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <vfprintf+0x616>
    138c:	88 e5       	ldi	r24, 0x58	; 88
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	b7 01       	movw	r22, r14
    1392:	0c c0       	rjmp	.+24     	; 0x13ac <vfprintf+0x632>
    1394:	80 2f       	mov	r24, r16
    1396:	86 78       	andi	r24, 0x86	; 134
    1398:	59 f0       	breq	.+22     	; 0x13b0 <vfprintf+0x636>
    139a:	01 ff       	sbrs	r16, 1
    139c:	02 c0       	rjmp	.+4      	; 0x13a2 <vfprintf+0x628>
    139e:	8b e2       	ldi	r24, 0x2B	; 43
    13a0:	01 c0       	rjmp	.+2      	; 0x13a4 <vfprintf+0x62a>
    13a2:	80 e2       	ldi	r24, 0x20	; 32
    13a4:	07 fd       	sbrc	r16, 7
    13a6:	8d e2       	ldi	r24, 0x2D	; 45
    13a8:	b7 01       	movw	r22, r14
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    13b0:	c1 16       	cp	r12, r17
    13b2:	38 f4       	brcc	.+14     	; 0x13c2 <vfprintf+0x648>
    13b4:	b7 01       	movw	r22, r14
    13b6:	80 e3       	ldi	r24, 0x30	; 48
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    13be:	11 50       	subi	r17, 0x01	; 1
    13c0:	f7 cf       	rjmp	.-18     	; 0x13b0 <vfprintf+0x636>
    13c2:	ca 94       	dec	r12
    13c4:	f3 01       	movw	r30, r6
    13c6:	ec 0d       	add	r30, r12
    13c8:	f1 1d       	adc	r31, r1
    13ca:	80 81       	ld	r24, Z
    13cc:	b7 01       	movw	r22, r14
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    13d4:	c1 10       	cpse	r12, r1
    13d6:	f5 cf       	rjmp	.-22     	; 0x13c2 <vfprintf+0x648>
    13d8:	15 c0       	rjmp	.+42     	; 0x1404 <vfprintf+0x68a>
    13da:	f4 e0       	ldi	r31, 0x04	; 4
    13dc:	f5 15       	cp	r31, r5
    13de:	60 f5       	brcc	.+88     	; 0x1438 <vfprintf+0x6be>
    13e0:	84 e0       	ldi	r24, 0x04	; 4
    13e2:	58 1a       	sub	r5, r24
    13e4:	93 fe       	sbrs	r9, 3
    13e6:	1f c0       	rjmp	.+62     	; 0x1426 <vfprintf+0x6ac>
    13e8:	01 11       	cpse	r16, r1
    13ea:	27 c0       	rjmp	.+78     	; 0x143a <vfprintf+0x6c0>
    13ec:	2c 85       	ldd	r18, Y+12	; 0x0c
    13ee:	23 ff       	sbrs	r18, 3
    13f0:	2a c0       	rjmp	.+84     	; 0x1446 <vfprintf+0x6cc>
    13f2:	04 e5       	ldi	r16, 0x54	; 84
    13f4:	10 e0       	ldi	r17, 0x00	; 0
    13f6:	39 2d       	mov	r19, r9
    13f8:	30 71       	andi	r19, 0x10	; 16
    13fa:	93 2e       	mov	r9, r19
    13fc:	f8 01       	movw	r30, r16
    13fe:	84 91       	lpm	r24, Z
    1400:	81 11       	cpse	r24, r1
    1402:	24 c0       	rjmp	.+72     	; 0x144c <vfprintf+0x6d2>
    1404:	55 20       	and	r5, r5
    1406:	09 f4       	brne	.+2      	; 0x140a <vfprintf+0x690>
    1408:	e4 cc       	rjmp	.-1592   	; 0xdd2 <vfprintf+0x58>
    140a:	b7 01       	movw	r22, r14
    140c:	80 e2       	ldi	r24, 0x20	; 32
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1414:	5a 94       	dec	r5
    1416:	f6 cf       	rjmp	.-20     	; 0x1404 <vfprintf+0x68a>
    1418:	f7 01       	movw	r30, r14
    141a:	86 81       	ldd	r24, Z+6	; 0x06
    141c:	97 81       	ldd	r25, Z+7	; 0x07
    141e:	26 c0       	rjmp	.+76     	; 0x146c <vfprintf+0x6f2>
    1420:	8f ef       	ldi	r24, 0xFF	; 255
    1422:	9f ef       	ldi	r25, 0xFF	; 255
    1424:	23 c0       	rjmp	.+70     	; 0x146c <vfprintf+0x6f2>
    1426:	b7 01       	movw	r22, r14
    1428:	80 e2       	ldi	r24, 0x20	; 32
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1430:	5a 94       	dec	r5
    1432:	51 10       	cpse	r5, r1
    1434:	f8 cf       	rjmp	.-16     	; 0x1426 <vfprintf+0x6ac>
    1436:	d8 cf       	rjmp	.-80     	; 0x13e8 <vfprintf+0x66e>
    1438:	51 2c       	mov	r5, r1
    143a:	b7 01       	movw	r22, r14
    143c:	80 2f       	mov	r24, r16
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1444:	d3 cf       	rjmp	.-90     	; 0x13ec <vfprintf+0x672>
    1446:	08 e5       	ldi	r16, 0x58	; 88
    1448:	10 e0       	ldi	r17, 0x00	; 0
    144a:	d5 cf       	rjmp	.-86     	; 0x13f6 <vfprintf+0x67c>
    144c:	91 10       	cpse	r9, r1
    144e:	80 52       	subi	r24, 0x20	; 32
    1450:	b7 01       	movw	r22, r14
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	0e 94 89 0b 	call	0x1712	; 0x1712 <fputc>
    1458:	0f 5f       	subi	r16, 0xFF	; 255
    145a:	1f 4f       	sbci	r17, 0xFF	; 255
    145c:	cf cf       	rjmp	.-98     	; 0x13fc <vfprintf+0x682>
    145e:	23 e0       	ldi	r18, 0x03	; 3
    1460:	25 15       	cp	r18, r5
    1462:	10 f4       	brcc	.+4      	; 0x1468 <vfprintf+0x6ee>
    1464:	83 e0       	ldi	r24, 0x03	; 3
    1466:	bd cf       	rjmp	.-134    	; 0x13e2 <vfprintf+0x668>
    1468:	51 2c       	mov	r5, r1
    146a:	c0 cf       	rjmp	.-128    	; 0x13ec <vfprintf+0x672>
    146c:	60 96       	adiw	r28, 0x10	; 16
    146e:	e2 e1       	ldi	r30, 0x12	; 18
    1470:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__epilogue_restores__>

00001474 <__prologue_saves__>:
    1474:	2f 92       	push	r2
    1476:	3f 92       	push	r3
    1478:	4f 92       	push	r4
    147a:	5f 92       	push	r5
    147c:	6f 92       	push	r6
    147e:	7f 92       	push	r7
    1480:	8f 92       	push	r8
    1482:	9f 92       	push	r9
    1484:	af 92       	push	r10
    1486:	bf 92       	push	r11
    1488:	cf 92       	push	r12
    148a:	df 92       	push	r13
    148c:	ef 92       	push	r14
    148e:	ff 92       	push	r15
    1490:	0f 93       	push	r16
    1492:	1f 93       	push	r17
    1494:	cf 93       	push	r28
    1496:	df 93       	push	r29
    1498:	cd b7       	in	r28, 0x3d	; 61
    149a:	de b7       	in	r29, 0x3e	; 62
    149c:	ca 1b       	sub	r28, r26
    149e:	db 0b       	sbc	r29, r27
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	09 94       	ijmp

000014ac <__epilogue_restores__>:
    14ac:	2a 88       	ldd	r2, Y+18	; 0x12
    14ae:	39 88       	ldd	r3, Y+17	; 0x11
    14b0:	48 88       	ldd	r4, Y+16	; 0x10
    14b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    14b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    14b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    14b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    14bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    14be:	b9 84       	ldd	r11, Y+9	; 0x09
    14c0:	c8 84       	ldd	r12, Y+8	; 0x08
    14c2:	df 80       	ldd	r13, Y+7	; 0x07
    14c4:	ee 80       	ldd	r14, Y+6	; 0x06
    14c6:	fd 80       	ldd	r15, Y+5	; 0x05
    14c8:	0c 81       	ldd	r16, Y+4	; 0x04
    14ca:	1b 81       	ldd	r17, Y+3	; 0x03
    14cc:	aa 81       	ldd	r26, Y+2	; 0x02
    14ce:	b9 81       	ldd	r27, Y+1	; 0x01
    14d0:	ce 0f       	add	r28, r30
    14d2:	d1 1d       	adc	r29, r1
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	ed 01       	movw	r28, r26
    14e0:	08 95       	ret

000014e2 <atof>:
    14e2:	66 27       	eor	r22, r22
    14e4:	77 27       	eor	r23, r23
    14e6:	0c 94 45 0c 	jmp	0x188a	; 0x188a <strtod>

000014ea <atoi>:
    14ea:	fc 01       	movw	r30, r24
    14ec:	88 27       	eor	r24, r24
    14ee:	99 27       	eor	r25, r25
    14f0:	e8 94       	clt
    14f2:	21 91       	ld	r18, Z+
    14f4:	20 32       	cpi	r18, 0x20	; 32
    14f6:	e9 f3       	breq	.-6      	; 0x14f2 <atoi+0x8>
    14f8:	29 30       	cpi	r18, 0x09	; 9
    14fa:	10 f0       	brcs	.+4      	; 0x1500 <atoi+0x16>
    14fc:	2e 30       	cpi	r18, 0x0E	; 14
    14fe:	c8 f3       	brcs	.-14     	; 0x14f2 <atoi+0x8>
    1500:	2b 32       	cpi	r18, 0x2B	; 43
    1502:	41 f0       	breq	.+16     	; 0x1514 <atoi+0x2a>
    1504:	2d 32       	cpi	r18, 0x2D	; 45
    1506:	39 f4       	brne	.+14     	; 0x1516 <atoi+0x2c>
    1508:	68 94       	set
    150a:	04 c0       	rjmp	.+8      	; 0x1514 <atoi+0x2a>
    150c:	0e 94 81 0b 	call	0x1702	; 0x1702 <__mulhi_const_10>
    1510:	82 0f       	add	r24, r18
    1512:	91 1d       	adc	r25, r1
    1514:	21 91       	ld	r18, Z+
    1516:	20 53       	subi	r18, 0x30	; 48
    1518:	2a 30       	cpi	r18, 0x0A	; 10
    151a:	c0 f3       	brcs	.-16     	; 0x150c <atoi+0x22>
    151c:	1e f4       	brtc	.+6      	; 0x1524 <atoi+0x3a>
    151e:	90 95       	com	r25
    1520:	81 95       	neg	r24
    1522:	9f 4f       	sbci	r25, 0xFF	; 255
    1524:	08 95       	ret

00001526 <__ftoa_engine>:
    1526:	28 30       	cpi	r18, 0x08	; 8
    1528:	08 f0       	brcs	.+2      	; 0x152c <__ftoa_engine+0x6>
    152a:	27 e0       	ldi	r18, 0x07	; 7
    152c:	33 27       	eor	r19, r19
    152e:	da 01       	movw	r26, r20
    1530:	99 0f       	add	r25, r25
    1532:	31 1d       	adc	r19, r1
    1534:	87 fd       	sbrc	r24, 7
    1536:	91 60       	ori	r25, 0x01	; 1
    1538:	00 96       	adiw	r24, 0x00	; 0
    153a:	61 05       	cpc	r22, r1
    153c:	71 05       	cpc	r23, r1
    153e:	39 f4       	brne	.+14     	; 0x154e <__ftoa_engine+0x28>
    1540:	32 60       	ori	r19, 0x02	; 2
    1542:	2e 5f       	subi	r18, 0xFE	; 254
    1544:	3d 93       	st	X+, r19
    1546:	30 e3       	ldi	r19, 0x30	; 48
    1548:	2a 95       	dec	r18
    154a:	e1 f7       	brne	.-8      	; 0x1544 <__ftoa_engine+0x1e>
    154c:	08 95       	ret
    154e:	9f 3f       	cpi	r25, 0xFF	; 255
    1550:	30 f0       	brcs	.+12     	; 0x155e <__ftoa_engine+0x38>
    1552:	80 38       	cpi	r24, 0x80	; 128
    1554:	71 05       	cpc	r23, r1
    1556:	61 05       	cpc	r22, r1
    1558:	09 f0       	breq	.+2      	; 0x155c <__ftoa_engine+0x36>
    155a:	3c 5f       	subi	r19, 0xFC	; 252
    155c:	3c 5f       	subi	r19, 0xFC	; 252
    155e:	3d 93       	st	X+, r19
    1560:	91 30       	cpi	r25, 0x01	; 1
    1562:	08 f0       	brcs	.+2      	; 0x1566 <__ftoa_engine+0x40>
    1564:	80 68       	ori	r24, 0x80	; 128
    1566:	91 1d       	adc	r25, r1
    1568:	df 93       	push	r29
    156a:	cf 93       	push	r28
    156c:	1f 93       	push	r17
    156e:	0f 93       	push	r16
    1570:	ff 92       	push	r15
    1572:	ef 92       	push	r14
    1574:	19 2f       	mov	r17, r25
    1576:	98 7f       	andi	r25, 0xF8	; 248
    1578:	96 95       	lsr	r25
    157a:	e9 2f       	mov	r30, r25
    157c:	96 95       	lsr	r25
    157e:	96 95       	lsr	r25
    1580:	e9 0f       	add	r30, r25
    1582:	ff 27       	eor	r31, r31
    1584:	ea 54       	subi	r30, 0x4A	; 74
    1586:	ff 4f       	sbci	r31, 0xFF	; 255
    1588:	99 27       	eor	r25, r25
    158a:	33 27       	eor	r19, r19
    158c:	ee 24       	eor	r14, r14
    158e:	ff 24       	eor	r15, r15
    1590:	a7 01       	movw	r20, r14
    1592:	e7 01       	movw	r28, r14
    1594:	05 90       	lpm	r0, Z+
    1596:	08 94       	sec
    1598:	07 94       	ror	r0
    159a:	28 f4       	brcc	.+10     	; 0x15a6 <__ftoa_engine+0x80>
    159c:	36 0f       	add	r19, r22
    159e:	e7 1e       	adc	r14, r23
    15a0:	f8 1e       	adc	r15, r24
    15a2:	49 1f       	adc	r20, r25
    15a4:	51 1d       	adc	r21, r1
    15a6:	66 0f       	add	r22, r22
    15a8:	77 1f       	adc	r23, r23
    15aa:	88 1f       	adc	r24, r24
    15ac:	99 1f       	adc	r25, r25
    15ae:	06 94       	lsr	r0
    15b0:	a1 f7       	brne	.-24     	; 0x159a <__ftoa_engine+0x74>
    15b2:	05 90       	lpm	r0, Z+
    15b4:	07 94       	ror	r0
    15b6:	28 f4       	brcc	.+10     	; 0x15c2 <__ftoa_engine+0x9c>
    15b8:	e7 0e       	add	r14, r23
    15ba:	f8 1e       	adc	r15, r24
    15bc:	49 1f       	adc	r20, r25
    15be:	56 1f       	adc	r21, r22
    15c0:	c1 1d       	adc	r28, r1
    15c2:	77 0f       	add	r23, r23
    15c4:	88 1f       	adc	r24, r24
    15c6:	99 1f       	adc	r25, r25
    15c8:	66 1f       	adc	r22, r22
    15ca:	06 94       	lsr	r0
    15cc:	a1 f7       	brne	.-24     	; 0x15b6 <__ftoa_engine+0x90>
    15ce:	05 90       	lpm	r0, Z+
    15d0:	07 94       	ror	r0
    15d2:	28 f4       	brcc	.+10     	; 0x15de <__ftoa_engine+0xb8>
    15d4:	f8 0e       	add	r15, r24
    15d6:	49 1f       	adc	r20, r25
    15d8:	56 1f       	adc	r21, r22
    15da:	c7 1f       	adc	r28, r23
    15dc:	d1 1d       	adc	r29, r1
    15de:	88 0f       	add	r24, r24
    15e0:	99 1f       	adc	r25, r25
    15e2:	66 1f       	adc	r22, r22
    15e4:	77 1f       	adc	r23, r23
    15e6:	06 94       	lsr	r0
    15e8:	a1 f7       	brne	.-24     	; 0x15d2 <__ftoa_engine+0xac>
    15ea:	05 90       	lpm	r0, Z+
    15ec:	07 94       	ror	r0
    15ee:	20 f4       	brcc	.+8      	; 0x15f8 <__ftoa_engine+0xd2>
    15f0:	49 0f       	add	r20, r25
    15f2:	56 1f       	adc	r21, r22
    15f4:	c7 1f       	adc	r28, r23
    15f6:	d8 1f       	adc	r29, r24
    15f8:	99 0f       	add	r25, r25
    15fa:	66 1f       	adc	r22, r22
    15fc:	77 1f       	adc	r23, r23
    15fe:	88 1f       	adc	r24, r24
    1600:	06 94       	lsr	r0
    1602:	a9 f7       	brne	.-22     	; 0x15ee <__ftoa_engine+0xc8>
    1604:	84 91       	lpm	r24, Z
    1606:	10 95       	com	r17
    1608:	17 70       	andi	r17, 0x07	; 7
    160a:	41 f0       	breq	.+16     	; 0x161c <__ftoa_engine+0xf6>
    160c:	d6 95       	lsr	r29
    160e:	c7 95       	ror	r28
    1610:	57 95       	ror	r21
    1612:	47 95       	ror	r20
    1614:	f7 94       	ror	r15
    1616:	e7 94       	ror	r14
    1618:	1a 95       	dec	r17
    161a:	c1 f7       	brne	.-16     	; 0x160c <__ftoa_engine+0xe6>
    161c:	ec e5       	ldi	r30, 0x5C	; 92
    161e:	f0 e0       	ldi	r31, 0x00	; 0
    1620:	68 94       	set
    1622:	15 90       	lpm	r1, Z+
    1624:	15 91       	lpm	r17, Z+
    1626:	35 91       	lpm	r19, Z+
    1628:	65 91       	lpm	r22, Z+
    162a:	95 91       	lpm	r25, Z+
    162c:	05 90       	lpm	r0, Z+
    162e:	7f e2       	ldi	r23, 0x2F	; 47
    1630:	73 95       	inc	r23
    1632:	e1 18       	sub	r14, r1
    1634:	f1 0a       	sbc	r15, r17
    1636:	43 0b       	sbc	r20, r19
    1638:	56 0b       	sbc	r21, r22
    163a:	c9 0b       	sbc	r28, r25
    163c:	d0 09       	sbc	r29, r0
    163e:	c0 f7       	brcc	.-16     	; 0x1630 <__ftoa_engine+0x10a>
    1640:	e1 0c       	add	r14, r1
    1642:	f1 1e       	adc	r15, r17
    1644:	43 1f       	adc	r20, r19
    1646:	56 1f       	adc	r21, r22
    1648:	c9 1f       	adc	r28, r25
    164a:	d0 1d       	adc	r29, r0
    164c:	7e f4       	brtc	.+30     	; 0x166c <__ftoa_engine+0x146>
    164e:	70 33       	cpi	r23, 0x30	; 48
    1650:	11 f4       	brne	.+4      	; 0x1656 <__ftoa_engine+0x130>
    1652:	8a 95       	dec	r24
    1654:	e6 cf       	rjmp	.-52     	; 0x1622 <__ftoa_engine+0xfc>
    1656:	e8 94       	clt
    1658:	01 50       	subi	r16, 0x01	; 1
    165a:	30 f0       	brcs	.+12     	; 0x1668 <__ftoa_engine+0x142>
    165c:	08 0f       	add	r16, r24
    165e:	0a f4       	brpl	.+2      	; 0x1662 <__ftoa_engine+0x13c>
    1660:	00 27       	eor	r16, r16
    1662:	02 17       	cp	r16, r18
    1664:	08 f4       	brcc	.+2      	; 0x1668 <__ftoa_engine+0x142>
    1666:	20 2f       	mov	r18, r16
    1668:	23 95       	inc	r18
    166a:	02 2f       	mov	r16, r18
    166c:	7a 33       	cpi	r23, 0x3A	; 58
    166e:	28 f0       	brcs	.+10     	; 0x167a <__ftoa_engine+0x154>
    1670:	79 e3       	ldi	r23, 0x39	; 57
    1672:	7d 93       	st	X+, r23
    1674:	2a 95       	dec	r18
    1676:	e9 f7       	brne	.-6      	; 0x1672 <__ftoa_engine+0x14c>
    1678:	10 c0       	rjmp	.+32     	; 0x169a <__ftoa_engine+0x174>
    167a:	7d 93       	st	X+, r23
    167c:	2a 95       	dec	r18
    167e:	89 f6       	brne	.-94     	; 0x1622 <__ftoa_engine+0xfc>
    1680:	06 94       	lsr	r0
    1682:	97 95       	ror	r25
    1684:	67 95       	ror	r22
    1686:	37 95       	ror	r19
    1688:	17 95       	ror	r17
    168a:	17 94       	ror	r1
    168c:	e1 18       	sub	r14, r1
    168e:	f1 0a       	sbc	r15, r17
    1690:	43 0b       	sbc	r20, r19
    1692:	56 0b       	sbc	r21, r22
    1694:	c9 0b       	sbc	r28, r25
    1696:	d0 09       	sbc	r29, r0
    1698:	98 f0       	brcs	.+38     	; 0x16c0 <__ftoa_engine+0x19a>
    169a:	23 95       	inc	r18
    169c:	7e 91       	ld	r23, -X
    169e:	73 95       	inc	r23
    16a0:	7a 33       	cpi	r23, 0x3A	; 58
    16a2:	08 f0       	brcs	.+2      	; 0x16a6 <__ftoa_engine+0x180>
    16a4:	70 e3       	ldi	r23, 0x30	; 48
    16a6:	7c 93       	st	X, r23
    16a8:	20 13       	cpse	r18, r16
    16aa:	b8 f7       	brcc	.-18     	; 0x169a <__ftoa_engine+0x174>
    16ac:	7e 91       	ld	r23, -X
    16ae:	70 61       	ori	r23, 0x10	; 16
    16b0:	7d 93       	st	X+, r23
    16b2:	30 f0       	brcs	.+12     	; 0x16c0 <__ftoa_engine+0x19a>
    16b4:	83 95       	inc	r24
    16b6:	71 e3       	ldi	r23, 0x31	; 49
    16b8:	7d 93       	st	X+, r23
    16ba:	70 e3       	ldi	r23, 0x30	; 48
    16bc:	2a 95       	dec	r18
    16be:	e1 f7       	brne	.-8      	; 0x16b8 <__ftoa_engine+0x192>
    16c0:	11 24       	eor	r1, r1
    16c2:	ef 90       	pop	r14
    16c4:	ff 90       	pop	r15
    16c6:	0f 91       	pop	r16
    16c8:	1f 91       	pop	r17
    16ca:	cf 91       	pop	r28
    16cc:	df 91       	pop	r29
    16ce:	99 27       	eor	r25, r25
    16d0:	87 fd       	sbrc	r24, 7
    16d2:	90 95       	com	r25
    16d4:	08 95       	ret

000016d6 <strnlen_P>:
    16d6:	fc 01       	movw	r30, r24
    16d8:	05 90       	lpm	r0, Z+
    16da:	61 50       	subi	r22, 0x01	; 1
    16dc:	70 40       	sbci	r23, 0x00	; 0
    16de:	01 10       	cpse	r0, r1
    16e0:	d8 f7       	brcc	.-10     	; 0x16d8 <strnlen_P+0x2>
    16e2:	80 95       	com	r24
    16e4:	90 95       	com	r25
    16e6:	8e 0f       	add	r24, r30
    16e8:	9f 1f       	adc	r25, r31
    16ea:	08 95       	ret

000016ec <strnlen>:
    16ec:	fc 01       	movw	r30, r24
    16ee:	61 50       	subi	r22, 0x01	; 1
    16f0:	70 40       	sbci	r23, 0x00	; 0
    16f2:	01 90       	ld	r0, Z+
    16f4:	01 10       	cpse	r0, r1
    16f6:	d8 f7       	brcc	.-10     	; 0x16ee <strnlen+0x2>
    16f8:	80 95       	com	r24
    16fa:	90 95       	com	r25
    16fc:	8e 0f       	add	r24, r30
    16fe:	9f 1f       	adc	r25, r31
    1700:	08 95       	ret

00001702 <__mulhi_const_10>:
    1702:	7a e0       	ldi	r23, 0x0A	; 10
    1704:	97 9f       	mul	r25, r23
    1706:	90 2d       	mov	r25, r0
    1708:	87 9f       	mul	r24, r23
    170a:	80 2d       	mov	r24, r0
    170c:	91 0d       	add	r25, r1
    170e:	11 24       	eor	r1, r1
    1710:	08 95       	ret

00001712 <fputc>:
    1712:	0f 93       	push	r16
    1714:	1f 93       	push	r17
    1716:	cf 93       	push	r28
    1718:	df 93       	push	r29
    171a:	fb 01       	movw	r30, r22
    171c:	23 81       	ldd	r18, Z+3	; 0x03
    171e:	21 fd       	sbrc	r18, 1
    1720:	03 c0       	rjmp	.+6      	; 0x1728 <fputc+0x16>
    1722:	8f ef       	ldi	r24, 0xFF	; 255
    1724:	9f ef       	ldi	r25, 0xFF	; 255
    1726:	2c c0       	rjmp	.+88     	; 0x1780 <fputc+0x6e>
    1728:	22 ff       	sbrs	r18, 2
    172a:	16 c0       	rjmp	.+44     	; 0x1758 <fputc+0x46>
    172c:	46 81       	ldd	r20, Z+6	; 0x06
    172e:	57 81       	ldd	r21, Z+7	; 0x07
    1730:	24 81       	ldd	r18, Z+4	; 0x04
    1732:	35 81       	ldd	r19, Z+5	; 0x05
    1734:	42 17       	cp	r20, r18
    1736:	53 07       	cpc	r21, r19
    1738:	44 f4       	brge	.+16     	; 0x174a <fputc+0x38>
    173a:	a0 81       	ld	r26, Z
    173c:	b1 81       	ldd	r27, Z+1	; 0x01
    173e:	9d 01       	movw	r18, r26
    1740:	2f 5f       	subi	r18, 0xFF	; 255
    1742:	3f 4f       	sbci	r19, 0xFF	; 255
    1744:	31 83       	std	Z+1, r19	; 0x01
    1746:	20 83       	st	Z, r18
    1748:	8c 93       	st	X, r24
    174a:	26 81       	ldd	r18, Z+6	; 0x06
    174c:	37 81       	ldd	r19, Z+7	; 0x07
    174e:	2f 5f       	subi	r18, 0xFF	; 255
    1750:	3f 4f       	sbci	r19, 0xFF	; 255
    1752:	37 83       	std	Z+7, r19	; 0x07
    1754:	26 83       	std	Z+6, r18	; 0x06
    1756:	14 c0       	rjmp	.+40     	; 0x1780 <fputc+0x6e>
    1758:	8b 01       	movw	r16, r22
    175a:	ec 01       	movw	r28, r24
    175c:	fb 01       	movw	r30, r22
    175e:	00 84       	ldd	r0, Z+8	; 0x08
    1760:	f1 85       	ldd	r31, Z+9	; 0x09
    1762:	e0 2d       	mov	r30, r0
    1764:	09 95       	icall
    1766:	89 2b       	or	r24, r25
    1768:	e1 f6       	brne	.-72     	; 0x1722 <fputc+0x10>
    176a:	d8 01       	movw	r26, r16
    176c:	16 96       	adiw	r26, 0x06	; 6
    176e:	8d 91       	ld	r24, X+
    1770:	9c 91       	ld	r25, X
    1772:	17 97       	sbiw	r26, 0x07	; 7
    1774:	01 96       	adiw	r24, 0x01	; 1
    1776:	17 96       	adiw	r26, 0x07	; 7
    1778:	9c 93       	st	X, r25
    177a:	8e 93       	st	-X, r24
    177c:	16 97       	sbiw	r26, 0x06	; 6
    177e:	ce 01       	movw	r24, r28
    1780:	df 91       	pop	r29
    1782:	cf 91       	pop	r28
    1784:	1f 91       	pop	r17
    1786:	0f 91       	pop	r16
    1788:	08 95       	ret

0000178a <sprintf>:
    178a:	ae e0       	ldi	r26, 0x0E	; 14
    178c:	b0 e0       	ldi	r27, 0x00	; 0
    178e:	eb ec       	ldi	r30, 0xCB	; 203
    1790:	fb e0       	ldi	r31, 0x0B	; 11
    1792:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <__prologue_saves__+0x1c>
    1796:	0d 89       	ldd	r16, Y+21	; 0x15
    1798:	1e 89       	ldd	r17, Y+22	; 0x16
    179a:	86 e0       	ldi	r24, 0x06	; 6
    179c:	8c 83       	std	Y+4, r24	; 0x04
    179e:	1a 83       	std	Y+2, r17	; 0x02
    17a0:	09 83       	std	Y+1, r16	; 0x01
    17a2:	8f ef       	ldi	r24, 0xFF	; 255
    17a4:	9f e7       	ldi	r25, 0x7F	; 127
    17a6:	9e 83       	std	Y+6, r25	; 0x06
    17a8:	8d 83       	std	Y+5, r24	; 0x05
    17aa:	ae 01       	movw	r20, r28
    17ac:	47 5e       	subi	r20, 0xE7	; 231
    17ae:	5f 4f       	sbci	r21, 0xFF	; 255
    17b0:	6f 89       	ldd	r22, Y+23	; 0x17
    17b2:	78 8d       	ldd	r23, Y+24	; 0x18
    17b4:	ce 01       	movw	r24, r28
    17b6:	01 96       	adiw	r24, 0x01	; 1
    17b8:	0e 94 bd 06 	call	0xd7a	; 0xd7a <vfprintf>
    17bc:	ef 81       	ldd	r30, Y+7	; 0x07
    17be:	f8 85       	ldd	r31, Y+8	; 0x08
    17c0:	e0 0f       	add	r30, r16
    17c2:	f1 1f       	adc	r31, r17
    17c4:	10 82       	st	Z, r1
    17c6:	2e 96       	adiw	r28, 0x0e	; 14
    17c8:	e4 e0       	ldi	r30, 0x04	; 4
    17ca:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__epilogue_restores__+0x1c>

000017ce <__ultoa_invert>:
    17ce:	fa 01       	movw	r30, r20
    17d0:	aa 27       	eor	r26, r26
    17d2:	28 30       	cpi	r18, 0x08	; 8
    17d4:	51 f1       	breq	.+84     	; 0x182a <__ultoa_invert+0x5c>
    17d6:	20 31       	cpi	r18, 0x10	; 16
    17d8:	81 f1       	breq	.+96     	; 0x183a <__ultoa_invert+0x6c>
    17da:	e8 94       	clt
    17dc:	6f 93       	push	r22
    17de:	6e 7f       	andi	r22, 0xFE	; 254
    17e0:	6e 5f       	subi	r22, 0xFE	; 254
    17e2:	7f 4f       	sbci	r23, 0xFF	; 255
    17e4:	8f 4f       	sbci	r24, 0xFF	; 255
    17e6:	9f 4f       	sbci	r25, 0xFF	; 255
    17e8:	af 4f       	sbci	r26, 0xFF	; 255
    17ea:	b1 e0       	ldi	r27, 0x01	; 1
    17ec:	3e d0       	rcall	.+124    	; 0x186a <__ultoa_invert+0x9c>
    17ee:	b4 e0       	ldi	r27, 0x04	; 4
    17f0:	3c d0       	rcall	.+120    	; 0x186a <__ultoa_invert+0x9c>
    17f2:	67 0f       	add	r22, r23
    17f4:	78 1f       	adc	r23, r24
    17f6:	89 1f       	adc	r24, r25
    17f8:	9a 1f       	adc	r25, r26
    17fa:	a1 1d       	adc	r26, r1
    17fc:	68 0f       	add	r22, r24
    17fe:	79 1f       	adc	r23, r25
    1800:	8a 1f       	adc	r24, r26
    1802:	91 1d       	adc	r25, r1
    1804:	a1 1d       	adc	r26, r1
    1806:	6a 0f       	add	r22, r26
    1808:	71 1d       	adc	r23, r1
    180a:	81 1d       	adc	r24, r1
    180c:	91 1d       	adc	r25, r1
    180e:	a1 1d       	adc	r26, r1
    1810:	20 d0       	rcall	.+64     	; 0x1852 <__ultoa_invert+0x84>
    1812:	09 f4       	brne	.+2      	; 0x1816 <__ultoa_invert+0x48>
    1814:	68 94       	set
    1816:	3f 91       	pop	r19
    1818:	2a e0       	ldi	r18, 0x0A	; 10
    181a:	26 9f       	mul	r18, r22
    181c:	11 24       	eor	r1, r1
    181e:	30 19       	sub	r19, r0
    1820:	30 5d       	subi	r19, 0xD0	; 208
    1822:	31 93       	st	Z+, r19
    1824:	de f6       	brtc	.-74     	; 0x17dc <__ultoa_invert+0xe>
    1826:	cf 01       	movw	r24, r30
    1828:	08 95       	ret
    182a:	46 2f       	mov	r20, r22
    182c:	47 70       	andi	r20, 0x07	; 7
    182e:	40 5d       	subi	r20, 0xD0	; 208
    1830:	41 93       	st	Z+, r20
    1832:	b3 e0       	ldi	r27, 0x03	; 3
    1834:	0f d0       	rcall	.+30     	; 0x1854 <__ultoa_invert+0x86>
    1836:	c9 f7       	brne	.-14     	; 0x182a <__ultoa_invert+0x5c>
    1838:	f6 cf       	rjmp	.-20     	; 0x1826 <__ultoa_invert+0x58>
    183a:	46 2f       	mov	r20, r22
    183c:	4f 70       	andi	r20, 0x0F	; 15
    183e:	40 5d       	subi	r20, 0xD0	; 208
    1840:	4a 33       	cpi	r20, 0x3A	; 58
    1842:	18 f0       	brcs	.+6      	; 0x184a <__ultoa_invert+0x7c>
    1844:	49 5d       	subi	r20, 0xD9	; 217
    1846:	31 fd       	sbrc	r19, 1
    1848:	40 52       	subi	r20, 0x20	; 32
    184a:	41 93       	st	Z+, r20
    184c:	02 d0       	rcall	.+4      	; 0x1852 <__ultoa_invert+0x84>
    184e:	a9 f7       	brne	.-22     	; 0x183a <__ultoa_invert+0x6c>
    1850:	ea cf       	rjmp	.-44     	; 0x1826 <__ultoa_invert+0x58>
    1852:	b4 e0       	ldi	r27, 0x04	; 4
    1854:	a6 95       	lsr	r26
    1856:	97 95       	ror	r25
    1858:	87 95       	ror	r24
    185a:	77 95       	ror	r23
    185c:	67 95       	ror	r22
    185e:	ba 95       	dec	r27
    1860:	c9 f7       	brne	.-14     	; 0x1854 <__ultoa_invert+0x86>
    1862:	00 97       	sbiw	r24, 0x00	; 0
    1864:	61 05       	cpc	r22, r1
    1866:	71 05       	cpc	r23, r1
    1868:	08 95       	ret
    186a:	9b 01       	movw	r18, r22
    186c:	ac 01       	movw	r20, r24
    186e:	0a 2e       	mov	r0, r26
    1870:	06 94       	lsr	r0
    1872:	57 95       	ror	r21
    1874:	47 95       	ror	r20
    1876:	37 95       	ror	r19
    1878:	27 95       	ror	r18
    187a:	ba 95       	dec	r27
    187c:	c9 f7       	brne	.-14     	; 0x1870 <__ultoa_invert+0xa2>
    187e:	62 0f       	add	r22, r18
    1880:	73 1f       	adc	r23, r19
    1882:	84 1f       	adc	r24, r20
    1884:	95 1f       	adc	r25, r21
    1886:	a0 1d       	adc	r26, r0
    1888:	08 95       	ret

0000188a <strtod>:
    188a:	a0 e0       	ldi	r26, 0x00	; 0
    188c:	b0 e0       	ldi	r27, 0x00	; 0
    188e:	eb e4       	ldi	r30, 0x4B	; 75
    1890:	fc e0       	ldi	r31, 0x0C	; 12
    1892:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <__prologue_saves__+0xc>
    1896:	ec 01       	movw	r28, r24
    1898:	6b 01       	movw	r12, r22
    189a:	61 15       	cp	r22, r1
    189c:	71 05       	cpc	r23, r1
    189e:	19 f0       	breq	.+6      	; 0x18a6 <strtod+0x1c>
    18a0:	fb 01       	movw	r30, r22
    18a2:	91 83       	std	Z+1, r25	; 0x01
    18a4:	80 83       	st	Z, r24
    18a6:	7e 01       	movw	r14, r28
    18a8:	ff ef       	ldi	r31, 0xFF	; 255
    18aa:	ef 1a       	sub	r14, r31
    18ac:	ff 0a       	sbc	r15, r31
    18ae:	08 81       	ld	r16, Y
    18b0:	80 2f       	mov	r24, r16
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <isspace>
    18b8:	89 2b       	or	r24, r25
    18ba:	11 f0       	breq	.+4      	; 0x18c0 <strtod+0x36>
    18bc:	e7 01       	movw	r28, r14
    18be:	f3 cf       	rjmp	.-26     	; 0x18a6 <strtod+0x1c>
    18c0:	0d 32       	cpi	r16, 0x2D	; 45
    18c2:	39 f4       	brne	.+14     	; 0x18d2 <strtod+0x48>
    18c4:	7e 01       	movw	r14, r28
    18c6:	82 e0       	ldi	r24, 0x02	; 2
    18c8:	e8 0e       	add	r14, r24
    18ca:	f1 1c       	adc	r15, r1
    18cc:	09 81       	ldd	r16, Y+1	; 0x01
    18ce:	11 e0       	ldi	r17, 0x01	; 1
    18d0:	08 c0       	rjmp	.+16     	; 0x18e2 <strtod+0x58>
    18d2:	0b 32       	cpi	r16, 0x2B	; 43
    18d4:	29 f4       	brne	.+10     	; 0x18e0 <strtod+0x56>
    18d6:	7e 01       	movw	r14, r28
    18d8:	92 e0       	ldi	r25, 0x02	; 2
    18da:	e9 0e       	add	r14, r25
    18dc:	f1 1c       	adc	r15, r1
    18de:	09 81       	ldd	r16, Y+1	; 0x01
    18e0:	10 e0       	ldi	r17, 0x00	; 0
    18e2:	e7 01       	movw	r28, r14
    18e4:	21 97       	sbiw	r28, 0x01	; 1
    18e6:	43 e0       	ldi	r20, 0x03	; 3
    18e8:	50 e0       	ldi	r21, 0x00	; 0
    18ea:	6e e5       	ldi	r22, 0x5E	; 94
    18ec:	71 e0       	ldi	r23, 0x01	; 1
    18ee:	ce 01       	movw	r24, r28
    18f0:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <strncasecmp_P>
    18f4:	89 2b       	or	r24, r25
    18f6:	c1 f4       	brne	.+48     	; 0x1928 <strtod+0x9e>
    18f8:	23 96       	adiw	r28, 0x03	; 3
    18fa:	45 e0       	ldi	r20, 0x05	; 5
    18fc:	50 e0       	ldi	r21, 0x00	; 0
    18fe:	69 e5       	ldi	r22, 0x59	; 89
    1900:	71 e0       	ldi	r23, 0x01	; 1
    1902:	ce 01       	movw	r24, r28
    1904:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <strncasecmp_P>
    1908:	89 2b       	or	r24, r25
    190a:	09 f4       	brne	.+2      	; 0x190e <strtod+0x84>
    190c:	25 96       	adiw	r28, 0x05	; 5
    190e:	c1 14       	cp	r12, r1
    1910:	d1 04       	cpc	r13, r1
    1912:	19 f0       	breq	.+6      	; 0x191a <strtod+0x90>
    1914:	f6 01       	movw	r30, r12
    1916:	d1 83       	std	Z+1, r29	; 0x01
    1918:	c0 83       	st	Z, r28
    191a:	11 11       	cpse	r17, r1
    191c:	f6 c0       	rjmp	.+492    	; 0x1b0a <strtod+0x280>
    191e:	60 e0       	ldi	r22, 0x00	; 0
    1920:	70 e0       	ldi	r23, 0x00	; 0
    1922:	80 e8       	ldi	r24, 0x80	; 128
    1924:	9f e7       	ldi	r25, 0x7F	; 127
    1926:	fa c0       	rjmp	.+500    	; 0x1b1c <strtod+0x292>
    1928:	43 e0       	ldi	r20, 0x03	; 3
    192a:	50 e0       	ldi	r21, 0x00	; 0
    192c:	66 e5       	ldi	r22, 0x56	; 86
    192e:	71 e0       	ldi	r23, 0x01	; 1
    1930:	ce 01       	movw	r24, r28
    1932:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <strncasecmp_P>
    1936:	89 2b       	or	r24, r25
    1938:	59 f4       	brne	.+22     	; 0x1950 <strtod+0xc6>
    193a:	c1 14       	cp	r12, r1
    193c:	d1 04       	cpc	r13, r1
    193e:	09 f4       	brne	.+2      	; 0x1942 <strtod+0xb8>
    1940:	e9 c0       	rjmp	.+466    	; 0x1b14 <strtod+0x28a>
    1942:	f2 e0       	ldi	r31, 0x02	; 2
    1944:	ef 0e       	add	r14, r31
    1946:	f1 1c       	adc	r15, r1
    1948:	f6 01       	movw	r30, r12
    194a:	f1 82       	std	Z+1, r15	; 0x01
    194c:	e0 82       	st	Z, r14
    194e:	e2 c0       	rjmp	.+452    	; 0x1b14 <strtod+0x28a>
    1950:	20 e0       	ldi	r18, 0x00	; 0
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	a9 01       	movw	r20, r18
    1956:	c0 e0       	ldi	r28, 0x00	; 0
    1958:	d0 e0       	ldi	r29, 0x00	; 0
    195a:	f7 01       	movw	r30, r14
    195c:	80 ed       	ldi	r24, 0xD0	; 208
    195e:	a8 2e       	mov	r10, r24
    1960:	a0 0e       	add	r10, r16
    1962:	89 e0       	ldi	r24, 0x09	; 9
    1964:	8a 15       	cp	r24, r10
    1966:	30 f1       	brcs	.+76     	; 0x19b4 <strtod+0x12a>
    1968:	91 2f       	mov	r25, r17
    196a:	92 60       	ori	r25, 0x02	; 2
    196c:	b9 2e       	mov	r11, r25
    196e:	81 2f       	mov	r24, r17
    1970:	88 70       	andi	r24, 0x08	; 8
    1972:	12 ff       	sbrs	r17, 2
    1974:	04 c0       	rjmp	.+8      	; 0x197e <strtod+0xf4>
    1976:	81 11       	cpse	r24, r1
    1978:	24 c0       	rjmp	.+72     	; 0x19c2 <strtod+0x138>
    197a:	21 96       	adiw	r28, 0x01	; 1
    197c:	22 c0       	rjmp	.+68     	; 0x19c2 <strtod+0x138>
    197e:	81 11       	cpse	r24, r1
    1980:	21 97       	sbiw	r28, 0x01	; 1
    1982:	a5 e0       	ldi	r26, 0x05	; 5
    1984:	b0 e0       	ldi	r27, 0x00	; 0
    1986:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__muluhisi3>
    198a:	dc 01       	movw	r26, r24
    198c:	cb 01       	movw	r24, r22
    198e:	88 0f       	add	r24, r24
    1990:	99 1f       	adc	r25, r25
    1992:	aa 1f       	adc	r26, r26
    1994:	bb 1f       	adc	r27, r27
    1996:	9c 01       	movw	r18, r24
    1998:	ad 01       	movw	r20, r26
    199a:	2a 0d       	add	r18, r10
    199c:	31 1d       	adc	r19, r1
    199e:	41 1d       	adc	r20, r1
    19a0:	51 1d       	adc	r21, r1
    19a2:	28 39       	cpi	r18, 0x98	; 152
    19a4:	89 e9       	ldi	r24, 0x99	; 153
    19a6:	38 07       	cpc	r19, r24
    19a8:	48 07       	cpc	r20, r24
    19aa:	89 e1       	ldi	r24, 0x19	; 25
    19ac:	58 07       	cpc	r21, r24
    19ae:	48 f0       	brcs	.+18     	; 0x19c2 <strtod+0x138>
    19b0:	16 60       	ori	r17, 0x06	; 6
    19b2:	06 c0       	rjmp	.+12     	; 0x19c0 <strtod+0x136>
    19b4:	9e ef       	ldi	r25, 0xFE	; 254
    19b6:	a9 12       	cpse	r10, r25
    19b8:	0a c0       	rjmp	.+20     	; 0x19ce <strtod+0x144>
    19ba:	13 fd       	sbrc	r17, 3
    19bc:	40 c0       	rjmp	.+128    	; 0x1a3e <strtod+0x1b4>
    19be:	18 60       	ori	r17, 0x08	; 8
    19c0:	b1 2e       	mov	r11, r17
    19c2:	8f ef       	ldi	r24, 0xFF	; 255
    19c4:	e8 1a       	sub	r14, r24
    19c6:	f8 0a       	sbc	r15, r24
    19c8:	00 81       	ld	r16, Z
    19ca:	1b 2d       	mov	r17, r11
    19cc:	c6 cf       	rjmp	.-116    	; 0x195a <strtod+0xd0>
    19ce:	80 2f       	mov	r24, r16
    19d0:	8f 7d       	andi	r24, 0xDF	; 223
    19d2:	85 34       	cpi	r24, 0x45	; 69
    19d4:	a1 f5       	brne	.+104    	; 0x1a3e <strtod+0x1b4>
    19d6:	80 81       	ld	r24, Z
    19d8:	8d 32       	cpi	r24, 0x2D	; 45
    19da:	11 f4       	brne	.+4      	; 0x19e0 <strtod+0x156>
    19dc:	10 61       	ori	r17, 0x10	; 16
    19de:	06 c0       	rjmp	.+12     	; 0x19ec <strtod+0x162>
    19e0:	8b 32       	cpi	r24, 0x2B	; 43
    19e2:	21 f0       	breq	.+8      	; 0x19ec <strtod+0x162>
    19e4:	31 96       	adiw	r30, 0x01	; 1
    19e6:	61 e0       	ldi	r22, 0x01	; 1
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	04 c0       	rjmp	.+8      	; 0x19f4 <strtod+0x16a>
    19ec:	81 81       	ldd	r24, Z+1	; 0x01
    19ee:	32 96       	adiw	r30, 0x02	; 2
    19f0:	62 e0       	ldi	r22, 0x02	; 2
    19f2:	70 e0       	ldi	r23, 0x00	; 0
    19f4:	80 53       	subi	r24, 0x30	; 48
    19f6:	8a 30       	cpi	r24, 0x0A	; 10
    19f8:	18 f0       	brcs	.+6      	; 0x1a00 <strtod+0x176>
    19fa:	e6 1b       	sub	r30, r22
    19fc:	f7 0b       	sbc	r31, r23
    19fe:	1f c0       	rjmp	.+62     	; 0x1a3e <strtod+0x1b4>
    1a00:	60 e0       	ldi	r22, 0x00	; 0
    1a02:	70 e0       	ldi	r23, 0x00	; 0
    1a04:	60 38       	cpi	r22, 0x80	; 128
    1a06:	9c e0       	ldi	r25, 0x0C	; 12
    1a08:	79 07       	cpc	r23, r25
    1a0a:	5c f4       	brge	.+22     	; 0x1a22 <strtod+0x198>
    1a0c:	db 01       	movw	r26, r22
    1a0e:	aa 0f       	add	r26, r26
    1a10:	bb 1f       	adc	r27, r27
    1a12:	aa 0f       	add	r26, r26
    1a14:	bb 1f       	adc	r27, r27
    1a16:	6a 0f       	add	r22, r26
    1a18:	7b 1f       	adc	r23, r27
    1a1a:	66 0f       	add	r22, r22
    1a1c:	77 1f       	adc	r23, r23
    1a1e:	68 0f       	add	r22, r24
    1a20:	71 1d       	adc	r23, r1
    1a22:	31 96       	adiw	r30, 0x01	; 1
    1a24:	df 01       	movw	r26, r30
    1a26:	11 97       	sbiw	r26, 0x01	; 1
    1a28:	8c 91       	ld	r24, X
    1a2a:	80 53       	subi	r24, 0x30	; 48
    1a2c:	8a 30       	cpi	r24, 0x0A	; 10
    1a2e:	50 f3       	brcs	.-44     	; 0x1a04 <strtod+0x17a>
    1a30:	14 ff       	sbrs	r17, 4
    1a32:	03 c0       	rjmp	.+6      	; 0x1a3a <strtod+0x1b0>
    1a34:	71 95       	neg	r23
    1a36:	61 95       	neg	r22
    1a38:	71 09       	sbc	r23, r1
    1a3a:	c6 0f       	add	r28, r22
    1a3c:	d7 1f       	adc	r29, r23
    1a3e:	11 ff       	sbrs	r17, 1
    1a40:	08 c0       	rjmp	.+16     	; 0x1a52 <strtod+0x1c8>
    1a42:	c1 14       	cp	r12, r1
    1a44:	d1 04       	cpc	r13, r1
    1a46:	29 f0       	breq	.+10     	; 0x1a52 <strtod+0x1c8>
    1a48:	cf 01       	movw	r24, r30
    1a4a:	01 97       	sbiw	r24, 0x01	; 1
    1a4c:	f6 01       	movw	r30, r12
    1a4e:	91 83       	std	Z+1, r25	; 0x01
    1a50:	80 83       	st	Z, r24
    1a52:	ca 01       	movw	r24, r20
    1a54:	b9 01       	movw	r22, r18
    1a56:	0e 94 c2 05 	call	0xb84	; 0xb84 <__floatunsisf>
    1a5a:	21 2f       	mov	r18, r17
    1a5c:	23 70       	andi	r18, 0x03	; 3
    1a5e:	23 30       	cpi	r18, 0x03	; 3
    1a60:	19 f0       	breq	.+6      	; 0x1a68 <strtod+0x1de>
    1a62:	4b 01       	movw	r8, r22
    1a64:	5c 01       	movw	r10, r24
    1a66:	06 c0       	rjmp	.+12     	; 0x1a74 <strtod+0x1ea>
    1a68:	4b 01       	movw	r8, r22
    1a6a:	5c 01       	movw	r10, r24
    1a6c:	b7 fa       	bst	r11, 7
    1a6e:	b0 94       	com	r11
    1a70:	b7 f8       	bld	r11, 7
    1a72:	b0 94       	com	r11
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	a9 01       	movw	r20, r18
    1a7a:	c5 01       	movw	r24, r10
    1a7c:	b4 01       	movw	r22, r8
    1a7e:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <__cmpsf2>
    1a82:	88 23       	and	r24, r24
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <strtod+0x1fe>
    1a86:	3e c0       	rjmp	.+124    	; 0x1b04 <strtod+0x27a>
    1a88:	d7 ff       	sbrs	r29, 7
    1a8a:	06 c0       	rjmp	.+12     	; 0x1a98 <strtod+0x20e>
    1a8c:	d1 95       	neg	r29
    1a8e:	c1 95       	neg	r28
    1a90:	d1 09       	sbc	r29, r1
    1a92:	05 e7       	ldi	r16, 0x75	; 117
    1a94:	11 e0       	ldi	r17, 0x01	; 1
    1a96:	02 c0       	rjmp	.+4      	; 0x1a9c <strtod+0x212>
    1a98:	0d e8       	ldi	r16, 0x8D	; 141
    1a9a:	11 e0       	ldi	r17, 0x01	; 1
    1a9c:	68 01       	movw	r12, r16
    1a9e:	f8 e1       	ldi	r31, 0x18	; 24
    1aa0:	cf 1a       	sub	r12, r31
    1aa2:	d1 08       	sbc	r13, r1
    1aa4:	90 e2       	ldi	r25, 0x20	; 32
    1aa6:	e9 2e       	mov	r14, r25
    1aa8:	f1 2c       	mov	r15, r1
    1aaa:	ce 15       	cp	r28, r14
    1aac:	df 05       	cpc	r29, r15
    1aae:	74 f0       	brlt	.+28     	; 0x1acc <strtod+0x242>
    1ab0:	f8 01       	movw	r30, r16
    1ab2:	25 91       	lpm	r18, Z+
    1ab4:	35 91       	lpm	r19, Z+
    1ab6:	45 91       	lpm	r20, Z+
    1ab8:	54 91       	lpm	r21, Z
    1aba:	c5 01       	movw	r24, r10
    1abc:	b4 01       	movw	r22, r8
    1abe:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3>
    1ac2:	4b 01       	movw	r8, r22
    1ac4:	5c 01       	movw	r10, r24
    1ac6:	ce 19       	sub	r28, r14
    1ac8:	df 09       	sbc	r29, r15
    1aca:	ef cf       	rjmp	.-34     	; 0x1aaa <strtod+0x220>
    1acc:	04 50       	subi	r16, 0x04	; 4
    1ace:	11 09       	sbc	r17, r1
    1ad0:	f5 94       	asr	r15
    1ad2:	e7 94       	ror	r14
    1ad4:	0c 15       	cp	r16, r12
    1ad6:	1d 05       	cpc	r17, r13
    1ad8:	41 f7       	brne	.-48     	; 0x1aaa <strtod+0x220>
    1ada:	8a 2d       	mov	r24, r10
    1adc:	88 0f       	add	r24, r24
    1ade:	8b 2d       	mov	r24, r11
    1ae0:	88 1f       	adc	r24, r24
    1ae2:	8f 3f       	cpi	r24, 0xFF	; 255
    1ae4:	49 f0       	breq	.+18     	; 0x1af8 <strtod+0x26e>
    1ae6:	20 e0       	ldi	r18, 0x00	; 0
    1ae8:	30 e0       	ldi	r19, 0x00	; 0
    1aea:	a9 01       	movw	r20, r18
    1aec:	c5 01       	movw	r24, r10
    1aee:	b4 01       	movw	r22, r8
    1af0:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <__cmpsf2>
    1af4:	81 11       	cpse	r24, r1
    1af6:	06 c0       	rjmp	.+12     	; 0x1b04 <strtod+0x27a>
    1af8:	82 e2       	ldi	r24, 0x22	; 34
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <errno+0x1>
    1b00:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <errno>
    1b04:	c5 01       	movw	r24, r10
    1b06:	b4 01       	movw	r22, r8
    1b08:	09 c0       	rjmp	.+18     	; 0x1b1c <strtod+0x292>
    1b0a:	60 e0       	ldi	r22, 0x00	; 0
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	80 e8       	ldi	r24, 0x80	; 128
    1b10:	9f ef       	ldi	r25, 0xFF	; 255
    1b12:	04 c0       	rjmp	.+8      	; 0x1b1c <strtod+0x292>
    1b14:	60 e0       	ldi	r22, 0x00	; 0
    1b16:	70 e0       	ldi	r23, 0x00	; 0
    1b18:	80 ec       	ldi	r24, 0xC0	; 192
    1b1a:	9f e7       	ldi	r25, 0x7F	; 127
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	ec e0       	ldi	r30, 0x0C	; 12
    1b22:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__epilogue_restores__+0xc>

00001b26 <isspace>:
    1b26:	91 11       	cpse	r25, r1
    1b28:	0c 94 dd 0d 	jmp	0x1bba	; 0x1bba <__ctype_isfalse>
    1b2c:	80 32       	cpi	r24, 0x20	; 32
    1b2e:	19 f0       	breq	.+6      	; 0x1b36 <isspace+0x10>
    1b30:	89 50       	subi	r24, 0x09	; 9
    1b32:	85 50       	subi	r24, 0x05	; 5
    1b34:	c8 f7       	brcc	.-14     	; 0x1b28 <isspace+0x2>
    1b36:	08 95       	ret

00001b38 <strncasecmp_P>:
    1b38:	fb 01       	movw	r30, r22
    1b3a:	dc 01       	movw	r26, r24
    1b3c:	41 50       	subi	r20, 0x01	; 1
    1b3e:	50 40       	sbci	r21, 0x00	; 0
    1b40:	88 f0       	brcs	.+34     	; 0x1b64 <strncasecmp_P+0x2c>
    1b42:	8d 91       	ld	r24, X+
    1b44:	81 34       	cpi	r24, 0x41	; 65
    1b46:	1c f0       	brlt	.+6      	; 0x1b4e <strncasecmp_P+0x16>
    1b48:	8b 35       	cpi	r24, 0x5B	; 91
    1b4a:	0c f4       	brge	.+2      	; 0x1b4e <strncasecmp_P+0x16>
    1b4c:	80 5e       	subi	r24, 0xE0	; 224
    1b4e:	65 91       	lpm	r22, Z+
    1b50:	61 34       	cpi	r22, 0x41	; 65
    1b52:	1c f0       	brlt	.+6      	; 0x1b5a <strncasecmp_P+0x22>
    1b54:	6b 35       	cpi	r22, 0x5B	; 91
    1b56:	0c f4       	brge	.+2      	; 0x1b5a <strncasecmp_P+0x22>
    1b58:	60 5e       	subi	r22, 0xE0	; 224
    1b5a:	86 1b       	sub	r24, r22
    1b5c:	61 11       	cpse	r22, r1
    1b5e:	71 f3       	breq	.-36     	; 0x1b3c <strncasecmp_P+0x4>
    1b60:	99 0b       	sbc	r25, r25
    1b62:	08 95       	ret
    1b64:	88 1b       	sub	r24, r24
    1b66:	fc cf       	rjmp	.-8      	; 0x1b60 <strncasecmp_P+0x28>

00001b68 <__cmpsf2>:
    1b68:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__fp_cmp>
    1b6c:	08 f4       	brcc	.+2      	; 0x1b70 <__cmpsf2+0x8>
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	08 95       	ret

00001b72 <__fp_cmp>:
    1b72:	99 0f       	add	r25, r25
    1b74:	00 08       	sbc	r0, r0
    1b76:	55 0f       	add	r21, r21
    1b78:	aa 0b       	sbc	r26, r26
    1b7a:	e0 e8       	ldi	r30, 0x80	; 128
    1b7c:	fe ef       	ldi	r31, 0xFE	; 254
    1b7e:	16 16       	cp	r1, r22
    1b80:	17 06       	cpc	r1, r23
    1b82:	e8 07       	cpc	r30, r24
    1b84:	f9 07       	cpc	r31, r25
    1b86:	c0 f0       	brcs	.+48     	; 0x1bb8 <__fp_cmp+0x46>
    1b88:	12 16       	cp	r1, r18
    1b8a:	13 06       	cpc	r1, r19
    1b8c:	e4 07       	cpc	r30, r20
    1b8e:	f5 07       	cpc	r31, r21
    1b90:	98 f0       	brcs	.+38     	; 0x1bb8 <__fp_cmp+0x46>
    1b92:	62 1b       	sub	r22, r18
    1b94:	73 0b       	sbc	r23, r19
    1b96:	84 0b       	sbc	r24, r20
    1b98:	95 0b       	sbc	r25, r21
    1b9a:	39 f4       	brne	.+14     	; 0x1baa <__fp_cmp+0x38>
    1b9c:	0a 26       	eor	r0, r26
    1b9e:	61 f0       	breq	.+24     	; 0x1bb8 <__fp_cmp+0x46>
    1ba0:	23 2b       	or	r18, r19
    1ba2:	24 2b       	or	r18, r20
    1ba4:	25 2b       	or	r18, r21
    1ba6:	21 f4       	brne	.+8      	; 0x1bb0 <__fp_cmp+0x3e>
    1ba8:	08 95       	ret
    1baa:	0a 26       	eor	r0, r26
    1bac:	09 f4       	brne	.+2      	; 0x1bb0 <__fp_cmp+0x3e>
    1bae:	a1 40       	sbci	r26, 0x01	; 1
    1bb0:	a6 95       	lsr	r26
    1bb2:	8f ef       	ldi	r24, 0xFF	; 255
    1bb4:	81 1d       	adc	r24, r1
    1bb6:	81 1d       	adc	r24, r1
    1bb8:	08 95       	ret

00001bba <__ctype_isfalse>:
    1bba:	99 27       	eor	r25, r25
    1bbc:	88 27       	eor	r24, r24

00001bbe <__ctype_istrue>:
    1bbe:	08 95       	ret

00001bc0 <__muluhisi3>:
    1bc0:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__umulhisi3>
    1bc4:	a5 9f       	mul	r26, r21
    1bc6:	90 0d       	add	r25, r0
    1bc8:	b4 9f       	mul	r27, r20
    1bca:	90 0d       	add	r25, r0
    1bcc:	a4 9f       	mul	r26, r20
    1bce:	80 0d       	add	r24, r0
    1bd0:	91 1d       	adc	r25, r1
    1bd2:	11 24       	eor	r1, r1
    1bd4:	08 95       	ret

00001bd6 <__umulhisi3>:
    1bd6:	a2 9f       	mul	r26, r18
    1bd8:	b0 01       	movw	r22, r0
    1bda:	b3 9f       	mul	r27, r19
    1bdc:	c0 01       	movw	r24, r0
    1bde:	a3 9f       	mul	r26, r19
    1be0:	70 0d       	add	r23, r0
    1be2:	81 1d       	adc	r24, r1
    1be4:	11 24       	eor	r1, r1
    1be6:	91 1d       	adc	r25, r1
    1be8:	b2 9f       	mul	r27, r18
    1bea:	70 0d       	add	r23, r0
    1bec:	81 1d       	adc	r24, r1
    1bee:	11 24       	eor	r1, r1
    1bf0:	91 1d       	adc	r25, r1
    1bf2:	08 95       	ret

00001bf4 <_exit>:
    1bf4:	f8 94       	cli

00001bf6 <__stop_program>:
    1bf6:	ff cf       	rjmp	.-2      	; 0x1bf6 <__stop_program>
