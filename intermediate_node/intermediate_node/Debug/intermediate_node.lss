
intermediate_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000246  00800060  00001a8c  00001b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000009b  008002a6  008002a6  00001d66  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001dc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00001e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b78  00000000  00000000  00001e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cb  00000000  00000000  000029d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000070a  00000000  00000000  000030a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  000037b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000424  00000000  00000000  000039e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007d9  00000000  00000000  00003e08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000045e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 40 01 	jmp	0x280	; 0x280 <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	12 e0       	ldi	r17, 0x02	; 2
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	ec e8       	ldi	r30, 0x8C	; 140
     1a6:	fa e1       	ldi	r31, 0x1A	; 26
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a6 3a       	cpi	r26, 0xA6	; 166
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	a6 ea       	ldi	r26, 0xA6	; 166
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a1 34       	cpi	r26, 0x41	; 65
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <main>
     1c8:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <usart_init>:
    while(c!='S') {
        c=usart_receive();
    }
    for(int i=0; i<12; ++i)
        usart_receive(); //flush ServedClient out of read buffer
}
     1d0:	1b b8       	out	0x0b, r1	; 11
     1d2:	28 e1       	ldi	r18, 0x18	; 24
     1d4:	2a b9       	out	0x0a, r18	; 10
     1d6:	90 bd       	out	0x20, r25	; 32
     1d8:	89 b9       	out	0x09, r24	; 9
     1da:	86 e8       	ldi	r24, 0x86	; 134
     1dc:	80 bd       	out	0x20, r24	; 32
     1de:	08 95       	ret

000001e0 <usart_transmit>:
     1e0:	5d 9b       	sbis	0x0b, 5	; 11
     1e2:	fe cf       	rjmp	.-4      	; 0x1e0 <usart_transmit>
     1e4:	8c b9       	out	0x0c, r24	; 12
     1e6:	08 95       	ret

000001e8 <usart_receive>:
     1e8:	5f 9b       	sbis	0x0b, 7	; 11
     1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <usart_receive>
     1ec:	8c b1       	in	r24, 0x0c	; 12
     1ee:	08 95       	ret

000001f0 <serialWrite>:
     1f0:	1f 93       	push	r17
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	ec 01       	movw	r28, r24
     1f8:	10 e0       	ldi	r17, 0x00	; 0
     1fa:	07 c0       	rjmp	.+14     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     1fc:	fe 01       	movw	r30, r28
     1fe:	e8 0f       	add	r30, r24
     200:	f9 1f       	adc	r31, r25
     202:	80 81       	ld	r24, Z
     204:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <usart_transmit>
     208:	1f 5f       	subi	r17, 0xFF	; 255
     20a:	81 2f       	mov	r24, r17
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	fe 01       	movw	r30, r28
     210:	01 90       	ld	r0, Z+
     212:	00 20       	and	r0, r0
     214:	e9 f7       	brne	.-6      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     216:	31 97       	sbiw	r30, 0x01	; 1
     218:	ec 1b       	sub	r30, r28
     21a:	fd 0b       	sbc	r31, r29
     21c:	8e 17       	cp	r24, r30
     21e:	9f 07       	cpc	r25, r31
     220:	68 f3       	brcs	.-38     	; 0x1fc <serialWrite+0xc>
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	08 95       	ret

0000022a <sendCommand>:
     22a:	0f 93       	push	r16
     22c:	1f 93       	push	r17
     22e:	cf 93       	push	r28
     230:	df 93       	push	r29
     232:	8c 01       	movw	r16, r24
     234:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     238:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     23c:	11 c0       	rjmp	.+34     	; 0x260 <sendCommand+0x36>
     23e:	86 34       	cpi	r24, 0x46	; 70
     240:	69 f4       	brne	.+26     	; 0x25c <sendCommand+0x32>
     242:	04 c0       	rjmp	.+8      	; 0x24c <sendCommand+0x22>
     244:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     248:	21 96       	adiw	r28, 0x01	; 1
     24a:	02 c0       	rjmp	.+4      	; 0x250 <sendCommand+0x26>
     24c:	c0 e0       	ldi	r28, 0x00	; 0
     24e:	d0 e0       	ldi	r29, 0x00	; 0
     250:	c5 30       	cpi	r28, 0x05	; 5
     252:	d1 05       	cpc	r29, r1
     254:	bc f3       	brlt	.-18     	; 0x244 <sendCommand+0x1a>
     256:	c8 01       	movw	r24, r16
     258:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
     25c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     260:	83 35       	cpi	r24, 0x53	; 83
     262:	69 f7       	brne	.-38     	; 0x23e <sendCommand+0x14>
     264:	c0 e0       	ldi	r28, 0x00	; 0
     266:	d0 e0       	ldi	r29, 0x00	; 0
     268:	03 c0       	rjmp	.+6      	; 0x270 <sendCommand+0x46>
     26a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     26e:	21 96       	adiw	r28, 0x01	; 1
     270:	c8 30       	cpi	r28, 0x08	; 8
     272:	d1 05       	cpc	r29, r1
     274:	d4 f3       	brlt	.-12     	; 0x26a <sendCommand+0x40>
     276:	df 91       	pop	r29
     278:	cf 91       	pop	r28
     27a:	1f 91       	pop	r17
     27c:	0f 91       	pop	r16
     27e:	08 95       	ret

00000280 <__vector_8>:

ISR(TIMER1_OVF_vect) {
     280:	1f 92       	push	r1
     282:	0f 92       	push	r0
     284:	0f b6       	in	r0, 0x3f	; 63
     286:	0f 92       	push	r0
     288:	11 24       	eor	r1, r1
     28a:	cf 92       	push	r12
     28c:	df 92       	push	r13
     28e:	ef 92       	push	r14
     290:	ff 92       	push	r15
     292:	0f 93       	push	r16
     294:	1f 93       	push	r17
     296:	2f 93       	push	r18
     298:	3f 93       	push	r19
     29a:	4f 93       	push	r20
     29c:	5f 93       	push	r21
     29e:	6f 93       	push	r22
     2a0:	7f 93       	push	r23
     2a2:	8f 93       	push	r24
     2a4:	9f 93       	push	r25
     2a6:	af 93       	push	r26
     2a8:	bf 93       	push	r27
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	ef 93       	push	r30
     2b0:	ff 93       	push	r31
    bool failed;
    int counter =0;
	
	//PORTB=PORTB^0xFF;
	
    if(!first) {
     2b2:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <first>
     2b6:	81 11       	cpse	r24, r1
     2b8:	57 c2       	rjmp	.+1198   	; 0x768 <__stack+0x309>
     2ba:	ee 24       	eor	r14, r14
     2bc:	e3 94       	inc	r14
     2be:	f1 2c       	mov	r15, r1
     2c0:	13 c1       	rjmp	.+550    	; 0x4e8 <__stack+0x89>
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;

            sprintf(string_to_send, "ESP:ssid:\"Sens_Board%d\"\n", k); //connect to sensor boards and receive values
     2c2:	ff 92       	push	r15
     2c4:	ef 92       	push	r14
     2c6:	80 e6       	ldi	r24, 0x60	; 96
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	9f 93       	push	r25
     2cc:	8f 93       	push	r24
     2ce:	82 eb       	ldi	r24, 0xB2	; 178
     2d0:	92 e0       	ldi	r25, 0x02	; 2
     2d2:	9f 93       	push	r25
     2d4:	8f 93       	push	r24
     2d6:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
            //strcpy(string_to_send, "ESP:ssid:\"Sens_Board1\"\n");
			sendCommand(string_to_send);
     2da:	82 eb       	ldi	r24, 0xB2	; 178
     2dc:	92 e0       	ldi	r25, 0x02	; 2
     2de:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
			
            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     2e2:	80 e2       	ldi	r24, 0x20	; 32
     2e4:	e9 e7       	ldi	r30, 0x79	; 121
     2e6:	f0 e0       	ldi	r31, 0x00	; 0
     2e8:	a2 eb       	ldi	r26, 0xB2	; 178
     2ea:	b2 e0       	ldi	r27, 0x02	; 2
     2ec:	01 90       	ld	r0, Z+
     2ee:	0d 92       	st	X+, r0
     2f0:	8a 95       	dec	r24
     2f2:	e1 f7       	brne	.-8      	; 0x2ec <__vector_8+0x6c>
			//print_string(string_to_send);
            sendCommand(string_to_send);
     2f4:	82 eb       	ldi	r24, 0xB2	; 178
     2f6:	92 e0       	ldi	r25, 0x02	; 2
     2f8:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
			
			//PORTB=0x00;
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[request]\n");
     2fc:	89 e2       	ldi	r24, 0x29	; 41
     2fe:	e9 e9       	ldi	r30, 0x99	; 153
     300:	f0 e0       	ldi	r31, 0x00	; 0
     302:	a2 eb       	ldi	r26, 0xB2	; 178
     304:	b2 e0       	ldi	r27, 0x02	; 2
     306:	01 90       	ld	r0, Z+
     308:	0d 92       	st	X+, r0
     30a:	8a 95       	dec	r24
     30c:	e1 f7       	brne	.-8      	; 0x306 <__vector_8+0x86>
            sendCommand(string_to_send);
     30e:	82 eb       	ldi	r24, 0xB2	; 178
     310:	92 e0       	ldi	r25, 0x02	; 2
     312:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
			//PORTB=0x00;
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[request]\n");
     316:	87 e2       	ldi	r24, 0x27	; 39
     318:	e2 ec       	ldi	r30, 0xC2	; 194
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	a2 eb       	ldi	r26, 0xB2	; 178
     31e:	b2 e0       	ldi	r27, 0x02	; 2
     320:	01 90       	ld	r0, Z+
     322:	0d 92       	st	X+, r0
     324:	8a 95       	dec	r24
     326:	e1 f7       	brne	.-8      	; 0x320 <__vector_8+0xa0>
            sendCommand(string_to_send);
     328:	82 eb       	ldi	r24, 0xB2	; 178
     32a:	92 e0       	ldi	r25, 0x02	; 2
     32c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
			//PORTB=0xFF;
			PORTB=0x00;
     330:	18 ba       	out	0x18, r1	; 24
            strcpy(string_to_send, "ESP:connect\n");
     332:	8d e0       	ldi	r24, 0x0D	; 13
     334:	e9 ee       	ldi	r30, 0xE9	; 233
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	a2 eb       	ldi	r26, 0xB2	; 178
     33a:	b2 e0       	ldi	r27, 0x02	; 2
     33c:	01 90       	ld	r0, Z+
     33e:	0d 92       	st	X+, r0
     340:	8a 95       	dec	r24
     342:	e1 f7       	brne	.-8      	; 0x33c <__vector_8+0xbc>
            sendCommand(string_to_send);
     344:	82 eb       	ldi	r24, 0xB2	; 178
     346:	92 e0       	ldi	r25, 0x02	; 2
     348:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
			//PORTB=0x00;
			
            strcpy(string_to_send, "ESP:clientTransmit\n");
     34c:	84 e1       	ldi	r24, 0x14	; 20
     34e:	e6 ef       	ldi	r30, 0xF6	; 246
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	a2 eb       	ldi	r26, 0xB2	; 178
     354:	b2 e0       	ldi	r27, 0x02	; 2
     356:	01 90       	ld	r0, Z+
     358:	0d 92       	st	X+, r0
     35a:	8a 95       	dec	r24
     35c:	e1 f7       	brne	.-8      	; 0x356 <__vector_8+0xd6>
            sendCommand(string_to_send);
     35e:	82 eb       	ldi	r24, 0xB2	; 178
     360:	92 e0       	ldi	r25, 0x02	; 2
     362:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
            strcpy(string_to_send, "ESP:getValue:\"Moist_Sensor\"\n");
     366:	8d e1       	ldi	r24, 0x1D	; 29
     368:	ea e0       	ldi	r30, 0x0A	; 10
     36a:	f1 e0       	ldi	r31, 0x01	; 1
     36c:	a2 eb       	ldi	r26, 0xB2	; 178
     36e:	b2 e0       	ldi	r27, 0x02	; 2
     370:	01 90       	ld	r0, Z+
     372:	0d 92       	st	X+, r0
     374:	8a 95       	dec	r24
     376:	e1 f7       	brne	.-8      	; 0x370 <__vector_8+0xf0>
            serialWrite(string_to_send);
     378:	82 eb       	ldi	r24, 0xB2	; 178
     37a:	92 e0       	ldi	r25, 0x02	; 2
     37c:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
            
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
     380:	0f 90       	pop	r0
     382:	0f 90       	pop	r0
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     390:	82 32       	cpi	r24, 0x22	; 34
     392:	e1 f7       	brne	.-8      	; 0x38c <__vector_8+0x10c>
            c=usart_receive(); //read most significant digit
     394:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     398:	86 34       	cpi	r24, 0x46	; 70
     39a:	11 f0       	breq	.+4      	; 0x3a0 <__vector_8+0x120>
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;
     39c:	d1 2c       	mov	r13, r1
     39e:	02 c0       	rjmp	.+4      	; 0x3a4 <__vector_8+0x124>
            
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
     3a0:	dd 24       	eor	r13, r13
     3a2:	d3 94       	inc	r13
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
			counter = 0;
            failed=false;
     3a4:	c0 e0       	ldi	r28, 0x00	; 0
     3a6:	d0 e0       	ldi	r29, 0x00	; 0
     3a8:	09 c0       	rjmp	.+18     	; 0x3bc <__vector_8+0x13c>
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     3aa:	8e 01       	movw	r16, r28
     3ac:	0f 5f       	subi	r16, 0xFF	; 255
     3ae:	1f 4f       	sbci	r17, 0xFF	; 255
     3b0:	c9 5c       	subi	r28, 0xC9	; 201
     3b2:	dc 4f       	sbci	r29, 0xFC	; 252
     3b4:	88 83       	st	Y, r24
                c = usart_receive();
     3b6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
                conv_buffer[counter++]=c;
     3ba:	e8 01       	movw	r28, r16
            counter=0;
            while(usart_receive() != '"' && !failed); //scan input till you find ". The number will follow
            c=usart_receive(); //read most significant digit
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){ // read the whole number (until " is read)
     3bc:	82 32       	cpi	r24, 0x22	; 34
     3be:	11 f0       	breq	.+4      	; 0x3c4 <__vector_8+0x144>
     3c0:	dd 20       	and	r13, r13
     3c2:	99 f3       	breq	.-26     	; 0x3aa <__vector_8+0x12a>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     3c4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){ 
     3c8:	d1 10       	cpse	r13, r1
     3ca:	2e c0       	rjmp	.+92     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
     3cc:	25 e0       	ldi	r18, 0x05	; 5
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	0c c0       	rjmp	.+24     	; 0x3ea <__vector_8+0x16a>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     3d2:	f9 01       	movw	r30, r18
     3d4:	e8 1b       	sub	r30, r24
     3d6:	f9 0b       	sbc	r31, r25
     3d8:	e9 5c       	subi	r30, 0xC9	; 201
     3da:	fc 4f       	sbci	r31, 0xFC	; 252
     3dc:	80 81       	ld	r24, Z
     3de:	f9 01       	movw	r30, r18
     3e0:	e9 5c       	subi	r30, 0xC9	; 201
     3e2:	fc 4f       	sbci	r31, 0xFC	; 252
     3e4:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     3e6:	21 50       	subi	r18, 0x01	; 1
     3e8:	31 09       	sbc	r19, r1
     3ea:	86 e0       	ldi	r24, 0x06	; 6
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	8c 1b       	sub	r24, r28
     3f0:	9d 0b       	sbc	r25, r29
     3f2:	28 17       	cp	r18, r24
     3f4:	39 07       	cpc	r19, r25
     3f6:	6c f7       	brge	.-38     	; 0x3d2 <__vector_8+0x152>
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	07 c0       	rjmp	.+14     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     3fe:	f9 01       	movw	r30, r18
     400:	e9 5c       	subi	r30, 0xC9	; 201
     402:	fc 4f       	sbci	r31, 0xFC	; 252
     404:	40 e3       	ldi	r20, 0x30	; 48
     406:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ 
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     408:	2f 5f       	subi	r18, 0xFF	; 255
     40a:	3f 4f       	sbci	r19, 0xFF	; 255
     40c:	28 17       	cp	r18, r24
     40e:	39 07       	cpc	r19, r25
     410:	b4 f3       	brlt	.-20     	; 0x3fe <__vector_8+0x17e>
                    conv_buffer[i] = '0';
                }
                moistures[k]=atoi(conv_buffer);
     412:	87 e3       	ldi	r24, 0x37	; 55
     414:	93 e0       	ldi	r25, 0x03	; 3
     416:	0e 94 bf 09 	call	0x137e	; 0x137e <atoi>
     41a:	f7 01       	movw	r30, r14
     41c:	ee 0f       	add	r30, r30
     41e:	ff 1f       	adc	r31, r31
     420:	e6 55       	subi	r30, 0x56	; 86
     422:	fd 4f       	sbci	r31, 0xFD	; 253
     424:	91 83       	std	Z+1, r25	; 0x01
     426:	80 83       	st	Z, r24
            }
            
            strcpy(string_to_send, "ESP:getValue:\"Tmp_Sensor\"\n");
     428:	8b e1       	ldi	r24, 0x1B	; 27
     42a:	e7 e2       	ldi	r30, 0x27	; 39
     42c:	f1 e0       	ldi	r31, 0x01	; 1
     42e:	a2 eb       	ldi	r26, 0xB2	; 178
     430:	b2 e0       	ldi	r27, 0x02	; 2
     432:	01 90       	ld	r0, Z+
     434:	0d 92       	st	X+, r0
     436:	8a 95       	dec	r24
     438:	e1 f7       	brne	.-8      	; 0x432 <__DATA_REGION_LENGTH__+0x32>
            serialWrite(string_to_send);
     43a:	82 eb       	ldi	r24, 0xB2	; 178
     43c:	92 e0       	ldi	r25, 0x02	; 2
     43e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>

            //c=getChar();
			counter = 0;
            while(usart_receive() != '"' && !failed);
     442:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
     446:	82 32       	cpi	r24, 0x22	; 34
     448:	11 f0       	breq	.+4      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     44a:	dd 20       	and	r13, r13
     44c:	d1 f3       	breq	.-12     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
            c = usart_receive();
     44e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(c=='F')
     452:	86 34       	cpi	r24, 0x46	; 70
     454:	11 f4       	brne	.+4      	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
                failed=true;
     456:	dd 24       	eor	r13, r13
     458:	d3 94       	inc	r13
     45a:	c0 e0       	ldi	r28, 0x00	; 0
     45c:	d0 e0       	ldi	r29, 0x00	; 0
     45e:	09 c0       	rjmp	.+18     	; 0x472 <__stack+0x13>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     460:	8e 01       	movw	r16, r28
     462:	0f 5f       	subi	r16, 0xFF	; 255
     464:	1f 4f       	sbci	r17, 0xFF	; 255
     466:	c9 5c       	subi	r28, 0xC9	; 201
     468:	dc 4f       	sbci	r29, 0xFC	; 252
     46a:	88 83       	st	Y, r24
                c = usart_receive();
     46c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            while(usart_receive() != '"' && !failed);
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     470:	e8 01       	movw	r28, r16
			counter = 0;
            while(usart_receive() != '"' && !failed);
            c = usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     472:	82 32       	cpi	r24, 0x22	; 34
     474:	11 f0       	breq	.+4      	; 0x47a <__stack+0x1b>
     476:	dd 20       	and	r13, r13
     478:	99 f3       	breq	.-26     	; 0x460 <__stack+0x1>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     47a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
            if(!failed){
     47e:	d1 10       	cpse	r13, r1
     480:	30 c0       	rjmp	.+96     	; 0x4e2 <__stack+0x83>
     482:	25 e0       	ldi	r18, 0x05	; 5
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	0c c0       	rjmp	.+24     	; 0x4a0 <__stack+0x41>
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     488:	f9 01       	movw	r30, r18
     48a:	e8 1b       	sub	r30, r24
     48c:	f9 0b       	sbc	r31, r25
     48e:	e9 5c       	subi	r30, 0xC9	; 201
     490:	fc 4f       	sbci	r31, 0xFC	; 252
     492:	80 81       	ld	r24, Z
     494:	f9 01       	movw	r30, r18
     496:	e9 5c       	subi	r30, 0xC9	; 201
     498:	fc 4f       	sbci	r31, 0xFC	; 252
     49a:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
     49c:	21 50       	subi	r18, 0x01	; 1
     49e:	31 09       	sbc	r19, r1
     4a0:	86 e0       	ldi	r24, 0x06	; 6
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	8c 1b       	sub	r24, r28
     4a6:	9d 0b       	sbc	r25, r29
     4a8:	28 17       	cp	r18, r24
     4aa:	39 07       	cpc	r19, r25
     4ac:	6c f7       	brge	.-38     	; 0x488 <__stack+0x29>
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <__stack+0x63>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     4b4:	f9 01       	movw	r30, r18
     4b6:	e9 5c       	subi	r30, 0xC9	; 201
     4b8:	fc 4f       	sbci	r31, 0xFC	; 252
     4ba:	40 e3       	ldi	r20, 0x30	; 48
     4bc:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){ // place number at the end of the buffer and fill the start of it with 0s so that it can be converted to an int
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     4be:	2f 5f       	subi	r18, 0xFF	; 255
     4c0:	3f 4f       	sbci	r19, 0xFF	; 255
     4c2:	28 17       	cp	r18, r24
     4c4:	39 07       	cpc	r19, r25
     4c6:	b4 f3       	brlt	.-20     	; 0x4b4 <__stack+0x55>
                    conv_buffer[i] = '0';
                }
                temperatures[k]=atof(conv_buffer);
     4c8:	87 e3       	ldi	r24, 0x37	; 55
     4ca:	93 e0       	ldi	r25, 0x03	; 3
     4cc:	0e 94 bb 09 	call	0x1376	; 0x1376 <atof>
     4d0:	e7 01       	movw	r28, r14
     4d2:	cc 0f       	add	r28, r28
     4d4:	dd 1f       	adc	r29, r29
     4d6:	cc 5c       	subi	r28, 0xCC	; 204
     4d8:	dc 4f       	sbci	r29, 0xFC	; 252
     4da:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fixsfsi>
     4de:	79 83       	std	Y+1, r23	; 0x01
     4e0:	68 83       	st	Y, r22
    int counter =0;
	
	//PORTB=PORTB^0xFF;
	
    if(!first) {
        for(int k=1; k<=sensor_boards; ++k){
     4e2:	8f ef       	ldi	r24, 0xFF	; 255
     4e4:	e8 1a       	sub	r14, r24
     4e6:	f8 0a       	sbc	r15, r24
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	e9 16       	cp	r14, r25
     4ec:	f1 04       	cpc	r15, r1
     4ee:	0c f4       	brge	.+2      	; 0x4f2 <__stack+0x93>
     4f0:	e8 ce       	rjmp	.-560    	; 0x2c2 <__vector_8+0x42>
        }


        //calculate averages and variances and transmit them to main node

        tmp_avg=0.0;
     4f2:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <__data_end>
     4f6:	10 92 a7 02 	sts	0x02A7, r1	; 0x8002a7 <__data_end+0x1>
     4fa:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <__data_end+0x2>
     4fe:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <__data_end+0x3>
        moist_avg=0;
     502:	10 92 33 03 	sts	0x0333, r1	; 0x800333 <moist_avg+0x1>
     506:	10 92 32 03 	sts	0x0332, r1	; 0x800332 <moist_avg>
        for(int i=0; i<sensor_boards; ++i) {
     50a:	c0 e0       	ldi	r28, 0x00	; 0
     50c:	d0 e0       	ldi	r29, 0x00	; 0
     50e:	32 c0       	rjmp	.+100    	; 0x574 <__stack+0x115>
            moist_avg += moistures[i];
     510:	ce 01       	movw	r24, r28
     512:	88 0f       	add	r24, r24
     514:	99 1f       	adc	r25, r25
     516:	fc 01       	movw	r30, r24
     518:	e6 55       	subi	r30, 0x56	; 86
     51a:	fd 4f       	sbci	r31, 0xFD	; 253
     51c:	20 81       	ld	r18, Z
     51e:	31 81       	ldd	r19, Z+1	; 0x01
     520:	40 91 32 03 	lds	r20, 0x0332	; 0x800332 <moist_avg>
     524:	50 91 33 03 	lds	r21, 0x0333	; 0x800333 <moist_avg+0x1>
     528:	24 0f       	add	r18, r20
     52a:	35 1f       	adc	r19, r21
     52c:	30 93 33 03 	sts	0x0333, r19	; 0x800333 <moist_avg+0x1>
     530:	20 93 32 03 	sts	0x0332, r18	; 0x800332 <moist_avg>
            tmp_avg += temperatures[i];
     534:	fc 01       	movw	r30, r24
     536:	ec 5c       	subi	r30, 0xCC	; 204
     538:	fc 4f       	sbci	r31, 0xFC	; 252
     53a:	60 81       	ld	r22, Z
     53c:	71 81       	ldd	r23, Z+1	; 0x01
     53e:	07 2e       	mov	r0, r23
     540:	00 0c       	add	r0, r0
     542:	88 0b       	sbc	r24, r24
     544:	99 0b       	sbc	r25, r25
     546:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__floatsisf>
     54a:	9b 01       	movw	r18, r22
     54c:	ac 01       	movw	r20, r24
     54e:	60 91 a6 02 	lds	r22, 0x02A6	; 0x8002a6 <__data_end>
     552:	70 91 a7 02 	lds	r23, 0x02A7	; 0x8002a7 <__data_end+0x1>
     556:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__data_end+0x2>
     55a:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <__data_end+0x3>
     55e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__addsf3>
     562:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <__data_end>
     566:	70 93 a7 02 	sts	0x02A7, r23	; 0x8002a7 <__data_end+0x1>
     56a:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <__data_end+0x2>
     56e:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <__data_end+0x3>

        //calculate averages and variances and transmit them to main node

        tmp_avg=0.0;
        moist_avg=0;
        for(int i=0; i<sensor_boards; ++i) {
     572:	21 96       	adiw	r28, 0x01	; 1
     574:	1c 16       	cp	r1, r28
     576:	1d 06       	cpc	r1, r29
     578:	5c f6       	brge	.-106    	; 0x510 <__stack+0xb1>
            moist_avg += moistures[i];
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
     57a:	00 91 32 03 	lds	r16, 0x0332	; 0x800332 <moist_avg>
     57e:	10 91 33 03 	lds	r17, 0x0333	; 0x800333 <moist_avg+0x1>
        tmp_avg /= sensor_boards;
     582:	f0 90 a6 02 	lds	r15, 0x02A6	; 0x8002a6 <__data_end>
     586:	e0 90 a7 02 	lds	r14, 0x02A7	; 0x8002a7 <__data_end+0x1>
     58a:	d0 90 a8 02 	lds	r13, 0x02A8	; 0x8002a8 <__data_end+0x2>
     58e:	c0 90 a9 02 	lds	r12, 0x02A9	; 0x8002a9 <__data_end+0x3>

        for(int i=0; i<sensor_boards; ++i) {
     592:	c0 e0       	ldi	r28, 0x00	; 0
     594:	d0 e0       	ldi	r29, 0x00	; 0
     596:	44 c0       	rjmp	.+136    	; 0x620 <__stack+0x1c1>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
     598:	ce 01       	movw	r24, r28
     59a:	88 0f       	add	r24, r24
     59c:	99 1f       	adc	r25, r25
     59e:	fc 01       	movw	r30, r24
     5a0:	e6 55       	subi	r30, 0x56	; 86
     5a2:	fd 4f       	sbci	r31, 0xFD	; 253
     5a4:	20 81       	ld	r18, Z
     5a6:	31 81       	ldd	r19, Z+1	; 0x01
     5a8:	20 1b       	sub	r18, r16
     5aa:	31 0b       	sbc	r19, r17
     5ac:	22 9f       	mul	r18, r18
     5ae:	a0 01       	movw	r20, r0
     5b0:	23 9f       	mul	r18, r19
     5b2:	50 0d       	add	r21, r0
     5b4:	50 0d       	add	r21, r0
     5b6:	11 24       	eor	r1, r1
     5b8:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <moist_var>
     5bc:	30 91 ad 02 	lds	r19, 0x02AD	; 0x8002ad <moist_var+0x1>
     5c0:	24 0f       	add	r18, r20
     5c2:	35 1f       	adc	r19, r21
     5c4:	30 93 ad 02 	sts	0x02AD, r19	; 0x8002ad <moist_var+0x1>
     5c8:	20 93 ac 02 	sts	0x02AC, r18	; 0x8002ac <moist_var>
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
     5cc:	fc 01       	movw	r30, r24
     5ce:	ec 5c       	subi	r30, 0xCC	; 204
     5d0:	fc 4f       	sbci	r31, 0xFC	; 252
     5d2:	60 81       	ld	r22, Z
     5d4:	71 81       	ldd	r23, Z+1	; 0x01
     5d6:	07 2e       	mov	r0, r23
     5d8:	00 0c       	add	r0, r0
     5da:	88 0b       	sbc	r24, r24
     5dc:	99 0b       	sbc	r25, r25
     5de:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__floatsisf>
     5e2:	2f 2d       	mov	r18, r15
     5e4:	3e 2d       	mov	r19, r14
     5e6:	4d 2d       	mov	r20, r13
     5e8:	5c 2d       	mov	r21, r12
     5ea:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__subsf3>
     5ee:	9b 01       	movw	r18, r22
     5f0:	ac 01       	movw	r20, r24
     5f2:	0e 94 9a 05 	call	0xb34	; 0xb34 <__mulsf3>
     5f6:	9b 01       	movw	r18, r22
     5f8:	ac 01       	movw	r20, r24
     5fa:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <tmp_var_f>
     5fe:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <tmp_var_f+0x1>
     602:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <tmp_var_f+0x2>
     606:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <tmp_var_f+0x3>
     60a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__addsf3>
     60e:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <tmp_var_f>
     612:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <tmp_var_f+0x1>
     616:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <tmp_var_f+0x2>
     61a:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <tmp_var_f+0x3>
            tmp_avg += temperatures[i];
        }
        moist_avg /= sensor_boards;
        tmp_avg /= sensor_boards;

        for(int i=0; i<sensor_boards; ++i) {
     61e:	21 96       	adiw	r28, 0x01	; 1
     620:	1c 16       	cp	r1, r28
     622:	1d 06       	cpc	r1, r29
     624:	0c f0       	brlt	.+2      	; 0x628 <__stack+0x1c9>
     626:	b8 cf       	rjmp	.-144    	; 0x598 <__stack+0x139>
            moist_var += (moistures[i]-moist_avg)*(moistures[i]-moist_avg);
            tmp_var_f += (temperatures[i]-tmp_avg)*(temperatures[i]-tmp_avg);
        }
        moist_var /= sensor_boards;
     628:	c0 91 ac 02 	lds	r28, 0x02AC	; 0x8002ac <moist_var>
     62c:	d0 91 ad 02 	lds	r29, 0x02AD	; 0x8002ad <moist_var+0x1>
        tmp_var_f /= sensor_boards;
     630:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <tmp_var_f>
     634:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <tmp_var_f+0x1>
     638:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <tmp_var_f+0x2>
     63c:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <tmp_var_f+0x3>
        tmp_var = (int)tmp_var_f;
     640:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__fixsfsi>
     644:	60 93 3d 03 	sts	0x033D, r22	; 0x80033d <tmp_var>
     648:	70 93 3e 03 	sts	0x033E, r23	; 0x80033e <tmp_var+0x1>
		
		//PORTB=0x00;

        //debug
        sprintf(string_to_send, "%d %.1f %d %d", moist_avg, tmp_avg, moist_var, tmp_var);
     64c:	7f 93       	push	r23
     64e:	6f 93       	push	r22
     650:	df 93       	push	r29
     652:	cf 93       	push	r28
     654:	cf 92       	push	r12
     656:	df 92       	push	r13
     658:	ef 92       	push	r14
     65a:	ff 92       	push	r15
     65c:	1f 93       	push	r17
     65e:	0f 93       	push	r16
     660:	82 e4       	ldi	r24, 0x42	; 66
     662:	91 e0       	ldi	r25, 0x01	; 1
     664:	9f 93       	push	r25
     666:	8f 93       	push	r24
     668:	c2 eb       	ldi	r28, 0xB2	; 178
     66a:	d2 e0       	ldi	r29, 0x02	; 2
     66c:	df 93       	push	r29
     66e:	cf 93       	push	r28
     670:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
        //end_debug




        strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     674:	87 e1       	ldi	r24, 0x17	; 23
     676:	e0 e5       	ldi	r30, 0x50	; 80
     678:	f1 e0       	ldi	r31, 0x01	; 1
     67a:	de 01       	movw	r26, r28
     67c:	01 90       	ld	r0, Z+
     67e:	0d 92       	st	X+, r0
     680:	8a 95       	dec	r24
     682:	e1 f7       	brne	.-8      	; 0x67c <__stack+0x21d>
        sendCommand(string_to_send);
     684:	ce 01       	movw	r24, r28
     686:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
     68a:	80 e2       	ldi	r24, 0x20	; 32
     68c:	e9 e7       	ldi	r30, 0x79	; 121
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	de 01       	movw	r26, r28
     692:	01 90       	ld	r0, Z+
     694:	0d 92       	st	X+, r0
     696:	8a 95       	dec	r24
     698:	e1 f7       	brne	.-8      	; 0x692 <__stack+0x233>
        sendCommand(string_to_send);
     69a:	ce 01       	movw	r24, r28
     69c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Moist_avg\"[%d]\n", moist_avg);
     6a0:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <moist_avg+0x1>
     6a4:	8f 93       	push	r24
     6a6:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <moist_avg>
     6aa:	8f 93       	push	r24
     6ac:	87 e6       	ldi	r24, 0x67	; 103
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	9f 93       	push	r25
     6b2:	8f 93       	push	r24
     6b4:	df 93       	push	r29
     6b6:	cf 93       	push	r28
     6b8:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     6bc:	ce 01       	movw	r24, r28
     6be:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[%.1f]\n", tmp_avg);
     6c2:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <__data_end+0x3>
     6c6:	8f 93       	push	r24
     6c8:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__data_end+0x2>
     6cc:	8f 93       	push	r24
     6ce:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <__data_end+0x1>
     6d2:	8f 93       	push	r24
     6d4:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <__data_end>
     6d8:	8f 93       	push	r24
     6da:	88 e8       	ldi	r24, 0x88	; 136
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9f 93       	push	r25
     6e0:	8f 93       	push	r24
     6e2:	df 93       	push	r29
     6e4:	cf 93       	push	r28
     6e6:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     6ea:	ce 01       	movw	r24, r28
     6ec:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Moist_var\"[%d]\n", moist_var);
     6f0:	80 91 ad 02 	lds	r24, 0x02AD	; 0x8002ad <moist_var+0x1>
     6f4:	8f 93       	push	r24
     6f6:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <moist_var>
     6fa:	8f 93       	push	r24
     6fc:	89 ea       	ldi	r24, 0xA9	; 169
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	9f 93       	push	r25
     702:	8f 93       	push	r24
     704:	df 93       	push	r29
     706:	cf 93       	push	r28
     708:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     70c:	8d b7       	in	r24, 0x3d	; 61
     70e:	9e b7       	in	r25, 0x3e	; 62
     710:	82 96       	adiw	r24, 0x22	; 34
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	9e bf       	out	0x3e, r25	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	8d bf       	out	0x3d, r24	; 61
     71c:	ce 01       	movw	r24, r28
     71e:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_var\"[%d]\n", tmp_var);
     722:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <tmp_var+0x1>
     726:	8f 93       	push	r24
     728:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <tmp_var>
     72c:	8f 93       	push	r24
     72e:	8a ec       	ldi	r24, 0xCA	; 202
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	9f 93       	push	r25
     734:	8f 93       	push	r24
     736:	df 93       	push	r29
     738:	cf 93       	push	r28
     73a:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
        sendCommand(string_to_send); //send command to set the value of the sensor
     73e:	ce 01       	movw	r24, r28
     740:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

		strcpy(string_to_send, "ESP:clientTransmit\n");
     744:	84 e1       	ldi	r24, 0x14	; 20
     746:	e6 ef       	ldi	r30, 0xF6	; 246
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	de 01       	movw	r26, r28
     74c:	01 90       	ld	r0, Z+
     74e:	0d 92       	st	X+, r0
     750:	8a 95       	dec	r24
     752:	e1 f7       	brne	.-8      	; 0x74c <__stack+0x2ed>
		sendCommand(string_to_send);
     754:	ce 01       	movw	r24, r28
     756:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>
     75a:	0f 90       	pop	r0
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	02 c0       	rjmp	.+4      	; 0x76c <__stack+0x30d>
     
    }
    else
        first=false;
     768:	10 92 36 03 	sts	0x0336, r1	; 0x800336 <first>

    //TCNT1 = 3036;
	TCNT1 = 34286; //4s between interrupts
     76c:	8e ee       	ldi	r24, 0xEE	; 238
     76e:	95 e8       	ldi	r25, 0x85	; 133
     770:	9d bd       	out	0x2d, r25	; 45
     772:	8c bd       	out	0x2c, r24	; 44
}
     774:	ff 91       	pop	r31
     776:	ef 91       	pop	r30
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	bf 91       	pop	r27
     77e:	af 91       	pop	r26
     780:	9f 91       	pop	r25
     782:	8f 91       	pop	r24
     784:	7f 91       	pop	r23
     786:	6f 91       	pop	r22
     788:	5f 91       	pop	r21
     78a:	4f 91       	pop	r20
     78c:	3f 91       	pop	r19
     78e:	2f 91       	pop	r18
     790:	1f 91       	pop	r17
     792:	0f 91       	pop	r16
     794:	ff 90       	pop	r15
     796:	ef 90       	pop	r14
     798:	df 90       	pop	r13
     79a:	cf 90       	pop	r12
     79c:	0f 90       	pop	r0
     79e:	0f be       	out	0x3f, r0	; 63
     7a0:	0f 90       	pop	r0
     7a2:	1f 90       	pop	r1
     7a4:	18 95       	reti

000007a6 <main>:


int main(){
    DDRB=0xFF;
     7a6:	8f ef       	ldi	r24, 0xFF	; 255
     7a8:	87 bb       	out	0x17, r24	; 23
    DDRD=0xFF;
     7aa:	81 bb       	out	0x11, r24	; 17
	
	//PORTB=0xFF;

	first=true;
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <first>
	
    //lcd_init_sim();
	usart_init(MYUBRR);
     7b2:	83 e3       	ldi	r24, 0x33	; 51
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <usart_init>
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	0e c0       	rjmp	.+28     	; 0x7dc <main+0x36>
        moistures[i]=0;
     7c0:	9c 01       	movw	r18, r24
     7c2:	22 0f       	add	r18, r18
     7c4:	33 1f       	adc	r19, r19
     7c6:	f9 01       	movw	r30, r18
     7c8:	e6 55       	subi	r30, 0x56	; 86
     7ca:	fd 4f       	sbci	r31, 0xFD	; 253
     7cc:	11 82       	std	Z+1, r1	; 0x01
     7ce:	10 82       	st	Z, r1
        temperatures[i]=0;
     7d0:	f9 01       	movw	r30, r18
     7d2:	ec 5c       	subi	r30, 0xCC	; 204
     7d4:	fc 4f       	sbci	r31, 0xFC	; 252
     7d6:	11 82       	std	Z+1, r1	; 0x01
     7d8:	10 82       	st	Z, r1
	first=true;
	
    //lcd_init_sim();
	usart_init(MYUBRR);
	
    for(int i=0; i<sensor_boards; ++i) { //initialize moistures and temperatures
     7da:	01 96       	adiw	r24, 0x01	; 1
     7dc:	18 16       	cp	r1, r24
     7de:	19 06       	cpc	r1, r25
     7e0:	7c f7       	brge	.-34     	; 0x7c0 <main+0x1a>
        moistures[i]=0;
        temperatures[i]=0;
    }

	//PORTB=0xFF;
    usart_transmit('\n'); //to flush serial
     7e2:	8a e0       	ldi	r24, 0x0A	; 10
     7e4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <usart_transmit>
    	
    strcpy(string_to_send, "ESP:restart\n");
     7e8:	8d e0       	ldi	r24, 0x0D	; 13
     7ea:	e9 ee       	ldi	r30, 0xE9	; 233
     7ec:	f1 e0       	ldi	r31, 0x01	; 1
     7ee:	a2 eb       	ldi	r26, 0xB2	; 178
     7f0:	b2 e0       	ldi	r27, 0x02	; 2
     7f2:	01 90       	ld	r0, Z+
     7f4:	0d 92       	st	X+, r0
     7f6:	8a 95       	dec	r24
     7f8:	e1 f7       	brne	.-8      	; 0x7f2 <main+0x4c>
    serialWrite(string_to_send);
     7fa:	82 eb       	ldi	r24, 0xB2	; 178
     7fc:	92 e0       	ldi	r25, 0x02	; 2
     7fe:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <serialWrite>
    
    usart_receive(); //wait until restart is complete
     802:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
    while(UCSRA&(1<<RXC))
     806:	02 c0       	rjmp	.+4      	; 0x80c <main+0x66>
    usart_receive();
     808:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <usart_receive>
    	
    strcpy(string_to_send, "ESP:restart\n");
    serialWrite(string_to_send);
    
    usart_receive(); //wait until restart is complete
    while(UCSRA&(1<<RXC))
     80c:	5f 99       	sbic	0x0b, 7	; 11
     80e:	fc cf       	rjmp	.-8      	; 0x808 <main+0x62>
    usart_receive();

    strcpy(string_to_send, "ESP:addSensor: \"Moist_Sensor\"\n");
     810:	c2 eb       	ldi	r28, 0xB2	; 178
     812:	d2 e0       	ldi	r29, 0x02	; 2
     814:	8f e1       	ldi	r24, 0x1F	; 31
     816:	e6 ef       	ldi	r30, 0xF6	; 246
     818:	f1 e0       	ldi	r31, 0x01	; 1
     81a:	de 01       	movw	r26, r28
     81c:	01 90       	ld	r0, Z+
     81e:	0d 92       	st	X+, r0
     820:	8a 95       	dec	r24
     822:	e1 f7       	brne	.-8      	; 0x81c <main+0x76>
	//print_string(string_to_send);
    sendCommand(string_to_send);
     824:	ce 01       	movw	r24, r28
     826:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    strcpy(string_to_send, "ESP:addSensor: \"Tmp_Sensor\"\n");
     82a:	8d e1       	ldi	r24, 0x1D	; 29
     82c:	e5 e1       	ldi	r30, 0x15	; 21
     82e:	f2 e0       	ldi	r31, 0x02	; 2
     830:	de 01       	movw	r26, r28
     832:	01 90       	ld	r0, Z+
     834:	0d 92       	st	X+, r0
     836:	8a 95       	dec	r24
     838:	e1 f7       	brne	.-8      	; 0x832 <main+0x8c>
    sendCommand(string_to_send);
     83a:	ce 01       	movw	r24, r28
     83c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Moist_avg%d\"\n", board_no);
     840:	1f 92       	push	r1
     842:	11 e0       	ldi	r17, 0x01	; 1
     844:	1f 93       	push	r17
     846:	82 e3       	ldi	r24, 0x32	; 50
     848:	92 e0       	ldi	r25, 0x02	; 2
     84a:	9f 93       	push	r25
     84c:	8f 93       	push	r24
     84e:	df 93       	push	r29
     850:	cf 93       	push	r28
     852:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
    sendCommand(string_to_send);
     856:	ce 01       	movw	r24, r28
     858:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Tmp_avg%d\"\n", board_no);
     85c:	1f 92       	push	r1
     85e:	1f 93       	push	r17
     860:	80 e5       	ldi	r24, 0x50	; 80
     862:	92 e0       	ldi	r25, 0x02	; 2
     864:	9f 93       	push	r25
     866:	8f 93       	push	r24
     868:	df 93       	push	r29
     86a:	cf 93       	push	r28
     86c:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
    sendCommand(string_to_send);
     870:	ce 01       	movw	r24, r28
     872:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Moist_var%d\"\n", board_no);
     876:	1f 92       	push	r1
     878:	1f 93       	push	r17
     87a:	8c e6       	ldi	r24, 0x6C	; 108
     87c:	92 e0       	ldi	r25, 0x02	; 2
     87e:	9f 93       	push	r25
     880:	8f 93       	push	r24
     882:	df 93       	push	r29
     884:	cf 93       	push	r28
     886:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
    sendCommand(string_to_send);
     88a:	ce 01       	movw	r24, r28
     88c:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

    sprintf(string_to_send, "ESP:addSensor: \"Tmp_var%d\"\n", board_no);
     890:	1f 92       	push	r1
     892:	1f 93       	push	r17
     894:	8a e8       	ldi	r24, 0x8A	; 138
     896:	92 e0       	ldi	r25, 0x02	; 2
     898:	9f 93       	push	r25
     89a:	8f 93       	push	r24
     89c:	df 93       	push	r29
     89e:	cf 93       	push	r28
     8a0:	0e 94 0f 0b 	call	0x161e	; 0x161e <sprintf>
    sendCommand(string_to_send);
     8a4:	ce 01       	movw	r24, r28
     8a6:	0e 94 15 01 	call	0x22a	; 0x22a <sendCommand>

	PORTB=0xFF;
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	88 bb       	out	0x18, r24	; 24

    TCCR1B = 0x05; //CK/1024
     8ae:	85 e0       	ldi	r24, 0x05	; 5
     8b0:	8e bd       	out	0x2e, r24	; 46
	//TCNT1 = 3036; //8 seconds
	TCNT1 = 34286; //4s between interrupts
     8b2:	8e ee       	ldi	r24, 0xEE	; 238
     8b4:	95 e8       	ldi	r25, 0x85	; 133
     8b6:	9d bd       	out	0x2d, r25	; 45
     8b8:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     8ba:	84 e0       	ldi	r24, 0x04	; 4
     8bc:	89 bf       	out	0x39, r24	; 57
    sei();
     8be:	78 94       	sei
     8c0:	8d b7       	in	r24, 0x3d	; 61
     8c2:	9e b7       	in	r25, 0x3e	; 62
     8c4:	48 96       	adiw	r24, 0x18	; 24
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	f8 94       	cli
     8ca:	9e bf       	out	0x3e, r25	; 62
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	8d bf       	out	0x3d, r24	; 61
     8d0:	ff cf       	rjmp	.-2      	; 0x8d0 <main+0x12a>

000008d2 <__subsf3>:
     8d2:	50 58       	subi	r21, 0x80	; 128

000008d4 <__addsf3>:
     8d4:	bb 27       	eor	r27, r27
     8d6:	aa 27       	eor	r26, r26
     8d8:	0e 94 81 04 	call	0x902	; 0x902 <__addsf3x>
     8dc:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__fp_round>
     8e0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__fp_pscA>
     8e4:	38 f0       	brcs	.+14     	; 0x8f4 <__addsf3+0x20>
     8e6:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscB>
     8ea:	20 f0       	brcs	.+8      	; 0x8f4 <__addsf3+0x20>
     8ec:	39 f4       	brne	.+14     	; 0x8fc <__addsf3+0x28>
     8ee:	9f 3f       	cpi	r25, 0xFF	; 255
     8f0:	19 f4       	brne	.+6      	; 0x8f8 <__addsf3+0x24>
     8f2:	26 f4       	brtc	.+8      	; 0x8fc <__addsf3+0x28>
     8f4:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__fp_nan>
     8f8:	0e f4       	brtc	.+2      	; 0x8fc <__addsf3+0x28>
     8fa:	e0 95       	com	r30
     8fc:	e7 fb       	bst	r30, 7
     8fe:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__fp_inf>

00000902 <__addsf3x>:
     902:	e9 2f       	mov	r30, r25
     904:	0e 94 71 05 	call	0xae2	; 0xae2 <__fp_split3>
     908:	58 f3       	brcs	.-42     	; 0x8e0 <__addsf3+0xc>
     90a:	ba 17       	cp	r27, r26
     90c:	62 07       	cpc	r22, r18
     90e:	73 07       	cpc	r23, r19
     910:	84 07       	cpc	r24, r20
     912:	95 07       	cpc	r25, r21
     914:	20 f0       	brcs	.+8      	; 0x91e <__addsf3x+0x1c>
     916:	79 f4       	brne	.+30     	; 0x936 <__addsf3x+0x34>
     918:	a6 f5       	brtc	.+104    	; 0x982 <__addsf3x+0x80>
     91a:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_zero>
     91e:	0e f4       	brtc	.+2      	; 0x922 <__addsf3x+0x20>
     920:	e0 95       	com	r30
     922:	0b 2e       	mov	r0, r27
     924:	ba 2f       	mov	r27, r26
     926:	a0 2d       	mov	r26, r0
     928:	0b 01       	movw	r0, r22
     92a:	b9 01       	movw	r22, r18
     92c:	90 01       	movw	r18, r0
     92e:	0c 01       	movw	r0, r24
     930:	ca 01       	movw	r24, r20
     932:	a0 01       	movw	r20, r0
     934:	11 24       	eor	r1, r1
     936:	ff 27       	eor	r31, r31
     938:	59 1b       	sub	r21, r25
     93a:	99 f0       	breq	.+38     	; 0x962 <__addsf3x+0x60>
     93c:	59 3f       	cpi	r21, 0xF9	; 249
     93e:	50 f4       	brcc	.+20     	; 0x954 <__addsf3x+0x52>
     940:	50 3e       	cpi	r21, 0xE0	; 224
     942:	68 f1       	brcs	.+90     	; 0x99e <__addsf3x+0x9c>
     944:	1a 16       	cp	r1, r26
     946:	f0 40       	sbci	r31, 0x00	; 0
     948:	a2 2f       	mov	r26, r18
     94a:	23 2f       	mov	r18, r19
     94c:	34 2f       	mov	r19, r20
     94e:	44 27       	eor	r20, r20
     950:	58 5f       	subi	r21, 0xF8	; 248
     952:	f3 cf       	rjmp	.-26     	; 0x93a <__addsf3x+0x38>
     954:	46 95       	lsr	r20
     956:	37 95       	ror	r19
     958:	27 95       	ror	r18
     95a:	a7 95       	ror	r26
     95c:	f0 40       	sbci	r31, 0x00	; 0
     95e:	53 95       	inc	r21
     960:	c9 f7       	brne	.-14     	; 0x954 <__addsf3x+0x52>
     962:	7e f4       	brtc	.+30     	; 0x982 <__addsf3x+0x80>
     964:	1f 16       	cp	r1, r31
     966:	ba 0b       	sbc	r27, r26
     968:	62 0b       	sbc	r22, r18
     96a:	73 0b       	sbc	r23, r19
     96c:	84 0b       	sbc	r24, r20
     96e:	ba f0       	brmi	.+46     	; 0x99e <__addsf3x+0x9c>
     970:	91 50       	subi	r25, 0x01	; 1
     972:	a1 f0       	breq	.+40     	; 0x99c <__addsf3x+0x9a>
     974:	ff 0f       	add	r31, r31
     976:	bb 1f       	adc	r27, r27
     978:	66 1f       	adc	r22, r22
     97a:	77 1f       	adc	r23, r23
     97c:	88 1f       	adc	r24, r24
     97e:	c2 f7       	brpl	.-16     	; 0x970 <__addsf3x+0x6e>
     980:	0e c0       	rjmp	.+28     	; 0x99e <__addsf3x+0x9c>
     982:	ba 0f       	add	r27, r26
     984:	62 1f       	adc	r22, r18
     986:	73 1f       	adc	r23, r19
     988:	84 1f       	adc	r24, r20
     98a:	48 f4       	brcc	.+18     	; 0x99e <__addsf3x+0x9c>
     98c:	87 95       	ror	r24
     98e:	77 95       	ror	r23
     990:	67 95       	ror	r22
     992:	b7 95       	ror	r27
     994:	f7 95       	ror	r31
     996:	9e 3f       	cpi	r25, 0xFE	; 254
     998:	08 f0       	brcs	.+2      	; 0x99c <__addsf3x+0x9a>
     99a:	b0 cf       	rjmp	.-160    	; 0x8fc <__addsf3+0x28>
     99c:	93 95       	inc	r25
     99e:	88 0f       	add	r24, r24
     9a0:	08 f0       	brcs	.+2      	; 0x9a4 <__addsf3x+0xa2>
     9a2:	99 27       	eor	r25, r25
     9a4:	ee 0f       	add	r30, r30
     9a6:	97 95       	ror	r25
     9a8:	87 95       	ror	r24
     9aa:	08 95       	ret

000009ac <__fixsfsi>:
     9ac:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fixunssfsi>
     9b0:	68 94       	set
     9b2:	b1 11       	cpse	r27, r1
     9b4:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__fp_szero>
     9b8:	08 95       	ret

000009ba <__fixunssfsi>:
     9ba:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fp_splitA>
     9be:	88 f0       	brcs	.+34     	; 0x9e2 <__fixunssfsi+0x28>
     9c0:	9f 57       	subi	r25, 0x7F	; 127
     9c2:	98 f0       	brcs	.+38     	; 0x9ea <__fixunssfsi+0x30>
     9c4:	b9 2f       	mov	r27, r25
     9c6:	99 27       	eor	r25, r25
     9c8:	b7 51       	subi	r27, 0x17	; 23
     9ca:	b0 f0       	brcs	.+44     	; 0x9f8 <__fixunssfsi+0x3e>
     9cc:	e1 f0       	breq	.+56     	; 0xa06 <__fixunssfsi+0x4c>
     9ce:	66 0f       	add	r22, r22
     9d0:	77 1f       	adc	r23, r23
     9d2:	88 1f       	adc	r24, r24
     9d4:	99 1f       	adc	r25, r25
     9d6:	1a f0       	brmi	.+6      	; 0x9de <__fixunssfsi+0x24>
     9d8:	ba 95       	dec	r27
     9da:	c9 f7       	brne	.-14     	; 0x9ce <__fixunssfsi+0x14>
     9dc:	14 c0       	rjmp	.+40     	; 0xa06 <__fixunssfsi+0x4c>
     9de:	b1 30       	cpi	r27, 0x01	; 1
     9e0:	91 f0       	breq	.+36     	; 0xa06 <__fixunssfsi+0x4c>
     9e2:	0e 94 93 05 	call	0xb26	; 0xb26 <__fp_zero>
     9e6:	b1 e0       	ldi	r27, 0x01	; 1
     9e8:	08 95       	ret
     9ea:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_zero>
     9ee:	67 2f       	mov	r22, r23
     9f0:	78 2f       	mov	r23, r24
     9f2:	88 27       	eor	r24, r24
     9f4:	b8 5f       	subi	r27, 0xF8	; 248
     9f6:	39 f0       	breq	.+14     	; 0xa06 <__fixunssfsi+0x4c>
     9f8:	b9 3f       	cpi	r27, 0xF9	; 249
     9fa:	cc f3       	brlt	.-14     	; 0x9ee <__fixunssfsi+0x34>
     9fc:	86 95       	lsr	r24
     9fe:	77 95       	ror	r23
     a00:	67 95       	ror	r22
     a02:	b3 95       	inc	r27
     a04:	d9 f7       	brne	.-10     	; 0x9fc <__fixunssfsi+0x42>
     a06:	3e f4       	brtc	.+14     	; 0xa16 <__fixunssfsi+0x5c>
     a08:	90 95       	com	r25
     a0a:	80 95       	com	r24
     a0c:	70 95       	com	r23
     a0e:	61 95       	neg	r22
     a10:	7f 4f       	sbci	r23, 0xFF	; 255
     a12:	8f 4f       	sbci	r24, 0xFF	; 255
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	08 95       	ret

00000a18 <__floatunsisf>:
     a18:	e8 94       	clt
     a1a:	09 c0       	rjmp	.+18     	; 0xa2e <__floatsisf+0x12>

00000a1c <__floatsisf>:
     a1c:	97 fb       	bst	r25, 7
     a1e:	3e f4       	brtc	.+14     	; 0xa2e <__floatsisf+0x12>
     a20:	90 95       	com	r25
     a22:	80 95       	com	r24
     a24:	70 95       	com	r23
     a26:	61 95       	neg	r22
     a28:	7f 4f       	sbci	r23, 0xFF	; 255
     a2a:	8f 4f       	sbci	r24, 0xFF	; 255
     a2c:	9f 4f       	sbci	r25, 0xFF	; 255
     a2e:	99 23       	and	r25, r25
     a30:	a9 f0       	breq	.+42     	; 0xa5c <__floatsisf+0x40>
     a32:	f9 2f       	mov	r31, r25
     a34:	96 e9       	ldi	r25, 0x96	; 150
     a36:	bb 27       	eor	r27, r27
     a38:	93 95       	inc	r25
     a3a:	f6 95       	lsr	r31
     a3c:	87 95       	ror	r24
     a3e:	77 95       	ror	r23
     a40:	67 95       	ror	r22
     a42:	b7 95       	ror	r27
     a44:	f1 11       	cpse	r31, r1
     a46:	f8 cf       	rjmp	.-16     	; 0xa38 <__floatsisf+0x1c>
     a48:	fa f4       	brpl	.+62     	; 0xa88 <__floatsisf+0x6c>
     a4a:	bb 0f       	add	r27, r27
     a4c:	11 f4       	brne	.+4      	; 0xa52 <__floatsisf+0x36>
     a4e:	60 ff       	sbrs	r22, 0
     a50:	1b c0       	rjmp	.+54     	; 0xa88 <__floatsisf+0x6c>
     a52:	6f 5f       	subi	r22, 0xFF	; 255
     a54:	7f 4f       	sbci	r23, 0xFF	; 255
     a56:	8f 4f       	sbci	r24, 0xFF	; 255
     a58:	9f 4f       	sbci	r25, 0xFF	; 255
     a5a:	16 c0       	rjmp	.+44     	; 0xa88 <__floatsisf+0x6c>
     a5c:	88 23       	and	r24, r24
     a5e:	11 f0       	breq	.+4      	; 0xa64 <__floatsisf+0x48>
     a60:	96 e9       	ldi	r25, 0x96	; 150
     a62:	11 c0       	rjmp	.+34     	; 0xa86 <__floatsisf+0x6a>
     a64:	77 23       	and	r23, r23
     a66:	21 f0       	breq	.+8      	; 0xa70 <__floatsisf+0x54>
     a68:	9e e8       	ldi	r25, 0x8E	; 142
     a6a:	87 2f       	mov	r24, r23
     a6c:	76 2f       	mov	r23, r22
     a6e:	05 c0       	rjmp	.+10     	; 0xa7a <__floatsisf+0x5e>
     a70:	66 23       	and	r22, r22
     a72:	71 f0       	breq	.+28     	; 0xa90 <__floatsisf+0x74>
     a74:	96 e8       	ldi	r25, 0x86	; 134
     a76:	86 2f       	mov	r24, r22
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	2a f0       	brmi	.+10     	; 0xa88 <__floatsisf+0x6c>
     a7e:	9a 95       	dec	r25
     a80:	66 0f       	add	r22, r22
     a82:	77 1f       	adc	r23, r23
     a84:	88 1f       	adc	r24, r24
     a86:	da f7       	brpl	.-10     	; 0xa7e <__floatsisf+0x62>
     a88:	88 0f       	add	r24, r24
     a8a:	96 95       	lsr	r25
     a8c:	87 95       	ror	r24
     a8e:	97 f9       	bld	r25, 7
     a90:	08 95       	ret

00000a92 <__fp_inf>:
     a92:	97 f9       	bld	r25, 7
     a94:	9f 67       	ori	r25, 0x7F	; 127
     a96:	80 e8       	ldi	r24, 0x80	; 128
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	08 95       	ret

00000a9e <__fp_nan>:
     a9e:	9f ef       	ldi	r25, 0xFF	; 255
     aa0:	80 ec       	ldi	r24, 0xC0	; 192
     aa2:	08 95       	ret

00000aa4 <__fp_pscA>:
     aa4:	00 24       	eor	r0, r0
     aa6:	0a 94       	dec	r0
     aa8:	16 16       	cp	r1, r22
     aaa:	17 06       	cpc	r1, r23
     aac:	18 06       	cpc	r1, r24
     aae:	09 06       	cpc	r0, r25
     ab0:	08 95       	ret

00000ab2 <__fp_pscB>:
     ab2:	00 24       	eor	r0, r0
     ab4:	0a 94       	dec	r0
     ab6:	12 16       	cp	r1, r18
     ab8:	13 06       	cpc	r1, r19
     aba:	14 06       	cpc	r1, r20
     abc:	05 06       	cpc	r0, r21
     abe:	08 95       	ret

00000ac0 <__fp_round>:
     ac0:	09 2e       	mov	r0, r25
     ac2:	03 94       	inc	r0
     ac4:	00 0c       	add	r0, r0
     ac6:	11 f4       	brne	.+4      	; 0xacc <__fp_round+0xc>
     ac8:	88 23       	and	r24, r24
     aca:	52 f0       	brmi	.+20     	; 0xae0 <__fp_round+0x20>
     acc:	bb 0f       	add	r27, r27
     ace:	40 f4       	brcc	.+16     	; 0xae0 <__fp_round+0x20>
     ad0:	bf 2b       	or	r27, r31
     ad2:	11 f4       	brne	.+4      	; 0xad8 <__fp_round+0x18>
     ad4:	60 ff       	sbrs	r22, 0
     ad6:	04 c0       	rjmp	.+8      	; 0xae0 <__fp_round+0x20>
     ad8:	6f 5f       	subi	r22, 0xFF	; 255
     ada:	7f 4f       	sbci	r23, 0xFF	; 255
     adc:	8f 4f       	sbci	r24, 0xFF	; 255
     ade:	9f 4f       	sbci	r25, 0xFF	; 255
     ae0:	08 95       	ret

00000ae2 <__fp_split3>:
     ae2:	57 fd       	sbrc	r21, 7
     ae4:	90 58       	subi	r25, 0x80	; 128
     ae6:	44 0f       	add	r20, r20
     ae8:	55 1f       	adc	r21, r21
     aea:	59 f0       	breq	.+22     	; 0xb02 <__fp_splitA+0x10>
     aec:	5f 3f       	cpi	r21, 0xFF	; 255
     aee:	71 f0       	breq	.+28     	; 0xb0c <__fp_splitA+0x1a>
     af0:	47 95       	ror	r20

00000af2 <__fp_splitA>:
     af2:	88 0f       	add	r24, r24
     af4:	97 fb       	bst	r25, 7
     af6:	99 1f       	adc	r25, r25
     af8:	61 f0       	breq	.+24     	; 0xb12 <__fp_splitA+0x20>
     afa:	9f 3f       	cpi	r25, 0xFF	; 255
     afc:	79 f0       	breq	.+30     	; 0xb1c <__fp_splitA+0x2a>
     afe:	87 95       	ror	r24
     b00:	08 95       	ret
     b02:	12 16       	cp	r1, r18
     b04:	13 06       	cpc	r1, r19
     b06:	14 06       	cpc	r1, r20
     b08:	55 1f       	adc	r21, r21
     b0a:	f2 cf       	rjmp	.-28     	; 0xaf0 <__fp_split3+0xe>
     b0c:	46 95       	lsr	r20
     b0e:	f1 df       	rcall	.-30     	; 0xaf2 <__fp_splitA>
     b10:	08 c0       	rjmp	.+16     	; 0xb22 <__fp_splitA+0x30>
     b12:	16 16       	cp	r1, r22
     b14:	17 06       	cpc	r1, r23
     b16:	18 06       	cpc	r1, r24
     b18:	99 1f       	adc	r25, r25
     b1a:	f1 cf       	rjmp	.-30     	; 0xafe <__fp_splitA+0xc>
     b1c:	86 95       	lsr	r24
     b1e:	71 05       	cpc	r23, r1
     b20:	61 05       	cpc	r22, r1
     b22:	08 94       	sec
     b24:	08 95       	ret

00000b26 <__fp_zero>:
     b26:	e8 94       	clt

00000b28 <__fp_szero>:
     b28:	bb 27       	eor	r27, r27
     b2a:	66 27       	eor	r22, r22
     b2c:	77 27       	eor	r23, r23
     b2e:	cb 01       	movw	r24, r22
     b30:	97 f9       	bld	r25, 7
     b32:	08 95       	ret

00000b34 <__mulsf3>:
     b34:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__mulsf3x>
     b38:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__fp_round>
     b3c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__fp_pscA>
     b40:	38 f0       	brcs	.+14     	; 0xb50 <__mulsf3+0x1c>
     b42:	0e 94 59 05 	call	0xab2	; 0xab2 <__fp_pscB>
     b46:	20 f0       	brcs	.+8      	; 0xb50 <__mulsf3+0x1c>
     b48:	95 23       	and	r25, r21
     b4a:	11 f0       	breq	.+4      	; 0xb50 <__mulsf3+0x1c>
     b4c:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__fp_inf>
     b50:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__fp_nan>
     b54:	11 24       	eor	r1, r1
     b56:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__fp_szero>

00000b5a <__mulsf3x>:
     b5a:	0e 94 71 05 	call	0xae2	; 0xae2 <__fp_split3>
     b5e:	70 f3       	brcs	.-36     	; 0xb3c <__mulsf3+0x8>

00000b60 <__mulsf3_pse>:
     b60:	95 9f       	mul	r25, r21
     b62:	c1 f3       	breq	.-16     	; 0xb54 <__mulsf3+0x20>
     b64:	95 0f       	add	r25, r21
     b66:	50 e0       	ldi	r21, 0x00	; 0
     b68:	55 1f       	adc	r21, r21
     b6a:	62 9f       	mul	r22, r18
     b6c:	f0 01       	movw	r30, r0
     b6e:	72 9f       	mul	r23, r18
     b70:	bb 27       	eor	r27, r27
     b72:	f0 0d       	add	r31, r0
     b74:	b1 1d       	adc	r27, r1
     b76:	63 9f       	mul	r22, r19
     b78:	aa 27       	eor	r26, r26
     b7a:	f0 0d       	add	r31, r0
     b7c:	b1 1d       	adc	r27, r1
     b7e:	aa 1f       	adc	r26, r26
     b80:	64 9f       	mul	r22, r20
     b82:	66 27       	eor	r22, r22
     b84:	b0 0d       	add	r27, r0
     b86:	a1 1d       	adc	r26, r1
     b88:	66 1f       	adc	r22, r22
     b8a:	82 9f       	mul	r24, r18
     b8c:	22 27       	eor	r18, r18
     b8e:	b0 0d       	add	r27, r0
     b90:	a1 1d       	adc	r26, r1
     b92:	62 1f       	adc	r22, r18
     b94:	73 9f       	mul	r23, r19
     b96:	b0 0d       	add	r27, r0
     b98:	a1 1d       	adc	r26, r1
     b9a:	62 1f       	adc	r22, r18
     b9c:	83 9f       	mul	r24, r19
     b9e:	a0 0d       	add	r26, r0
     ba0:	61 1d       	adc	r22, r1
     ba2:	22 1f       	adc	r18, r18
     ba4:	74 9f       	mul	r23, r20
     ba6:	33 27       	eor	r19, r19
     ba8:	a0 0d       	add	r26, r0
     baa:	61 1d       	adc	r22, r1
     bac:	23 1f       	adc	r18, r19
     bae:	84 9f       	mul	r24, r20
     bb0:	60 0d       	add	r22, r0
     bb2:	21 1d       	adc	r18, r1
     bb4:	82 2f       	mov	r24, r18
     bb6:	76 2f       	mov	r23, r22
     bb8:	6a 2f       	mov	r22, r26
     bba:	11 24       	eor	r1, r1
     bbc:	9f 57       	subi	r25, 0x7F	; 127
     bbe:	50 40       	sbci	r21, 0x00	; 0
     bc0:	9a f0       	brmi	.+38     	; 0xbe8 <__mulsf3_pse+0x88>
     bc2:	f1 f0       	breq	.+60     	; 0xc00 <__mulsf3_pse+0xa0>
     bc4:	88 23       	and	r24, r24
     bc6:	4a f0       	brmi	.+18     	; 0xbda <__mulsf3_pse+0x7a>
     bc8:	ee 0f       	add	r30, r30
     bca:	ff 1f       	adc	r31, r31
     bcc:	bb 1f       	adc	r27, r27
     bce:	66 1f       	adc	r22, r22
     bd0:	77 1f       	adc	r23, r23
     bd2:	88 1f       	adc	r24, r24
     bd4:	91 50       	subi	r25, 0x01	; 1
     bd6:	50 40       	sbci	r21, 0x00	; 0
     bd8:	a9 f7       	brne	.-22     	; 0xbc4 <__mulsf3_pse+0x64>
     bda:	9e 3f       	cpi	r25, 0xFE	; 254
     bdc:	51 05       	cpc	r21, r1
     bde:	80 f0       	brcs	.+32     	; 0xc00 <__mulsf3_pse+0xa0>
     be0:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__fp_inf>
     be4:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__fp_szero>
     be8:	5f 3f       	cpi	r21, 0xFF	; 255
     bea:	e4 f3       	brlt	.-8      	; 0xbe4 <__mulsf3_pse+0x84>
     bec:	98 3e       	cpi	r25, 0xE8	; 232
     bee:	d4 f3       	brlt	.-12     	; 0xbe4 <__mulsf3_pse+0x84>
     bf0:	86 95       	lsr	r24
     bf2:	77 95       	ror	r23
     bf4:	67 95       	ror	r22
     bf6:	b7 95       	ror	r27
     bf8:	f7 95       	ror	r31
     bfa:	e7 95       	ror	r30
     bfc:	9f 5f       	subi	r25, 0xFF	; 255
     bfe:	c1 f7       	brne	.-16     	; 0xbf0 <__mulsf3_pse+0x90>
     c00:	fe 2b       	or	r31, r30
     c02:	88 0f       	add	r24, r24
     c04:	91 1d       	adc	r25, r1
     c06:	96 95       	lsr	r25
     c08:	87 95       	ror	r24
     c0a:	97 f9       	bld	r25, 7
     c0c:	08 95       	ret

00000c0e <vfprintf>:
     c0e:	a0 e1       	ldi	r26, 0x10	; 16
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	ed e0       	ldi	r30, 0x0D	; 13
     c14:	f6 e0       	ldi	r31, 0x06	; 6
     c16:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__prologue_saves__>
     c1a:	7c 01       	movw	r14, r24
     c1c:	1b 01       	movw	r2, r22
     c1e:	6a 01       	movw	r12, r20
     c20:	fc 01       	movw	r30, r24
     c22:	17 82       	std	Z+7, r1	; 0x07
     c24:	16 82       	std	Z+6, r1	; 0x06
     c26:	83 81       	ldd	r24, Z+3	; 0x03
     c28:	81 ff       	sbrs	r24, 1
     c2a:	44 c3       	rjmp	.+1672   	; 0x12b4 <vfprintf+0x6a6>
     c2c:	9e 01       	movw	r18, r28
     c2e:	2f 5f       	subi	r18, 0xFF	; 255
     c30:	3f 4f       	sbci	r19, 0xFF	; 255
     c32:	39 01       	movw	r6, r18
     c34:	f7 01       	movw	r30, r14
     c36:	93 81       	ldd	r25, Z+3	; 0x03
     c38:	f1 01       	movw	r30, r2
     c3a:	93 fd       	sbrc	r25, 3
     c3c:	85 91       	lpm	r24, Z+
     c3e:	93 ff       	sbrs	r25, 3
     c40:	81 91       	ld	r24, Z+
     c42:	1f 01       	movw	r2, r30
     c44:	88 23       	and	r24, r24
     c46:	09 f4       	brne	.+2      	; 0xc4a <vfprintf+0x3c>
     c48:	31 c3       	rjmp	.+1634   	; 0x12ac <vfprintf+0x69e>
     c4a:	85 32       	cpi	r24, 0x25	; 37
     c4c:	39 f4       	brne	.+14     	; 0xc5c <vfprintf+0x4e>
     c4e:	93 fd       	sbrc	r25, 3
     c50:	85 91       	lpm	r24, Z+
     c52:	93 ff       	sbrs	r25, 3
     c54:	81 91       	ld	r24, Z+
     c56:	1f 01       	movw	r2, r30
     c58:	85 32       	cpi	r24, 0x25	; 37
     c5a:	39 f4       	brne	.+14     	; 0xc6a <vfprintf+0x5c>
     c5c:	b7 01       	movw	r22, r14
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     c64:	56 01       	movw	r10, r12
     c66:	65 01       	movw	r12, r10
     c68:	e5 cf       	rjmp	.-54     	; 0xc34 <vfprintf+0x26>
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	51 2c       	mov	r5, r1
     c6e:	91 2c       	mov	r9, r1
     c70:	ff e1       	ldi	r31, 0x1F	; 31
     c72:	f9 15       	cp	r31, r9
     c74:	d8 f0       	brcs	.+54     	; 0xcac <vfprintf+0x9e>
     c76:	8b 32       	cpi	r24, 0x2B	; 43
     c78:	79 f0       	breq	.+30     	; 0xc98 <vfprintf+0x8a>
     c7a:	38 f4       	brcc	.+14     	; 0xc8a <vfprintf+0x7c>
     c7c:	80 32       	cpi	r24, 0x20	; 32
     c7e:	79 f0       	breq	.+30     	; 0xc9e <vfprintf+0x90>
     c80:	83 32       	cpi	r24, 0x23	; 35
     c82:	a1 f4       	brne	.+40     	; 0xcac <vfprintf+0x9e>
     c84:	f9 2d       	mov	r31, r9
     c86:	f0 61       	ori	r31, 0x10	; 16
     c88:	2e c0       	rjmp	.+92     	; 0xce6 <vfprintf+0xd8>
     c8a:	8d 32       	cpi	r24, 0x2D	; 45
     c8c:	61 f0       	breq	.+24     	; 0xca6 <vfprintf+0x98>
     c8e:	80 33       	cpi	r24, 0x30	; 48
     c90:	69 f4       	brne	.+26     	; 0xcac <vfprintf+0x9e>
     c92:	29 2d       	mov	r18, r9
     c94:	21 60       	ori	r18, 0x01	; 1
     c96:	2d c0       	rjmp	.+90     	; 0xcf2 <vfprintf+0xe4>
     c98:	39 2d       	mov	r19, r9
     c9a:	32 60       	ori	r19, 0x02	; 2
     c9c:	93 2e       	mov	r9, r19
     c9e:	89 2d       	mov	r24, r9
     ca0:	84 60       	ori	r24, 0x04	; 4
     ca2:	98 2e       	mov	r9, r24
     ca4:	2a c0       	rjmp	.+84     	; 0xcfa <vfprintf+0xec>
     ca6:	e9 2d       	mov	r30, r9
     ca8:	e8 60       	ori	r30, 0x08	; 8
     caa:	15 c0       	rjmp	.+42     	; 0xcd6 <vfprintf+0xc8>
     cac:	97 fc       	sbrc	r9, 7
     cae:	2d c0       	rjmp	.+90     	; 0xd0a <vfprintf+0xfc>
     cb0:	20 ed       	ldi	r18, 0xD0	; 208
     cb2:	28 0f       	add	r18, r24
     cb4:	2a 30       	cpi	r18, 0x0A	; 10
     cb6:	88 f4       	brcc	.+34     	; 0xcda <vfprintf+0xcc>
     cb8:	96 fe       	sbrs	r9, 6
     cba:	06 c0       	rjmp	.+12     	; 0xcc8 <vfprintf+0xba>
     cbc:	3a e0       	ldi	r19, 0x0A	; 10
     cbe:	13 9f       	mul	r17, r19
     cc0:	20 0d       	add	r18, r0
     cc2:	11 24       	eor	r1, r1
     cc4:	12 2f       	mov	r17, r18
     cc6:	19 c0       	rjmp	.+50     	; 0xcfa <vfprintf+0xec>
     cc8:	8a e0       	ldi	r24, 0x0A	; 10
     cca:	58 9e       	mul	r5, r24
     ccc:	20 0d       	add	r18, r0
     cce:	11 24       	eor	r1, r1
     cd0:	52 2e       	mov	r5, r18
     cd2:	e9 2d       	mov	r30, r9
     cd4:	e0 62       	ori	r30, 0x20	; 32
     cd6:	9e 2e       	mov	r9, r30
     cd8:	10 c0       	rjmp	.+32     	; 0xcfa <vfprintf+0xec>
     cda:	8e 32       	cpi	r24, 0x2E	; 46
     cdc:	31 f4       	brne	.+12     	; 0xcea <vfprintf+0xdc>
     cde:	96 fc       	sbrc	r9, 6
     ce0:	e5 c2       	rjmp	.+1482   	; 0x12ac <vfprintf+0x69e>
     ce2:	f9 2d       	mov	r31, r9
     ce4:	f0 64       	ori	r31, 0x40	; 64
     ce6:	9f 2e       	mov	r9, r31
     ce8:	08 c0       	rjmp	.+16     	; 0xcfa <vfprintf+0xec>
     cea:	8c 36       	cpi	r24, 0x6C	; 108
     cec:	21 f4       	brne	.+8      	; 0xcf6 <vfprintf+0xe8>
     cee:	29 2d       	mov	r18, r9
     cf0:	20 68       	ori	r18, 0x80	; 128
     cf2:	92 2e       	mov	r9, r18
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0xec>
     cf6:	88 36       	cpi	r24, 0x68	; 104
     cf8:	41 f4       	brne	.+16     	; 0xd0a <vfprintf+0xfc>
     cfa:	f1 01       	movw	r30, r2
     cfc:	93 fd       	sbrc	r25, 3
     cfe:	85 91       	lpm	r24, Z+
     d00:	93 ff       	sbrs	r25, 3
     d02:	81 91       	ld	r24, Z+
     d04:	1f 01       	movw	r2, r30
     d06:	81 11       	cpse	r24, r1
     d08:	b3 cf       	rjmp	.-154    	; 0xc70 <vfprintf+0x62>
     d0a:	9b eb       	ldi	r25, 0xBB	; 187
     d0c:	98 0f       	add	r25, r24
     d0e:	93 30       	cpi	r25, 0x03	; 3
     d10:	20 f4       	brcc	.+8      	; 0xd1a <vfprintf+0x10c>
     d12:	99 2d       	mov	r25, r9
     d14:	90 61       	ori	r25, 0x10	; 16
     d16:	80 5e       	subi	r24, 0xE0	; 224
     d18:	07 c0       	rjmp	.+14     	; 0xd28 <vfprintf+0x11a>
     d1a:	9b e9       	ldi	r25, 0x9B	; 155
     d1c:	98 0f       	add	r25, r24
     d1e:	93 30       	cpi	r25, 0x03	; 3
     d20:	08 f0       	brcs	.+2      	; 0xd24 <vfprintf+0x116>
     d22:	66 c1       	rjmp	.+716    	; 0xff0 <vfprintf+0x3e2>
     d24:	99 2d       	mov	r25, r9
     d26:	9f 7e       	andi	r25, 0xEF	; 239
     d28:	96 ff       	sbrs	r25, 6
     d2a:	16 e0       	ldi	r17, 0x06	; 6
     d2c:	9f 73       	andi	r25, 0x3F	; 63
     d2e:	99 2e       	mov	r9, r25
     d30:	85 36       	cpi	r24, 0x65	; 101
     d32:	19 f4       	brne	.+6      	; 0xd3a <vfprintf+0x12c>
     d34:	90 64       	ori	r25, 0x40	; 64
     d36:	99 2e       	mov	r9, r25
     d38:	08 c0       	rjmp	.+16     	; 0xd4a <vfprintf+0x13c>
     d3a:	86 36       	cpi	r24, 0x66	; 102
     d3c:	21 f4       	brne	.+8      	; 0xd46 <vfprintf+0x138>
     d3e:	39 2f       	mov	r19, r25
     d40:	30 68       	ori	r19, 0x80	; 128
     d42:	93 2e       	mov	r9, r19
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x13c>
     d46:	11 11       	cpse	r17, r1
     d48:	11 50       	subi	r17, 0x01	; 1
     d4a:	97 fe       	sbrs	r9, 7
     d4c:	07 c0       	rjmp	.+14     	; 0xd5c <vfprintf+0x14e>
     d4e:	1c 33       	cpi	r17, 0x3C	; 60
     d50:	50 f4       	brcc	.+20     	; 0xd66 <vfprintf+0x158>
     d52:	44 24       	eor	r4, r4
     d54:	43 94       	inc	r4
     d56:	41 0e       	add	r4, r17
     d58:	27 e0       	ldi	r18, 0x07	; 7
     d5a:	0b c0       	rjmp	.+22     	; 0xd72 <vfprintf+0x164>
     d5c:	18 30       	cpi	r17, 0x08	; 8
     d5e:	38 f0       	brcs	.+14     	; 0xd6e <vfprintf+0x160>
     d60:	27 e0       	ldi	r18, 0x07	; 7
     d62:	17 e0       	ldi	r17, 0x07	; 7
     d64:	05 c0       	rjmp	.+10     	; 0xd70 <vfprintf+0x162>
     d66:	27 e0       	ldi	r18, 0x07	; 7
     d68:	9c e3       	ldi	r25, 0x3C	; 60
     d6a:	49 2e       	mov	r4, r25
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <vfprintf+0x164>
     d6e:	21 2f       	mov	r18, r17
     d70:	41 2c       	mov	r4, r1
     d72:	56 01       	movw	r10, r12
     d74:	84 e0       	ldi	r24, 0x04	; 4
     d76:	a8 0e       	add	r10, r24
     d78:	b1 1c       	adc	r11, r1
     d7a:	f6 01       	movw	r30, r12
     d7c:	60 81       	ld	r22, Z
     d7e:	71 81       	ldd	r23, Z+1	; 0x01
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	04 2d       	mov	r16, r4
     d86:	a3 01       	movw	r20, r6
     d88:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ftoa_engine>
     d8c:	6c 01       	movw	r12, r24
     d8e:	f9 81       	ldd	r31, Y+1	; 0x01
     d90:	fc 87       	std	Y+12, r31	; 0x0c
     d92:	f0 ff       	sbrs	r31, 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <vfprintf+0x18c>
     d96:	f3 ff       	sbrs	r31, 3
     d98:	06 c0       	rjmp	.+12     	; 0xda6 <vfprintf+0x198>
     d9a:	91 fc       	sbrc	r9, 1
     d9c:	06 c0       	rjmp	.+12     	; 0xdaa <vfprintf+0x19c>
     d9e:	92 fe       	sbrs	r9, 2
     da0:	06 c0       	rjmp	.+12     	; 0xdae <vfprintf+0x1a0>
     da2:	00 e2       	ldi	r16, 0x20	; 32
     da4:	05 c0       	rjmp	.+10     	; 0xdb0 <vfprintf+0x1a2>
     da6:	0d e2       	ldi	r16, 0x2D	; 45
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <vfprintf+0x1a2>
     daa:	0b e2       	ldi	r16, 0x2B	; 43
     dac:	01 c0       	rjmp	.+2      	; 0xdb0 <vfprintf+0x1a2>
     dae:	00 e0       	ldi	r16, 0x00	; 0
     db0:	8c 85       	ldd	r24, Y+12	; 0x0c
     db2:	8c 70       	andi	r24, 0x0C	; 12
     db4:	19 f0       	breq	.+6      	; 0xdbc <vfprintf+0x1ae>
     db6:	01 11       	cpse	r16, r1
     db8:	5a c2       	rjmp	.+1204   	; 0x126e <vfprintf+0x660>
     dba:	9b c2       	rjmp	.+1334   	; 0x12f2 <vfprintf+0x6e4>
     dbc:	97 fe       	sbrs	r9, 7
     dbe:	10 c0       	rjmp	.+32     	; 0xde0 <vfprintf+0x1d2>
     dc0:	4c 0c       	add	r4, r12
     dc2:	fc 85       	ldd	r31, Y+12	; 0x0c
     dc4:	f4 ff       	sbrs	r31, 4
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <vfprintf+0x1c2>
     dc8:	8a 81       	ldd	r24, Y+2	; 0x02
     dca:	81 33       	cpi	r24, 0x31	; 49
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <vfprintf+0x1c2>
     dce:	4a 94       	dec	r4
     dd0:	14 14       	cp	r1, r4
     dd2:	74 f5       	brge	.+92     	; 0xe30 <vfprintf+0x222>
     dd4:	28 e0       	ldi	r18, 0x08	; 8
     dd6:	24 15       	cp	r18, r4
     dd8:	78 f5       	brcc	.+94     	; 0xe38 <vfprintf+0x22a>
     dda:	88 e0       	ldi	r24, 0x08	; 8
     ddc:	48 2e       	mov	r4, r24
     dde:	2c c0       	rjmp	.+88     	; 0xe38 <vfprintf+0x22a>
     de0:	96 fc       	sbrc	r9, 6
     de2:	2a c0       	rjmp	.+84     	; 0xe38 <vfprintf+0x22a>
     de4:	81 2f       	mov	r24, r17
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	8c 15       	cp	r24, r12
     dea:	9d 05       	cpc	r25, r13
     dec:	9c f0       	brlt	.+38     	; 0xe14 <vfprintf+0x206>
     dee:	3c ef       	ldi	r19, 0xFC	; 252
     df0:	c3 16       	cp	r12, r19
     df2:	3f ef       	ldi	r19, 0xFF	; 255
     df4:	d3 06       	cpc	r13, r19
     df6:	74 f0       	brlt	.+28     	; 0xe14 <vfprintf+0x206>
     df8:	89 2d       	mov	r24, r9
     dfa:	80 68       	ori	r24, 0x80	; 128
     dfc:	98 2e       	mov	r9, r24
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <vfprintf+0x206>
     e00:	e2 e0       	ldi	r30, 0x02	; 2
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	ec 0f       	add	r30, r28
     e06:	fd 1f       	adc	r31, r29
     e08:	e1 0f       	add	r30, r17
     e0a:	f1 1d       	adc	r31, r1
     e0c:	80 81       	ld	r24, Z
     e0e:	80 33       	cpi	r24, 0x30	; 48
     e10:	19 f4       	brne	.+6      	; 0xe18 <vfprintf+0x20a>
     e12:	11 50       	subi	r17, 0x01	; 1
     e14:	11 11       	cpse	r17, r1
     e16:	f4 cf       	rjmp	.-24     	; 0xe00 <vfprintf+0x1f2>
     e18:	97 fe       	sbrs	r9, 7
     e1a:	0e c0       	rjmp	.+28     	; 0xe38 <vfprintf+0x22a>
     e1c:	44 24       	eor	r4, r4
     e1e:	43 94       	inc	r4
     e20:	41 0e       	add	r4, r17
     e22:	81 2f       	mov	r24, r17
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	c8 16       	cp	r12, r24
     e28:	d9 06       	cpc	r13, r25
     e2a:	2c f4       	brge	.+10     	; 0xe36 <vfprintf+0x228>
     e2c:	1c 19       	sub	r17, r12
     e2e:	04 c0       	rjmp	.+8      	; 0xe38 <vfprintf+0x22a>
     e30:	44 24       	eor	r4, r4
     e32:	43 94       	inc	r4
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <vfprintf+0x22a>
     e36:	10 e0       	ldi	r17, 0x00	; 0
     e38:	97 fe       	sbrs	r9, 7
     e3a:	06 c0       	rjmp	.+12     	; 0xe48 <vfprintf+0x23a>
     e3c:	1c 14       	cp	r1, r12
     e3e:	1d 04       	cpc	r1, r13
     e40:	34 f4       	brge	.+12     	; 0xe4e <vfprintf+0x240>
     e42:	c6 01       	movw	r24, r12
     e44:	01 96       	adiw	r24, 0x01	; 1
     e46:	05 c0       	rjmp	.+10     	; 0xe52 <vfprintf+0x244>
     e48:	85 e0       	ldi	r24, 0x05	; 5
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <vfprintf+0x244>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	01 11       	cpse	r16, r1
     e54:	01 96       	adiw	r24, 0x01	; 1
     e56:	11 23       	and	r17, r17
     e58:	31 f0       	breq	.+12     	; 0xe66 <vfprintf+0x258>
     e5a:	21 2f       	mov	r18, r17
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	2f 5f       	subi	r18, 0xFF	; 255
     e60:	3f 4f       	sbci	r19, 0xFF	; 255
     e62:	82 0f       	add	r24, r18
     e64:	93 1f       	adc	r25, r19
     e66:	25 2d       	mov	r18, r5
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	82 17       	cp	r24, r18
     e6c:	93 07       	cpc	r25, r19
     e6e:	14 f4       	brge	.+4      	; 0xe74 <vfprintf+0x266>
     e70:	58 1a       	sub	r5, r24
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <vfprintf+0x268>
     e74:	51 2c       	mov	r5, r1
     e76:	89 2d       	mov	r24, r9
     e78:	89 70       	andi	r24, 0x09	; 9
     e7a:	49 f4       	brne	.+18     	; 0xe8e <vfprintf+0x280>
     e7c:	55 20       	and	r5, r5
     e7e:	39 f0       	breq	.+14     	; 0xe8e <vfprintf+0x280>
     e80:	b7 01       	movw	r22, r14
     e82:	80 e2       	ldi	r24, 0x20	; 32
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     e8a:	5a 94       	dec	r5
     e8c:	f7 cf       	rjmp	.-18     	; 0xe7c <vfprintf+0x26e>
     e8e:	00 23       	and	r16, r16
     e90:	29 f0       	breq	.+10     	; 0xe9c <vfprintf+0x28e>
     e92:	b7 01       	movw	r22, r14
     e94:	80 2f       	mov	r24, r16
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     e9c:	93 fc       	sbrc	r9, 3
     e9e:	09 c0       	rjmp	.+18     	; 0xeb2 <vfprintf+0x2a4>
     ea0:	55 20       	and	r5, r5
     ea2:	39 f0       	breq	.+14     	; 0xeb2 <vfprintf+0x2a4>
     ea4:	b7 01       	movw	r22, r14
     ea6:	80 e3       	ldi	r24, 0x30	; 48
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     eae:	5a 94       	dec	r5
     eb0:	f7 cf       	rjmp	.-18     	; 0xea0 <vfprintf+0x292>
     eb2:	97 fe       	sbrs	r9, 7
     eb4:	4c c0       	rjmp	.+152    	; 0xf4e <vfprintf+0x340>
     eb6:	46 01       	movw	r8, r12
     eb8:	d7 fe       	sbrs	r13, 7
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <vfprintf+0x2b2>
     ebc:	81 2c       	mov	r8, r1
     ebe:	91 2c       	mov	r9, r1
     ec0:	c6 01       	movw	r24, r12
     ec2:	88 19       	sub	r24, r8
     ec4:	99 09       	sbc	r25, r9
     ec6:	f3 01       	movw	r30, r6
     ec8:	e8 0f       	add	r30, r24
     eca:	f9 1f       	adc	r31, r25
     ecc:	fe 87       	std	Y+14, r31	; 0x0e
     ece:	ed 87       	std	Y+13, r30	; 0x0d
     ed0:	96 01       	movw	r18, r12
     ed2:	24 19       	sub	r18, r4
     ed4:	31 09       	sbc	r19, r1
     ed6:	38 8b       	std	Y+16, r19	; 0x10
     ed8:	2f 87       	std	Y+15, r18	; 0x0f
     eda:	01 2f       	mov	r16, r17
     edc:	10 e0       	ldi	r17, 0x00	; 0
     ede:	11 95       	neg	r17
     ee0:	01 95       	neg	r16
     ee2:	11 09       	sbc	r17, r1
     ee4:	3f ef       	ldi	r19, 0xFF	; 255
     ee6:	83 16       	cp	r8, r19
     ee8:	93 06       	cpc	r9, r19
     eea:	29 f4       	brne	.+10     	; 0xef6 <vfprintf+0x2e8>
     eec:	b7 01       	movw	r22, r14
     eee:	8e e2       	ldi	r24, 0x2E	; 46
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     ef6:	c8 14       	cp	r12, r8
     ef8:	d9 04       	cpc	r13, r9
     efa:	4c f0       	brlt	.+18     	; 0xf0e <vfprintf+0x300>
     efc:	8f 85       	ldd	r24, Y+15	; 0x0f
     efe:	98 89       	ldd	r25, Y+16	; 0x10
     f00:	88 15       	cp	r24, r8
     f02:	99 05       	cpc	r25, r9
     f04:	24 f4       	brge	.+8      	; 0xf0e <vfprintf+0x300>
     f06:	ed 85       	ldd	r30, Y+13	; 0x0d
     f08:	fe 85       	ldd	r31, Y+14	; 0x0e
     f0a:	81 81       	ldd	r24, Z+1	; 0x01
     f0c:	01 c0       	rjmp	.+2      	; 0xf10 <vfprintf+0x302>
     f0e:	80 e3       	ldi	r24, 0x30	; 48
     f10:	f1 e0       	ldi	r31, 0x01	; 1
     f12:	8f 1a       	sub	r8, r31
     f14:	91 08       	sbc	r9, r1
     f16:	2d 85       	ldd	r18, Y+13	; 0x0d
     f18:	3e 85       	ldd	r19, Y+14	; 0x0e
     f1a:	2f 5f       	subi	r18, 0xFF	; 255
     f1c:	3f 4f       	sbci	r19, 0xFF	; 255
     f1e:	3e 87       	std	Y+14, r19	; 0x0e
     f20:	2d 87       	std	Y+13, r18	; 0x0d
     f22:	80 16       	cp	r8, r16
     f24:	91 06       	cpc	r9, r17
     f26:	2c f0       	brlt	.+10     	; 0xf32 <vfprintf+0x324>
     f28:	b7 01       	movw	r22, r14
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     f30:	d9 cf       	rjmp	.-78     	; 0xee4 <vfprintf+0x2d6>
     f32:	c8 14       	cp	r12, r8
     f34:	d9 04       	cpc	r13, r9
     f36:	41 f4       	brne	.+16     	; 0xf48 <vfprintf+0x33a>
     f38:	9a 81       	ldd	r25, Y+2	; 0x02
     f3a:	96 33       	cpi	r25, 0x36	; 54
     f3c:	20 f4       	brcc	.+8      	; 0xf46 <vfprintf+0x338>
     f3e:	95 33       	cpi	r25, 0x35	; 53
     f40:	19 f4       	brne	.+6      	; 0xf48 <vfprintf+0x33a>
     f42:	3c 85       	ldd	r19, Y+12	; 0x0c
     f44:	34 ff       	sbrs	r19, 4
     f46:	81 e3       	ldi	r24, 0x31	; 49
     f48:	b7 01       	movw	r22, r14
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	4e c0       	rjmp	.+156    	; 0xfea <vfprintf+0x3dc>
     f4e:	8a 81       	ldd	r24, Y+2	; 0x02
     f50:	81 33       	cpi	r24, 0x31	; 49
     f52:	19 f0       	breq	.+6      	; 0xf5a <vfprintf+0x34c>
     f54:	9c 85       	ldd	r25, Y+12	; 0x0c
     f56:	9f 7e       	andi	r25, 0xEF	; 239
     f58:	9c 87       	std	Y+12, r25	; 0x0c
     f5a:	b7 01       	movw	r22, r14
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     f62:	11 11       	cpse	r17, r1
     f64:	05 c0       	rjmp	.+10     	; 0xf70 <vfprintf+0x362>
     f66:	94 fc       	sbrc	r9, 4
     f68:	18 c0       	rjmp	.+48     	; 0xf9a <vfprintf+0x38c>
     f6a:	85 e6       	ldi	r24, 0x65	; 101
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	17 c0       	rjmp	.+46     	; 0xf9e <vfprintf+0x390>
     f70:	b7 01       	movw	r22, r14
     f72:	8e e2       	ldi	r24, 0x2E	; 46
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     f7a:	1e 5f       	subi	r17, 0xFE	; 254
     f7c:	82 e0       	ldi	r24, 0x02	; 2
     f7e:	01 e0       	ldi	r16, 0x01	; 1
     f80:	08 0f       	add	r16, r24
     f82:	f3 01       	movw	r30, r6
     f84:	e8 0f       	add	r30, r24
     f86:	f1 1d       	adc	r31, r1
     f88:	80 81       	ld	r24, Z
     f8a:	b7 01       	movw	r22, r14
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     f92:	80 2f       	mov	r24, r16
     f94:	01 13       	cpse	r16, r17
     f96:	f3 cf       	rjmp	.-26     	; 0xf7e <vfprintf+0x370>
     f98:	e6 cf       	rjmp	.-52     	; 0xf66 <vfprintf+0x358>
     f9a:	85 e4       	ldi	r24, 0x45	; 69
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	b7 01       	movw	r22, r14
     fa0:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     fa4:	d7 fc       	sbrc	r13, 7
     fa6:	06 c0       	rjmp	.+12     	; 0xfb4 <vfprintf+0x3a6>
     fa8:	c1 14       	cp	r12, r1
     faa:	d1 04       	cpc	r13, r1
     fac:	41 f4       	brne	.+16     	; 0xfbe <vfprintf+0x3b0>
     fae:	ec 85       	ldd	r30, Y+12	; 0x0c
     fb0:	e4 ff       	sbrs	r30, 4
     fb2:	05 c0       	rjmp	.+10     	; 0xfbe <vfprintf+0x3b0>
     fb4:	d1 94       	neg	r13
     fb6:	c1 94       	neg	r12
     fb8:	d1 08       	sbc	r13, r1
     fba:	8d e2       	ldi	r24, 0x2D	; 45
     fbc:	01 c0       	rjmp	.+2      	; 0xfc0 <vfprintf+0x3b2>
     fbe:	8b e2       	ldi	r24, 0x2B	; 43
     fc0:	b7 01       	movw	r22, r14
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     fc8:	80 e3       	ldi	r24, 0x30	; 48
     fca:	2a e0       	ldi	r18, 0x0A	; 10
     fcc:	c2 16       	cp	r12, r18
     fce:	d1 04       	cpc	r13, r1
     fd0:	2c f0       	brlt	.+10     	; 0xfdc <vfprintf+0x3ce>
     fd2:	8f 5f       	subi	r24, 0xFF	; 255
     fd4:	fa e0       	ldi	r31, 0x0A	; 10
     fd6:	cf 1a       	sub	r12, r31
     fd8:	d1 08       	sbc	r13, r1
     fda:	f7 cf       	rjmp	.-18     	; 0xfca <vfprintf+0x3bc>
     fdc:	b7 01       	movw	r22, r14
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     fe4:	b7 01       	movw	r22, r14
     fe6:	c6 01       	movw	r24, r12
     fe8:	c0 96       	adiw	r24, 0x30	; 48
     fea:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
     fee:	54 c1       	rjmp	.+680    	; 0x1298 <vfprintf+0x68a>
     ff0:	83 36       	cpi	r24, 0x63	; 99
     ff2:	31 f0       	breq	.+12     	; 0x1000 <vfprintf+0x3f2>
     ff4:	83 37       	cpi	r24, 0x73	; 115
     ff6:	79 f0       	breq	.+30     	; 0x1016 <vfprintf+0x408>
     ff8:	83 35       	cpi	r24, 0x53	; 83
     ffa:	09 f0       	breq	.+2      	; 0xffe <vfprintf+0x3f0>
     ffc:	56 c0       	rjmp	.+172    	; 0x10aa <vfprintf+0x49c>
     ffe:	20 c0       	rjmp	.+64     	; 0x1040 <vfprintf+0x432>
    1000:	56 01       	movw	r10, r12
    1002:	32 e0       	ldi	r19, 0x02	; 2
    1004:	a3 0e       	add	r10, r19
    1006:	b1 1c       	adc	r11, r1
    1008:	f6 01       	movw	r30, r12
    100a:	80 81       	ld	r24, Z
    100c:	89 83       	std	Y+1, r24	; 0x01
    100e:	01 e0       	ldi	r16, 0x01	; 1
    1010:	10 e0       	ldi	r17, 0x00	; 0
    1012:	63 01       	movw	r12, r6
    1014:	12 c0       	rjmp	.+36     	; 0x103a <vfprintf+0x42c>
    1016:	56 01       	movw	r10, r12
    1018:	f2 e0       	ldi	r31, 0x02	; 2
    101a:	af 0e       	add	r10, r31
    101c:	b1 1c       	adc	r11, r1
    101e:	f6 01       	movw	r30, r12
    1020:	c0 80       	ld	r12, Z
    1022:	d1 80       	ldd	r13, Z+1	; 0x01
    1024:	96 fe       	sbrs	r9, 6
    1026:	03 c0       	rjmp	.+6      	; 0x102e <vfprintf+0x420>
    1028:	61 2f       	mov	r22, r17
    102a:	70 e0       	ldi	r23, 0x00	; 0
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <vfprintf+0x424>
    102e:	6f ef       	ldi	r22, 0xFF	; 255
    1030:	7f ef       	ldi	r23, 0xFF	; 255
    1032:	c6 01       	movw	r24, r12
    1034:	0e 94 c0 0a 	call	0x1580	; 0x1580 <strnlen>
    1038:	8c 01       	movw	r16, r24
    103a:	f9 2d       	mov	r31, r9
    103c:	ff 77       	andi	r31, 0x7F	; 127
    103e:	14 c0       	rjmp	.+40     	; 0x1068 <vfprintf+0x45a>
    1040:	56 01       	movw	r10, r12
    1042:	22 e0       	ldi	r18, 0x02	; 2
    1044:	a2 0e       	add	r10, r18
    1046:	b1 1c       	adc	r11, r1
    1048:	f6 01       	movw	r30, r12
    104a:	c0 80       	ld	r12, Z
    104c:	d1 80       	ldd	r13, Z+1	; 0x01
    104e:	96 fe       	sbrs	r9, 6
    1050:	03 c0       	rjmp	.+6      	; 0x1058 <vfprintf+0x44a>
    1052:	61 2f       	mov	r22, r17
    1054:	70 e0       	ldi	r23, 0x00	; 0
    1056:	02 c0       	rjmp	.+4      	; 0x105c <vfprintf+0x44e>
    1058:	6f ef       	ldi	r22, 0xFF	; 255
    105a:	7f ef       	ldi	r23, 0xFF	; 255
    105c:	c6 01       	movw	r24, r12
    105e:	0e 94 b5 0a 	call	0x156a	; 0x156a <strnlen_P>
    1062:	8c 01       	movw	r16, r24
    1064:	f9 2d       	mov	r31, r9
    1066:	f0 68       	ori	r31, 0x80	; 128
    1068:	9f 2e       	mov	r9, r31
    106a:	f3 fd       	sbrc	r31, 3
    106c:	1a c0       	rjmp	.+52     	; 0x10a2 <vfprintf+0x494>
    106e:	85 2d       	mov	r24, r5
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	08 17       	cp	r16, r24
    1074:	19 07       	cpc	r17, r25
    1076:	a8 f4       	brcc	.+42     	; 0x10a2 <vfprintf+0x494>
    1078:	b7 01       	movw	r22, r14
    107a:	80 e2       	ldi	r24, 0x20	; 32
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    1082:	5a 94       	dec	r5
    1084:	f4 cf       	rjmp	.-24     	; 0x106e <vfprintf+0x460>
    1086:	f6 01       	movw	r30, r12
    1088:	97 fc       	sbrc	r9, 7
    108a:	85 91       	lpm	r24, Z+
    108c:	97 fe       	sbrs	r9, 7
    108e:	81 91       	ld	r24, Z+
    1090:	6f 01       	movw	r12, r30
    1092:	b7 01       	movw	r22, r14
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    109a:	51 10       	cpse	r5, r1
    109c:	5a 94       	dec	r5
    109e:	01 50       	subi	r16, 0x01	; 1
    10a0:	11 09       	sbc	r17, r1
    10a2:	01 15       	cp	r16, r1
    10a4:	11 05       	cpc	r17, r1
    10a6:	79 f7       	brne	.-34     	; 0x1086 <vfprintf+0x478>
    10a8:	f7 c0       	rjmp	.+494    	; 0x1298 <vfprintf+0x68a>
    10aa:	84 36       	cpi	r24, 0x64	; 100
    10ac:	11 f0       	breq	.+4      	; 0x10b2 <vfprintf+0x4a4>
    10ae:	89 36       	cpi	r24, 0x69	; 105
    10b0:	61 f5       	brne	.+88     	; 0x110a <vfprintf+0x4fc>
    10b2:	56 01       	movw	r10, r12
    10b4:	97 fe       	sbrs	r9, 7
    10b6:	09 c0       	rjmp	.+18     	; 0x10ca <vfprintf+0x4bc>
    10b8:	24 e0       	ldi	r18, 0x04	; 4
    10ba:	a2 0e       	add	r10, r18
    10bc:	b1 1c       	adc	r11, r1
    10be:	f6 01       	movw	r30, r12
    10c0:	60 81       	ld	r22, Z
    10c2:	71 81       	ldd	r23, Z+1	; 0x01
    10c4:	82 81       	ldd	r24, Z+2	; 0x02
    10c6:	93 81       	ldd	r25, Z+3	; 0x03
    10c8:	0a c0       	rjmp	.+20     	; 0x10de <vfprintf+0x4d0>
    10ca:	f2 e0       	ldi	r31, 0x02	; 2
    10cc:	af 0e       	add	r10, r31
    10ce:	b1 1c       	adc	r11, r1
    10d0:	f6 01       	movw	r30, r12
    10d2:	60 81       	ld	r22, Z
    10d4:	71 81       	ldd	r23, Z+1	; 0x01
    10d6:	07 2e       	mov	r0, r23
    10d8:	00 0c       	add	r0, r0
    10da:	88 0b       	sbc	r24, r24
    10dc:	99 0b       	sbc	r25, r25
    10de:	f9 2d       	mov	r31, r9
    10e0:	ff 76       	andi	r31, 0x6F	; 111
    10e2:	9f 2e       	mov	r9, r31
    10e4:	97 ff       	sbrs	r25, 7
    10e6:	09 c0       	rjmp	.+18     	; 0x10fa <vfprintf+0x4ec>
    10e8:	90 95       	com	r25
    10ea:	80 95       	com	r24
    10ec:	70 95       	com	r23
    10ee:	61 95       	neg	r22
    10f0:	7f 4f       	sbci	r23, 0xFF	; 255
    10f2:	8f 4f       	sbci	r24, 0xFF	; 255
    10f4:	9f 4f       	sbci	r25, 0xFF	; 255
    10f6:	f0 68       	ori	r31, 0x80	; 128
    10f8:	9f 2e       	mov	r9, r31
    10fa:	2a e0       	ldi	r18, 0x0A	; 10
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	a3 01       	movw	r20, r6
    1100:	0e 94 31 0b 	call	0x1662	; 0x1662 <__ultoa_invert>
    1104:	c8 2e       	mov	r12, r24
    1106:	c6 18       	sub	r12, r6
    1108:	3f c0       	rjmp	.+126    	; 0x1188 <vfprintf+0x57a>
    110a:	09 2d       	mov	r16, r9
    110c:	85 37       	cpi	r24, 0x75	; 117
    110e:	21 f4       	brne	.+8      	; 0x1118 <vfprintf+0x50a>
    1110:	0f 7e       	andi	r16, 0xEF	; 239
    1112:	2a e0       	ldi	r18, 0x0A	; 10
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	1d c0       	rjmp	.+58     	; 0x1152 <vfprintf+0x544>
    1118:	09 7f       	andi	r16, 0xF9	; 249
    111a:	8f 36       	cpi	r24, 0x6F	; 111
    111c:	91 f0       	breq	.+36     	; 0x1142 <vfprintf+0x534>
    111e:	18 f4       	brcc	.+6      	; 0x1126 <vfprintf+0x518>
    1120:	88 35       	cpi	r24, 0x58	; 88
    1122:	59 f0       	breq	.+22     	; 0x113a <vfprintf+0x52c>
    1124:	c3 c0       	rjmp	.+390    	; 0x12ac <vfprintf+0x69e>
    1126:	80 37       	cpi	r24, 0x70	; 112
    1128:	19 f0       	breq	.+6      	; 0x1130 <vfprintf+0x522>
    112a:	88 37       	cpi	r24, 0x78	; 120
    112c:	11 f0       	breq	.+4      	; 0x1132 <vfprintf+0x524>
    112e:	be c0       	rjmp	.+380    	; 0x12ac <vfprintf+0x69e>
    1130:	00 61       	ori	r16, 0x10	; 16
    1132:	04 ff       	sbrs	r16, 4
    1134:	09 c0       	rjmp	.+18     	; 0x1148 <vfprintf+0x53a>
    1136:	04 60       	ori	r16, 0x04	; 4
    1138:	07 c0       	rjmp	.+14     	; 0x1148 <vfprintf+0x53a>
    113a:	94 fe       	sbrs	r9, 4
    113c:	08 c0       	rjmp	.+16     	; 0x114e <vfprintf+0x540>
    113e:	06 60       	ori	r16, 0x06	; 6
    1140:	06 c0       	rjmp	.+12     	; 0x114e <vfprintf+0x540>
    1142:	28 e0       	ldi	r18, 0x08	; 8
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	05 c0       	rjmp	.+10     	; 0x1152 <vfprintf+0x544>
    1148:	20 e1       	ldi	r18, 0x10	; 16
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <vfprintf+0x544>
    114e:	20 e1       	ldi	r18, 0x10	; 16
    1150:	32 e0       	ldi	r19, 0x02	; 2
    1152:	56 01       	movw	r10, r12
    1154:	07 ff       	sbrs	r16, 7
    1156:	09 c0       	rjmp	.+18     	; 0x116a <vfprintf+0x55c>
    1158:	84 e0       	ldi	r24, 0x04	; 4
    115a:	a8 0e       	add	r10, r24
    115c:	b1 1c       	adc	r11, r1
    115e:	f6 01       	movw	r30, r12
    1160:	60 81       	ld	r22, Z
    1162:	71 81       	ldd	r23, Z+1	; 0x01
    1164:	82 81       	ldd	r24, Z+2	; 0x02
    1166:	93 81       	ldd	r25, Z+3	; 0x03
    1168:	08 c0       	rjmp	.+16     	; 0x117a <vfprintf+0x56c>
    116a:	f2 e0       	ldi	r31, 0x02	; 2
    116c:	af 0e       	add	r10, r31
    116e:	b1 1c       	adc	r11, r1
    1170:	f6 01       	movw	r30, r12
    1172:	60 81       	ld	r22, Z
    1174:	71 81       	ldd	r23, Z+1	; 0x01
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	a3 01       	movw	r20, r6
    117c:	0e 94 31 0b 	call	0x1662	; 0x1662 <__ultoa_invert>
    1180:	c8 2e       	mov	r12, r24
    1182:	c6 18       	sub	r12, r6
    1184:	0f 77       	andi	r16, 0x7F	; 127
    1186:	90 2e       	mov	r9, r16
    1188:	96 fe       	sbrs	r9, 6
    118a:	0b c0       	rjmp	.+22     	; 0x11a2 <vfprintf+0x594>
    118c:	09 2d       	mov	r16, r9
    118e:	0e 7f       	andi	r16, 0xFE	; 254
    1190:	c1 16       	cp	r12, r17
    1192:	50 f4       	brcc	.+20     	; 0x11a8 <vfprintf+0x59a>
    1194:	94 fe       	sbrs	r9, 4
    1196:	0a c0       	rjmp	.+20     	; 0x11ac <vfprintf+0x59e>
    1198:	92 fc       	sbrc	r9, 2
    119a:	08 c0       	rjmp	.+16     	; 0x11ac <vfprintf+0x59e>
    119c:	09 2d       	mov	r16, r9
    119e:	0e 7e       	andi	r16, 0xEE	; 238
    11a0:	05 c0       	rjmp	.+10     	; 0x11ac <vfprintf+0x59e>
    11a2:	dc 2c       	mov	r13, r12
    11a4:	09 2d       	mov	r16, r9
    11a6:	03 c0       	rjmp	.+6      	; 0x11ae <vfprintf+0x5a0>
    11a8:	dc 2c       	mov	r13, r12
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <vfprintf+0x5a0>
    11ac:	d1 2e       	mov	r13, r17
    11ae:	04 ff       	sbrs	r16, 4
    11b0:	0d c0       	rjmp	.+26     	; 0x11cc <vfprintf+0x5be>
    11b2:	fe 01       	movw	r30, r28
    11b4:	ec 0d       	add	r30, r12
    11b6:	f1 1d       	adc	r31, r1
    11b8:	80 81       	ld	r24, Z
    11ba:	80 33       	cpi	r24, 0x30	; 48
    11bc:	11 f4       	brne	.+4      	; 0x11c2 <vfprintf+0x5b4>
    11be:	09 7e       	andi	r16, 0xE9	; 233
    11c0:	09 c0       	rjmp	.+18     	; 0x11d4 <vfprintf+0x5c6>
    11c2:	02 ff       	sbrs	r16, 2
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <vfprintf+0x5c4>
    11c6:	d3 94       	inc	r13
    11c8:	d3 94       	inc	r13
    11ca:	04 c0       	rjmp	.+8      	; 0x11d4 <vfprintf+0x5c6>
    11cc:	80 2f       	mov	r24, r16
    11ce:	86 78       	andi	r24, 0x86	; 134
    11d0:	09 f0       	breq	.+2      	; 0x11d4 <vfprintf+0x5c6>
    11d2:	d3 94       	inc	r13
    11d4:	03 fd       	sbrc	r16, 3
    11d6:	11 c0       	rjmp	.+34     	; 0x11fa <vfprintf+0x5ec>
    11d8:	00 ff       	sbrs	r16, 0
    11da:	06 c0       	rjmp	.+12     	; 0x11e8 <vfprintf+0x5da>
    11dc:	1c 2d       	mov	r17, r12
    11de:	d5 14       	cp	r13, r5
    11e0:	80 f4       	brcc	.+32     	; 0x1202 <vfprintf+0x5f4>
    11e2:	15 0d       	add	r17, r5
    11e4:	1d 19       	sub	r17, r13
    11e6:	0d c0       	rjmp	.+26     	; 0x1202 <vfprintf+0x5f4>
    11e8:	d5 14       	cp	r13, r5
    11ea:	58 f4       	brcc	.+22     	; 0x1202 <vfprintf+0x5f4>
    11ec:	b7 01       	movw	r22, r14
    11ee:	80 e2       	ldi	r24, 0x20	; 32
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    11f6:	d3 94       	inc	r13
    11f8:	f7 cf       	rjmp	.-18     	; 0x11e8 <vfprintf+0x5da>
    11fa:	d5 14       	cp	r13, r5
    11fc:	10 f4       	brcc	.+4      	; 0x1202 <vfprintf+0x5f4>
    11fe:	5d 18       	sub	r5, r13
    1200:	01 c0       	rjmp	.+2      	; 0x1204 <vfprintf+0x5f6>
    1202:	51 2c       	mov	r5, r1
    1204:	04 ff       	sbrs	r16, 4
    1206:	10 c0       	rjmp	.+32     	; 0x1228 <vfprintf+0x61a>
    1208:	b7 01       	movw	r22, r14
    120a:	80 e3       	ldi	r24, 0x30	; 48
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    1212:	02 ff       	sbrs	r16, 2
    1214:	17 c0       	rjmp	.+46     	; 0x1244 <vfprintf+0x636>
    1216:	01 fd       	sbrc	r16, 1
    1218:	03 c0       	rjmp	.+6      	; 0x1220 <vfprintf+0x612>
    121a:	88 e7       	ldi	r24, 0x78	; 120
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <vfprintf+0x616>
    1220:	88 e5       	ldi	r24, 0x58	; 88
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	b7 01       	movw	r22, r14
    1226:	0c c0       	rjmp	.+24     	; 0x1240 <vfprintf+0x632>
    1228:	80 2f       	mov	r24, r16
    122a:	86 78       	andi	r24, 0x86	; 134
    122c:	59 f0       	breq	.+22     	; 0x1244 <vfprintf+0x636>
    122e:	01 ff       	sbrs	r16, 1
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <vfprintf+0x628>
    1232:	8b e2       	ldi	r24, 0x2B	; 43
    1234:	01 c0       	rjmp	.+2      	; 0x1238 <vfprintf+0x62a>
    1236:	80 e2       	ldi	r24, 0x20	; 32
    1238:	07 fd       	sbrc	r16, 7
    123a:	8d e2       	ldi	r24, 0x2D	; 45
    123c:	b7 01       	movw	r22, r14
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    1244:	c1 16       	cp	r12, r17
    1246:	38 f4       	brcc	.+14     	; 0x1256 <vfprintf+0x648>
    1248:	b7 01       	movw	r22, r14
    124a:	80 e3       	ldi	r24, 0x30	; 48
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    1252:	11 50       	subi	r17, 0x01	; 1
    1254:	f7 cf       	rjmp	.-18     	; 0x1244 <vfprintf+0x636>
    1256:	ca 94       	dec	r12
    1258:	f3 01       	movw	r30, r6
    125a:	ec 0d       	add	r30, r12
    125c:	f1 1d       	adc	r31, r1
    125e:	80 81       	ld	r24, Z
    1260:	b7 01       	movw	r22, r14
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    1268:	c1 10       	cpse	r12, r1
    126a:	f5 cf       	rjmp	.-22     	; 0x1256 <vfprintf+0x648>
    126c:	15 c0       	rjmp	.+42     	; 0x1298 <vfprintf+0x68a>
    126e:	f4 e0       	ldi	r31, 0x04	; 4
    1270:	f5 15       	cp	r31, r5
    1272:	60 f5       	brcc	.+88     	; 0x12cc <vfprintf+0x6be>
    1274:	84 e0       	ldi	r24, 0x04	; 4
    1276:	58 1a       	sub	r5, r24
    1278:	93 fe       	sbrs	r9, 3
    127a:	1f c0       	rjmp	.+62     	; 0x12ba <vfprintf+0x6ac>
    127c:	01 11       	cpse	r16, r1
    127e:	27 c0       	rjmp	.+78     	; 0x12ce <vfprintf+0x6c0>
    1280:	2c 85       	ldd	r18, Y+12	; 0x0c
    1282:	23 ff       	sbrs	r18, 3
    1284:	2a c0       	rjmp	.+84     	; 0x12da <vfprintf+0x6cc>
    1286:	04 e5       	ldi	r16, 0x54	; 84
    1288:	10 e0       	ldi	r17, 0x00	; 0
    128a:	39 2d       	mov	r19, r9
    128c:	30 71       	andi	r19, 0x10	; 16
    128e:	93 2e       	mov	r9, r19
    1290:	f8 01       	movw	r30, r16
    1292:	84 91       	lpm	r24, Z
    1294:	81 11       	cpse	r24, r1
    1296:	24 c0       	rjmp	.+72     	; 0x12e0 <vfprintf+0x6d2>
    1298:	55 20       	and	r5, r5
    129a:	09 f4       	brne	.+2      	; 0x129e <vfprintf+0x690>
    129c:	e4 cc       	rjmp	.-1592   	; 0xc66 <vfprintf+0x58>
    129e:	b7 01       	movw	r22, r14
    12a0:	80 e2       	ldi	r24, 0x20	; 32
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    12a8:	5a 94       	dec	r5
    12aa:	f6 cf       	rjmp	.-20     	; 0x1298 <vfprintf+0x68a>
    12ac:	f7 01       	movw	r30, r14
    12ae:	86 81       	ldd	r24, Z+6	; 0x06
    12b0:	97 81       	ldd	r25, Z+7	; 0x07
    12b2:	26 c0       	rjmp	.+76     	; 0x1300 <vfprintf+0x6f2>
    12b4:	8f ef       	ldi	r24, 0xFF	; 255
    12b6:	9f ef       	ldi	r25, 0xFF	; 255
    12b8:	23 c0       	rjmp	.+70     	; 0x1300 <vfprintf+0x6f2>
    12ba:	b7 01       	movw	r22, r14
    12bc:	80 e2       	ldi	r24, 0x20	; 32
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    12c4:	5a 94       	dec	r5
    12c6:	51 10       	cpse	r5, r1
    12c8:	f8 cf       	rjmp	.-16     	; 0x12ba <vfprintf+0x6ac>
    12ca:	d8 cf       	rjmp	.-80     	; 0x127c <vfprintf+0x66e>
    12cc:	51 2c       	mov	r5, r1
    12ce:	b7 01       	movw	r22, r14
    12d0:	80 2f       	mov	r24, r16
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    12d8:	d3 cf       	rjmp	.-90     	; 0x1280 <vfprintf+0x672>
    12da:	08 e5       	ldi	r16, 0x58	; 88
    12dc:	10 e0       	ldi	r17, 0x00	; 0
    12de:	d5 cf       	rjmp	.-86     	; 0x128a <vfprintf+0x67c>
    12e0:	91 10       	cpse	r9, r1
    12e2:	80 52       	subi	r24, 0x20	; 32
    12e4:	b7 01       	movw	r22, r14
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <fputc>
    12ec:	0f 5f       	subi	r16, 0xFF	; 255
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	cf cf       	rjmp	.-98     	; 0x1290 <vfprintf+0x682>
    12f2:	23 e0       	ldi	r18, 0x03	; 3
    12f4:	25 15       	cp	r18, r5
    12f6:	10 f4       	brcc	.+4      	; 0x12fc <vfprintf+0x6ee>
    12f8:	83 e0       	ldi	r24, 0x03	; 3
    12fa:	bd cf       	rjmp	.-134    	; 0x1276 <vfprintf+0x668>
    12fc:	51 2c       	mov	r5, r1
    12fe:	c0 cf       	rjmp	.-128    	; 0x1280 <vfprintf+0x672>
    1300:	60 96       	adiw	r28, 0x10	; 16
    1302:	e2 e1       	ldi	r30, 0x12	; 18
    1304:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__epilogue_restores__>

00001308 <__prologue_saves__>:
    1308:	2f 92       	push	r2
    130a:	3f 92       	push	r3
    130c:	4f 92       	push	r4
    130e:	5f 92       	push	r5
    1310:	6f 92       	push	r6
    1312:	7f 92       	push	r7
    1314:	8f 92       	push	r8
    1316:	9f 92       	push	r9
    1318:	af 92       	push	r10
    131a:	bf 92       	push	r11
    131c:	cf 92       	push	r12
    131e:	df 92       	push	r13
    1320:	ef 92       	push	r14
    1322:	ff 92       	push	r15
    1324:	0f 93       	push	r16
    1326:	1f 93       	push	r17
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
    132c:	cd b7       	in	r28, 0x3d	; 61
    132e:	de b7       	in	r29, 0x3e	; 62
    1330:	ca 1b       	sub	r28, r26
    1332:	db 0b       	sbc	r29, r27
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	09 94       	ijmp

00001340 <__epilogue_restores__>:
    1340:	2a 88       	ldd	r2, Y+18	; 0x12
    1342:	39 88       	ldd	r3, Y+17	; 0x11
    1344:	48 88       	ldd	r4, Y+16	; 0x10
    1346:	5f 84       	ldd	r5, Y+15	; 0x0f
    1348:	6e 84       	ldd	r6, Y+14	; 0x0e
    134a:	7d 84       	ldd	r7, Y+13	; 0x0d
    134c:	8c 84       	ldd	r8, Y+12	; 0x0c
    134e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1350:	aa 84       	ldd	r10, Y+10	; 0x0a
    1352:	b9 84       	ldd	r11, Y+9	; 0x09
    1354:	c8 84       	ldd	r12, Y+8	; 0x08
    1356:	df 80       	ldd	r13, Y+7	; 0x07
    1358:	ee 80       	ldd	r14, Y+6	; 0x06
    135a:	fd 80       	ldd	r15, Y+5	; 0x05
    135c:	0c 81       	ldd	r16, Y+4	; 0x04
    135e:	1b 81       	ldd	r17, Y+3	; 0x03
    1360:	aa 81       	ldd	r26, Y+2	; 0x02
    1362:	b9 81       	ldd	r27, Y+1	; 0x01
    1364:	ce 0f       	add	r28, r30
    1366:	d1 1d       	adc	r29, r1
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	ed 01       	movw	r28, r26
    1374:	08 95       	ret

00001376 <atof>:
    1376:	66 27       	eor	r22, r22
    1378:	77 27       	eor	r23, r23
    137a:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <strtod>

0000137e <atoi>:
    137e:	fc 01       	movw	r30, r24
    1380:	88 27       	eor	r24, r24
    1382:	99 27       	eor	r25, r25
    1384:	e8 94       	clt
    1386:	21 91       	ld	r18, Z+
    1388:	20 32       	cpi	r18, 0x20	; 32
    138a:	e9 f3       	breq	.-6      	; 0x1386 <atoi+0x8>
    138c:	29 30       	cpi	r18, 0x09	; 9
    138e:	10 f0       	brcs	.+4      	; 0x1394 <atoi+0x16>
    1390:	2e 30       	cpi	r18, 0x0E	; 14
    1392:	c8 f3       	brcs	.-14     	; 0x1386 <atoi+0x8>
    1394:	2b 32       	cpi	r18, 0x2B	; 43
    1396:	41 f0       	breq	.+16     	; 0x13a8 <atoi+0x2a>
    1398:	2d 32       	cpi	r18, 0x2D	; 45
    139a:	39 f4       	brne	.+14     	; 0x13aa <atoi+0x2c>
    139c:	68 94       	set
    139e:	04 c0       	rjmp	.+8      	; 0x13a8 <atoi+0x2a>
    13a0:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulhi_const_10>
    13a4:	82 0f       	add	r24, r18
    13a6:	91 1d       	adc	r25, r1
    13a8:	21 91       	ld	r18, Z+
    13aa:	20 53       	subi	r18, 0x30	; 48
    13ac:	2a 30       	cpi	r18, 0x0A	; 10
    13ae:	c0 f3       	brcs	.-16     	; 0x13a0 <atoi+0x22>
    13b0:	1e f4       	brtc	.+6      	; 0x13b8 <atoi+0x3a>
    13b2:	90 95       	com	r25
    13b4:	81 95       	neg	r24
    13b6:	9f 4f       	sbci	r25, 0xFF	; 255
    13b8:	08 95       	ret

000013ba <__ftoa_engine>:
    13ba:	28 30       	cpi	r18, 0x08	; 8
    13bc:	08 f0       	brcs	.+2      	; 0x13c0 <__ftoa_engine+0x6>
    13be:	27 e0       	ldi	r18, 0x07	; 7
    13c0:	33 27       	eor	r19, r19
    13c2:	da 01       	movw	r26, r20
    13c4:	99 0f       	add	r25, r25
    13c6:	31 1d       	adc	r19, r1
    13c8:	87 fd       	sbrc	r24, 7
    13ca:	91 60       	ori	r25, 0x01	; 1
    13cc:	00 96       	adiw	r24, 0x00	; 0
    13ce:	61 05       	cpc	r22, r1
    13d0:	71 05       	cpc	r23, r1
    13d2:	39 f4       	brne	.+14     	; 0x13e2 <__ftoa_engine+0x28>
    13d4:	32 60       	ori	r19, 0x02	; 2
    13d6:	2e 5f       	subi	r18, 0xFE	; 254
    13d8:	3d 93       	st	X+, r19
    13da:	30 e3       	ldi	r19, 0x30	; 48
    13dc:	2a 95       	dec	r18
    13de:	e1 f7       	brne	.-8      	; 0x13d8 <__ftoa_engine+0x1e>
    13e0:	08 95       	ret
    13e2:	9f 3f       	cpi	r25, 0xFF	; 255
    13e4:	30 f0       	brcs	.+12     	; 0x13f2 <__ftoa_engine+0x38>
    13e6:	80 38       	cpi	r24, 0x80	; 128
    13e8:	71 05       	cpc	r23, r1
    13ea:	61 05       	cpc	r22, r1
    13ec:	09 f0       	breq	.+2      	; 0x13f0 <__ftoa_engine+0x36>
    13ee:	3c 5f       	subi	r19, 0xFC	; 252
    13f0:	3c 5f       	subi	r19, 0xFC	; 252
    13f2:	3d 93       	st	X+, r19
    13f4:	91 30       	cpi	r25, 0x01	; 1
    13f6:	08 f0       	brcs	.+2      	; 0x13fa <__ftoa_engine+0x40>
    13f8:	80 68       	ori	r24, 0x80	; 128
    13fa:	91 1d       	adc	r25, r1
    13fc:	df 93       	push	r29
    13fe:	cf 93       	push	r28
    1400:	1f 93       	push	r17
    1402:	0f 93       	push	r16
    1404:	ff 92       	push	r15
    1406:	ef 92       	push	r14
    1408:	19 2f       	mov	r17, r25
    140a:	98 7f       	andi	r25, 0xF8	; 248
    140c:	96 95       	lsr	r25
    140e:	e9 2f       	mov	r30, r25
    1410:	96 95       	lsr	r25
    1412:	96 95       	lsr	r25
    1414:	e9 0f       	add	r30, r25
    1416:	ff 27       	eor	r31, r31
    1418:	ea 54       	subi	r30, 0x4A	; 74
    141a:	ff 4f       	sbci	r31, 0xFF	; 255
    141c:	99 27       	eor	r25, r25
    141e:	33 27       	eor	r19, r19
    1420:	ee 24       	eor	r14, r14
    1422:	ff 24       	eor	r15, r15
    1424:	a7 01       	movw	r20, r14
    1426:	e7 01       	movw	r28, r14
    1428:	05 90       	lpm	r0, Z+
    142a:	08 94       	sec
    142c:	07 94       	ror	r0
    142e:	28 f4       	brcc	.+10     	; 0x143a <__ftoa_engine+0x80>
    1430:	36 0f       	add	r19, r22
    1432:	e7 1e       	adc	r14, r23
    1434:	f8 1e       	adc	r15, r24
    1436:	49 1f       	adc	r20, r25
    1438:	51 1d       	adc	r21, r1
    143a:	66 0f       	add	r22, r22
    143c:	77 1f       	adc	r23, r23
    143e:	88 1f       	adc	r24, r24
    1440:	99 1f       	adc	r25, r25
    1442:	06 94       	lsr	r0
    1444:	a1 f7       	brne	.-24     	; 0x142e <__ftoa_engine+0x74>
    1446:	05 90       	lpm	r0, Z+
    1448:	07 94       	ror	r0
    144a:	28 f4       	brcc	.+10     	; 0x1456 <__ftoa_engine+0x9c>
    144c:	e7 0e       	add	r14, r23
    144e:	f8 1e       	adc	r15, r24
    1450:	49 1f       	adc	r20, r25
    1452:	56 1f       	adc	r21, r22
    1454:	c1 1d       	adc	r28, r1
    1456:	77 0f       	add	r23, r23
    1458:	88 1f       	adc	r24, r24
    145a:	99 1f       	adc	r25, r25
    145c:	66 1f       	adc	r22, r22
    145e:	06 94       	lsr	r0
    1460:	a1 f7       	brne	.-24     	; 0x144a <__ftoa_engine+0x90>
    1462:	05 90       	lpm	r0, Z+
    1464:	07 94       	ror	r0
    1466:	28 f4       	brcc	.+10     	; 0x1472 <__ftoa_engine+0xb8>
    1468:	f8 0e       	add	r15, r24
    146a:	49 1f       	adc	r20, r25
    146c:	56 1f       	adc	r21, r22
    146e:	c7 1f       	adc	r28, r23
    1470:	d1 1d       	adc	r29, r1
    1472:	88 0f       	add	r24, r24
    1474:	99 1f       	adc	r25, r25
    1476:	66 1f       	adc	r22, r22
    1478:	77 1f       	adc	r23, r23
    147a:	06 94       	lsr	r0
    147c:	a1 f7       	brne	.-24     	; 0x1466 <__ftoa_engine+0xac>
    147e:	05 90       	lpm	r0, Z+
    1480:	07 94       	ror	r0
    1482:	20 f4       	brcc	.+8      	; 0x148c <__ftoa_engine+0xd2>
    1484:	49 0f       	add	r20, r25
    1486:	56 1f       	adc	r21, r22
    1488:	c7 1f       	adc	r28, r23
    148a:	d8 1f       	adc	r29, r24
    148c:	99 0f       	add	r25, r25
    148e:	66 1f       	adc	r22, r22
    1490:	77 1f       	adc	r23, r23
    1492:	88 1f       	adc	r24, r24
    1494:	06 94       	lsr	r0
    1496:	a9 f7       	brne	.-22     	; 0x1482 <__ftoa_engine+0xc8>
    1498:	84 91       	lpm	r24, Z
    149a:	10 95       	com	r17
    149c:	17 70       	andi	r17, 0x07	; 7
    149e:	41 f0       	breq	.+16     	; 0x14b0 <__ftoa_engine+0xf6>
    14a0:	d6 95       	lsr	r29
    14a2:	c7 95       	ror	r28
    14a4:	57 95       	ror	r21
    14a6:	47 95       	ror	r20
    14a8:	f7 94       	ror	r15
    14aa:	e7 94       	ror	r14
    14ac:	1a 95       	dec	r17
    14ae:	c1 f7       	brne	.-16     	; 0x14a0 <__ftoa_engine+0xe6>
    14b0:	ec e5       	ldi	r30, 0x5C	; 92
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	68 94       	set
    14b6:	15 90       	lpm	r1, Z+
    14b8:	15 91       	lpm	r17, Z+
    14ba:	35 91       	lpm	r19, Z+
    14bc:	65 91       	lpm	r22, Z+
    14be:	95 91       	lpm	r25, Z+
    14c0:	05 90       	lpm	r0, Z+
    14c2:	7f e2       	ldi	r23, 0x2F	; 47
    14c4:	73 95       	inc	r23
    14c6:	e1 18       	sub	r14, r1
    14c8:	f1 0a       	sbc	r15, r17
    14ca:	43 0b       	sbc	r20, r19
    14cc:	56 0b       	sbc	r21, r22
    14ce:	c9 0b       	sbc	r28, r25
    14d0:	d0 09       	sbc	r29, r0
    14d2:	c0 f7       	brcc	.-16     	; 0x14c4 <__ftoa_engine+0x10a>
    14d4:	e1 0c       	add	r14, r1
    14d6:	f1 1e       	adc	r15, r17
    14d8:	43 1f       	adc	r20, r19
    14da:	56 1f       	adc	r21, r22
    14dc:	c9 1f       	adc	r28, r25
    14de:	d0 1d       	adc	r29, r0
    14e0:	7e f4       	brtc	.+30     	; 0x1500 <__ftoa_engine+0x146>
    14e2:	70 33       	cpi	r23, 0x30	; 48
    14e4:	11 f4       	brne	.+4      	; 0x14ea <__ftoa_engine+0x130>
    14e6:	8a 95       	dec	r24
    14e8:	e6 cf       	rjmp	.-52     	; 0x14b6 <__ftoa_engine+0xfc>
    14ea:	e8 94       	clt
    14ec:	01 50       	subi	r16, 0x01	; 1
    14ee:	30 f0       	brcs	.+12     	; 0x14fc <__ftoa_engine+0x142>
    14f0:	08 0f       	add	r16, r24
    14f2:	0a f4       	brpl	.+2      	; 0x14f6 <__ftoa_engine+0x13c>
    14f4:	00 27       	eor	r16, r16
    14f6:	02 17       	cp	r16, r18
    14f8:	08 f4       	brcc	.+2      	; 0x14fc <__ftoa_engine+0x142>
    14fa:	20 2f       	mov	r18, r16
    14fc:	23 95       	inc	r18
    14fe:	02 2f       	mov	r16, r18
    1500:	7a 33       	cpi	r23, 0x3A	; 58
    1502:	28 f0       	brcs	.+10     	; 0x150e <__ftoa_engine+0x154>
    1504:	79 e3       	ldi	r23, 0x39	; 57
    1506:	7d 93       	st	X+, r23
    1508:	2a 95       	dec	r18
    150a:	e9 f7       	brne	.-6      	; 0x1506 <__ftoa_engine+0x14c>
    150c:	10 c0       	rjmp	.+32     	; 0x152e <__ftoa_engine+0x174>
    150e:	7d 93       	st	X+, r23
    1510:	2a 95       	dec	r18
    1512:	89 f6       	brne	.-94     	; 0x14b6 <__ftoa_engine+0xfc>
    1514:	06 94       	lsr	r0
    1516:	97 95       	ror	r25
    1518:	67 95       	ror	r22
    151a:	37 95       	ror	r19
    151c:	17 95       	ror	r17
    151e:	17 94       	ror	r1
    1520:	e1 18       	sub	r14, r1
    1522:	f1 0a       	sbc	r15, r17
    1524:	43 0b       	sbc	r20, r19
    1526:	56 0b       	sbc	r21, r22
    1528:	c9 0b       	sbc	r28, r25
    152a:	d0 09       	sbc	r29, r0
    152c:	98 f0       	brcs	.+38     	; 0x1554 <__ftoa_engine+0x19a>
    152e:	23 95       	inc	r18
    1530:	7e 91       	ld	r23, -X
    1532:	73 95       	inc	r23
    1534:	7a 33       	cpi	r23, 0x3A	; 58
    1536:	08 f0       	brcs	.+2      	; 0x153a <__ftoa_engine+0x180>
    1538:	70 e3       	ldi	r23, 0x30	; 48
    153a:	7c 93       	st	X, r23
    153c:	20 13       	cpse	r18, r16
    153e:	b8 f7       	brcc	.-18     	; 0x152e <__ftoa_engine+0x174>
    1540:	7e 91       	ld	r23, -X
    1542:	70 61       	ori	r23, 0x10	; 16
    1544:	7d 93       	st	X+, r23
    1546:	30 f0       	brcs	.+12     	; 0x1554 <__ftoa_engine+0x19a>
    1548:	83 95       	inc	r24
    154a:	71 e3       	ldi	r23, 0x31	; 49
    154c:	7d 93       	st	X+, r23
    154e:	70 e3       	ldi	r23, 0x30	; 48
    1550:	2a 95       	dec	r18
    1552:	e1 f7       	brne	.-8      	; 0x154c <__ftoa_engine+0x192>
    1554:	11 24       	eor	r1, r1
    1556:	ef 90       	pop	r14
    1558:	ff 90       	pop	r15
    155a:	0f 91       	pop	r16
    155c:	1f 91       	pop	r17
    155e:	cf 91       	pop	r28
    1560:	df 91       	pop	r29
    1562:	99 27       	eor	r25, r25
    1564:	87 fd       	sbrc	r24, 7
    1566:	90 95       	com	r25
    1568:	08 95       	ret

0000156a <strnlen_P>:
    156a:	fc 01       	movw	r30, r24
    156c:	05 90       	lpm	r0, Z+
    156e:	61 50       	subi	r22, 0x01	; 1
    1570:	70 40       	sbci	r23, 0x00	; 0
    1572:	01 10       	cpse	r0, r1
    1574:	d8 f7       	brcc	.-10     	; 0x156c <strnlen_P+0x2>
    1576:	80 95       	com	r24
    1578:	90 95       	com	r25
    157a:	8e 0f       	add	r24, r30
    157c:	9f 1f       	adc	r25, r31
    157e:	08 95       	ret

00001580 <strnlen>:
    1580:	fc 01       	movw	r30, r24
    1582:	61 50       	subi	r22, 0x01	; 1
    1584:	70 40       	sbci	r23, 0x00	; 0
    1586:	01 90       	ld	r0, Z+
    1588:	01 10       	cpse	r0, r1
    158a:	d8 f7       	brcc	.-10     	; 0x1582 <strnlen+0x2>
    158c:	80 95       	com	r24
    158e:	90 95       	com	r25
    1590:	8e 0f       	add	r24, r30
    1592:	9f 1f       	adc	r25, r31
    1594:	08 95       	ret

00001596 <__mulhi_const_10>:
    1596:	7a e0       	ldi	r23, 0x0A	; 10
    1598:	97 9f       	mul	r25, r23
    159a:	90 2d       	mov	r25, r0
    159c:	87 9f       	mul	r24, r23
    159e:	80 2d       	mov	r24, r0
    15a0:	91 0d       	add	r25, r1
    15a2:	11 24       	eor	r1, r1
    15a4:	08 95       	ret

000015a6 <fputc>:
    15a6:	0f 93       	push	r16
    15a8:	1f 93       	push	r17
    15aa:	cf 93       	push	r28
    15ac:	df 93       	push	r29
    15ae:	fb 01       	movw	r30, r22
    15b0:	23 81       	ldd	r18, Z+3	; 0x03
    15b2:	21 fd       	sbrc	r18, 1
    15b4:	03 c0       	rjmp	.+6      	; 0x15bc <fputc+0x16>
    15b6:	8f ef       	ldi	r24, 0xFF	; 255
    15b8:	9f ef       	ldi	r25, 0xFF	; 255
    15ba:	2c c0       	rjmp	.+88     	; 0x1614 <fputc+0x6e>
    15bc:	22 ff       	sbrs	r18, 2
    15be:	16 c0       	rjmp	.+44     	; 0x15ec <fputc+0x46>
    15c0:	46 81       	ldd	r20, Z+6	; 0x06
    15c2:	57 81       	ldd	r21, Z+7	; 0x07
    15c4:	24 81       	ldd	r18, Z+4	; 0x04
    15c6:	35 81       	ldd	r19, Z+5	; 0x05
    15c8:	42 17       	cp	r20, r18
    15ca:	53 07       	cpc	r21, r19
    15cc:	44 f4       	brge	.+16     	; 0x15de <fputc+0x38>
    15ce:	a0 81       	ld	r26, Z
    15d0:	b1 81       	ldd	r27, Z+1	; 0x01
    15d2:	9d 01       	movw	r18, r26
    15d4:	2f 5f       	subi	r18, 0xFF	; 255
    15d6:	3f 4f       	sbci	r19, 0xFF	; 255
    15d8:	31 83       	std	Z+1, r19	; 0x01
    15da:	20 83       	st	Z, r18
    15dc:	8c 93       	st	X, r24
    15de:	26 81       	ldd	r18, Z+6	; 0x06
    15e0:	37 81       	ldd	r19, Z+7	; 0x07
    15e2:	2f 5f       	subi	r18, 0xFF	; 255
    15e4:	3f 4f       	sbci	r19, 0xFF	; 255
    15e6:	37 83       	std	Z+7, r19	; 0x07
    15e8:	26 83       	std	Z+6, r18	; 0x06
    15ea:	14 c0       	rjmp	.+40     	; 0x1614 <fputc+0x6e>
    15ec:	8b 01       	movw	r16, r22
    15ee:	ec 01       	movw	r28, r24
    15f0:	fb 01       	movw	r30, r22
    15f2:	00 84       	ldd	r0, Z+8	; 0x08
    15f4:	f1 85       	ldd	r31, Z+9	; 0x09
    15f6:	e0 2d       	mov	r30, r0
    15f8:	09 95       	icall
    15fa:	89 2b       	or	r24, r25
    15fc:	e1 f6       	brne	.-72     	; 0x15b6 <fputc+0x10>
    15fe:	d8 01       	movw	r26, r16
    1600:	16 96       	adiw	r26, 0x06	; 6
    1602:	8d 91       	ld	r24, X+
    1604:	9c 91       	ld	r25, X
    1606:	17 97       	sbiw	r26, 0x07	; 7
    1608:	01 96       	adiw	r24, 0x01	; 1
    160a:	17 96       	adiw	r26, 0x07	; 7
    160c:	9c 93       	st	X, r25
    160e:	8e 93       	st	-X, r24
    1610:	16 97       	sbiw	r26, 0x06	; 6
    1612:	ce 01       	movw	r24, r28
    1614:	df 91       	pop	r29
    1616:	cf 91       	pop	r28
    1618:	1f 91       	pop	r17
    161a:	0f 91       	pop	r16
    161c:	08 95       	ret

0000161e <sprintf>:
    161e:	ae e0       	ldi	r26, 0x0E	; 14
    1620:	b0 e0       	ldi	r27, 0x00	; 0
    1622:	e5 e1       	ldi	r30, 0x15	; 21
    1624:	fb e0       	ldi	r31, 0x0B	; 11
    1626:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__prologue_saves__+0x1c>
    162a:	0d 89       	ldd	r16, Y+21	; 0x15
    162c:	1e 89       	ldd	r17, Y+22	; 0x16
    162e:	86 e0       	ldi	r24, 0x06	; 6
    1630:	8c 83       	std	Y+4, r24	; 0x04
    1632:	1a 83       	std	Y+2, r17	; 0x02
    1634:	09 83       	std	Y+1, r16	; 0x01
    1636:	8f ef       	ldi	r24, 0xFF	; 255
    1638:	9f e7       	ldi	r25, 0x7F	; 127
    163a:	9e 83       	std	Y+6, r25	; 0x06
    163c:	8d 83       	std	Y+5, r24	; 0x05
    163e:	ae 01       	movw	r20, r28
    1640:	47 5e       	subi	r20, 0xE7	; 231
    1642:	5f 4f       	sbci	r21, 0xFF	; 255
    1644:	6f 89       	ldd	r22, Y+23	; 0x17
    1646:	78 8d       	ldd	r23, Y+24	; 0x18
    1648:	ce 01       	movw	r24, r28
    164a:	01 96       	adiw	r24, 0x01	; 1
    164c:	0e 94 07 06 	call	0xc0e	; 0xc0e <vfprintf>
    1650:	ef 81       	ldd	r30, Y+7	; 0x07
    1652:	f8 85       	ldd	r31, Y+8	; 0x08
    1654:	e0 0f       	add	r30, r16
    1656:	f1 1f       	adc	r31, r17
    1658:	10 82       	st	Z, r1
    165a:	2e 96       	adiw	r28, 0x0e	; 14
    165c:	e4 e0       	ldi	r30, 0x04	; 4
    165e:	0c 94 ae 09 	jmp	0x135c	; 0x135c <__epilogue_restores__+0x1c>

00001662 <__ultoa_invert>:
    1662:	fa 01       	movw	r30, r20
    1664:	aa 27       	eor	r26, r26
    1666:	28 30       	cpi	r18, 0x08	; 8
    1668:	51 f1       	breq	.+84     	; 0x16be <__ultoa_invert+0x5c>
    166a:	20 31       	cpi	r18, 0x10	; 16
    166c:	81 f1       	breq	.+96     	; 0x16ce <__ultoa_invert+0x6c>
    166e:	e8 94       	clt
    1670:	6f 93       	push	r22
    1672:	6e 7f       	andi	r22, 0xFE	; 254
    1674:	6e 5f       	subi	r22, 0xFE	; 254
    1676:	7f 4f       	sbci	r23, 0xFF	; 255
    1678:	8f 4f       	sbci	r24, 0xFF	; 255
    167a:	9f 4f       	sbci	r25, 0xFF	; 255
    167c:	af 4f       	sbci	r26, 0xFF	; 255
    167e:	b1 e0       	ldi	r27, 0x01	; 1
    1680:	3e d0       	rcall	.+124    	; 0x16fe <__ultoa_invert+0x9c>
    1682:	b4 e0       	ldi	r27, 0x04	; 4
    1684:	3c d0       	rcall	.+120    	; 0x16fe <__ultoa_invert+0x9c>
    1686:	67 0f       	add	r22, r23
    1688:	78 1f       	adc	r23, r24
    168a:	89 1f       	adc	r24, r25
    168c:	9a 1f       	adc	r25, r26
    168e:	a1 1d       	adc	r26, r1
    1690:	68 0f       	add	r22, r24
    1692:	79 1f       	adc	r23, r25
    1694:	8a 1f       	adc	r24, r26
    1696:	91 1d       	adc	r25, r1
    1698:	a1 1d       	adc	r26, r1
    169a:	6a 0f       	add	r22, r26
    169c:	71 1d       	adc	r23, r1
    169e:	81 1d       	adc	r24, r1
    16a0:	91 1d       	adc	r25, r1
    16a2:	a1 1d       	adc	r26, r1
    16a4:	20 d0       	rcall	.+64     	; 0x16e6 <__ultoa_invert+0x84>
    16a6:	09 f4       	brne	.+2      	; 0x16aa <__ultoa_invert+0x48>
    16a8:	68 94       	set
    16aa:	3f 91       	pop	r19
    16ac:	2a e0       	ldi	r18, 0x0A	; 10
    16ae:	26 9f       	mul	r18, r22
    16b0:	11 24       	eor	r1, r1
    16b2:	30 19       	sub	r19, r0
    16b4:	30 5d       	subi	r19, 0xD0	; 208
    16b6:	31 93       	st	Z+, r19
    16b8:	de f6       	brtc	.-74     	; 0x1670 <__ultoa_invert+0xe>
    16ba:	cf 01       	movw	r24, r30
    16bc:	08 95       	ret
    16be:	46 2f       	mov	r20, r22
    16c0:	47 70       	andi	r20, 0x07	; 7
    16c2:	40 5d       	subi	r20, 0xD0	; 208
    16c4:	41 93       	st	Z+, r20
    16c6:	b3 e0       	ldi	r27, 0x03	; 3
    16c8:	0f d0       	rcall	.+30     	; 0x16e8 <__ultoa_invert+0x86>
    16ca:	c9 f7       	brne	.-14     	; 0x16be <__ultoa_invert+0x5c>
    16cc:	f6 cf       	rjmp	.-20     	; 0x16ba <__ultoa_invert+0x58>
    16ce:	46 2f       	mov	r20, r22
    16d0:	4f 70       	andi	r20, 0x0F	; 15
    16d2:	40 5d       	subi	r20, 0xD0	; 208
    16d4:	4a 33       	cpi	r20, 0x3A	; 58
    16d6:	18 f0       	brcs	.+6      	; 0x16de <__ultoa_invert+0x7c>
    16d8:	49 5d       	subi	r20, 0xD9	; 217
    16da:	31 fd       	sbrc	r19, 1
    16dc:	40 52       	subi	r20, 0x20	; 32
    16de:	41 93       	st	Z+, r20
    16e0:	02 d0       	rcall	.+4      	; 0x16e6 <__ultoa_invert+0x84>
    16e2:	a9 f7       	brne	.-22     	; 0x16ce <__ultoa_invert+0x6c>
    16e4:	ea cf       	rjmp	.-44     	; 0x16ba <__ultoa_invert+0x58>
    16e6:	b4 e0       	ldi	r27, 0x04	; 4
    16e8:	a6 95       	lsr	r26
    16ea:	97 95       	ror	r25
    16ec:	87 95       	ror	r24
    16ee:	77 95       	ror	r23
    16f0:	67 95       	ror	r22
    16f2:	ba 95       	dec	r27
    16f4:	c9 f7       	brne	.-14     	; 0x16e8 <__ultoa_invert+0x86>
    16f6:	00 97       	sbiw	r24, 0x00	; 0
    16f8:	61 05       	cpc	r22, r1
    16fa:	71 05       	cpc	r23, r1
    16fc:	08 95       	ret
    16fe:	9b 01       	movw	r18, r22
    1700:	ac 01       	movw	r20, r24
    1702:	0a 2e       	mov	r0, r26
    1704:	06 94       	lsr	r0
    1706:	57 95       	ror	r21
    1708:	47 95       	ror	r20
    170a:	37 95       	ror	r19
    170c:	27 95       	ror	r18
    170e:	ba 95       	dec	r27
    1710:	c9 f7       	brne	.-14     	; 0x1704 <__ultoa_invert+0xa2>
    1712:	62 0f       	add	r22, r18
    1714:	73 1f       	adc	r23, r19
    1716:	84 1f       	adc	r24, r20
    1718:	95 1f       	adc	r25, r21
    171a:	a0 1d       	adc	r26, r0
    171c:	08 95       	ret

0000171e <strtod>:
    171e:	a0 e0       	ldi	r26, 0x00	; 0
    1720:	b0 e0       	ldi	r27, 0x00	; 0
    1722:	e5 e9       	ldi	r30, 0x95	; 149
    1724:	fb e0       	ldi	r31, 0x0B	; 11
    1726:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__prologue_saves__+0xc>
    172a:	ec 01       	movw	r28, r24
    172c:	6b 01       	movw	r12, r22
    172e:	61 15       	cp	r22, r1
    1730:	71 05       	cpc	r23, r1
    1732:	19 f0       	breq	.+6      	; 0x173a <strtod+0x1c>
    1734:	fb 01       	movw	r30, r22
    1736:	91 83       	std	Z+1, r25	; 0x01
    1738:	80 83       	st	Z, r24
    173a:	7e 01       	movw	r14, r28
    173c:	ff ef       	ldi	r31, 0xFF	; 255
    173e:	ef 1a       	sub	r14, r31
    1740:	ff 0a       	sbc	r15, r31
    1742:	08 81       	ld	r16, Y
    1744:	80 2f       	mov	r24, r16
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <isspace>
    174c:	89 2b       	or	r24, r25
    174e:	11 f0       	breq	.+4      	; 0x1754 <strtod+0x36>
    1750:	e7 01       	movw	r28, r14
    1752:	f3 cf       	rjmp	.-26     	; 0x173a <strtod+0x1c>
    1754:	0d 32       	cpi	r16, 0x2D	; 45
    1756:	39 f4       	brne	.+14     	; 0x1766 <strtod+0x48>
    1758:	7e 01       	movw	r14, r28
    175a:	82 e0       	ldi	r24, 0x02	; 2
    175c:	e8 0e       	add	r14, r24
    175e:	f1 1c       	adc	r15, r1
    1760:	09 81       	ldd	r16, Y+1	; 0x01
    1762:	11 e0       	ldi	r17, 0x01	; 1
    1764:	08 c0       	rjmp	.+16     	; 0x1776 <strtod+0x58>
    1766:	0b 32       	cpi	r16, 0x2B	; 43
    1768:	29 f4       	brne	.+10     	; 0x1774 <strtod+0x56>
    176a:	7e 01       	movw	r14, r28
    176c:	92 e0       	ldi	r25, 0x02	; 2
    176e:	e9 0e       	add	r14, r25
    1770:	f1 1c       	adc	r15, r1
    1772:	09 81       	ldd	r16, Y+1	; 0x01
    1774:	10 e0       	ldi	r17, 0x00	; 0
    1776:	e7 01       	movw	r28, r14
    1778:	21 97       	sbiw	r28, 0x01	; 1
    177a:	43 e0       	ldi	r20, 0x03	; 3
    177c:	50 e0       	ldi	r21, 0x00	; 0
    177e:	6e e5       	ldi	r22, 0x5E	; 94
    1780:	71 e0       	ldi	r23, 0x01	; 1
    1782:	ce 01       	movw	r24, r28
    1784:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <strncasecmp_P>
    1788:	89 2b       	or	r24, r25
    178a:	c1 f4       	brne	.+48     	; 0x17bc <strtod+0x9e>
    178c:	23 96       	adiw	r28, 0x03	; 3
    178e:	45 e0       	ldi	r20, 0x05	; 5
    1790:	50 e0       	ldi	r21, 0x00	; 0
    1792:	69 e5       	ldi	r22, 0x59	; 89
    1794:	71 e0       	ldi	r23, 0x01	; 1
    1796:	ce 01       	movw	r24, r28
    1798:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <strncasecmp_P>
    179c:	89 2b       	or	r24, r25
    179e:	09 f4       	brne	.+2      	; 0x17a2 <strtod+0x84>
    17a0:	25 96       	adiw	r28, 0x05	; 5
    17a2:	c1 14       	cp	r12, r1
    17a4:	d1 04       	cpc	r13, r1
    17a6:	19 f0       	breq	.+6      	; 0x17ae <strtod+0x90>
    17a8:	f6 01       	movw	r30, r12
    17aa:	d1 83       	std	Z+1, r29	; 0x01
    17ac:	c0 83       	st	Z, r28
    17ae:	11 11       	cpse	r17, r1
    17b0:	f6 c0       	rjmp	.+492    	; 0x199e <strtod+0x280>
    17b2:	60 e0       	ldi	r22, 0x00	; 0
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	80 e8       	ldi	r24, 0x80	; 128
    17b8:	9f e7       	ldi	r25, 0x7F	; 127
    17ba:	fa c0       	rjmp	.+500    	; 0x19b0 <strtod+0x292>
    17bc:	43 e0       	ldi	r20, 0x03	; 3
    17be:	50 e0       	ldi	r21, 0x00	; 0
    17c0:	66 e5       	ldi	r22, 0x56	; 86
    17c2:	71 e0       	ldi	r23, 0x01	; 1
    17c4:	ce 01       	movw	r24, r28
    17c6:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <strncasecmp_P>
    17ca:	89 2b       	or	r24, r25
    17cc:	59 f4       	brne	.+22     	; 0x17e4 <strtod+0xc6>
    17ce:	c1 14       	cp	r12, r1
    17d0:	d1 04       	cpc	r13, r1
    17d2:	09 f4       	brne	.+2      	; 0x17d6 <strtod+0xb8>
    17d4:	e9 c0       	rjmp	.+466    	; 0x19a8 <strtod+0x28a>
    17d6:	f2 e0       	ldi	r31, 0x02	; 2
    17d8:	ef 0e       	add	r14, r31
    17da:	f1 1c       	adc	r15, r1
    17dc:	f6 01       	movw	r30, r12
    17de:	f1 82       	std	Z+1, r15	; 0x01
    17e0:	e0 82       	st	Z, r14
    17e2:	e2 c0       	rjmp	.+452    	; 0x19a8 <strtod+0x28a>
    17e4:	20 e0       	ldi	r18, 0x00	; 0
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	a9 01       	movw	r20, r18
    17ea:	c0 e0       	ldi	r28, 0x00	; 0
    17ec:	d0 e0       	ldi	r29, 0x00	; 0
    17ee:	f7 01       	movw	r30, r14
    17f0:	80 ed       	ldi	r24, 0xD0	; 208
    17f2:	a8 2e       	mov	r10, r24
    17f4:	a0 0e       	add	r10, r16
    17f6:	89 e0       	ldi	r24, 0x09	; 9
    17f8:	8a 15       	cp	r24, r10
    17fa:	30 f1       	brcs	.+76     	; 0x1848 <strtod+0x12a>
    17fc:	91 2f       	mov	r25, r17
    17fe:	92 60       	ori	r25, 0x02	; 2
    1800:	b9 2e       	mov	r11, r25
    1802:	81 2f       	mov	r24, r17
    1804:	88 70       	andi	r24, 0x08	; 8
    1806:	12 ff       	sbrs	r17, 2
    1808:	04 c0       	rjmp	.+8      	; 0x1812 <strtod+0xf4>
    180a:	81 11       	cpse	r24, r1
    180c:	24 c0       	rjmp	.+72     	; 0x1856 <strtod+0x138>
    180e:	21 96       	adiw	r28, 0x01	; 1
    1810:	22 c0       	rjmp	.+68     	; 0x1856 <strtod+0x138>
    1812:	81 11       	cpse	r24, r1
    1814:	21 97       	sbiw	r28, 0x01	; 1
    1816:	a5 e0       	ldi	r26, 0x05	; 5
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <__muluhisi3>
    181e:	dc 01       	movw	r26, r24
    1820:	cb 01       	movw	r24, r22
    1822:	88 0f       	add	r24, r24
    1824:	99 1f       	adc	r25, r25
    1826:	aa 1f       	adc	r26, r26
    1828:	bb 1f       	adc	r27, r27
    182a:	9c 01       	movw	r18, r24
    182c:	ad 01       	movw	r20, r26
    182e:	2a 0d       	add	r18, r10
    1830:	31 1d       	adc	r19, r1
    1832:	41 1d       	adc	r20, r1
    1834:	51 1d       	adc	r21, r1
    1836:	28 39       	cpi	r18, 0x98	; 152
    1838:	89 e9       	ldi	r24, 0x99	; 153
    183a:	38 07       	cpc	r19, r24
    183c:	48 07       	cpc	r20, r24
    183e:	89 e1       	ldi	r24, 0x19	; 25
    1840:	58 07       	cpc	r21, r24
    1842:	48 f0       	brcs	.+18     	; 0x1856 <strtod+0x138>
    1844:	16 60       	ori	r17, 0x06	; 6
    1846:	06 c0       	rjmp	.+12     	; 0x1854 <strtod+0x136>
    1848:	9e ef       	ldi	r25, 0xFE	; 254
    184a:	a9 12       	cpse	r10, r25
    184c:	0a c0       	rjmp	.+20     	; 0x1862 <strtod+0x144>
    184e:	13 fd       	sbrc	r17, 3
    1850:	40 c0       	rjmp	.+128    	; 0x18d2 <strtod+0x1b4>
    1852:	18 60       	ori	r17, 0x08	; 8
    1854:	b1 2e       	mov	r11, r17
    1856:	8f ef       	ldi	r24, 0xFF	; 255
    1858:	e8 1a       	sub	r14, r24
    185a:	f8 0a       	sbc	r15, r24
    185c:	00 81       	ld	r16, Z
    185e:	1b 2d       	mov	r17, r11
    1860:	c6 cf       	rjmp	.-116    	; 0x17ee <strtod+0xd0>
    1862:	80 2f       	mov	r24, r16
    1864:	8f 7d       	andi	r24, 0xDF	; 223
    1866:	85 34       	cpi	r24, 0x45	; 69
    1868:	a1 f5       	brne	.+104    	; 0x18d2 <strtod+0x1b4>
    186a:	80 81       	ld	r24, Z
    186c:	8d 32       	cpi	r24, 0x2D	; 45
    186e:	11 f4       	brne	.+4      	; 0x1874 <strtod+0x156>
    1870:	10 61       	ori	r17, 0x10	; 16
    1872:	06 c0       	rjmp	.+12     	; 0x1880 <strtod+0x162>
    1874:	8b 32       	cpi	r24, 0x2B	; 43
    1876:	21 f0       	breq	.+8      	; 0x1880 <strtod+0x162>
    1878:	31 96       	adiw	r30, 0x01	; 1
    187a:	61 e0       	ldi	r22, 0x01	; 1
    187c:	70 e0       	ldi	r23, 0x00	; 0
    187e:	04 c0       	rjmp	.+8      	; 0x1888 <strtod+0x16a>
    1880:	81 81       	ldd	r24, Z+1	; 0x01
    1882:	32 96       	adiw	r30, 0x02	; 2
    1884:	62 e0       	ldi	r22, 0x02	; 2
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	80 53       	subi	r24, 0x30	; 48
    188a:	8a 30       	cpi	r24, 0x0A	; 10
    188c:	18 f0       	brcs	.+6      	; 0x1894 <strtod+0x176>
    188e:	e6 1b       	sub	r30, r22
    1890:	f7 0b       	sbc	r31, r23
    1892:	1f c0       	rjmp	.+62     	; 0x18d2 <strtod+0x1b4>
    1894:	60 e0       	ldi	r22, 0x00	; 0
    1896:	70 e0       	ldi	r23, 0x00	; 0
    1898:	60 38       	cpi	r22, 0x80	; 128
    189a:	9c e0       	ldi	r25, 0x0C	; 12
    189c:	79 07       	cpc	r23, r25
    189e:	5c f4       	brge	.+22     	; 0x18b6 <strtod+0x198>
    18a0:	db 01       	movw	r26, r22
    18a2:	aa 0f       	add	r26, r26
    18a4:	bb 1f       	adc	r27, r27
    18a6:	aa 0f       	add	r26, r26
    18a8:	bb 1f       	adc	r27, r27
    18aa:	6a 0f       	add	r22, r26
    18ac:	7b 1f       	adc	r23, r27
    18ae:	66 0f       	add	r22, r22
    18b0:	77 1f       	adc	r23, r23
    18b2:	68 0f       	add	r22, r24
    18b4:	71 1d       	adc	r23, r1
    18b6:	31 96       	adiw	r30, 0x01	; 1
    18b8:	df 01       	movw	r26, r30
    18ba:	11 97       	sbiw	r26, 0x01	; 1
    18bc:	8c 91       	ld	r24, X
    18be:	80 53       	subi	r24, 0x30	; 48
    18c0:	8a 30       	cpi	r24, 0x0A	; 10
    18c2:	50 f3       	brcs	.-44     	; 0x1898 <strtod+0x17a>
    18c4:	14 ff       	sbrs	r17, 4
    18c6:	03 c0       	rjmp	.+6      	; 0x18ce <strtod+0x1b0>
    18c8:	71 95       	neg	r23
    18ca:	61 95       	neg	r22
    18cc:	71 09       	sbc	r23, r1
    18ce:	c6 0f       	add	r28, r22
    18d0:	d7 1f       	adc	r29, r23
    18d2:	11 ff       	sbrs	r17, 1
    18d4:	08 c0       	rjmp	.+16     	; 0x18e6 <strtod+0x1c8>
    18d6:	c1 14       	cp	r12, r1
    18d8:	d1 04       	cpc	r13, r1
    18da:	29 f0       	breq	.+10     	; 0x18e6 <strtod+0x1c8>
    18dc:	cf 01       	movw	r24, r30
    18de:	01 97       	sbiw	r24, 0x01	; 1
    18e0:	f6 01       	movw	r30, r12
    18e2:	91 83       	std	Z+1, r25	; 0x01
    18e4:	80 83       	st	Z, r24
    18e6:	ca 01       	movw	r24, r20
    18e8:	b9 01       	movw	r22, r18
    18ea:	0e 94 0c 05 	call	0xa18	; 0xa18 <__floatunsisf>
    18ee:	21 2f       	mov	r18, r17
    18f0:	23 70       	andi	r18, 0x03	; 3
    18f2:	23 30       	cpi	r18, 0x03	; 3
    18f4:	19 f0       	breq	.+6      	; 0x18fc <strtod+0x1de>
    18f6:	4b 01       	movw	r8, r22
    18f8:	5c 01       	movw	r10, r24
    18fa:	06 c0       	rjmp	.+12     	; 0x1908 <strtod+0x1ea>
    18fc:	4b 01       	movw	r8, r22
    18fe:	5c 01       	movw	r10, r24
    1900:	b7 fa       	bst	r11, 7
    1902:	b0 94       	com	r11
    1904:	b7 f8       	bld	r11, 7
    1906:	b0 94       	com	r11
    1908:	20 e0       	ldi	r18, 0x00	; 0
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	a9 01       	movw	r20, r18
    190e:	c5 01       	movw	r24, r10
    1910:	b4 01       	movw	r22, r8
    1912:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__cmpsf2>
    1916:	88 23       	and	r24, r24
    1918:	09 f4       	brne	.+2      	; 0x191c <strtod+0x1fe>
    191a:	3e c0       	rjmp	.+124    	; 0x1998 <strtod+0x27a>
    191c:	d7 ff       	sbrs	r29, 7
    191e:	06 c0       	rjmp	.+12     	; 0x192c <strtod+0x20e>
    1920:	d1 95       	neg	r29
    1922:	c1 95       	neg	r28
    1924:	d1 09       	sbc	r29, r1
    1926:	05 e7       	ldi	r16, 0x75	; 117
    1928:	11 e0       	ldi	r17, 0x01	; 1
    192a:	02 c0       	rjmp	.+4      	; 0x1930 <strtod+0x212>
    192c:	0d e8       	ldi	r16, 0x8D	; 141
    192e:	11 e0       	ldi	r17, 0x01	; 1
    1930:	68 01       	movw	r12, r16
    1932:	f8 e1       	ldi	r31, 0x18	; 24
    1934:	cf 1a       	sub	r12, r31
    1936:	d1 08       	sbc	r13, r1
    1938:	90 e2       	ldi	r25, 0x20	; 32
    193a:	e9 2e       	mov	r14, r25
    193c:	f1 2c       	mov	r15, r1
    193e:	ce 15       	cp	r28, r14
    1940:	df 05       	cpc	r29, r15
    1942:	74 f0       	brlt	.+28     	; 0x1960 <strtod+0x242>
    1944:	f8 01       	movw	r30, r16
    1946:	25 91       	lpm	r18, Z+
    1948:	35 91       	lpm	r19, Z+
    194a:	45 91       	lpm	r20, Z+
    194c:	54 91       	lpm	r21, Z
    194e:	c5 01       	movw	r24, r10
    1950:	b4 01       	movw	r22, r8
    1952:	0e 94 9a 05 	call	0xb34	; 0xb34 <__mulsf3>
    1956:	4b 01       	movw	r8, r22
    1958:	5c 01       	movw	r10, r24
    195a:	ce 19       	sub	r28, r14
    195c:	df 09       	sbc	r29, r15
    195e:	ef cf       	rjmp	.-34     	; 0x193e <strtod+0x220>
    1960:	04 50       	subi	r16, 0x04	; 4
    1962:	11 09       	sbc	r17, r1
    1964:	f5 94       	asr	r15
    1966:	e7 94       	ror	r14
    1968:	0c 15       	cp	r16, r12
    196a:	1d 05       	cpc	r17, r13
    196c:	41 f7       	brne	.-48     	; 0x193e <strtod+0x220>
    196e:	8a 2d       	mov	r24, r10
    1970:	88 0f       	add	r24, r24
    1972:	8b 2d       	mov	r24, r11
    1974:	88 1f       	adc	r24, r24
    1976:	8f 3f       	cpi	r24, 0xFF	; 255
    1978:	49 f0       	breq	.+18     	; 0x198c <strtod+0x26e>
    197a:	20 e0       	ldi	r18, 0x00	; 0
    197c:	30 e0       	ldi	r19, 0x00	; 0
    197e:	a9 01       	movw	r20, r18
    1980:	c5 01       	movw	r24, r10
    1982:	b4 01       	movw	r22, r8
    1984:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__cmpsf2>
    1988:	81 11       	cpse	r24, r1
    198a:	06 c0       	rjmp	.+12     	; 0x1998 <strtod+0x27a>
    198c:	82 e2       	ldi	r24, 0x22	; 34
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	90 93 40 03 	sts	0x0340, r25	; 0x800340 <errno+0x1>
    1994:	80 93 3f 03 	sts	0x033F, r24	; 0x80033f <errno>
    1998:	c5 01       	movw	r24, r10
    199a:	b4 01       	movw	r22, r8
    199c:	09 c0       	rjmp	.+18     	; 0x19b0 <strtod+0x292>
    199e:	60 e0       	ldi	r22, 0x00	; 0
    19a0:	70 e0       	ldi	r23, 0x00	; 0
    19a2:	80 e8       	ldi	r24, 0x80	; 128
    19a4:	9f ef       	ldi	r25, 0xFF	; 255
    19a6:	04 c0       	rjmp	.+8      	; 0x19b0 <strtod+0x292>
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	80 ec       	ldi	r24, 0xC0	; 192
    19ae:	9f e7       	ldi	r25, 0x7F	; 127
    19b0:	cd b7       	in	r28, 0x3d	; 61
    19b2:	de b7       	in	r29, 0x3e	; 62
    19b4:	ec e0       	ldi	r30, 0x0C	; 12
    19b6:	0c 94 a6 09 	jmp	0x134c	; 0x134c <__epilogue_restores__+0xc>

000019ba <isspace>:
    19ba:	91 11       	cpse	r25, r1
    19bc:	0c 94 27 0d 	jmp	0x1a4e	; 0x1a4e <__ctype_isfalse>
    19c0:	80 32       	cpi	r24, 0x20	; 32
    19c2:	19 f0       	breq	.+6      	; 0x19ca <isspace+0x10>
    19c4:	89 50       	subi	r24, 0x09	; 9
    19c6:	85 50       	subi	r24, 0x05	; 5
    19c8:	c8 f7       	brcc	.-14     	; 0x19bc <isspace+0x2>
    19ca:	08 95       	ret

000019cc <strncasecmp_P>:
    19cc:	fb 01       	movw	r30, r22
    19ce:	dc 01       	movw	r26, r24
    19d0:	41 50       	subi	r20, 0x01	; 1
    19d2:	50 40       	sbci	r21, 0x00	; 0
    19d4:	88 f0       	brcs	.+34     	; 0x19f8 <strncasecmp_P+0x2c>
    19d6:	8d 91       	ld	r24, X+
    19d8:	81 34       	cpi	r24, 0x41	; 65
    19da:	1c f0       	brlt	.+6      	; 0x19e2 <strncasecmp_P+0x16>
    19dc:	8b 35       	cpi	r24, 0x5B	; 91
    19de:	0c f4       	brge	.+2      	; 0x19e2 <strncasecmp_P+0x16>
    19e0:	80 5e       	subi	r24, 0xE0	; 224
    19e2:	65 91       	lpm	r22, Z+
    19e4:	61 34       	cpi	r22, 0x41	; 65
    19e6:	1c f0       	brlt	.+6      	; 0x19ee <strncasecmp_P+0x22>
    19e8:	6b 35       	cpi	r22, 0x5B	; 91
    19ea:	0c f4       	brge	.+2      	; 0x19ee <strncasecmp_P+0x22>
    19ec:	60 5e       	subi	r22, 0xE0	; 224
    19ee:	86 1b       	sub	r24, r22
    19f0:	61 11       	cpse	r22, r1
    19f2:	71 f3       	breq	.-36     	; 0x19d0 <strncasecmp_P+0x4>
    19f4:	99 0b       	sbc	r25, r25
    19f6:	08 95       	ret
    19f8:	88 1b       	sub	r24, r24
    19fa:	fc cf       	rjmp	.-8      	; 0x19f4 <strncasecmp_P+0x28>

000019fc <__cmpsf2>:
    19fc:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__fp_cmp>
    1a00:	08 f4       	brcc	.+2      	; 0x1a04 <__cmpsf2+0x8>
    1a02:	81 e0       	ldi	r24, 0x01	; 1
    1a04:	08 95       	ret

00001a06 <__fp_cmp>:
    1a06:	99 0f       	add	r25, r25
    1a08:	00 08       	sbc	r0, r0
    1a0a:	55 0f       	add	r21, r21
    1a0c:	aa 0b       	sbc	r26, r26
    1a0e:	e0 e8       	ldi	r30, 0x80	; 128
    1a10:	fe ef       	ldi	r31, 0xFE	; 254
    1a12:	16 16       	cp	r1, r22
    1a14:	17 06       	cpc	r1, r23
    1a16:	e8 07       	cpc	r30, r24
    1a18:	f9 07       	cpc	r31, r25
    1a1a:	c0 f0       	brcs	.+48     	; 0x1a4c <__fp_cmp+0x46>
    1a1c:	12 16       	cp	r1, r18
    1a1e:	13 06       	cpc	r1, r19
    1a20:	e4 07       	cpc	r30, r20
    1a22:	f5 07       	cpc	r31, r21
    1a24:	98 f0       	brcs	.+38     	; 0x1a4c <__fp_cmp+0x46>
    1a26:	62 1b       	sub	r22, r18
    1a28:	73 0b       	sbc	r23, r19
    1a2a:	84 0b       	sbc	r24, r20
    1a2c:	95 0b       	sbc	r25, r21
    1a2e:	39 f4       	brne	.+14     	; 0x1a3e <__fp_cmp+0x38>
    1a30:	0a 26       	eor	r0, r26
    1a32:	61 f0       	breq	.+24     	; 0x1a4c <__fp_cmp+0x46>
    1a34:	23 2b       	or	r18, r19
    1a36:	24 2b       	or	r18, r20
    1a38:	25 2b       	or	r18, r21
    1a3a:	21 f4       	brne	.+8      	; 0x1a44 <__fp_cmp+0x3e>
    1a3c:	08 95       	ret
    1a3e:	0a 26       	eor	r0, r26
    1a40:	09 f4       	brne	.+2      	; 0x1a44 <__fp_cmp+0x3e>
    1a42:	a1 40       	sbci	r26, 0x01	; 1
    1a44:	a6 95       	lsr	r26
    1a46:	8f ef       	ldi	r24, 0xFF	; 255
    1a48:	81 1d       	adc	r24, r1
    1a4a:	81 1d       	adc	r24, r1
    1a4c:	08 95       	ret

00001a4e <__ctype_isfalse>:
    1a4e:	99 27       	eor	r25, r25
    1a50:	88 27       	eor	r24, r24

00001a52 <__ctype_istrue>:
    1a52:	08 95       	ret

00001a54 <__muluhisi3>:
    1a54:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__umulhisi3>
    1a58:	a5 9f       	mul	r26, r21
    1a5a:	90 0d       	add	r25, r0
    1a5c:	b4 9f       	mul	r27, r20
    1a5e:	90 0d       	add	r25, r0
    1a60:	a4 9f       	mul	r26, r20
    1a62:	80 0d       	add	r24, r0
    1a64:	91 1d       	adc	r25, r1
    1a66:	11 24       	eor	r1, r1
    1a68:	08 95       	ret

00001a6a <__umulhisi3>:
    1a6a:	a2 9f       	mul	r26, r18
    1a6c:	b0 01       	movw	r22, r0
    1a6e:	b3 9f       	mul	r27, r19
    1a70:	c0 01       	movw	r24, r0
    1a72:	a3 9f       	mul	r26, r19
    1a74:	70 0d       	add	r23, r0
    1a76:	81 1d       	adc	r24, r1
    1a78:	11 24       	eor	r1, r1
    1a7a:	91 1d       	adc	r25, r1
    1a7c:	b2 9f       	mul	r27, r18
    1a7e:	70 0d       	add	r23, r0
    1a80:	81 1d       	adc	r24, r1
    1a82:	11 24       	eor	r1, r1
    1a84:	91 1d       	adc	r25, r1
    1a86:	08 95       	ret

00001a88 <_exit>:
    1a88:	f8 94       	cli

00001a8a <__stop_program>:
    1a8a:	ff cf       	rjmp	.-2      	; 0x1a8a <__stop_program>
