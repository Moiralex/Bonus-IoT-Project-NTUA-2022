
main_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c4  00800060  000019b4  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000214  00800124  00800124  00001b0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001ba8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c86  00000000  00000000  00001c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f1  00000000  00000000  000028a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000af3  00000000  00000000  00002f97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  00003a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000456  00000000  00000000  00003be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f5  00000000  00000000  0000403a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000442f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	11 e0       	ldi	r17, 0x01	; 1
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e4 eb       	ldi	r30, 0xB4	; 180
     1a6:	f9 e1       	ldi	r31, 0x19	; 25
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a4 32       	cpi	r26, 0x24	; 36
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	a4 e2       	ldi	r26, 0x24	; 36
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a8 33       	cpi	r26, 0x38	; 56
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 06 04 	call	0x80c	; 0x80c <main>
     1c8:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     1d0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     1d2:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     1d4:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     1d6:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     1d8:	6c d0       	rcall	.+216    	; 0x2b2 <wait_msec>
ldi r24, 0x30
     1da:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1dc:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1de:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1e0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1e2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1e4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1e6:	6f d0       	rcall	.+222    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1e8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ea:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1ec:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ee:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1f0:	6a d0       	rcall	.+212    	; 0x2c6 <wait_usec>
pop r25
     1f2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1f4:	8f 91       	pop	r24
ldi r24, 0x30
     1f6:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1f8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1fa:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1fc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1fe:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     200:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     202:	61 d0       	rcall	.+194    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     204:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     206:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     208:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     20a:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     20c:	5c d0       	rcall	.+184    	; 0x2c6 <wait_usec>
pop r25
     20e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     210:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     212:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     214:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     216:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     218:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     21a:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     21e:	53 d0       	rcall	.+166    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     220:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     222:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     224:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     226:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     228:	4e d0       	rcall	.+156    	; 0x2c6 <wait_usec>
pop r25
     22a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     22c:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     22e:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     230:	0e d0       	rcall	.+28     	; 0x24e <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     232:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     234:	0c d0       	rcall	.+24     	; 0x24e <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     236:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     238:	0a d0       	rcall	.+20     	; 0x24e <lcd_command_sim>
ldi r24, lo8(1530)
     23a:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     23c:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     23e:	43 d0       	rcall	.+134    	; 0x2c6 <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     240:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     242:	05 d0       	rcall	.+10     	; 0x24e <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     244:	9f 91       	pop	r25
pop r24
     246:	8f 91       	pop	r24
ret
     248:	08 95       	ret

0000024a <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     24a:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     24c:	00 d0       	rcall	.+0      	; 0x24e <lcd_command_sim>

0000024e <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     24e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     250:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     252:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     254:	06 d0       	rcall	.+12     	; 0x262 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     256:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     258:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     25a:	35 d0       	rcall	.+106    	; 0x2c6 <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     25c:	9f 91       	pop	r25
pop r24
     25e:	8f 91       	pop	r24
ret
     260:	08 95       	ret

00000262 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     262:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     264:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     266:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     268:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     26a:	2d d0       	rcall	.+90     	; 0x2c6 <wait_usec>
pop r25
     26c:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     26e:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     270:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     272:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     274:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     276:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     278:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     27a:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     27c:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     27e:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     280:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     282:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     284:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     286:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     288:	1e d0       	rcall	.+60     	; 0x2c6 <wait_usec>
pop r25
     28a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     28c:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     28e:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     290:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     292:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     294:	89 0f       	add	r24, r25
out PORTD, r24
     296:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     298:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     29a:	93 98       	cbi	0x12, 3	; 18
ret
     29c:	08 95       	ret

0000029e <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     29e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     2a0:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     2a2:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     2a4:	de df       	rcall	.-68     	; 0x262 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     2a6:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     2a8:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2aa:	0d d0       	rcall	.+26     	; 0x2c6 <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     2ac:	9f 91       	pop	r25
pop r24
     2ae:	8f 91       	pop	r24
ret
     2b0:	08 95       	ret

000002b2 <wait_msec>:

wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     2b2:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     2b4:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     2b6:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     2b8:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     2ba:	05 d0       	rcall	.+10     	; 0x2c6 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     2bc:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     2be:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     2c0:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2c2:	b9 f7       	brne	.-18     	; 0x2b2 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     2c4:	08 95       	ret

000002c6 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     2c6:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2d0:	d1 f7       	brne	.-12     	; 0x2c6 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     2d2:	08 95       	ret

000002d4 <print>:


.global print
print:
     2d4:	e4 df       	rcall	.-56     	; 0x29e <lcd_data_sim>

000002d6 <usart_init>:
	while(c!='S') {
		c=usart_receive();
	}
	for(int i=0; i<12; ++i)
	usart_receive(); //flush ServedClient out of read buffer
}
     2d6:	1b b8       	out	0x0b, r1	; 11
     2d8:	28 e1       	ldi	r18, 0x18	; 24
     2da:	2a b9       	out	0x0a, r18	; 10
     2dc:	90 bd       	out	0x20, r25	; 32
     2de:	89 b9       	out	0x09, r24	; 9
     2e0:	86 e8       	ldi	r24, 0x86	; 134
     2e2:	80 bd       	out	0x20, r24	; 32
     2e4:	08 95       	ret

000002e6 <usart_transmit>:
     2e6:	5d 9b       	sbis	0x0b, 5	; 11
     2e8:	fe cf       	rjmp	.-4      	; 0x2e6 <usart_transmit>
     2ea:	8c b9       	out	0x0c, r24	; 12
     2ec:	08 95       	ret

000002ee <usart_receive>:
     2ee:	5f 9b       	sbis	0x0b, 7	; 11
     2f0:	fe cf       	rjmp	.-4      	; 0x2ee <usart_receive>
     2f2:	8c b1       	in	r24, 0x0c	; 12
     2f4:	08 95       	ret

000002f6 <serialWrite>:
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	ec 01       	movw	r28, r24
     2fe:	10 e0       	ldi	r17, 0x00	; 0
     300:	07 c0       	rjmp	.+14     	; 0x310 <serialWrite+0x1a>
     302:	fe 01       	movw	r30, r28
     304:	e8 0f       	add	r30, r24
     306:	f9 1f       	adc	r31, r25
     308:	80 81       	ld	r24, Z
     30a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <usart_transmit>
     30e:	1f 5f       	subi	r17, 0xFF	; 255
     310:	81 2f       	mov	r24, r17
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fe 01       	movw	r30, r28
     316:	01 90       	ld	r0, Z+
     318:	00 20       	and	r0, r0
     31a:	e9 f7       	brne	.-6      	; 0x316 <serialWrite+0x20>
     31c:	31 97       	sbiw	r30, 0x01	; 1
     31e:	ec 1b       	sub	r30, r28
     320:	fd 0b       	sbc	r31, r29
     322:	8e 17       	cp	r24, r30
     324:	9f 07       	cpc	r25, r31
     326:	68 f3       	brcs	.-38     	; 0x302 <serialWrite+0xc>
     328:	df 91       	pop	r29
     32a:	cf 91       	pop	r28
     32c:	1f 91       	pop	r17
     32e:	08 95       	ret

00000330 <sendCommand>:
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	8c 01       	movw	r16, r24
     33a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>
     33e:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     342:	13 c0       	rjmp	.+38     	; 0x36a <sendCommand+0x3a>
     344:	86 34       	cpi	r24, 0x46	; 70
     346:	79 f4       	brne	.+30     	; 0x366 <sendCommand+0x36>
     348:	04 c0       	rjmp	.+8      	; 0x352 <sendCommand+0x22>
     34a:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     34e:	21 96       	adiw	r28, 0x01	; 1
     350:	02 c0       	rjmp	.+4      	; 0x356 <sendCommand+0x26>
     352:	c0 e0       	ldi	r28, 0x00	; 0
     354:	d0 e0       	ldi	r29, 0x00	; 0
     356:	c5 30       	cpi	r28, 0x05	; 5
     358:	d1 05       	cpc	r29, r1
     35a:	bc f3       	brlt	.-18     	; 0x34a <sendCommand+0x1a>
     35c:	8f ef       	ldi	r24, 0xFF	; 255
     35e:	88 bb       	out	0x18, r24	; 24
     360:	c8 01       	movw	r24, r16
     362:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>
     366:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     36a:	83 35       	cpi	r24, 0x53	; 83
     36c:	59 f7       	brne	.-42     	; 0x344 <sendCommand+0x14>
     36e:	c0 e0       	ldi	r28, 0x00	; 0
     370:	d0 e0       	ldi	r29, 0x00	; 0
     372:	03 c0       	rjmp	.+6      	; 0x37a <sendCommand+0x4a>
     374:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     378:	21 96       	adiw	r28, 0x01	; 1
     37a:	c8 30       	cpi	r28, 0x08	; 8
     37c:	d1 05       	cpc	r29, r1
     37e:	d4 f3       	brlt	.-12     	; 0x374 <sendCommand+0x44>
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	1f 91       	pop	r17
     386:	0f 91       	pop	r16
     388:	08 95       	ret

0000038a <__vector_8>:

ISR(TIMER1_OVF_vect) {
     38a:	1f 92       	push	r1
     38c:	0f 92       	push	r0
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	0f 92       	push	r0
     392:	11 24       	eor	r1, r1
     394:	cf 92       	push	r12
     396:	df 92       	push	r13
     398:	ef 92       	push	r14
     39a:	ff 92       	push	r15
     39c:	0f 93       	push	r16
     39e:	1f 93       	push	r17
     3a0:	2f 93       	push	r18
     3a2:	3f 93       	push	r19
     3a4:	4f 93       	push	r20
     3a6:	5f 93       	push	r21
     3a8:	6f 93       	push	r22
     3aa:	7f 93       	push	r23
     3ac:	8f 93       	push	r24
     3ae:	9f 93       	push	r25
     3b0:	af 93       	push	r26
     3b2:	bf 93       	push	r27
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	ef 93       	push	r30
     3ba:	ff 93       	push	r31
    char c;
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
     3bc:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <first>
     3c0:	81 11       	cpse	r24, r1
     3c2:	03 c2       	rjmp	.+1030   	; 0x7ca <__stack+0x36b>
     3c4:	e1 2c       	mov	r14, r1
     3c6:	f1 2c       	mov	r15, r1
     3c8:	46 c1       	rjmp	.+652    	; 0x656 <__stack+0x1f7>
            sendCommand(string_to_send);
            strcpy(string_to_send, "ESP:connect\n"); //will wait until it can connect
            sendCommand(string_to_send);
            strcpy(string_to_send, "ESP:clientTransmit\n");
            sendCommand(string_to_send);*/
            strcpy(string_to_send, "ESP:getAllValues\n");
     3ca:	82 e1       	ldi	r24, 0x12	; 18
     3cc:	e0 e6       	ldi	r30, 0x60	; 96
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	ab e2       	ldi	r26, 0x2B	; 43
     3d2:	b1 e0       	ldi	r27, 0x01	; 1
     3d4:	01 90       	ld	r0, Z+
     3d6:	0d 92       	st	X+, r0
     3d8:	8a 95       	dec	r24
     3da:	e1 f7       	brne	.-8      	; 0x3d4 <__vector_8+0x4a>
            serialWrite(string_to_send);
     3dc:	8b e2       	ldi	r24, 0x2B	; 43
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>

            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     3e4:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     3e8:	82 32       	cpi	r24, 0x22	; 34
     3ea:	e1 f7       	brne	.-8      	; 0x3e4 <__vector_8+0x5a>
               // c = getChar();
            }
            c=usart_receive();
     3ec:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     3f0:	86 34       	cpi	r24, 0x46	; 70
     3f2:	11 f0       	breq	.+4      	; 0x3f8 <__vector_8+0x6e>
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
            failed=false;
     3f4:	10 e0       	ldi	r17, 0x00	; 0
     3f6:	01 c0       	rjmp	.+2      	; 0x3fa <__vector_8+0x70>
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
     3f8:	11 e0       	ldi	r17, 0x01	; 1
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
            failed=false;
     3fa:	c0 e0       	ldi	r28, 0x00	; 0
     3fc:	d0 e0       	ldi	r29, 0x00	; 0
     3fe:	0a c0       	rjmp	.+20     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     400:	6e 01       	movw	r12, r28
     402:	2f ef       	ldi	r18, 0xFF	; 255
     404:	c2 1a       	sub	r12, r18
     406:	d2 0a       	sbc	r13, r18
     408:	c0 5d       	subi	r28, 0xD0	; 208
     40a:	dc 4f       	sbci	r29, 0xFC	; 252
     40c:	88 83       	st	Y, r24
                c = usart_receive();
     40e:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     412:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     414:	82 32       	cpi	r24, 0x22	; 34
     416:	11 f0       	breq	.+4      	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
     418:	11 23       	and	r17, r17
     41a:	91 f3       	breq	.-28     	; 0x400 <__DATA_REGION_LENGTH__>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     41c:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){ //fix failed case!!!!!!!!!
     420:	11 11       	cpse	r17, r1
     422:	2e c0       	rjmp	.+92     	; 0x480 <__stack+0x21>
     424:	25 e0       	ldi	r18, 0x05	; 5
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	0c c0       	rjmp	.+24     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     42a:	f9 01       	movw	r30, r18
     42c:	e8 1b       	sub	r30, r24
     42e:	f9 0b       	sbc	r31, r25
     430:	e0 5d       	subi	r30, 0xD0	; 208
     432:	fc 4f       	sbci	r31, 0xFC	; 252
     434:	80 81       	ld	r24, Z
     436:	f9 01       	movw	r30, r18
     438:	e0 5d       	subi	r30, 0xD0	; 208
     43a:	fc 4f       	sbci	r31, 0xFC	; 252
     43c:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ //fix failed case!!!!!!!!!
                for(int i=5; i>=6-counter; i--){
     43e:	21 50       	subi	r18, 0x01	; 1
     440:	31 09       	sbc	r19, r1
     442:	86 e0       	ldi	r24, 0x06	; 6
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	8c 1b       	sub	r24, r28
     448:	9d 0b       	sbc	r25, r29
     44a:	28 17       	cp	r18, r24
     44c:	39 07       	cpc	r19, r25
     44e:	6c f7       	brge	.-38     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
     450:	20 e0       	ldi	r18, 0x00	; 0
     452:	30 e0       	ldi	r19, 0x00	; 0
     454:	07 c0       	rjmp	.+14     	; 0x464 <__stack+0x5>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     456:	f9 01       	movw	r30, r18
     458:	e0 5d       	subi	r30, 0xD0	; 208
     45a:	fc 4f       	sbci	r31, 0xFC	; 252
     45c:	40 e3       	ldi	r20, 0x30	; 48
     45e:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ //fix failed case!!!!!!!!!
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     460:	2f 5f       	subi	r18, 0xFF	; 255
     462:	3f 4f       	sbci	r19, 0xFF	; 255
     464:	28 17       	cp	r18, r24
     466:	39 07       	cpc	r19, r25
     468:	b4 f3       	brlt	.-20     	; 0x456 <__DATA_REGION_LENGTH__+0x56>
                    conv_buffer[i] = '0';
                }
                moist_avgs[k]=atoi(conv_buffer);
     46a:	80 e3       	ldi	r24, 0x30	; 48
     46c:	93 e0       	ldi	r25, 0x03	; 3
     46e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <atoi>
     472:	f7 01       	movw	r30, r14
     474:	ee 0f       	add	r30, r30
     476:	ff 1f       	adc	r31, r31
     478:	ec 5d       	subi	r30, 0xDC	; 220
     47a:	fe 4f       	sbci	r31, 0xFE	; 254
     47c:	91 83       	std	Z+1, r25	; 0x01
     47e:	80 83       	st	Z, r24
            }
            
			counter =0;
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     480:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     484:	82 32       	cpi	r24, 0x22	; 34
     486:	e1 f7       	brne	.-8      	; 0x480 <__stack+0x21>
               // c = getChar();
            }
            c=usart_receive();
     488:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     48c:	86 34       	cpi	r24, 0x46	; 70
     48e:	09 f4       	brne	.+2      	; 0x492 <__stack+0x33>
                failed=true;
     490:	11 e0       	ldi	r17, 0x01	; 1
     492:	c0 e0       	ldi	r28, 0x00	; 0
     494:	d0 e0       	ldi	r29, 0x00	; 0
     496:	0a c0       	rjmp	.+20     	; 0x4ac <__stack+0x4d>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     498:	6e 01       	movw	r12, r28
     49a:	9f ef       	ldi	r25, 0xFF	; 255
     49c:	c9 1a       	sub	r12, r25
     49e:	d9 0a       	sbc	r13, r25
     4a0:	c0 5d       	subi	r28, 0xD0	; 208
     4a2:	dc 4f       	sbci	r29, 0xFC	; 252
     4a4:	88 83       	st	Y, r24
                c = usart_receive();
     4a6:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     4aa:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     4ac:	82 32       	cpi	r24, 0x22	; 34
     4ae:	11 f0       	breq	.+4      	; 0x4b4 <__stack+0x55>
     4b0:	11 23       	and	r17, r17
     4b2:	91 f3       	breq	.-28     	; 0x498 <__stack+0x39>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     4b4:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     4b8:	11 11       	cpse	r17, r1
     4ba:	32 c0       	rjmp	.+100    	; 0x520 <__stack+0xc1>
     4bc:	25 e0       	ldi	r18, 0x05	; 5
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	0c c0       	rjmp	.+24     	; 0x4da <__stack+0x7b>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     4c2:	f9 01       	movw	r30, r18
     4c4:	e8 1b       	sub	r30, r24
     4c6:	f9 0b       	sbc	r31, r25
     4c8:	e0 5d       	subi	r30, 0xD0	; 208
     4ca:	fc 4f       	sbci	r31, 0xFC	; 252
     4cc:	80 81       	ld	r24, Z
     4ce:	f9 01       	movw	r30, r18
     4d0:	e0 5d       	subi	r30, 0xD0	; 208
     4d2:	fc 4f       	sbci	r31, 0xFC	; 252
     4d4:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     4d6:	21 50       	subi	r18, 0x01	; 1
     4d8:	31 09       	sbc	r19, r1
     4da:	86 e0       	ldi	r24, 0x06	; 6
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	8c 1b       	sub	r24, r28
     4e0:	9d 0b       	sbc	r25, r29
     4e2:	28 17       	cp	r18, r24
     4e4:	39 07       	cpc	r19, r25
     4e6:	6c f7       	brge	.-38     	; 0x4c2 <__stack+0x63>
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	07 c0       	rjmp	.+14     	; 0x4fc <__stack+0x9d>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     4ee:	f9 01       	movw	r30, r18
     4f0:	e0 5d       	subi	r30, 0xD0	; 208
     4f2:	fc 4f       	sbci	r31, 0xFC	; 252
     4f4:	40 e3       	ldi	r20, 0x30	; 48
     4f6:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     4f8:	2f 5f       	subi	r18, 0xFF	; 255
     4fa:	3f 4f       	sbci	r19, 0xFF	; 255
     4fc:	28 17       	cp	r18, r24
     4fe:	39 07       	cpc	r19, r25
     500:	b4 f3       	brlt	.-20     	; 0x4ee <__stack+0x8f>
                    conv_buffer[i] = '0';
                }
                tmp_avgs[k]=atof(conv_buffer);
     502:	80 e3       	ldi	r24, 0x30	; 48
     504:	93 e0       	ldi	r25, 0x03	; 3
     506:	0e 94 54 08 	call	0x10a8	; 0x10a8 <atof>
     50a:	f7 01       	movw	r30, r14
     50c:	ee 0f       	add	r30, r30
     50e:	ff 1f       	adc	r31, r31
     510:	ee 0f       	add	r30, r30
     512:	ff 1f       	adc	r31, r31
     514:	e5 55       	subi	r30, 0x55	; 85
     516:	fd 4f       	sbci	r31, 0xFD	; 253
     518:	60 83       	st	Z, r22
     51a:	71 83       	std	Z+1, r23	; 0x01
     51c:	82 83       	std	Z+2, r24	; 0x02
     51e:	93 83       	std	Z+3, r25	; 0x03
            }
            
            counter =0;
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     520:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     524:	82 32       	cpi	r24, 0x22	; 34
     526:	e1 f7       	brne	.-8      	; 0x520 <__stack+0xc1>
               // c = getChar();
            }
            c=usart_receive();
     528:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     52c:	86 34       	cpi	r24, 0x46	; 70
     52e:	09 f4       	brne	.+2      	; 0x532 <__stack+0xd3>
                failed=true;
     530:	11 e0       	ldi	r17, 0x01	; 1
     532:	c0 e0       	ldi	r28, 0x00	; 0
     534:	d0 e0       	ldi	r29, 0x00	; 0
     536:	0a c0       	rjmp	.+20     	; 0x54c <__stack+0xed>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     538:	6e 01       	movw	r12, r28
     53a:	2f ef       	ldi	r18, 0xFF	; 255
     53c:	c2 1a       	sub	r12, r18
     53e:	d2 0a       	sbc	r13, r18
     540:	c0 5d       	subi	r28, 0xD0	; 208
     542:	dc 4f       	sbci	r29, 0xFC	; 252
     544:	88 83       	st	Y, r24
                c = usart_receive();
     546:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     54a:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     54c:	82 32       	cpi	r24, 0x22	; 34
     54e:	11 f0       	breq	.+4      	; 0x554 <__stack+0xf5>
     550:	11 23       	and	r17, r17
     552:	91 f3       	breq	.-28     	; 0x538 <__stack+0xd9>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     554:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     558:	11 11       	cpse	r17, r1
     55a:	2e c0       	rjmp	.+92     	; 0x5b8 <__stack+0x159>
     55c:	25 e0       	ldi	r18, 0x05	; 5
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	0c c0       	rjmp	.+24     	; 0x57a <__stack+0x11b>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     562:	f9 01       	movw	r30, r18
     564:	e8 1b       	sub	r30, r24
     566:	f9 0b       	sbc	r31, r25
     568:	e0 5d       	subi	r30, 0xD0	; 208
     56a:	fc 4f       	sbci	r31, 0xFC	; 252
     56c:	80 81       	ld	r24, Z
     56e:	f9 01       	movw	r30, r18
     570:	e0 5d       	subi	r30, 0xD0	; 208
     572:	fc 4f       	sbci	r31, 0xFC	; 252
     574:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     576:	21 50       	subi	r18, 0x01	; 1
     578:	31 09       	sbc	r19, r1
     57a:	86 e0       	ldi	r24, 0x06	; 6
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	8c 1b       	sub	r24, r28
     580:	9d 0b       	sbc	r25, r29
     582:	28 17       	cp	r18, r24
     584:	39 07       	cpc	r19, r25
     586:	6c f7       	brge	.-38     	; 0x562 <__stack+0x103>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	07 c0       	rjmp	.+14     	; 0x59c <__stack+0x13d>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     58e:	f9 01       	movw	r30, r18
     590:	e0 5d       	subi	r30, 0xD0	; 208
     592:	fc 4f       	sbci	r31, 0xFC	; 252
     594:	40 e3       	ldi	r20, 0x30	; 48
     596:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	28 17       	cp	r18, r24
     59e:	39 07       	cpc	r19, r25
     5a0:	b4 f3       	brlt	.-20     	; 0x58e <__stack+0x12f>
                    conv_buffer[i] = '0';
                }
                moist_vars[k]=atoi(conv_buffer);
     5a2:	80 e3       	ldi	r24, 0x30	; 48
     5a4:	93 e0       	ldi	r25, 0x03	; 3
     5a6:	0e 94 58 08 	call	0x10b0	; 0x10b0 <atoi>
     5aa:	f7 01       	movw	r30, r14
     5ac:	ee 0f       	add	r30, r30
     5ae:	ff 1f       	adc	r31, r31
     5b0:	e8 5d       	subi	r30, 0xD8	; 216
     5b2:	fe 4f       	sbci	r31, 0xFE	; 254
     5b4:	91 83       	std	Z+1, r25	; 0x01
     5b6:	80 83       	st	Z, r24
            }
            
			counter =0;
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     5b8:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     5bc:	82 32       	cpi	r24, 0x22	; 34
     5be:	e1 f7       	brne	.-8      	; 0x5b8 <__stack+0x159>
               // c = getChar();
            }
            c=usart_receive();
     5c0:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     5c4:	86 34       	cpi	r24, 0x46	; 70
     5c6:	09 f4       	brne	.+2      	; 0x5ca <__stack+0x16b>
                failed=true;
     5c8:	11 e0       	ldi	r17, 0x01	; 1
     5ca:	c0 e0       	ldi	r28, 0x00	; 0
     5cc:	d0 e0       	ldi	r29, 0x00	; 0
     5ce:	0a c0       	rjmp	.+20     	; 0x5e4 <__stack+0x185>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     5d0:	6e 01       	movw	r12, r28
     5d2:	9f ef       	ldi	r25, 0xFF	; 255
     5d4:	c9 1a       	sub	r12, r25
     5d6:	d9 0a       	sbc	r13, r25
     5d8:	c0 5d       	subi	r28, 0xD0	; 208
     5da:	dc 4f       	sbci	r29, 0xFC	; 252
     5dc:	88 83       	st	Y, r24
                c = usart_receive();
     5de:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     5e2:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     5e4:	82 32       	cpi	r24, 0x22	; 34
     5e6:	11 f0       	breq	.+4      	; 0x5ec <__stack+0x18d>
     5e8:	11 23       	and	r17, r17
     5ea:	91 f3       	breq	.-28     	; 0x5d0 <__stack+0x171>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     5ec:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     5f0:	11 11       	cpse	r17, r1
     5f2:	2e c0       	rjmp	.+92     	; 0x650 <__stack+0x1f1>
     5f4:	25 e0       	ldi	r18, 0x05	; 5
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	0c c0       	rjmp	.+24     	; 0x612 <__stack+0x1b3>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     5fa:	f9 01       	movw	r30, r18
     5fc:	e8 1b       	sub	r30, r24
     5fe:	f9 0b       	sbc	r31, r25
     600:	e0 5d       	subi	r30, 0xD0	; 208
     602:	fc 4f       	sbci	r31, 0xFC	; 252
     604:	80 81       	ld	r24, Z
     606:	f9 01       	movw	r30, r18
     608:	e0 5d       	subi	r30, 0xD0	; 208
     60a:	fc 4f       	sbci	r31, 0xFC	; 252
     60c:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     60e:	21 50       	subi	r18, 0x01	; 1
     610:	31 09       	sbc	r19, r1
     612:	86 e0       	ldi	r24, 0x06	; 6
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	8c 1b       	sub	r24, r28
     618:	9d 0b       	sbc	r25, r29
     61a:	28 17       	cp	r18, r24
     61c:	39 07       	cpc	r19, r25
     61e:	6c f7       	brge	.-38     	; 0x5fa <__stack+0x19b>
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	07 c0       	rjmp	.+14     	; 0x634 <__stack+0x1d5>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     626:	f9 01       	movw	r30, r18
     628:	e0 5d       	subi	r30, 0xD0	; 208
     62a:	fc 4f       	sbci	r31, 0xFC	; 252
     62c:	40 e3       	ldi	r20, 0x30	; 48
     62e:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     630:	2f 5f       	subi	r18, 0xFF	; 255
     632:	3f 4f       	sbci	r19, 0xFF	; 255
     634:	28 17       	cp	r18, r24
     636:	39 07       	cpc	r19, r25
     638:	b4 f3       	brlt	.-20     	; 0x626 <__stack+0x1c7>
                    conv_buffer[i] = '0';
                }
                tmp_vars[k]=atoi(conv_buffer);
     63a:	80 e3       	ldi	r24, 0x30	; 48
     63c:	93 e0       	ldi	r25, 0x03	; 3
     63e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <atoi>
     642:	f7 01       	movw	r30, r14
     644:	ee 0f       	add	r30, r30
     646:	ff 1f       	adc	r31, r31
     648:	ea 5d       	subi	r30, 0xDA	; 218
     64a:	fe 4f       	sbci	r31, 0xFE	; 254
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
    char c;
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
     650:	2f ef       	ldi	r18, 0xFF	; 255
     652:	e2 1a       	sub	r14, r18
     654:	f2 0a       	sbc	r15, r18
     656:	1e 14       	cp	r1, r14
     658:	1f 04       	cpc	r1, r15
     65a:	0c f0       	brlt	.+2      	; 0x65e <__stack+0x1ff>
     65c:	b6 ce       	rjmp	.-660    	; 0x3ca <__vector_8+0x40>
                    conv_buffer[i] = '0';
                }
                tmp_vars[k]=atoi(conv_buffer);
            }
        }
        if(!failed) {
     65e:	11 11       	cpse	r17, r1
     660:	b6 c0       	rjmp	.+364    	; 0x7ce <__stack+0x36f>
            lcd_clear();
     662:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_clear>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     666:	00 e0       	ldi	r16, 0x00	; 0
     668:	10 e0       	ldi	r17, 0x00	; 0
                tmp_vars[k]=atoi(conv_buffer);
            }
        }
        if(!failed) {
            lcd_clear();
            leds = 1;
     66a:	ee 24       	eor	r14, r14
     66c:	e3 94       	inc	r14
     66e:	f1 2c       	mov	r15, r1
            watering_pot=0;
     670:	c1 2c       	mov	r12, r1
     672:	d1 2c       	mov	r13, r1
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     674:	a4 c0       	rjmp	.+328    	; 0x7be <__stack+0x35f>
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);
     676:	f8 01       	movw	r30, r16
     678:	ee 0f       	add	r30, r30
     67a:	ff 1f       	adc	r31, r31
     67c:	ee 0f       	add	r30, r30
     67e:	ff 1f       	adc	r31, r31
     680:	e5 55       	subi	r30, 0x55	; 85
     682:	fd 4f       	sbci	r31, 0xFD	; 253
     684:	80 81       	ld	r24, Z
     686:	91 81       	ldd	r25, Z+1	; 0x01
     688:	22 81       	ldd	r18, Z+2	; 0x02
     68a:	33 81       	ldd	r19, Z+3	; 0x03
     68c:	3f 93       	push	r19
     68e:	2f 93       	push	r18
     690:	9f 93       	push	r25
     692:	8f 93       	push	r24
     694:	1f 93       	push	r17
     696:	0f 93       	push	r16
     698:	82 e7       	ldi	r24, 0x72	; 114
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	9f 93       	push	r25
     69e:	8f 93       	push	r24
     6a0:	8f ea       	ldi	r24, 0xAF	; 175
     6a2:	92 e0       	ldi	r25, 0x02	; 2
     6a4:	9f 93       	push	r25
     6a6:	8f 93       	push	r24
     6a8:	0e 94 a8 09 	call	0x1350	; 0x1350 <sprintf>

                for(int m=0; m<strlen(string_to_print); ++m)
     6ac:	8d b7       	in	r24, 0x3d	; 61
     6ae:	9e b7       	in	r25, 0x3e	; 62
     6b0:	0a 96       	adiw	r24, 0x0a	; 10
     6b2:	0f b6       	in	r0, 0x3f	; 63
     6b4:	f8 94       	cli
     6b6:	9e bf       	out	0x3e, r25	; 62
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	8d bf       	out	0x3d, r24	; 61
     6bc:	c0 e0       	ldi	r28, 0x00	; 0
     6be:	d0 e0       	ldi	r29, 0x00	; 0
     6c0:	07 c0       	rjmp	.+14     	; 0x6d0 <__stack+0x271>
                    print(string_to_print[m]);
     6c2:	fe 01       	movw	r30, r28
     6c4:	e1 55       	subi	r30, 0x51	; 81
     6c6:	fd 4f       	sbci	r31, 0xFD	; 253
     6c8:	80 81       	ld	r24, Z
     6ca:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <print>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);

                for(int m=0; m<strlen(string_to_print); ++m)
     6ce:	21 96       	adiw	r28, 0x01	; 1
     6d0:	ef ea       	ldi	r30, 0xAF	; 175
     6d2:	f2 e0       	ldi	r31, 0x02	; 2
     6d4:	01 90       	ld	r0, Z+
     6d6:	00 20       	and	r0, r0
     6d8:	e9 f7       	brne	.-6      	; 0x6d4 <__stack+0x275>
     6da:	31 97       	sbiw	r30, 0x01	; 1
     6dc:	ef 5a       	subi	r30, 0xAF	; 175
     6de:	f2 40       	sbci	r31, 0x02	; 2
     6e0:	ce 17       	cp	r28, r30
     6e2:	df 07       	cpc	r29, r31
     6e4:	70 f3       	brcs	.-36     	; 0x6c2 <__stack+0x263>
                    print(string_to_print[m]);

                if(moist_avgs[k]>=800){
     6e6:	f8 01       	movw	r30, r16
     6e8:	ee 0f       	add	r30, r30
     6ea:	ff 1f       	adc	r31, r31
     6ec:	ec 5d       	subi	r30, 0xDC	; 220
     6ee:	fe 4f       	sbci	r31, 0xFE	; 254
     6f0:	80 81       	ld	r24, Z
     6f2:	91 81       	ldd	r25, Z+1	; 0x01
     6f4:	80 32       	cpi	r24, 0x20	; 32
     6f6:	23 e0       	ldi	r18, 0x03	; 3
     6f8:	92 07       	cpc	r25, r18
     6fa:	7c f0       	brlt	.+30     	; 0x71a <__stack+0x2bb>
                    strcpy(string_to_print, "VDRY ");
     6fc:	86 e0       	ldi	r24, 0x06	; 6
     6fe:	ee e7       	ldi	r30, 0x7E	; 126
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	af ea       	ldi	r26, 0xAF	; 175
     704:	b2 e0       	ldi	r27, 0x02	; 2
     706:	01 90       	ld	r0, Z+
     708:	0d 92       	st	X+, r0
     70a:	8a 95       	dec	r24
     70c:	e1 f7       	brne	.-8      	; 0x706 <__stack+0x2a7>
                    dry[k]=1;
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	f8 01       	movw	r30, r16
     712:	e6 5d       	subi	r30, 0xD6	; 214
     714:	fe 4f       	sbci	r31, 0xFE	; 254
     716:	80 83       	st	Z, r24
     718:	23 c0       	rjmp	.+70     	; 0x760 <__stack+0x301>
                }
                else if(moist_avgs[k]>=600){
     71a:	88 35       	cpi	r24, 0x58	; 88
     71c:	22 e0       	ldi	r18, 0x02	; 2
     71e:	92 07       	cpc	r25, r18
     720:	7c f0       	brlt	.+30     	; 0x740 <__stack+0x2e1>
                    dry[k]=1;
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	f8 01       	movw	r30, r16
     726:	e6 5d       	subi	r30, 0xD6	; 214
     728:	fe 4f       	sbci	r31, 0xFE	; 254
     72a:	80 83       	st	Z, r24
                    strcpy(string_to_print, "DRY ");
     72c:	85 e0       	ldi	r24, 0x05	; 5
     72e:	ef e7       	ldi	r30, 0x7F	; 127
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	af ea       	ldi	r26, 0xAF	; 175
     734:	b2 e0       	ldi	r27, 0x02	; 2
     736:	01 90       	ld	r0, Z+
     738:	0d 92       	st	X+, r0
     73a:	8a 95       	dec	r24
     73c:	e1 f7       	brne	.-8      	; 0x736 <__stack+0x2d7>
     73e:	10 c0       	rjmp	.+32     	; 0x760 <__stack+0x301>
                }
                else if(moist_avgs[k]>=370) {
     740:	82 37       	cpi	r24, 0x72	; 114
     742:	91 40       	sbci	r25, 0x01	; 1
     744:	84 f0       	brlt	.+32     	; 0x766 <__stack+0x307>
                    dry[k]=0;
     746:	f8 01       	movw	r30, r16
     748:	e6 5d       	subi	r30, 0xD6	; 214
     74a:	fe 4f       	sbci	r31, 0xFE	; 254
     74c:	10 82       	st	Z, r1
                    strcpy(string_to_print, "HUM ");
     74e:	85 e0       	ldi	r24, 0x05	; 5
     750:	e5 e8       	ldi	r30, 0x85	; 133
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	af ea       	ldi	r26, 0xAF	; 175
     756:	b2 e0       	ldi	r27, 0x02	; 2
     758:	01 90       	ld	r0, Z+
     75a:	0d 92       	st	X+, r0
     75c:	8a 95       	dec	r24
     75e:	e1 f7       	brne	.-8      	; 0x758 <__stack+0x2f9>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);

                for(int m=0; m<strlen(string_to_print); ++m)
     760:	c0 e0       	ldi	r28, 0x00	; 0
     762:	d0 e0       	ldi	r29, 0x00	; 0
     764:	15 c0       	rjmp	.+42     	; 0x790 <__stack+0x331>
                else if(moist_avgs[k]>=370) {
                    dry[k]=0;
                    strcpy(string_to_print, "HUM ");
                }
                else{
                    dry[k]=0;
     766:	f8 01       	movw	r30, r16
     768:	e6 5d       	subi	r30, 0xD6	; 214
     76a:	fe 4f       	sbci	r31, 0xFE	; 254
     76c:	10 82       	st	Z, r1
                    strcpy(string_to_print, "VHUM ");
     76e:	86 e0       	ldi	r24, 0x06	; 6
     770:	e4 e8       	ldi	r30, 0x84	; 132
     772:	f0 e0       	ldi	r31, 0x00	; 0
     774:	af ea       	ldi	r26, 0xAF	; 175
     776:	b2 e0       	ldi	r27, 0x02	; 2
     778:	01 90       	ld	r0, Z+
     77a:	0d 92       	st	X+, r0
     77c:	8a 95       	dec	r24
     77e:	e1 f7       	brne	.-8      	; 0x778 <__stack+0x319>
     780:	ef cf       	rjmp	.-34     	; 0x760 <__stack+0x301>
                }

                for(int m=0; m<strlen(string_to_print); ++m)
                    print(string_to_print[m]);
     782:	fe 01       	movw	r30, r28
     784:	e1 55       	subi	r30, 0x51	; 81
     786:	fd 4f       	sbci	r31, 0xFD	; 253
     788:	80 81       	ld	r24, Z
     78a:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <print>
                else{
                    dry[k]=0;
                    strcpy(string_to_print, "VHUM ");
                }

                for(int m=0; m<strlen(string_to_print); ++m)
     78e:	21 96       	adiw	r28, 0x01	; 1
     790:	ef ea       	ldi	r30, 0xAF	; 175
     792:	f2 e0       	ldi	r31, 0x02	; 2
     794:	01 90       	ld	r0, Z+
     796:	00 20       	and	r0, r0
     798:	e9 f7       	brne	.-6      	; 0x794 <__stack+0x335>
     79a:	31 97       	sbiw	r30, 0x01	; 1
     79c:	ef 5a       	subi	r30, 0xAF	; 175
     79e:	f2 40       	sbci	r31, 0x02	; 2
     7a0:	ce 17       	cp	r28, r30
     7a2:	df 07       	cpc	r29, r31
     7a4:	70 f3       	brcs	.-36     	; 0x782 <__stack+0x323>
                    print(string_to_print[m]);
                
                if(dry[k])
     7a6:	f8 01       	movw	r30, r16
     7a8:	e6 5d       	subi	r30, 0xD6	; 214
     7aa:	fe 4f       	sbci	r31, 0xFE	; 254
     7ac:	80 81       	ld	r24, Z
     7ae:	88 23       	and	r24, r24
     7b0:	11 f0       	breq	.+4      	; 0x7b6 <__stack+0x357>
                    watering_pot = watering_pot | leds;
     7b2:	ce 28       	or	r12, r14
     7b4:	df 28       	or	r13, r15
                leds = leds << 1;
     7b6:	ee 0c       	add	r14, r14
     7b8:	ff 1c       	adc	r15, r15
        }
        if(!failed) {
            lcd_clear();
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     7ba:	0f 5f       	subi	r16, 0xFF	; 255
     7bc:	1f 4f       	sbci	r17, 0xFF	; 255
     7be:	10 16       	cp	r1, r16
     7c0:	11 06       	cpc	r1, r17
     7c2:	0c f0       	brlt	.+2      	; 0x7c6 <__stack+0x367>
     7c4:	58 cf       	rjmp	.-336    	; 0x676 <__stack+0x217>
                
                if(dry[k])
                    watering_pot = watering_pot | leds;
                leds = leds << 1;
            }
            PORTB = watering_pot;
     7c6:	c8 ba       	out	0x18, r12	; 24
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <__stack+0x36f>
        }
    }
    else
        first=false;
     7ca:	10 92 2f 03 	sts	0x032F, r1	; 0x80032f <first>
    lcd_clear();
     7ce:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_clear>
    TCNT1 = 3036;
     7d2:	8c ed       	ldi	r24, 0xDC	; 220
     7d4:	9b e0       	ldi	r25, 0x0B	; 11
     7d6:	9d bd       	out	0x2d, r25	; 45
     7d8:	8c bd       	out	0x2c, r24	; 44
}
     7da:	ff 91       	pop	r31
     7dc:	ef 91       	pop	r30
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	bf 91       	pop	r27
     7e4:	af 91       	pop	r26
     7e6:	9f 91       	pop	r25
     7e8:	8f 91       	pop	r24
     7ea:	7f 91       	pop	r23
     7ec:	6f 91       	pop	r22
     7ee:	5f 91       	pop	r21
     7f0:	4f 91       	pop	r20
     7f2:	3f 91       	pop	r19
     7f4:	2f 91       	pop	r18
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	df 90       	pop	r13
     800:	cf 90       	pop	r12
     802:	0f 90       	pop	r0
     804:	0f be       	out	0x3f, r0	; 63
     806:	0f 90       	pop	r0
     808:	1f 90       	pop	r1
     80a:	18 95       	reti

0000080c <main>:


int main() {
	first = true;
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	80 93 2f 03 	sts	0x032F, r24	; 0x80032f <first>
    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable

    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
     812:	83 e3       	ldi	r24, 0x33	; 51
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <usart_init>
	usart_transmit('\n');
     81a:	8a e0       	ldi	r24, 0x0A	; 10
     81c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <usart_transmit>
	
    for(int i=0; i<middle_boards; ++i) { //initialize_values
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	1e c0       	rjmp	.+60     	; 0x862 <main+0x56>
        moist_avgs[i]=0;
     826:	9c 01       	movw	r18, r24
     828:	22 0f       	add	r18, r18
     82a:	33 1f       	adc	r19, r19
     82c:	f9 01       	movw	r30, r18
     82e:	ec 5d       	subi	r30, 0xDC	; 220
     830:	fe 4f       	sbci	r31, 0xFE	; 254
     832:	11 82       	std	Z+1, r1	; 0x01
     834:	10 82       	st	Z, r1
        tmp_avgs[i]=0.0;
     836:	fc 01       	movw	r30, r24
     838:	ee 0f       	add	r30, r30
     83a:	ff 1f       	adc	r31, r31
     83c:	ee 0f       	add	r30, r30
     83e:	ff 1f       	adc	r31, r31
     840:	e5 55       	subi	r30, 0x55	; 85
     842:	fd 4f       	sbci	r31, 0xFD	; 253
     844:	10 82       	st	Z, r1
     846:	11 82       	std	Z+1, r1	; 0x01
     848:	12 82       	std	Z+2, r1	; 0x02
     84a:	13 82       	std	Z+3, r1	; 0x03
        moist_vars[i]=0;
     84c:	f9 01       	movw	r30, r18
     84e:	e8 5d       	subi	r30, 0xD8	; 216
     850:	fe 4f       	sbci	r31, 0xFE	; 254
     852:	11 82       	std	Z+1, r1	; 0x01
     854:	10 82       	st	Z, r1
        tmp_vars[i]=0;
     856:	f9 01       	movw	r30, r18
     858:	ea 5d       	subi	r30, 0xDA	; 218
     85a:	fe 4f       	sbci	r31, 0xFE	; 254
     85c:	11 82       	std	Z+1, r1	; 0x01
     85e:	10 82       	st	Z, r1
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
	usart_transmit('\n');
	
    for(int i=0; i<middle_boards; ++i) { //initialize_values
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	18 16       	cp	r1, r24
     864:	19 06       	cpc	r1, r25
     866:	fc f6       	brge	.-66     	; 0x826 <main+0x1a>
        tmp_avgs[i]=0.0;
        moist_vars[i]=0;
        tmp_vars[i]=0;
    }

    strcpy(string_to_send, "ESP:restart\n");
     868:	8d e0       	ldi	r24, 0x0D	; 13
     86a:	ea e8       	ldi	r30, 0x8A	; 138
     86c:	f0 e0       	ldi	r31, 0x00	; 0
     86e:	ab e2       	ldi	r26, 0x2B	; 43
     870:	b1 e0       	ldi	r27, 0x01	; 1
     872:	01 90       	ld	r0, Z+
     874:	0d 92       	st	X+, r0
     876:	8a 95       	dec	r24
     878:	e1 f7       	brne	.-8      	; 0x872 <main+0x66>
    sendCommand(string_to_send);
     87a:	8b e2       	ldi	r24, 0x2B	; 43
     87c:	91 e0       	ldi	r25, 0x01	; 1
     87e:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
	
	usart_receive(); //wait until restart is complete
     882:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
	while(UCSRA&(1<<RXC))
     886:	02 c0       	rjmp	.+4      	; 0x88c <main+0x80>
	usart_receive();
     888:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>

    strcpy(string_to_send, "ESP:restart\n");
    sendCommand(string_to_send);
	
	usart_receive(); //wait until restart is complete
	while(UCSRA&(1<<RXC))
     88c:	5f 99       	sbic	0x0b, 7	; 11
     88e:	fc cf       	rjmp	.-8      	; 0x888 <main+0x7c>
	usart_receive();
	
	strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     890:	87 e1       	ldi	r24, 0x17	; 23
     892:	e7 e9       	ldi	r30, 0x97	; 151
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	ab e2       	ldi	r26, 0x2B	; 43
     898:	b1 e0       	ldi	r27, 0x01	; 1
     89a:	01 90       	ld	r0, Z+
     89c:	0d 92       	st	X+, r0
     89e:	8a 95       	dec	r24
     8a0:	e1 f7       	brne	.-8      	; 0x89a <main+0x8e>
	sendCommand(string_to_send);
     8a2:	8b e2       	ldi	r24, 0x2B	; 43
     8a4:	91 e0       	ldi	r25, 0x01	; 1
     8a6:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
    sendCommand(string_to_send);

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
    sendCommand(string_to_send);*/

    strcpy(string_to_send, "ESP:addSensor:\"Moist_avg\"\n");
     8aa:	8b e1       	ldi	r24, 0x1B	; 27
     8ac:	ee ea       	ldi	r30, 0xAE	; 174
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	ab e2       	ldi	r26, 0x2B	; 43
     8b2:	b1 e0       	ldi	r27, 0x01	; 1
     8b4:	01 90       	ld	r0, Z+
     8b6:	0d 92       	st	X+, r0
     8b8:	8a 95       	dec	r24
     8ba:	e1 f7       	brne	.-8      	; 0x8b4 <main+0xa8>
    sendCommand(string_to_send);
     8bc:	8b e2       	ldi	r24, 0x2B	; 43
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_avg\"\n");
     8c4:	89 e1       	ldi	r24, 0x19	; 25
     8c6:	e9 ec       	ldi	r30, 0xC9	; 201
     8c8:	f0 e0       	ldi	r31, 0x00	; 0
     8ca:	ab e2       	ldi	r26, 0x2B	; 43
     8cc:	b1 e0       	ldi	r27, 0x01	; 1
     8ce:	01 90       	ld	r0, Z+
     8d0:	0d 92       	st	X+, r0
     8d2:	8a 95       	dec	r24
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <main+0xc2>
    sendCommand(string_to_send);
     8d6:	8b e2       	ldi	r24, 0x2B	; 43
     8d8:	91 e0       	ldi	r25, 0x01	; 1
     8da:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_var\"\n");
     8de:	8b e1       	ldi	r24, 0x1B	; 27
     8e0:	e2 ee       	ldi	r30, 0xE2	; 226
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	ab e2       	ldi	r26, 0x2B	; 43
     8e6:	b1 e0       	ldi	r27, 0x01	; 1
     8e8:	01 90       	ld	r0, Z+
     8ea:	0d 92       	st	X+, r0
     8ec:	8a 95       	dec	r24
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <main+0xdc>
    sendCommand(string_to_send);
     8f0:	8b e2       	ldi	r24, 0x2B	; 43
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_var\"\n");
     8f8:	89 e1       	ldi	r24, 0x19	; 25
     8fa:	ed ef       	ldi	r30, 0xFD	; 253
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	ab e2       	ldi	r26, 0x2B	; 43
     900:	b1 e0       	ldi	r27, 0x01	; 1
     902:	01 90       	ld	r0, Z+
     904:	0d 92       	st	X+, r0
     906:	8a 95       	dec	r24
     908:	e1 f7       	brne	.-8      	; 0x902 <main+0xf6>
    sendCommand(string_to_send);
     90a:	8b e2       	ldi	r24, 0x2B	; 43
     90c:	91 e0       	ldi	r25, 0x01	; 1
     90e:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
	
	strcpy(string_to_send, "ESP:APStart\n");
     912:	8d e0       	ldi	r24, 0x0D	; 13
     914:	e6 e1       	ldi	r30, 0x16	; 22
     916:	f1 e0       	ldi	r31, 0x01	; 1
     918:	ab e2       	ldi	r26, 0x2B	; 43
     91a:	b1 e0       	ldi	r27, 0x01	; 1
     91c:	01 90       	ld	r0, Z+
     91e:	0d 92       	st	X+, r0
     920:	8a 95       	dec	r24
     922:	e1 f7       	brne	.-8      	; 0x91c <main+0x110>
	sendCommand(string_to_send);
     924:	8b e2       	ldi	r24, 0x2B	; 43
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    TCCR1B = 0x05; //CK/1024
     92c:	85 e0       	ldi	r24, 0x05	; 5
     92e:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8 seconds
     930:	8c ed       	ldi	r24, 0xDC	; 220
     932:	9b e0       	ldi	r25, 0x0B	; 11
     934:	9d bd       	out	0x2d, r25	; 45
     936:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     938:	84 e0       	ldi	r24, 0x04	; 4
     93a:	89 bf       	out	0x39, r24	; 57
    sei();
     93c:	78 94       	sei
     93e:	ff cf       	rjmp	.-2      	; 0x93e <main+0x132>

00000940 <vfprintf>:
     940:	a0 e1       	ldi	r26, 0x10	; 16
     942:	b0 e0       	ldi	r27, 0x00	; 0
     944:	e6 ea       	ldi	r30, 0xA6	; 166
     946:	f4 e0       	ldi	r31, 0x04	; 4
     948:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__prologue_saves__>
     94c:	7c 01       	movw	r14, r24
     94e:	1b 01       	movw	r2, r22
     950:	6a 01       	movw	r12, r20
     952:	fc 01       	movw	r30, r24
     954:	17 82       	std	Z+7, r1	; 0x07
     956:	16 82       	std	Z+6, r1	; 0x06
     958:	83 81       	ldd	r24, Z+3	; 0x03
     95a:	81 ff       	sbrs	r24, 1
     95c:	44 c3       	rjmp	.+1672   	; 0xfe6 <vfprintf+0x6a6>
     95e:	9e 01       	movw	r18, r28
     960:	2f 5f       	subi	r18, 0xFF	; 255
     962:	3f 4f       	sbci	r19, 0xFF	; 255
     964:	39 01       	movw	r6, r18
     966:	f7 01       	movw	r30, r14
     968:	93 81       	ldd	r25, Z+3	; 0x03
     96a:	f1 01       	movw	r30, r2
     96c:	93 fd       	sbrc	r25, 3
     96e:	85 91       	lpm	r24, Z+
     970:	93 ff       	sbrs	r25, 3
     972:	81 91       	ld	r24, Z+
     974:	1f 01       	movw	r2, r30
     976:	88 23       	and	r24, r24
     978:	09 f4       	brne	.+2      	; 0x97c <vfprintf+0x3c>
     97a:	31 c3       	rjmp	.+1634   	; 0xfde <vfprintf+0x69e>
     97c:	85 32       	cpi	r24, 0x25	; 37
     97e:	39 f4       	brne	.+14     	; 0x98e <vfprintf+0x4e>
     980:	93 fd       	sbrc	r25, 3
     982:	85 91       	lpm	r24, Z+
     984:	93 ff       	sbrs	r25, 3
     986:	81 91       	ld	r24, Z+
     988:	1f 01       	movw	r2, r30
     98a:	85 32       	cpi	r24, 0x25	; 37
     98c:	39 f4       	brne	.+14     	; 0x99c <vfprintf+0x5c>
     98e:	b7 01       	movw	r22, r14
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     996:	56 01       	movw	r10, r12
     998:	65 01       	movw	r12, r10
     99a:	e5 cf       	rjmp	.-54     	; 0x966 <vfprintf+0x26>
     99c:	10 e0       	ldi	r17, 0x00	; 0
     99e:	51 2c       	mov	r5, r1
     9a0:	91 2c       	mov	r9, r1
     9a2:	ff e1       	ldi	r31, 0x1F	; 31
     9a4:	f9 15       	cp	r31, r9
     9a6:	d8 f0       	brcs	.+54     	; 0x9de <vfprintf+0x9e>
     9a8:	8b 32       	cpi	r24, 0x2B	; 43
     9aa:	79 f0       	breq	.+30     	; 0x9ca <vfprintf+0x8a>
     9ac:	38 f4       	brcc	.+14     	; 0x9bc <vfprintf+0x7c>
     9ae:	80 32       	cpi	r24, 0x20	; 32
     9b0:	79 f0       	breq	.+30     	; 0x9d0 <vfprintf+0x90>
     9b2:	83 32       	cpi	r24, 0x23	; 35
     9b4:	a1 f4       	brne	.+40     	; 0x9de <vfprintf+0x9e>
     9b6:	f9 2d       	mov	r31, r9
     9b8:	f0 61       	ori	r31, 0x10	; 16
     9ba:	2e c0       	rjmp	.+92     	; 0xa18 <vfprintf+0xd8>
     9bc:	8d 32       	cpi	r24, 0x2D	; 45
     9be:	61 f0       	breq	.+24     	; 0x9d8 <vfprintf+0x98>
     9c0:	80 33       	cpi	r24, 0x30	; 48
     9c2:	69 f4       	brne	.+26     	; 0x9de <vfprintf+0x9e>
     9c4:	29 2d       	mov	r18, r9
     9c6:	21 60       	ori	r18, 0x01	; 1
     9c8:	2d c0       	rjmp	.+90     	; 0xa24 <vfprintf+0xe4>
     9ca:	39 2d       	mov	r19, r9
     9cc:	32 60       	ori	r19, 0x02	; 2
     9ce:	93 2e       	mov	r9, r19
     9d0:	89 2d       	mov	r24, r9
     9d2:	84 60       	ori	r24, 0x04	; 4
     9d4:	98 2e       	mov	r9, r24
     9d6:	2a c0       	rjmp	.+84     	; 0xa2c <vfprintf+0xec>
     9d8:	e9 2d       	mov	r30, r9
     9da:	e8 60       	ori	r30, 0x08	; 8
     9dc:	15 c0       	rjmp	.+42     	; 0xa08 <vfprintf+0xc8>
     9de:	97 fc       	sbrc	r9, 7
     9e0:	2d c0       	rjmp	.+90     	; 0xa3c <vfprintf+0xfc>
     9e2:	20 ed       	ldi	r18, 0xD0	; 208
     9e4:	28 0f       	add	r18, r24
     9e6:	2a 30       	cpi	r18, 0x0A	; 10
     9e8:	88 f4       	brcc	.+34     	; 0xa0c <vfprintf+0xcc>
     9ea:	96 fe       	sbrs	r9, 6
     9ec:	06 c0       	rjmp	.+12     	; 0x9fa <vfprintf+0xba>
     9ee:	3a e0       	ldi	r19, 0x0A	; 10
     9f0:	13 9f       	mul	r17, r19
     9f2:	20 0d       	add	r18, r0
     9f4:	11 24       	eor	r1, r1
     9f6:	12 2f       	mov	r17, r18
     9f8:	19 c0       	rjmp	.+50     	; 0xa2c <vfprintf+0xec>
     9fa:	8a e0       	ldi	r24, 0x0A	; 10
     9fc:	58 9e       	mul	r5, r24
     9fe:	20 0d       	add	r18, r0
     a00:	11 24       	eor	r1, r1
     a02:	52 2e       	mov	r5, r18
     a04:	e9 2d       	mov	r30, r9
     a06:	e0 62       	ori	r30, 0x20	; 32
     a08:	9e 2e       	mov	r9, r30
     a0a:	10 c0       	rjmp	.+32     	; 0xa2c <vfprintf+0xec>
     a0c:	8e 32       	cpi	r24, 0x2E	; 46
     a0e:	31 f4       	brne	.+12     	; 0xa1c <vfprintf+0xdc>
     a10:	96 fc       	sbrc	r9, 6
     a12:	e5 c2       	rjmp	.+1482   	; 0xfde <vfprintf+0x69e>
     a14:	f9 2d       	mov	r31, r9
     a16:	f0 64       	ori	r31, 0x40	; 64
     a18:	9f 2e       	mov	r9, r31
     a1a:	08 c0       	rjmp	.+16     	; 0xa2c <vfprintf+0xec>
     a1c:	8c 36       	cpi	r24, 0x6C	; 108
     a1e:	21 f4       	brne	.+8      	; 0xa28 <vfprintf+0xe8>
     a20:	29 2d       	mov	r18, r9
     a22:	20 68       	ori	r18, 0x80	; 128
     a24:	92 2e       	mov	r9, r18
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <vfprintf+0xec>
     a28:	88 36       	cpi	r24, 0x68	; 104
     a2a:	41 f4       	brne	.+16     	; 0xa3c <vfprintf+0xfc>
     a2c:	f1 01       	movw	r30, r2
     a2e:	93 fd       	sbrc	r25, 3
     a30:	85 91       	lpm	r24, Z+
     a32:	93 ff       	sbrs	r25, 3
     a34:	81 91       	ld	r24, Z+
     a36:	1f 01       	movw	r2, r30
     a38:	81 11       	cpse	r24, r1
     a3a:	b3 cf       	rjmp	.-154    	; 0x9a2 <vfprintf+0x62>
     a3c:	9b eb       	ldi	r25, 0xBB	; 187
     a3e:	98 0f       	add	r25, r24
     a40:	93 30       	cpi	r25, 0x03	; 3
     a42:	20 f4       	brcc	.+8      	; 0xa4c <vfprintf+0x10c>
     a44:	99 2d       	mov	r25, r9
     a46:	90 61       	ori	r25, 0x10	; 16
     a48:	80 5e       	subi	r24, 0xE0	; 224
     a4a:	07 c0       	rjmp	.+14     	; 0xa5a <vfprintf+0x11a>
     a4c:	9b e9       	ldi	r25, 0x9B	; 155
     a4e:	98 0f       	add	r25, r24
     a50:	93 30       	cpi	r25, 0x03	; 3
     a52:	08 f0       	brcs	.+2      	; 0xa56 <vfprintf+0x116>
     a54:	66 c1       	rjmp	.+716    	; 0xd22 <vfprintf+0x3e2>
     a56:	99 2d       	mov	r25, r9
     a58:	9f 7e       	andi	r25, 0xEF	; 239
     a5a:	96 ff       	sbrs	r25, 6
     a5c:	16 e0       	ldi	r17, 0x06	; 6
     a5e:	9f 73       	andi	r25, 0x3F	; 63
     a60:	99 2e       	mov	r9, r25
     a62:	85 36       	cpi	r24, 0x65	; 101
     a64:	19 f4       	brne	.+6      	; 0xa6c <vfprintf+0x12c>
     a66:	90 64       	ori	r25, 0x40	; 64
     a68:	99 2e       	mov	r9, r25
     a6a:	08 c0       	rjmp	.+16     	; 0xa7c <vfprintf+0x13c>
     a6c:	86 36       	cpi	r24, 0x66	; 102
     a6e:	21 f4       	brne	.+8      	; 0xa78 <vfprintf+0x138>
     a70:	39 2f       	mov	r19, r25
     a72:	30 68       	ori	r19, 0x80	; 128
     a74:	93 2e       	mov	r9, r19
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <vfprintf+0x13c>
     a78:	11 11       	cpse	r17, r1
     a7a:	11 50       	subi	r17, 0x01	; 1
     a7c:	97 fe       	sbrs	r9, 7
     a7e:	07 c0       	rjmp	.+14     	; 0xa8e <vfprintf+0x14e>
     a80:	1c 33       	cpi	r17, 0x3C	; 60
     a82:	50 f4       	brcc	.+20     	; 0xa98 <vfprintf+0x158>
     a84:	44 24       	eor	r4, r4
     a86:	43 94       	inc	r4
     a88:	41 0e       	add	r4, r17
     a8a:	27 e0       	ldi	r18, 0x07	; 7
     a8c:	0b c0       	rjmp	.+22     	; 0xaa4 <vfprintf+0x164>
     a8e:	18 30       	cpi	r17, 0x08	; 8
     a90:	38 f0       	brcs	.+14     	; 0xaa0 <vfprintf+0x160>
     a92:	27 e0       	ldi	r18, 0x07	; 7
     a94:	17 e0       	ldi	r17, 0x07	; 7
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <vfprintf+0x162>
     a98:	27 e0       	ldi	r18, 0x07	; 7
     a9a:	9c e3       	ldi	r25, 0x3C	; 60
     a9c:	49 2e       	mov	r4, r25
     a9e:	02 c0       	rjmp	.+4      	; 0xaa4 <vfprintf+0x164>
     aa0:	21 2f       	mov	r18, r17
     aa2:	41 2c       	mov	r4, r1
     aa4:	56 01       	movw	r10, r12
     aa6:	84 e0       	ldi	r24, 0x04	; 4
     aa8:	a8 0e       	add	r10, r24
     aaa:	b1 1c       	adc	r11, r1
     aac:	f6 01       	movw	r30, r12
     aae:	60 81       	ld	r22, Z
     ab0:	71 81       	ldd	r23, Z+1	; 0x01
     ab2:	82 81       	ldd	r24, Z+2	; 0x02
     ab4:	93 81       	ldd	r25, Z+3	; 0x03
     ab6:	04 2d       	mov	r16, r4
     ab8:	a3 01       	movw	r20, r6
     aba:	0e 94 76 08 	call	0x10ec	; 0x10ec <__ftoa_engine>
     abe:	6c 01       	movw	r12, r24
     ac0:	f9 81       	ldd	r31, Y+1	; 0x01
     ac2:	fc 87       	std	Y+12, r31	; 0x0c
     ac4:	f0 ff       	sbrs	r31, 0
     ac6:	02 c0       	rjmp	.+4      	; 0xacc <vfprintf+0x18c>
     ac8:	f3 ff       	sbrs	r31, 3
     aca:	06 c0       	rjmp	.+12     	; 0xad8 <vfprintf+0x198>
     acc:	91 fc       	sbrc	r9, 1
     ace:	06 c0       	rjmp	.+12     	; 0xadc <vfprintf+0x19c>
     ad0:	92 fe       	sbrs	r9, 2
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <vfprintf+0x1a0>
     ad4:	00 e2       	ldi	r16, 0x20	; 32
     ad6:	05 c0       	rjmp	.+10     	; 0xae2 <vfprintf+0x1a2>
     ad8:	0d e2       	ldi	r16, 0x2D	; 45
     ada:	03 c0       	rjmp	.+6      	; 0xae2 <vfprintf+0x1a2>
     adc:	0b e2       	ldi	r16, 0x2B	; 43
     ade:	01 c0       	rjmp	.+2      	; 0xae2 <vfprintf+0x1a2>
     ae0:	00 e0       	ldi	r16, 0x00	; 0
     ae2:	8c 85       	ldd	r24, Y+12	; 0x0c
     ae4:	8c 70       	andi	r24, 0x0C	; 12
     ae6:	19 f0       	breq	.+6      	; 0xaee <vfprintf+0x1ae>
     ae8:	01 11       	cpse	r16, r1
     aea:	5a c2       	rjmp	.+1204   	; 0xfa0 <vfprintf+0x660>
     aec:	9b c2       	rjmp	.+1334   	; 0x1024 <vfprintf+0x6e4>
     aee:	97 fe       	sbrs	r9, 7
     af0:	10 c0       	rjmp	.+32     	; 0xb12 <vfprintf+0x1d2>
     af2:	4c 0c       	add	r4, r12
     af4:	fc 85       	ldd	r31, Y+12	; 0x0c
     af6:	f4 ff       	sbrs	r31, 4
     af8:	04 c0       	rjmp	.+8      	; 0xb02 <vfprintf+0x1c2>
     afa:	8a 81       	ldd	r24, Y+2	; 0x02
     afc:	81 33       	cpi	r24, 0x31	; 49
     afe:	09 f4       	brne	.+2      	; 0xb02 <vfprintf+0x1c2>
     b00:	4a 94       	dec	r4
     b02:	14 14       	cp	r1, r4
     b04:	74 f5       	brge	.+92     	; 0xb62 <vfprintf+0x222>
     b06:	28 e0       	ldi	r18, 0x08	; 8
     b08:	24 15       	cp	r18, r4
     b0a:	78 f5       	brcc	.+94     	; 0xb6a <vfprintf+0x22a>
     b0c:	88 e0       	ldi	r24, 0x08	; 8
     b0e:	48 2e       	mov	r4, r24
     b10:	2c c0       	rjmp	.+88     	; 0xb6a <vfprintf+0x22a>
     b12:	96 fc       	sbrc	r9, 6
     b14:	2a c0       	rjmp	.+84     	; 0xb6a <vfprintf+0x22a>
     b16:	81 2f       	mov	r24, r17
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	8c 15       	cp	r24, r12
     b1c:	9d 05       	cpc	r25, r13
     b1e:	9c f0       	brlt	.+38     	; 0xb46 <vfprintf+0x206>
     b20:	3c ef       	ldi	r19, 0xFC	; 252
     b22:	c3 16       	cp	r12, r19
     b24:	3f ef       	ldi	r19, 0xFF	; 255
     b26:	d3 06       	cpc	r13, r19
     b28:	74 f0       	brlt	.+28     	; 0xb46 <vfprintf+0x206>
     b2a:	89 2d       	mov	r24, r9
     b2c:	80 68       	ori	r24, 0x80	; 128
     b2e:	98 2e       	mov	r9, r24
     b30:	0a c0       	rjmp	.+20     	; 0xb46 <vfprintf+0x206>
     b32:	e2 e0       	ldi	r30, 0x02	; 2
     b34:	f0 e0       	ldi	r31, 0x00	; 0
     b36:	ec 0f       	add	r30, r28
     b38:	fd 1f       	adc	r31, r29
     b3a:	e1 0f       	add	r30, r17
     b3c:	f1 1d       	adc	r31, r1
     b3e:	80 81       	ld	r24, Z
     b40:	80 33       	cpi	r24, 0x30	; 48
     b42:	19 f4       	brne	.+6      	; 0xb4a <vfprintf+0x20a>
     b44:	11 50       	subi	r17, 0x01	; 1
     b46:	11 11       	cpse	r17, r1
     b48:	f4 cf       	rjmp	.-24     	; 0xb32 <vfprintf+0x1f2>
     b4a:	97 fe       	sbrs	r9, 7
     b4c:	0e c0       	rjmp	.+28     	; 0xb6a <vfprintf+0x22a>
     b4e:	44 24       	eor	r4, r4
     b50:	43 94       	inc	r4
     b52:	41 0e       	add	r4, r17
     b54:	81 2f       	mov	r24, r17
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	c8 16       	cp	r12, r24
     b5a:	d9 06       	cpc	r13, r25
     b5c:	2c f4       	brge	.+10     	; 0xb68 <vfprintf+0x228>
     b5e:	1c 19       	sub	r17, r12
     b60:	04 c0       	rjmp	.+8      	; 0xb6a <vfprintf+0x22a>
     b62:	44 24       	eor	r4, r4
     b64:	43 94       	inc	r4
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <vfprintf+0x22a>
     b68:	10 e0       	ldi	r17, 0x00	; 0
     b6a:	97 fe       	sbrs	r9, 7
     b6c:	06 c0       	rjmp	.+12     	; 0xb7a <vfprintf+0x23a>
     b6e:	1c 14       	cp	r1, r12
     b70:	1d 04       	cpc	r1, r13
     b72:	34 f4       	brge	.+12     	; 0xb80 <vfprintf+0x240>
     b74:	c6 01       	movw	r24, r12
     b76:	01 96       	adiw	r24, 0x01	; 1
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <vfprintf+0x244>
     b7a:	85 e0       	ldi	r24, 0x05	; 5
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <vfprintf+0x244>
     b80:	81 e0       	ldi	r24, 0x01	; 1
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	01 11       	cpse	r16, r1
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	11 23       	and	r17, r17
     b8a:	31 f0       	breq	.+12     	; 0xb98 <vfprintf+0x258>
     b8c:	21 2f       	mov	r18, r17
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	2f 5f       	subi	r18, 0xFF	; 255
     b92:	3f 4f       	sbci	r19, 0xFF	; 255
     b94:	82 0f       	add	r24, r18
     b96:	93 1f       	adc	r25, r19
     b98:	25 2d       	mov	r18, r5
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	82 17       	cp	r24, r18
     b9e:	93 07       	cpc	r25, r19
     ba0:	14 f4       	brge	.+4      	; 0xba6 <vfprintf+0x266>
     ba2:	58 1a       	sub	r5, r24
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <vfprintf+0x268>
     ba6:	51 2c       	mov	r5, r1
     ba8:	89 2d       	mov	r24, r9
     baa:	89 70       	andi	r24, 0x09	; 9
     bac:	49 f4       	brne	.+18     	; 0xbc0 <vfprintf+0x280>
     bae:	55 20       	and	r5, r5
     bb0:	39 f0       	breq	.+14     	; 0xbc0 <vfprintf+0x280>
     bb2:	b7 01       	movw	r22, r14
     bb4:	80 e2       	ldi	r24, 0x20	; 32
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     bbc:	5a 94       	dec	r5
     bbe:	f7 cf       	rjmp	.-18     	; 0xbae <vfprintf+0x26e>
     bc0:	00 23       	and	r16, r16
     bc2:	29 f0       	breq	.+10     	; 0xbce <vfprintf+0x28e>
     bc4:	b7 01       	movw	r22, r14
     bc6:	80 2f       	mov	r24, r16
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     bce:	93 fc       	sbrc	r9, 3
     bd0:	09 c0       	rjmp	.+18     	; 0xbe4 <vfprintf+0x2a4>
     bd2:	55 20       	and	r5, r5
     bd4:	39 f0       	breq	.+14     	; 0xbe4 <vfprintf+0x2a4>
     bd6:	b7 01       	movw	r22, r14
     bd8:	80 e3       	ldi	r24, 0x30	; 48
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     be0:	5a 94       	dec	r5
     be2:	f7 cf       	rjmp	.-18     	; 0xbd2 <vfprintf+0x292>
     be4:	97 fe       	sbrs	r9, 7
     be6:	4c c0       	rjmp	.+152    	; 0xc80 <vfprintf+0x340>
     be8:	46 01       	movw	r8, r12
     bea:	d7 fe       	sbrs	r13, 7
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0x2b2>
     bee:	81 2c       	mov	r8, r1
     bf0:	91 2c       	mov	r9, r1
     bf2:	c6 01       	movw	r24, r12
     bf4:	88 19       	sub	r24, r8
     bf6:	99 09       	sbc	r25, r9
     bf8:	f3 01       	movw	r30, r6
     bfa:	e8 0f       	add	r30, r24
     bfc:	f9 1f       	adc	r31, r25
     bfe:	fe 87       	std	Y+14, r31	; 0x0e
     c00:	ed 87       	std	Y+13, r30	; 0x0d
     c02:	96 01       	movw	r18, r12
     c04:	24 19       	sub	r18, r4
     c06:	31 09       	sbc	r19, r1
     c08:	38 8b       	std	Y+16, r19	; 0x10
     c0a:	2f 87       	std	Y+15, r18	; 0x0f
     c0c:	01 2f       	mov	r16, r17
     c0e:	10 e0       	ldi	r17, 0x00	; 0
     c10:	11 95       	neg	r17
     c12:	01 95       	neg	r16
     c14:	11 09       	sbc	r17, r1
     c16:	3f ef       	ldi	r19, 0xFF	; 255
     c18:	83 16       	cp	r8, r19
     c1a:	93 06       	cpc	r9, r19
     c1c:	29 f4       	brne	.+10     	; 0xc28 <vfprintf+0x2e8>
     c1e:	b7 01       	movw	r22, r14
     c20:	8e e2       	ldi	r24, 0x2E	; 46
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     c28:	c8 14       	cp	r12, r8
     c2a:	d9 04       	cpc	r13, r9
     c2c:	4c f0       	brlt	.+18     	; 0xc40 <vfprintf+0x300>
     c2e:	8f 85       	ldd	r24, Y+15	; 0x0f
     c30:	98 89       	ldd	r25, Y+16	; 0x10
     c32:	88 15       	cp	r24, r8
     c34:	99 05       	cpc	r25, r9
     c36:	24 f4       	brge	.+8      	; 0xc40 <vfprintf+0x300>
     c38:	ed 85       	ldd	r30, Y+13	; 0x0d
     c3a:	fe 85       	ldd	r31, Y+14	; 0x0e
     c3c:	81 81       	ldd	r24, Z+1	; 0x01
     c3e:	01 c0       	rjmp	.+2      	; 0xc42 <vfprintf+0x302>
     c40:	80 e3       	ldi	r24, 0x30	; 48
     c42:	f1 e0       	ldi	r31, 0x01	; 1
     c44:	8f 1a       	sub	r8, r31
     c46:	91 08       	sbc	r9, r1
     c48:	2d 85       	ldd	r18, Y+13	; 0x0d
     c4a:	3e 85       	ldd	r19, Y+14	; 0x0e
     c4c:	2f 5f       	subi	r18, 0xFF	; 255
     c4e:	3f 4f       	sbci	r19, 0xFF	; 255
     c50:	3e 87       	std	Y+14, r19	; 0x0e
     c52:	2d 87       	std	Y+13, r18	; 0x0d
     c54:	80 16       	cp	r8, r16
     c56:	91 06       	cpc	r9, r17
     c58:	2c f0       	brlt	.+10     	; 0xc64 <vfprintf+0x324>
     c5a:	b7 01       	movw	r22, r14
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     c62:	d9 cf       	rjmp	.-78     	; 0xc16 <vfprintf+0x2d6>
     c64:	c8 14       	cp	r12, r8
     c66:	d9 04       	cpc	r13, r9
     c68:	41 f4       	brne	.+16     	; 0xc7a <vfprintf+0x33a>
     c6a:	9a 81       	ldd	r25, Y+2	; 0x02
     c6c:	96 33       	cpi	r25, 0x36	; 54
     c6e:	20 f4       	brcc	.+8      	; 0xc78 <vfprintf+0x338>
     c70:	95 33       	cpi	r25, 0x35	; 53
     c72:	19 f4       	brne	.+6      	; 0xc7a <vfprintf+0x33a>
     c74:	3c 85       	ldd	r19, Y+12	; 0x0c
     c76:	34 ff       	sbrs	r19, 4
     c78:	81 e3       	ldi	r24, 0x31	; 49
     c7a:	b7 01       	movw	r22, r14
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	4e c0       	rjmp	.+156    	; 0xd1c <vfprintf+0x3dc>
     c80:	8a 81       	ldd	r24, Y+2	; 0x02
     c82:	81 33       	cpi	r24, 0x31	; 49
     c84:	19 f0       	breq	.+6      	; 0xc8c <vfprintf+0x34c>
     c86:	9c 85       	ldd	r25, Y+12	; 0x0c
     c88:	9f 7e       	andi	r25, 0xEF	; 239
     c8a:	9c 87       	std	Y+12, r25	; 0x0c
     c8c:	b7 01       	movw	r22, r14
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     c94:	11 11       	cpse	r17, r1
     c96:	05 c0       	rjmp	.+10     	; 0xca2 <vfprintf+0x362>
     c98:	94 fc       	sbrc	r9, 4
     c9a:	18 c0       	rjmp	.+48     	; 0xccc <vfprintf+0x38c>
     c9c:	85 e6       	ldi	r24, 0x65	; 101
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	17 c0       	rjmp	.+46     	; 0xcd0 <vfprintf+0x390>
     ca2:	b7 01       	movw	r22, r14
     ca4:	8e e2       	ldi	r24, 0x2E	; 46
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     cac:	1e 5f       	subi	r17, 0xFE	; 254
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	01 e0       	ldi	r16, 0x01	; 1
     cb2:	08 0f       	add	r16, r24
     cb4:	f3 01       	movw	r30, r6
     cb6:	e8 0f       	add	r30, r24
     cb8:	f1 1d       	adc	r31, r1
     cba:	80 81       	ld	r24, Z
     cbc:	b7 01       	movw	r22, r14
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     cc4:	80 2f       	mov	r24, r16
     cc6:	01 13       	cpse	r16, r17
     cc8:	f3 cf       	rjmp	.-26     	; 0xcb0 <vfprintf+0x370>
     cca:	e6 cf       	rjmp	.-52     	; 0xc98 <vfprintf+0x358>
     ccc:	85 e4       	ldi	r24, 0x45	; 69
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	b7 01       	movw	r22, r14
     cd2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     cd6:	d7 fc       	sbrc	r13, 7
     cd8:	06 c0       	rjmp	.+12     	; 0xce6 <vfprintf+0x3a6>
     cda:	c1 14       	cp	r12, r1
     cdc:	d1 04       	cpc	r13, r1
     cde:	41 f4       	brne	.+16     	; 0xcf0 <vfprintf+0x3b0>
     ce0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ce2:	e4 ff       	sbrs	r30, 4
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <vfprintf+0x3b0>
     ce6:	d1 94       	neg	r13
     ce8:	c1 94       	neg	r12
     cea:	d1 08       	sbc	r13, r1
     cec:	8d e2       	ldi	r24, 0x2D	; 45
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <vfprintf+0x3b2>
     cf0:	8b e2       	ldi	r24, 0x2B	; 43
     cf2:	b7 01       	movw	r22, r14
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     cfa:	80 e3       	ldi	r24, 0x30	; 48
     cfc:	2a e0       	ldi	r18, 0x0A	; 10
     cfe:	c2 16       	cp	r12, r18
     d00:	d1 04       	cpc	r13, r1
     d02:	2c f0       	brlt	.+10     	; 0xd0e <vfprintf+0x3ce>
     d04:	8f 5f       	subi	r24, 0xFF	; 255
     d06:	fa e0       	ldi	r31, 0x0A	; 10
     d08:	cf 1a       	sub	r12, r31
     d0a:	d1 08       	sbc	r13, r1
     d0c:	f7 cf       	rjmp	.-18     	; 0xcfc <vfprintf+0x3bc>
     d0e:	b7 01       	movw	r22, r14
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     d16:	b7 01       	movw	r22, r14
     d18:	c6 01       	movw	r24, r12
     d1a:	c0 96       	adiw	r24, 0x30	; 48
     d1c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     d20:	54 c1       	rjmp	.+680    	; 0xfca <vfprintf+0x68a>
     d22:	83 36       	cpi	r24, 0x63	; 99
     d24:	31 f0       	breq	.+12     	; 0xd32 <vfprintf+0x3f2>
     d26:	83 37       	cpi	r24, 0x73	; 115
     d28:	79 f0       	breq	.+30     	; 0xd48 <vfprintf+0x408>
     d2a:	83 35       	cpi	r24, 0x53	; 83
     d2c:	09 f0       	breq	.+2      	; 0xd30 <vfprintf+0x3f0>
     d2e:	56 c0       	rjmp	.+172    	; 0xddc <vfprintf+0x49c>
     d30:	20 c0       	rjmp	.+64     	; 0xd72 <vfprintf+0x432>
     d32:	56 01       	movw	r10, r12
     d34:	32 e0       	ldi	r19, 0x02	; 2
     d36:	a3 0e       	add	r10, r19
     d38:	b1 1c       	adc	r11, r1
     d3a:	f6 01       	movw	r30, r12
     d3c:	80 81       	ld	r24, Z
     d3e:	89 83       	std	Y+1, r24	; 0x01
     d40:	01 e0       	ldi	r16, 0x01	; 1
     d42:	10 e0       	ldi	r17, 0x00	; 0
     d44:	63 01       	movw	r12, r6
     d46:	12 c0       	rjmp	.+36     	; 0xd6c <vfprintf+0x42c>
     d48:	56 01       	movw	r10, r12
     d4a:	f2 e0       	ldi	r31, 0x02	; 2
     d4c:	af 0e       	add	r10, r31
     d4e:	b1 1c       	adc	r11, r1
     d50:	f6 01       	movw	r30, r12
     d52:	c0 80       	ld	r12, Z
     d54:	d1 80       	ldd	r13, Z+1	; 0x01
     d56:	96 fe       	sbrs	r9, 6
     d58:	03 c0       	rjmp	.+6      	; 0xd60 <vfprintf+0x420>
     d5a:	61 2f       	mov	r22, r17
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x424>
     d60:	6f ef       	ldi	r22, 0xFF	; 255
     d62:	7f ef       	ldi	r23, 0xFF	; 255
     d64:	c6 01       	movw	r24, r12
     d66:	0e 94 59 09 	call	0x12b2	; 0x12b2 <strnlen>
     d6a:	8c 01       	movw	r16, r24
     d6c:	f9 2d       	mov	r31, r9
     d6e:	ff 77       	andi	r31, 0x7F	; 127
     d70:	14 c0       	rjmp	.+40     	; 0xd9a <vfprintf+0x45a>
     d72:	56 01       	movw	r10, r12
     d74:	22 e0       	ldi	r18, 0x02	; 2
     d76:	a2 0e       	add	r10, r18
     d78:	b1 1c       	adc	r11, r1
     d7a:	f6 01       	movw	r30, r12
     d7c:	c0 80       	ld	r12, Z
     d7e:	d1 80       	ldd	r13, Z+1	; 0x01
     d80:	96 fe       	sbrs	r9, 6
     d82:	03 c0       	rjmp	.+6      	; 0xd8a <vfprintf+0x44a>
     d84:	61 2f       	mov	r22, r17
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <vfprintf+0x44e>
     d8a:	6f ef       	ldi	r22, 0xFF	; 255
     d8c:	7f ef       	ldi	r23, 0xFF	; 255
     d8e:	c6 01       	movw	r24, r12
     d90:	0e 94 4e 09 	call	0x129c	; 0x129c <strnlen_P>
     d94:	8c 01       	movw	r16, r24
     d96:	f9 2d       	mov	r31, r9
     d98:	f0 68       	ori	r31, 0x80	; 128
     d9a:	9f 2e       	mov	r9, r31
     d9c:	f3 fd       	sbrc	r31, 3
     d9e:	1a c0       	rjmp	.+52     	; 0xdd4 <vfprintf+0x494>
     da0:	85 2d       	mov	r24, r5
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	08 17       	cp	r16, r24
     da6:	19 07       	cpc	r17, r25
     da8:	a8 f4       	brcc	.+42     	; 0xdd4 <vfprintf+0x494>
     daa:	b7 01       	movw	r22, r14
     dac:	80 e2       	ldi	r24, 0x20	; 32
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     db4:	5a 94       	dec	r5
     db6:	f4 cf       	rjmp	.-24     	; 0xda0 <vfprintf+0x460>
     db8:	f6 01       	movw	r30, r12
     dba:	97 fc       	sbrc	r9, 7
     dbc:	85 91       	lpm	r24, Z+
     dbe:	97 fe       	sbrs	r9, 7
     dc0:	81 91       	ld	r24, Z+
     dc2:	6f 01       	movw	r12, r30
     dc4:	b7 01       	movw	r22, r14
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     dcc:	51 10       	cpse	r5, r1
     dce:	5a 94       	dec	r5
     dd0:	01 50       	subi	r16, 0x01	; 1
     dd2:	11 09       	sbc	r17, r1
     dd4:	01 15       	cp	r16, r1
     dd6:	11 05       	cpc	r17, r1
     dd8:	79 f7       	brne	.-34     	; 0xdb8 <vfprintf+0x478>
     dda:	f7 c0       	rjmp	.+494    	; 0xfca <vfprintf+0x68a>
     ddc:	84 36       	cpi	r24, 0x64	; 100
     dde:	11 f0       	breq	.+4      	; 0xde4 <vfprintf+0x4a4>
     de0:	89 36       	cpi	r24, 0x69	; 105
     de2:	61 f5       	brne	.+88     	; 0xe3c <vfprintf+0x4fc>
     de4:	56 01       	movw	r10, r12
     de6:	97 fe       	sbrs	r9, 7
     de8:	09 c0       	rjmp	.+18     	; 0xdfc <vfprintf+0x4bc>
     dea:	24 e0       	ldi	r18, 0x04	; 4
     dec:	a2 0e       	add	r10, r18
     dee:	b1 1c       	adc	r11, r1
     df0:	f6 01       	movw	r30, r12
     df2:	60 81       	ld	r22, Z
     df4:	71 81       	ldd	r23, Z+1	; 0x01
     df6:	82 81       	ldd	r24, Z+2	; 0x02
     df8:	93 81       	ldd	r25, Z+3	; 0x03
     dfa:	0a c0       	rjmp	.+20     	; 0xe10 <vfprintf+0x4d0>
     dfc:	f2 e0       	ldi	r31, 0x02	; 2
     dfe:	af 0e       	add	r10, r31
     e00:	b1 1c       	adc	r11, r1
     e02:	f6 01       	movw	r30, r12
     e04:	60 81       	ld	r22, Z
     e06:	71 81       	ldd	r23, Z+1	; 0x01
     e08:	07 2e       	mov	r0, r23
     e0a:	00 0c       	add	r0, r0
     e0c:	88 0b       	sbc	r24, r24
     e0e:	99 0b       	sbc	r25, r25
     e10:	f9 2d       	mov	r31, r9
     e12:	ff 76       	andi	r31, 0x6F	; 111
     e14:	9f 2e       	mov	r9, r31
     e16:	97 ff       	sbrs	r25, 7
     e18:	09 c0       	rjmp	.+18     	; 0xe2c <vfprintf+0x4ec>
     e1a:	90 95       	com	r25
     e1c:	80 95       	com	r24
     e1e:	70 95       	com	r23
     e20:	61 95       	neg	r22
     e22:	7f 4f       	sbci	r23, 0xFF	; 255
     e24:	8f 4f       	sbci	r24, 0xFF	; 255
     e26:	9f 4f       	sbci	r25, 0xFF	; 255
     e28:	f0 68       	ori	r31, 0x80	; 128
     e2a:	9f 2e       	mov	r9, r31
     e2c:	2a e0       	ldi	r18, 0x0A	; 10
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	a3 01       	movw	r20, r6
     e32:	0e 94 ca 09 	call	0x1394	; 0x1394 <__ultoa_invert>
     e36:	c8 2e       	mov	r12, r24
     e38:	c6 18       	sub	r12, r6
     e3a:	3f c0       	rjmp	.+126    	; 0xeba <vfprintf+0x57a>
     e3c:	09 2d       	mov	r16, r9
     e3e:	85 37       	cpi	r24, 0x75	; 117
     e40:	21 f4       	brne	.+8      	; 0xe4a <vfprintf+0x50a>
     e42:	0f 7e       	andi	r16, 0xEF	; 239
     e44:	2a e0       	ldi	r18, 0x0A	; 10
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	1d c0       	rjmp	.+58     	; 0xe84 <vfprintf+0x544>
     e4a:	09 7f       	andi	r16, 0xF9	; 249
     e4c:	8f 36       	cpi	r24, 0x6F	; 111
     e4e:	91 f0       	breq	.+36     	; 0xe74 <vfprintf+0x534>
     e50:	18 f4       	brcc	.+6      	; 0xe58 <vfprintf+0x518>
     e52:	88 35       	cpi	r24, 0x58	; 88
     e54:	59 f0       	breq	.+22     	; 0xe6c <vfprintf+0x52c>
     e56:	c3 c0       	rjmp	.+390    	; 0xfde <vfprintf+0x69e>
     e58:	80 37       	cpi	r24, 0x70	; 112
     e5a:	19 f0       	breq	.+6      	; 0xe62 <vfprintf+0x522>
     e5c:	88 37       	cpi	r24, 0x78	; 120
     e5e:	11 f0       	breq	.+4      	; 0xe64 <vfprintf+0x524>
     e60:	be c0       	rjmp	.+380    	; 0xfde <vfprintf+0x69e>
     e62:	00 61       	ori	r16, 0x10	; 16
     e64:	04 ff       	sbrs	r16, 4
     e66:	09 c0       	rjmp	.+18     	; 0xe7a <vfprintf+0x53a>
     e68:	04 60       	ori	r16, 0x04	; 4
     e6a:	07 c0       	rjmp	.+14     	; 0xe7a <vfprintf+0x53a>
     e6c:	94 fe       	sbrs	r9, 4
     e6e:	08 c0       	rjmp	.+16     	; 0xe80 <vfprintf+0x540>
     e70:	06 60       	ori	r16, 0x06	; 6
     e72:	06 c0       	rjmp	.+12     	; 0xe80 <vfprintf+0x540>
     e74:	28 e0       	ldi	r18, 0x08	; 8
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	05 c0       	rjmp	.+10     	; 0xe84 <vfprintf+0x544>
     e7a:	20 e1       	ldi	r18, 0x10	; 16
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <vfprintf+0x544>
     e80:	20 e1       	ldi	r18, 0x10	; 16
     e82:	32 e0       	ldi	r19, 0x02	; 2
     e84:	56 01       	movw	r10, r12
     e86:	07 ff       	sbrs	r16, 7
     e88:	09 c0       	rjmp	.+18     	; 0xe9c <vfprintf+0x55c>
     e8a:	84 e0       	ldi	r24, 0x04	; 4
     e8c:	a8 0e       	add	r10, r24
     e8e:	b1 1c       	adc	r11, r1
     e90:	f6 01       	movw	r30, r12
     e92:	60 81       	ld	r22, Z
     e94:	71 81       	ldd	r23, Z+1	; 0x01
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	93 81       	ldd	r25, Z+3	; 0x03
     e9a:	08 c0       	rjmp	.+16     	; 0xeac <vfprintf+0x56c>
     e9c:	f2 e0       	ldi	r31, 0x02	; 2
     e9e:	af 0e       	add	r10, r31
     ea0:	b1 1c       	adc	r11, r1
     ea2:	f6 01       	movw	r30, r12
     ea4:	60 81       	ld	r22, Z
     ea6:	71 81       	ldd	r23, Z+1	; 0x01
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	a3 01       	movw	r20, r6
     eae:	0e 94 ca 09 	call	0x1394	; 0x1394 <__ultoa_invert>
     eb2:	c8 2e       	mov	r12, r24
     eb4:	c6 18       	sub	r12, r6
     eb6:	0f 77       	andi	r16, 0x7F	; 127
     eb8:	90 2e       	mov	r9, r16
     eba:	96 fe       	sbrs	r9, 6
     ebc:	0b c0       	rjmp	.+22     	; 0xed4 <vfprintf+0x594>
     ebe:	09 2d       	mov	r16, r9
     ec0:	0e 7f       	andi	r16, 0xFE	; 254
     ec2:	c1 16       	cp	r12, r17
     ec4:	50 f4       	brcc	.+20     	; 0xeda <vfprintf+0x59a>
     ec6:	94 fe       	sbrs	r9, 4
     ec8:	0a c0       	rjmp	.+20     	; 0xede <vfprintf+0x59e>
     eca:	92 fc       	sbrc	r9, 2
     ecc:	08 c0       	rjmp	.+16     	; 0xede <vfprintf+0x59e>
     ece:	09 2d       	mov	r16, r9
     ed0:	0e 7e       	andi	r16, 0xEE	; 238
     ed2:	05 c0       	rjmp	.+10     	; 0xede <vfprintf+0x59e>
     ed4:	dc 2c       	mov	r13, r12
     ed6:	09 2d       	mov	r16, r9
     ed8:	03 c0       	rjmp	.+6      	; 0xee0 <vfprintf+0x5a0>
     eda:	dc 2c       	mov	r13, r12
     edc:	01 c0       	rjmp	.+2      	; 0xee0 <vfprintf+0x5a0>
     ede:	d1 2e       	mov	r13, r17
     ee0:	04 ff       	sbrs	r16, 4
     ee2:	0d c0       	rjmp	.+26     	; 0xefe <vfprintf+0x5be>
     ee4:	fe 01       	movw	r30, r28
     ee6:	ec 0d       	add	r30, r12
     ee8:	f1 1d       	adc	r31, r1
     eea:	80 81       	ld	r24, Z
     eec:	80 33       	cpi	r24, 0x30	; 48
     eee:	11 f4       	brne	.+4      	; 0xef4 <vfprintf+0x5b4>
     ef0:	09 7e       	andi	r16, 0xE9	; 233
     ef2:	09 c0       	rjmp	.+18     	; 0xf06 <vfprintf+0x5c6>
     ef4:	02 ff       	sbrs	r16, 2
     ef6:	06 c0       	rjmp	.+12     	; 0xf04 <vfprintf+0x5c4>
     ef8:	d3 94       	inc	r13
     efa:	d3 94       	inc	r13
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <vfprintf+0x5c6>
     efe:	80 2f       	mov	r24, r16
     f00:	86 78       	andi	r24, 0x86	; 134
     f02:	09 f0       	breq	.+2      	; 0xf06 <vfprintf+0x5c6>
     f04:	d3 94       	inc	r13
     f06:	03 fd       	sbrc	r16, 3
     f08:	11 c0       	rjmp	.+34     	; 0xf2c <vfprintf+0x5ec>
     f0a:	00 ff       	sbrs	r16, 0
     f0c:	06 c0       	rjmp	.+12     	; 0xf1a <vfprintf+0x5da>
     f0e:	1c 2d       	mov	r17, r12
     f10:	d5 14       	cp	r13, r5
     f12:	80 f4       	brcc	.+32     	; 0xf34 <vfprintf+0x5f4>
     f14:	15 0d       	add	r17, r5
     f16:	1d 19       	sub	r17, r13
     f18:	0d c0       	rjmp	.+26     	; 0xf34 <vfprintf+0x5f4>
     f1a:	d5 14       	cp	r13, r5
     f1c:	58 f4       	brcc	.+22     	; 0xf34 <vfprintf+0x5f4>
     f1e:	b7 01       	movw	r22, r14
     f20:	80 e2       	ldi	r24, 0x20	; 32
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     f28:	d3 94       	inc	r13
     f2a:	f7 cf       	rjmp	.-18     	; 0xf1a <vfprintf+0x5da>
     f2c:	d5 14       	cp	r13, r5
     f2e:	10 f4       	brcc	.+4      	; 0xf34 <vfprintf+0x5f4>
     f30:	5d 18       	sub	r5, r13
     f32:	01 c0       	rjmp	.+2      	; 0xf36 <vfprintf+0x5f6>
     f34:	51 2c       	mov	r5, r1
     f36:	04 ff       	sbrs	r16, 4
     f38:	10 c0       	rjmp	.+32     	; 0xf5a <vfprintf+0x61a>
     f3a:	b7 01       	movw	r22, r14
     f3c:	80 e3       	ldi	r24, 0x30	; 48
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     f44:	02 ff       	sbrs	r16, 2
     f46:	17 c0       	rjmp	.+46     	; 0xf76 <vfprintf+0x636>
     f48:	01 fd       	sbrc	r16, 1
     f4a:	03 c0       	rjmp	.+6      	; 0xf52 <vfprintf+0x612>
     f4c:	88 e7       	ldi	r24, 0x78	; 120
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <vfprintf+0x616>
     f52:	88 e5       	ldi	r24, 0x58	; 88
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	b7 01       	movw	r22, r14
     f58:	0c c0       	rjmp	.+24     	; 0xf72 <vfprintf+0x632>
     f5a:	80 2f       	mov	r24, r16
     f5c:	86 78       	andi	r24, 0x86	; 134
     f5e:	59 f0       	breq	.+22     	; 0xf76 <vfprintf+0x636>
     f60:	01 ff       	sbrs	r16, 1
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x628>
     f64:	8b e2       	ldi	r24, 0x2B	; 43
     f66:	01 c0       	rjmp	.+2      	; 0xf6a <vfprintf+0x62a>
     f68:	80 e2       	ldi	r24, 0x20	; 32
     f6a:	07 fd       	sbrc	r16, 7
     f6c:	8d e2       	ldi	r24, 0x2D	; 45
     f6e:	b7 01       	movw	r22, r14
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     f76:	c1 16       	cp	r12, r17
     f78:	38 f4       	brcc	.+14     	; 0xf88 <vfprintf+0x648>
     f7a:	b7 01       	movw	r22, r14
     f7c:	80 e3       	ldi	r24, 0x30	; 48
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     f84:	11 50       	subi	r17, 0x01	; 1
     f86:	f7 cf       	rjmp	.-18     	; 0xf76 <vfprintf+0x636>
     f88:	ca 94       	dec	r12
     f8a:	f3 01       	movw	r30, r6
     f8c:	ec 0d       	add	r30, r12
     f8e:	f1 1d       	adc	r31, r1
     f90:	80 81       	ld	r24, Z
     f92:	b7 01       	movw	r22, r14
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     f9a:	c1 10       	cpse	r12, r1
     f9c:	f5 cf       	rjmp	.-22     	; 0xf88 <vfprintf+0x648>
     f9e:	15 c0       	rjmp	.+42     	; 0xfca <vfprintf+0x68a>
     fa0:	f4 e0       	ldi	r31, 0x04	; 4
     fa2:	f5 15       	cp	r31, r5
     fa4:	60 f5       	brcc	.+88     	; 0xffe <vfprintf+0x6be>
     fa6:	84 e0       	ldi	r24, 0x04	; 4
     fa8:	58 1a       	sub	r5, r24
     faa:	93 fe       	sbrs	r9, 3
     fac:	1f c0       	rjmp	.+62     	; 0xfec <vfprintf+0x6ac>
     fae:	01 11       	cpse	r16, r1
     fb0:	27 c0       	rjmp	.+78     	; 0x1000 <vfprintf+0x6c0>
     fb2:	2c 85       	ldd	r18, Y+12	; 0x0c
     fb4:	23 ff       	sbrs	r18, 3
     fb6:	2a c0       	rjmp	.+84     	; 0x100c <vfprintf+0x6cc>
     fb8:	04 e5       	ldi	r16, 0x54	; 84
     fba:	10 e0       	ldi	r17, 0x00	; 0
     fbc:	39 2d       	mov	r19, r9
     fbe:	30 71       	andi	r19, 0x10	; 16
     fc0:	93 2e       	mov	r9, r19
     fc2:	f8 01       	movw	r30, r16
     fc4:	84 91       	lpm	r24, Z
     fc6:	81 11       	cpse	r24, r1
     fc8:	24 c0       	rjmp	.+72     	; 0x1012 <vfprintf+0x6d2>
     fca:	55 20       	and	r5, r5
     fcc:	09 f4       	brne	.+2      	; 0xfd0 <vfprintf+0x690>
     fce:	e4 cc       	rjmp	.-1592   	; 0x998 <vfprintf+0x58>
     fd0:	b7 01       	movw	r22, r14
     fd2:	80 e2       	ldi	r24, 0x20	; 32
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     fda:	5a 94       	dec	r5
     fdc:	f6 cf       	rjmp	.-20     	; 0xfca <vfprintf+0x68a>
     fde:	f7 01       	movw	r30, r14
     fe0:	86 81       	ldd	r24, Z+6	; 0x06
     fe2:	97 81       	ldd	r25, Z+7	; 0x07
     fe4:	26 c0       	rjmp	.+76     	; 0x1032 <vfprintf+0x6f2>
     fe6:	8f ef       	ldi	r24, 0xFF	; 255
     fe8:	9f ef       	ldi	r25, 0xFF	; 255
     fea:	23 c0       	rjmp	.+70     	; 0x1032 <vfprintf+0x6f2>
     fec:	b7 01       	movw	r22, r14
     fee:	80 e2       	ldi	r24, 0x20	; 32
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
     ff6:	5a 94       	dec	r5
     ff8:	51 10       	cpse	r5, r1
     ffa:	f8 cf       	rjmp	.-16     	; 0xfec <vfprintf+0x6ac>
     ffc:	d8 cf       	rjmp	.-80     	; 0xfae <vfprintf+0x66e>
     ffe:	51 2c       	mov	r5, r1
    1000:	b7 01       	movw	r22, r14
    1002:	80 2f       	mov	r24, r16
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
    100a:	d3 cf       	rjmp	.-90     	; 0xfb2 <vfprintf+0x672>
    100c:	08 e5       	ldi	r16, 0x58	; 88
    100e:	10 e0       	ldi	r17, 0x00	; 0
    1010:	d5 cf       	rjmp	.-86     	; 0xfbc <vfprintf+0x67c>
    1012:	91 10       	cpse	r9, r1
    1014:	80 52       	subi	r24, 0x20	; 32
    1016:	b7 01       	movw	r22, r14
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <fputc>
    101e:	0f 5f       	subi	r16, 0xFF	; 255
    1020:	1f 4f       	sbci	r17, 0xFF	; 255
    1022:	cf cf       	rjmp	.-98     	; 0xfc2 <vfprintf+0x682>
    1024:	23 e0       	ldi	r18, 0x03	; 3
    1026:	25 15       	cp	r18, r5
    1028:	10 f4       	brcc	.+4      	; 0x102e <vfprintf+0x6ee>
    102a:	83 e0       	ldi	r24, 0x03	; 3
    102c:	bd cf       	rjmp	.-134    	; 0xfa8 <vfprintf+0x668>
    102e:	51 2c       	mov	r5, r1
    1030:	c0 cf       	rjmp	.-128    	; 0xfb2 <vfprintf+0x672>
    1032:	60 96       	adiw	r28, 0x10	; 16
    1034:	e2 e1       	ldi	r30, 0x12	; 18
    1036:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__epilogue_restores__>

0000103a <__prologue_saves__>:
    103a:	2f 92       	push	r2
    103c:	3f 92       	push	r3
    103e:	4f 92       	push	r4
    1040:	5f 92       	push	r5
    1042:	6f 92       	push	r6
    1044:	7f 92       	push	r7
    1046:	8f 92       	push	r8
    1048:	9f 92       	push	r9
    104a:	af 92       	push	r10
    104c:	bf 92       	push	r11
    104e:	cf 92       	push	r12
    1050:	df 92       	push	r13
    1052:	ef 92       	push	r14
    1054:	ff 92       	push	r15
    1056:	0f 93       	push	r16
    1058:	1f 93       	push	r17
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	ca 1b       	sub	r28, r26
    1064:	db 0b       	sbc	r29, r27
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	09 94       	ijmp

00001072 <__epilogue_restores__>:
    1072:	2a 88       	ldd	r2, Y+18	; 0x12
    1074:	39 88       	ldd	r3, Y+17	; 0x11
    1076:	48 88       	ldd	r4, Y+16	; 0x10
    1078:	5f 84       	ldd	r5, Y+15	; 0x0f
    107a:	6e 84       	ldd	r6, Y+14	; 0x0e
    107c:	7d 84       	ldd	r7, Y+13	; 0x0d
    107e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1080:	9b 84       	ldd	r9, Y+11	; 0x0b
    1082:	aa 84       	ldd	r10, Y+10	; 0x0a
    1084:	b9 84       	ldd	r11, Y+9	; 0x09
    1086:	c8 84       	ldd	r12, Y+8	; 0x08
    1088:	df 80       	ldd	r13, Y+7	; 0x07
    108a:	ee 80       	ldd	r14, Y+6	; 0x06
    108c:	fd 80       	ldd	r15, Y+5	; 0x05
    108e:	0c 81       	ldd	r16, Y+4	; 0x04
    1090:	1b 81       	ldd	r17, Y+3	; 0x03
    1092:	aa 81       	ldd	r26, Y+2	; 0x02
    1094:	b9 81       	ldd	r27, Y+1	; 0x01
    1096:	ce 0f       	add	r28, r30
    1098:	d1 1d       	adc	r29, r1
    109a:	0f b6       	in	r0, 0x3f	; 63
    109c:	f8 94       	cli
    109e:	de bf       	out	0x3e, r29	; 62
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	ed 01       	movw	r28, r26
    10a6:	08 95       	ret

000010a8 <atof>:
    10a8:	66 27       	eor	r22, r22
    10aa:	77 27       	eor	r23, r23
    10ac:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <strtod>

000010b0 <atoi>:
    10b0:	fc 01       	movw	r30, r24
    10b2:	88 27       	eor	r24, r24
    10b4:	99 27       	eor	r25, r25
    10b6:	e8 94       	clt
    10b8:	21 91       	ld	r18, Z+
    10ba:	20 32       	cpi	r18, 0x20	; 32
    10bc:	e9 f3       	breq	.-6      	; 0x10b8 <atoi+0x8>
    10be:	29 30       	cpi	r18, 0x09	; 9
    10c0:	10 f0       	brcs	.+4      	; 0x10c6 <atoi+0x16>
    10c2:	2e 30       	cpi	r18, 0x0E	; 14
    10c4:	c8 f3       	brcs	.-14     	; 0x10b8 <atoi+0x8>
    10c6:	2b 32       	cpi	r18, 0x2B	; 43
    10c8:	41 f0       	breq	.+16     	; 0x10da <atoi+0x2a>
    10ca:	2d 32       	cpi	r18, 0x2D	; 45
    10cc:	39 f4       	brne	.+14     	; 0x10dc <atoi+0x2c>
    10ce:	68 94       	set
    10d0:	04 c0       	rjmp	.+8      	; 0x10da <atoi+0x2a>
    10d2:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__mulhi_const_10>
    10d6:	82 0f       	add	r24, r18
    10d8:	91 1d       	adc	r25, r1
    10da:	21 91       	ld	r18, Z+
    10dc:	20 53       	subi	r18, 0x30	; 48
    10de:	2a 30       	cpi	r18, 0x0A	; 10
    10e0:	c0 f3       	brcs	.-16     	; 0x10d2 <atoi+0x22>
    10e2:	1e f4       	brtc	.+6      	; 0x10ea <atoi+0x3a>
    10e4:	90 95       	com	r25
    10e6:	81 95       	neg	r24
    10e8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ea:	08 95       	ret

000010ec <__ftoa_engine>:
    10ec:	28 30       	cpi	r18, 0x08	; 8
    10ee:	08 f0       	brcs	.+2      	; 0x10f2 <__ftoa_engine+0x6>
    10f0:	27 e0       	ldi	r18, 0x07	; 7
    10f2:	33 27       	eor	r19, r19
    10f4:	da 01       	movw	r26, r20
    10f6:	99 0f       	add	r25, r25
    10f8:	31 1d       	adc	r19, r1
    10fa:	87 fd       	sbrc	r24, 7
    10fc:	91 60       	ori	r25, 0x01	; 1
    10fe:	00 96       	adiw	r24, 0x00	; 0
    1100:	61 05       	cpc	r22, r1
    1102:	71 05       	cpc	r23, r1
    1104:	39 f4       	brne	.+14     	; 0x1114 <__ftoa_engine+0x28>
    1106:	32 60       	ori	r19, 0x02	; 2
    1108:	2e 5f       	subi	r18, 0xFE	; 254
    110a:	3d 93       	st	X+, r19
    110c:	30 e3       	ldi	r19, 0x30	; 48
    110e:	2a 95       	dec	r18
    1110:	e1 f7       	brne	.-8      	; 0x110a <__ftoa_engine+0x1e>
    1112:	08 95       	ret
    1114:	9f 3f       	cpi	r25, 0xFF	; 255
    1116:	30 f0       	brcs	.+12     	; 0x1124 <__ftoa_engine+0x38>
    1118:	80 38       	cpi	r24, 0x80	; 128
    111a:	71 05       	cpc	r23, r1
    111c:	61 05       	cpc	r22, r1
    111e:	09 f0       	breq	.+2      	; 0x1122 <__ftoa_engine+0x36>
    1120:	3c 5f       	subi	r19, 0xFC	; 252
    1122:	3c 5f       	subi	r19, 0xFC	; 252
    1124:	3d 93       	st	X+, r19
    1126:	91 30       	cpi	r25, 0x01	; 1
    1128:	08 f0       	brcs	.+2      	; 0x112c <__ftoa_engine+0x40>
    112a:	80 68       	ori	r24, 0x80	; 128
    112c:	91 1d       	adc	r25, r1
    112e:	df 93       	push	r29
    1130:	cf 93       	push	r28
    1132:	1f 93       	push	r17
    1134:	0f 93       	push	r16
    1136:	ff 92       	push	r15
    1138:	ef 92       	push	r14
    113a:	19 2f       	mov	r17, r25
    113c:	98 7f       	andi	r25, 0xF8	; 248
    113e:	96 95       	lsr	r25
    1140:	e9 2f       	mov	r30, r25
    1142:	96 95       	lsr	r25
    1144:	96 95       	lsr	r25
    1146:	e9 0f       	add	r30, r25
    1148:	ff 27       	eor	r31, r31
    114a:	ea 54       	subi	r30, 0x4A	; 74
    114c:	ff 4f       	sbci	r31, 0xFF	; 255
    114e:	99 27       	eor	r25, r25
    1150:	33 27       	eor	r19, r19
    1152:	ee 24       	eor	r14, r14
    1154:	ff 24       	eor	r15, r15
    1156:	a7 01       	movw	r20, r14
    1158:	e7 01       	movw	r28, r14
    115a:	05 90       	lpm	r0, Z+
    115c:	08 94       	sec
    115e:	07 94       	ror	r0
    1160:	28 f4       	brcc	.+10     	; 0x116c <__ftoa_engine+0x80>
    1162:	36 0f       	add	r19, r22
    1164:	e7 1e       	adc	r14, r23
    1166:	f8 1e       	adc	r15, r24
    1168:	49 1f       	adc	r20, r25
    116a:	51 1d       	adc	r21, r1
    116c:	66 0f       	add	r22, r22
    116e:	77 1f       	adc	r23, r23
    1170:	88 1f       	adc	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	06 94       	lsr	r0
    1176:	a1 f7       	brne	.-24     	; 0x1160 <__ftoa_engine+0x74>
    1178:	05 90       	lpm	r0, Z+
    117a:	07 94       	ror	r0
    117c:	28 f4       	brcc	.+10     	; 0x1188 <__ftoa_engine+0x9c>
    117e:	e7 0e       	add	r14, r23
    1180:	f8 1e       	adc	r15, r24
    1182:	49 1f       	adc	r20, r25
    1184:	56 1f       	adc	r21, r22
    1186:	c1 1d       	adc	r28, r1
    1188:	77 0f       	add	r23, r23
    118a:	88 1f       	adc	r24, r24
    118c:	99 1f       	adc	r25, r25
    118e:	66 1f       	adc	r22, r22
    1190:	06 94       	lsr	r0
    1192:	a1 f7       	brne	.-24     	; 0x117c <__ftoa_engine+0x90>
    1194:	05 90       	lpm	r0, Z+
    1196:	07 94       	ror	r0
    1198:	28 f4       	brcc	.+10     	; 0x11a4 <__ftoa_engine+0xb8>
    119a:	f8 0e       	add	r15, r24
    119c:	49 1f       	adc	r20, r25
    119e:	56 1f       	adc	r21, r22
    11a0:	c7 1f       	adc	r28, r23
    11a2:	d1 1d       	adc	r29, r1
    11a4:	88 0f       	add	r24, r24
    11a6:	99 1f       	adc	r25, r25
    11a8:	66 1f       	adc	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	06 94       	lsr	r0
    11ae:	a1 f7       	brne	.-24     	; 0x1198 <__ftoa_engine+0xac>
    11b0:	05 90       	lpm	r0, Z+
    11b2:	07 94       	ror	r0
    11b4:	20 f4       	brcc	.+8      	; 0x11be <__ftoa_engine+0xd2>
    11b6:	49 0f       	add	r20, r25
    11b8:	56 1f       	adc	r21, r22
    11ba:	c7 1f       	adc	r28, r23
    11bc:	d8 1f       	adc	r29, r24
    11be:	99 0f       	add	r25, r25
    11c0:	66 1f       	adc	r22, r22
    11c2:	77 1f       	adc	r23, r23
    11c4:	88 1f       	adc	r24, r24
    11c6:	06 94       	lsr	r0
    11c8:	a9 f7       	brne	.-22     	; 0x11b4 <__ftoa_engine+0xc8>
    11ca:	84 91       	lpm	r24, Z
    11cc:	10 95       	com	r17
    11ce:	17 70       	andi	r17, 0x07	; 7
    11d0:	41 f0       	breq	.+16     	; 0x11e2 <__ftoa_engine+0xf6>
    11d2:	d6 95       	lsr	r29
    11d4:	c7 95       	ror	r28
    11d6:	57 95       	ror	r21
    11d8:	47 95       	ror	r20
    11da:	f7 94       	ror	r15
    11dc:	e7 94       	ror	r14
    11de:	1a 95       	dec	r17
    11e0:	c1 f7       	brne	.-16     	; 0x11d2 <__ftoa_engine+0xe6>
    11e2:	ec e5       	ldi	r30, 0x5C	; 92
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	68 94       	set
    11e8:	15 90       	lpm	r1, Z+
    11ea:	15 91       	lpm	r17, Z+
    11ec:	35 91       	lpm	r19, Z+
    11ee:	65 91       	lpm	r22, Z+
    11f0:	95 91       	lpm	r25, Z+
    11f2:	05 90       	lpm	r0, Z+
    11f4:	7f e2       	ldi	r23, 0x2F	; 47
    11f6:	73 95       	inc	r23
    11f8:	e1 18       	sub	r14, r1
    11fa:	f1 0a       	sbc	r15, r17
    11fc:	43 0b       	sbc	r20, r19
    11fe:	56 0b       	sbc	r21, r22
    1200:	c9 0b       	sbc	r28, r25
    1202:	d0 09       	sbc	r29, r0
    1204:	c0 f7       	brcc	.-16     	; 0x11f6 <__ftoa_engine+0x10a>
    1206:	e1 0c       	add	r14, r1
    1208:	f1 1e       	adc	r15, r17
    120a:	43 1f       	adc	r20, r19
    120c:	56 1f       	adc	r21, r22
    120e:	c9 1f       	adc	r28, r25
    1210:	d0 1d       	adc	r29, r0
    1212:	7e f4       	brtc	.+30     	; 0x1232 <__ftoa_engine+0x146>
    1214:	70 33       	cpi	r23, 0x30	; 48
    1216:	11 f4       	brne	.+4      	; 0x121c <__ftoa_engine+0x130>
    1218:	8a 95       	dec	r24
    121a:	e6 cf       	rjmp	.-52     	; 0x11e8 <__ftoa_engine+0xfc>
    121c:	e8 94       	clt
    121e:	01 50       	subi	r16, 0x01	; 1
    1220:	30 f0       	brcs	.+12     	; 0x122e <__ftoa_engine+0x142>
    1222:	08 0f       	add	r16, r24
    1224:	0a f4       	brpl	.+2      	; 0x1228 <__ftoa_engine+0x13c>
    1226:	00 27       	eor	r16, r16
    1228:	02 17       	cp	r16, r18
    122a:	08 f4       	brcc	.+2      	; 0x122e <__ftoa_engine+0x142>
    122c:	20 2f       	mov	r18, r16
    122e:	23 95       	inc	r18
    1230:	02 2f       	mov	r16, r18
    1232:	7a 33       	cpi	r23, 0x3A	; 58
    1234:	28 f0       	brcs	.+10     	; 0x1240 <__ftoa_engine+0x154>
    1236:	79 e3       	ldi	r23, 0x39	; 57
    1238:	7d 93       	st	X+, r23
    123a:	2a 95       	dec	r18
    123c:	e9 f7       	brne	.-6      	; 0x1238 <__ftoa_engine+0x14c>
    123e:	10 c0       	rjmp	.+32     	; 0x1260 <__ftoa_engine+0x174>
    1240:	7d 93       	st	X+, r23
    1242:	2a 95       	dec	r18
    1244:	89 f6       	brne	.-94     	; 0x11e8 <__ftoa_engine+0xfc>
    1246:	06 94       	lsr	r0
    1248:	97 95       	ror	r25
    124a:	67 95       	ror	r22
    124c:	37 95       	ror	r19
    124e:	17 95       	ror	r17
    1250:	17 94       	ror	r1
    1252:	e1 18       	sub	r14, r1
    1254:	f1 0a       	sbc	r15, r17
    1256:	43 0b       	sbc	r20, r19
    1258:	56 0b       	sbc	r21, r22
    125a:	c9 0b       	sbc	r28, r25
    125c:	d0 09       	sbc	r29, r0
    125e:	98 f0       	brcs	.+38     	; 0x1286 <__ftoa_engine+0x19a>
    1260:	23 95       	inc	r18
    1262:	7e 91       	ld	r23, -X
    1264:	73 95       	inc	r23
    1266:	7a 33       	cpi	r23, 0x3A	; 58
    1268:	08 f0       	brcs	.+2      	; 0x126c <__ftoa_engine+0x180>
    126a:	70 e3       	ldi	r23, 0x30	; 48
    126c:	7c 93       	st	X, r23
    126e:	20 13       	cpse	r18, r16
    1270:	b8 f7       	brcc	.-18     	; 0x1260 <__ftoa_engine+0x174>
    1272:	7e 91       	ld	r23, -X
    1274:	70 61       	ori	r23, 0x10	; 16
    1276:	7d 93       	st	X+, r23
    1278:	30 f0       	brcs	.+12     	; 0x1286 <__ftoa_engine+0x19a>
    127a:	83 95       	inc	r24
    127c:	71 e3       	ldi	r23, 0x31	; 49
    127e:	7d 93       	st	X+, r23
    1280:	70 e3       	ldi	r23, 0x30	; 48
    1282:	2a 95       	dec	r18
    1284:	e1 f7       	brne	.-8      	; 0x127e <__ftoa_engine+0x192>
    1286:	11 24       	eor	r1, r1
    1288:	ef 90       	pop	r14
    128a:	ff 90       	pop	r15
    128c:	0f 91       	pop	r16
    128e:	1f 91       	pop	r17
    1290:	cf 91       	pop	r28
    1292:	df 91       	pop	r29
    1294:	99 27       	eor	r25, r25
    1296:	87 fd       	sbrc	r24, 7
    1298:	90 95       	com	r25
    129a:	08 95       	ret

0000129c <strnlen_P>:
    129c:	fc 01       	movw	r30, r24
    129e:	05 90       	lpm	r0, Z+
    12a0:	61 50       	subi	r22, 0x01	; 1
    12a2:	70 40       	sbci	r23, 0x00	; 0
    12a4:	01 10       	cpse	r0, r1
    12a6:	d8 f7       	brcc	.-10     	; 0x129e <strnlen_P+0x2>
    12a8:	80 95       	com	r24
    12aa:	90 95       	com	r25
    12ac:	8e 0f       	add	r24, r30
    12ae:	9f 1f       	adc	r25, r31
    12b0:	08 95       	ret

000012b2 <strnlen>:
    12b2:	fc 01       	movw	r30, r24
    12b4:	61 50       	subi	r22, 0x01	; 1
    12b6:	70 40       	sbci	r23, 0x00	; 0
    12b8:	01 90       	ld	r0, Z+
    12ba:	01 10       	cpse	r0, r1
    12bc:	d8 f7       	brcc	.-10     	; 0x12b4 <strnlen+0x2>
    12be:	80 95       	com	r24
    12c0:	90 95       	com	r25
    12c2:	8e 0f       	add	r24, r30
    12c4:	9f 1f       	adc	r25, r31
    12c6:	08 95       	ret

000012c8 <__mulhi_const_10>:
    12c8:	7a e0       	ldi	r23, 0x0A	; 10
    12ca:	97 9f       	mul	r25, r23
    12cc:	90 2d       	mov	r25, r0
    12ce:	87 9f       	mul	r24, r23
    12d0:	80 2d       	mov	r24, r0
    12d2:	91 0d       	add	r25, r1
    12d4:	11 24       	eor	r1, r1
    12d6:	08 95       	ret

000012d8 <fputc>:
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	fb 01       	movw	r30, r22
    12e2:	23 81       	ldd	r18, Z+3	; 0x03
    12e4:	21 fd       	sbrc	r18, 1
    12e6:	03 c0       	rjmp	.+6      	; 0x12ee <fputc+0x16>
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	9f ef       	ldi	r25, 0xFF	; 255
    12ec:	2c c0       	rjmp	.+88     	; 0x1346 <fputc+0x6e>
    12ee:	22 ff       	sbrs	r18, 2
    12f0:	16 c0       	rjmp	.+44     	; 0x131e <fputc+0x46>
    12f2:	46 81       	ldd	r20, Z+6	; 0x06
    12f4:	57 81       	ldd	r21, Z+7	; 0x07
    12f6:	24 81       	ldd	r18, Z+4	; 0x04
    12f8:	35 81       	ldd	r19, Z+5	; 0x05
    12fa:	42 17       	cp	r20, r18
    12fc:	53 07       	cpc	r21, r19
    12fe:	44 f4       	brge	.+16     	; 0x1310 <fputc+0x38>
    1300:	a0 81       	ld	r26, Z
    1302:	b1 81       	ldd	r27, Z+1	; 0x01
    1304:	9d 01       	movw	r18, r26
    1306:	2f 5f       	subi	r18, 0xFF	; 255
    1308:	3f 4f       	sbci	r19, 0xFF	; 255
    130a:	31 83       	std	Z+1, r19	; 0x01
    130c:	20 83       	st	Z, r18
    130e:	8c 93       	st	X, r24
    1310:	26 81       	ldd	r18, Z+6	; 0x06
    1312:	37 81       	ldd	r19, Z+7	; 0x07
    1314:	2f 5f       	subi	r18, 0xFF	; 255
    1316:	3f 4f       	sbci	r19, 0xFF	; 255
    1318:	37 83       	std	Z+7, r19	; 0x07
    131a:	26 83       	std	Z+6, r18	; 0x06
    131c:	14 c0       	rjmp	.+40     	; 0x1346 <fputc+0x6e>
    131e:	8b 01       	movw	r16, r22
    1320:	ec 01       	movw	r28, r24
    1322:	fb 01       	movw	r30, r22
    1324:	00 84       	ldd	r0, Z+8	; 0x08
    1326:	f1 85       	ldd	r31, Z+9	; 0x09
    1328:	e0 2d       	mov	r30, r0
    132a:	09 95       	icall
    132c:	89 2b       	or	r24, r25
    132e:	e1 f6       	brne	.-72     	; 0x12e8 <fputc+0x10>
    1330:	d8 01       	movw	r26, r16
    1332:	16 96       	adiw	r26, 0x06	; 6
    1334:	8d 91       	ld	r24, X+
    1336:	9c 91       	ld	r25, X
    1338:	17 97       	sbiw	r26, 0x07	; 7
    133a:	01 96       	adiw	r24, 0x01	; 1
    133c:	17 96       	adiw	r26, 0x07	; 7
    133e:	9c 93       	st	X, r25
    1340:	8e 93       	st	-X, r24
    1342:	16 97       	sbiw	r26, 0x06	; 6
    1344:	ce 01       	movw	r24, r28
    1346:	df 91       	pop	r29
    1348:	cf 91       	pop	r28
    134a:	1f 91       	pop	r17
    134c:	0f 91       	pop	r16
    134e:	08 95       	ret

00001350 <sprintf>:
    1350:	ae e0       	ldi	r26, 0x0E	; 14
    1352:	b0 e0       	ldi	r27, 0x00	; 0
    1354:	ee ea       	ldi	r30, 0xAE	; 174
    1356:	f9 e0       	ldi	r31, 0x09	; 9
    1358:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__prologue_saves__+0x1c>
    135c:	0d 89       	ldd	r16, Y+21	; 0x15
    135e:	1e 89       	ldd	r17, Y+22	; 0x16
    1360:	86 e0       	ldi	r24, 0x06	; 6
    1362:	8c 83       	std	Y+4, r24	; 0x04
    1364:	1a 83       	std	Y+2, r17	; 0x02
    1366:	09 83       	std	Y+1, r16	; 0x01
    1368:	8f ef       	ldi	r24, 0xFF	; 255
    136a:	9f e7       	ldi	r25, 0x7F	; 127
    136c:	9e 83       	std	Y+6, r25	; 0x06
    136e:	8d 83       	std	Y+5, r24	; 0x05
    1370:	ae 01       	movw	r20, r28
    1372:	47 5e       	subi	r20, 0xE7	; 231
    1374:	5f 4f       	sbci	r21, 0xFF	; 255
    1376:	6f 89       	ldd	r22, Y+23	; 0x17
    1378:	78 8d       	ldd	r23, Y+24	; 0x18
    137a:	ce 01       	movw	r24, r28
    137c:	01 96       	adiw	r24, 0x01	; 1
    137e:	0e 94 a0 04 	call	0x940	; 0x940 <vfprintf>
    1382:	ef 81       	ldd	r30, Y+7	; 0x07
    1384:	f8 85       	ldd	r31, Y+8	; 0x08
    1386:	e0 0f       	add	r30, r16
    1388:	f1 1f       	adc	r31, r17
    138a:	10 82       	st	Z, r1
    138c:	2e 96       	adiw	r28, 0x0e	; 14
    138e:	e4 e0       	ldi	r30, 0x04	; 4
    1390:	0c 94 47 08 	jmp	0x108e	; 0x108e <__epilogue_restores__+0x1c>

00001394 <__ultoa_invert>:
    1394:	fa 01       	movw	r30, r20
    1396:	aa 27       	eor	r26, r26
    1398:	28 30       	cpi	r18, 0x08	; 8
    139a:	51 f1       	breq	.+84     	; 0x13f0 <__ultoa_invert+0x5c>
    139c:	20 31       	cpi	r18, 0x10	; 16
    139e:	81 f1       	breq	.+96     	; 0x1400 <__ultoa_invert+0x6c>
    13a0:	e8 94       	clt
    13a2:	6f 93       	push	r22
    13a4:	6e 7f       	andi	r22, 0xFE	; 254
    13a6:	6e 5f       	subi	r22, 0xFE	; 254
    13a8:	7f 4f       	sbci	r23, 0xFF	; 255
    13aa:	8f 4f       	sbci	r24, 0xFF	; 255
    13ac:	9f 4f       	sbci	r25, 0xFF	; 255
    13ae:	af 4f       	sbci	r26, 0xFF	; 255
    13b0:	b1 e0       	ldi	r27, 0x01	; 1
    13b2:	3e d0       	rcall	.+124    	; 0x1430 <__ultoa_invert+0x9c>
    13b4:	b4 e0       	ldi	r27, 0x04	; 4
    13b6:	3c d0       	rcall	.+120    	; 0x1430 <__ultoa_invert+0x9c>
    13b8:	67 0f       	add	r22, r23
    13ba:	78 1f       	adc	r23, r24
    13bc:	89 1f       	adc	r24, r25
    13be:	9a 1f       	adc	r25, r26
    13c0:	a1 1d       	adc	r26, r1
    13c2:	68 0f       	add	r22, r24
    13c4:	79 1f       	adc	r23, r25
    13c6:	8a 1f       	adc	r24, r26
    13c8:	91 1d       	adc	r25, r1
    13ca:	a1 1d       	adc	r26, r1
    13cc:	6a 0f       	add	r22, r26
    13ce:	71 1d       	adc	r23, r1
    13d0:	81 1d       	adc	r24, r1
    13d2:	91 1d       	adc	r25, r1
    13d4:	a1 1d       	adc	r26, r1
    13d6:	20 d0       	rcall	.+64     	; 0x1418 <__ultoa_invert+0x84>
    13d8:	09 f4       	brne	.+2      	; 0x13dc <__ultoa_invert+0x48>
    13da:	68 94       	set
    13dc:	3f 91       	pop	r19
    13de:	2a e0       	ldi	r18, 0x0A	; 10
    13e0:	26 9f       	mul	r18, r22
    13e2:	11 24       	eor	r1, r1
    13e4:	30 19       	sub	r19, r0
    13e6:	30 5d       	subi	r19, 0xD0	; 208
    13e8:	31 93       	st	Z+, r19
    13ea:	de f6       	brtc	.-74     	; 0x13a2 <__ultoa_invert+0xe>
    13ec:	cf 01       	movw	r24, r30
    13ee:	08 95       	ret
    13f0:	46 2f       	mov	r20, r22
    13f2:	47 70       	andi	r20, 0x07	; 7
    13f4:	40 5d       	subi	r20, 0xD0	; 208
    13f6:	41 93       	st	Z+, r20
    13f8:	b3 e0       	ldi	r27, 0x03	; 3
    13fa:	0f d0       	rcall	.+30     	; 0x141a <__ultoa_invert+0x86>
    13fc:	c9 f7       	brne	.-14     	; 0x13f0 <__ultoa_invert+0x5c>
    13fe:	f6 cf       	rjmp	.-20     	; 0x13ec <__ultoa_invert+0x58>
    1400:	46 2f       	mov	r20, r22
    1402:	4f 70       	andi	r20, 0x0F	; 15
    1404:	40 5d       	subi	r20, 0xD0	; 208
    1406:	4a 33       	cpi	r20, 0x3A	; 58
    1408:	18 f0       	brcs	.+6      	; 0x1410 <__ultoa_invert+0x7c>
    140a:	49 5d       	subi	r20, 0xD9	; 217
    140c:	31 fd       	sbrc	r19, 1
    140e:	40 52       	subi	r20, 0x20	; 32
    1410:	41 93       	st	Z+, r20
    1412:	02 d0       	rcall	.+4      	; 0x1418 <__ultoa_invert+0x84>
    1414:	a9 f7       	brne	.-22     	; 0x1400 <__ultoa_invert+0x6c>
    1416:	ea cf       	rjmp	.-44     	; 0x13ec <__ultoa_invert+0x58>
    1418:	b4 e0       	ldi	r27, 0x04	; 4
    141a:	a6 95       	lsr	r26
    141c:	97 95       	ror	r25
    141e:	87 95       	ror	r24
    1420:	77 95       	ror	r23
    1422:	67 95       	ror	r22
    1424:	ba 95       	dec	r27
    1426:	c9 f7       	brne	.-14     	; 0x141a <__ultoa_invert+0x86>
    1428:	00 97       	sbiw	r24, 0x00	; 0
    142a:	61 05       	cpc	r22, r1
    142c:	71 05       	cpc	r23, r1
    142e:	08 95       	ret
    1430:	9b 01       	movw	r18, r22
    1432:	ac 01       	movw	r20, r24
    1434:	0a 2e       	mov	r0, r26
    1436:	06 94       	lsr	r0
    1438:	57 95       	ror	r21
    143a:	47 95       	ror	r20
    143c:	37 95       	ror	r19
    143e:	27 95       	ror	r18
    1440:	ba 95       	dec	r27
    1442:	c9 f7       	brne	.-14     	; 0x1436 <__ultoa_invert+0xa2>
    1444:	62 0f       	add	r22, r18
    1446:	73 1f       	adc	r23, r19
    1448:	84 1f       	adc	r24, r20
    144a:	95 1f       	adc	r25, r21
    144c:	a0 1d       	adc	r26, r0
    144e:	08 95       	ret

00001450 <strtod>:
    1450:	a0 e0       	ldi	r26, 0x00	; 0
    1452:	b0 e0       	ldi	r27, 0x00	; 0
    1454:	ee e2       	ldi	r30, 0x2E	; 46
    1456:	fa e0       	ldi	r31, 0x0A	; 10
    1458:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__prologue_saves__+0xc>
    145c:	ec 01       	movw	r28, r24
    145e:	6b 01       	movw	r12, r22
    1460:	61 15       	cp	r22, r1
    1462:	71 05       	cpc	r23, r1
    1464:	19 f0       	breq	.+6      	; 0x146c <strtod+0x1c>
    1466:	fb 01       	movw	r30, r22
    1468:	91 83       	std	Z+1, r25	; 0x01
    146a:	80 83       	st	Z, r24
    146c:	7e 01       	movw	r14, r28
    146e:	ff ef       	ldi	r31, 0xFF	; 255
    1470:	ef 1a       	sub	r14, r31
    1472:	ff 0a       	sbc	r15, r31
    1474:	08 81       	ld	r16, Y
    1476:	80 2f       	mov	r24, r16
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	0e 94 76 0b 	call	0x16ec	; 0x16ec <isspace>
    147e:	89 2b       	or	r24, r25
    1480:	11 f0       	breq	.+4      	; 0x1486 <strtod+0x36>
    1482:	e7 01       	movw	r28, r14
    1484:	f3 cf       	rjmp	.-26     	; 0x146c <strtod+0x1c>
    1486:	0d 32       	cpi	r16, 0x2D	; 45
    1488:	39 f4       	brne	.+14     	; 0x1498 <strtod+0x48>
    148a:	7e 01       	movw	r14, r28
    148c:	82 e0       	ldi	r24, 0x02	; 2
    148e:	e8 0e       	add	r14, r24
    1490:	f1 1c       	adc	r15, r1
    1492:	09 81       	ldd	r16, Y+1	; 0x01
    1494:	11 e0       	ldi	r17, 0x01	; 1
    1496:	08 c0       	rjmp	.+16     	; 0x14a8 <strtod+0x58>
    1498:	0b 32       	cpi	r16, 0x2B	; 43
    149a:	29 f4       	brne	.+10     	; 0x14a6 <strtod+0x56>
    149c:	7e 01       	movw	r14, r28
    149e:	92 e0       	ldi	r25, 0x02	; 2
    14a0:	e9 0e       	add	r14, r25
    14a2:	f1 1c       	adc	r15, r1
    14a4:	09 81       	ldd	r16, Y+1	; 0x01
    14a6:	10 e0       	ldi	r17, 0x00	; 0
    14a8:	e7 01       	movw	r28, r14
    14aa:	21 97       	sbiw	r28, 0x01	; 1
    14ac:	43 e0       	ldi	r20, 0x03	; 3
    14ae:	50 e0       	ldi	r21, 0x00	; 0
    14b0:	6e e5       	ldi	r22, 0x5E	; 94
    14b2:	71 e0       	ldi	r23, 0x01	; 1
    14b4:	ce 01       	movw	r24, r28
    14b6:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <strncasecmp_P>
    14ba:	89 2b       	or	r24, r25
    14bc:	c1 f4       	brne	.+48     	; 0x14ee <strtod+0x9e>
    14be:	23 96       	adiw	r28, 0x03	; 3
    14c0:	45 e0       	ldi	r20, 0x05	; 5
    14c2:	50 e0       	ldi	r21, 0x00	; 0
    14c4:	69 e5       	ldi	r22, 0x59	; 89
    14c6:	71 e0       	ldi	r23, 0x01	; 1
    14c8:	ce 01       	movw	r24, r28
    14ca:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <strncasecmp_P>
    14ce:	89 2b       	or	r24, r25
    14d0:	09 f4       	brne	.+2      	; 0x14d4 <strtod+0x84>
    14d2:	25 96       	adiw	r28, 0x05	; 5
    14d4:	c1 14       	cp	r12, r1
    14d6:	d1 04       	cpc	r13, r1
    14d8:	19 f0       	breq	.+6      	; 0x14e0 <strtod+0x90>
    14da:	f6 01       	movw	r30, r12
    14dc:	d1 83       	std	Z+1, r29	; 0x01
    14de:	c0 83       	st	Z, r28
    14e0:	11 11       	cpse	r17, r1
    14e2:	f6 c0       	rjmp	.+492    	; 0x16d0 <strtod+0x280>
    14e4:	60 e0       	ldi	r22, 0x00	; 0
    14e6:	70 e0       	ldi	r23, 0x00	; 0
    14e8:	80 e8       	ldi	r24, 0x80	; 128
    14ea:	9f e7       	ldi	r25, 0x7F	; 127
    14ec:	fa c0       	rjmp	.+500    	; 0x16e2 <strtod+0x292>
    14ee:	43 e0       	ldi	r20, 0x03	; 3
    14f0:	50 e0       	ldi	r21, 0x00	; 0
    14f2:	66 e5       	ldi	r22, 0x56	; 86
    14f4:	71 e0       	ldi	r23, 0x01	; 1
    14f6:	ce 01       	movw	r24, r28
    14f8:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <strncasecmp_P>
    14fc:	89 2b       	or	r24, r25
    14fe:	59 f4       	brne	.+22     	; 0x1516 <strtod+0xc6>
    1500:	c1 14       	cp	r12, r1
    1502:	d1 04       	cpc	r13, r1
    1504:	09 f4       	brne	.+2      	; 0x1508 <strtod+0xb8>
    1506:	e9 c0       	rjmp	.+466    	; 0x16da <strtod+0x28a>
    1508:	f2 e0       	ldi	r31, 0x02	; 2
    150a:	ef 0e       	add	r14, r31
    150c:	f1 1c       	adc	r15, r1
    150e:	f6 01       	movw	r30, r12
    1510:	f1 82       	std	Z+1, r15	; 0x01
    1512:	e0 82       	st	Z, r14
    1514:	e2 c0       	rjmp	.+452    	; 0x16da <strtod+0x28a>
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	a9 01       	movw	r20, r18
    151c:	c0 e0       	ldi	r28, 0x00	; 0
    151e:	d0 e0       	ldi	r29, 0x00	; 0
    1520:	f7 01       	movw	r30, r14
    1522:	80 ed       	ldi	r24, 0xD0	; 208
    1524:	a8 2e       	mov	r10, r24
    1526:	a0 0e       	add	r10, r16
    1528:	89 e0       	ldi	r24, 0x09	; 9
    152a:	8a 15       	cp	r24, r10
    152c:	30 f1       	brcs	.+76     	; 0x157a <strtod+0x12a>
    152e:	91 2f       	mov	r25, r17
    1530:	92 60       	ori	r25, 0x02	; 2
    1532:	b9 2e       	mov	r11, r25
    1534:	81 2f       	mov	r24, r17
    1536:	88 70       	andi	r24, 0x08	; 8
    1538:	12 ff       	sbrs	r17, 2
    153a:	04 c0       	rjmp	.+8      	; 0x1544 <strtod+0xf4>
    153c:	81 11       	cpse	r24, r1
    153e:	24 c0       	rjmp	.+72     	; 0x1588 <strtod+0x138>
    1540:	21 96       	adiw	r28, 0x01	; 1
    1542:	22 c0       	rjmp	.+68     	; 0x1588 <strtod+0x138>
    1544:	81 11       	cpse	r24, r1
    1546:	21 97       	sbiw	r28, 0x01	; 1
    1548:	a5 e0       	ldi	r26, 0x05	; 5
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	0e 94 be 0c 	call	0x197c	; 0x197c <__muluhisi3>
    1550:	dc 01       	movw	r26, r24
    1552:	cb 01       	movw	r24, r22
    1554:	88 0f       	add	r24, r24
    1556:	99 1f       	adc	r25, r25
    1558:	aa 1f       	adc	r26, r26
    155a:	bb 1f       	adc	r27, r27
    155c:	9c 01       	movw	r18, r24
    155e:	ad 01       	movw	r20, r26
    1560:	2a 0d       	add	r18, r10
    1562:	31 1d       	adc	r19, r1
    1564:	41 1d       	adc	r20, r1
    1566:	51 1d       	adc	r21, r1
    1568:	28 39       	cpi	r18, 0x98	; 152
    156a:	89 e9       	ldi	r24, 0x99	; 153
    156c:	38 07       	cpc	r19, r24
    156e:	48 07       	cpc	r20, r24
    1570:	89 e1       	ldi	r24, 0x19	; 25
    1572:	58 07       	cpc	r21, r24
    1574:	48 f0       	brcs	.+18     	; 0x1588 <strtod+0x138>
    1576:	16 60       	ori	r17, 0x06	; 6
    1578:	06 c0       	rjmp	.+12     	; 0x1586 <strtod+0x136>
    157a:	9e ef       	ldi	r25, 0xFE	; 254
    157c:	a9 12       	cpse	r10, r25
    157e:	0a c0       	rjmp	.+20     	; 0x1594 <strtod+0x144>
    1580:	13 fd       	sbrc	r17, 3
    1582:	40 c0       	rjmp	.+128    	; 0x1604 <strtod+0x1b4>
    1584:	18 60       	ori	r17, 0x08	; 8
    1586:	b1 2e       	mov	r11, r17
    1588:	8f ef       	ldi	r24, 0xFF	; 255
    158a:	e8 1a       	sub	r14, r24
    158c:	f8 0a       	sbc	r15, r24
    158e:	00 81       	ld	r16, Z
    1590:	1b 2d       	mov	r17, r11
    1592:	c6 cf       	rjmp	.-116    	; 0x1520 <strtod+0xd0>
    1594:	80 2f       	mov	r24, r16
    1596:	8f 7d       	andi	r24, 0xDF	; 223
    1598:	85 34       	cpi	r24, 0x45	; 69
    159a:	a1 f5       	brne	.+104    	; 0x1604 <strtod+0x1b4>
    159c:	80 81       	ld	r24, Z
    159e:	8d 32       	cpi	r24, 0x2D	; 45
    15a0:	11 f4       	brne	.+4      	; 0x15a6 <strtod+0x156>
    15a2:	10 61       	ori	r17, 0x10	; 16
    15a4:	06 c0       	rjmp	.+12     	; 0x15b2 <strtod+0x162>
    15a6:	8b 32       	cpi	r24, 0x2B	; 43
    15a8:	21 f0       	breq	.+8      	; 0x15b2 <strtod+0x162>
    15aa:	31 96       	adiw	r30, 0x01	; 1
    15ac:	61 e0       	ldi	r22, 0x01	; 1
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	04 c0       	rjmp	.+8      	; 0x15ba <strtod+0x16a>
    15b2:	81 81       	ldd	r24, Z+1	; 0x01
    15b4:	32 96       	adiw	r30, 0x02	; 2
    15b6:	62 e0       	ldi	r22, 0x02	; 2
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	80 53       	subi	r24, 0x30	; 48
    15bc:	8a 30       	cpi	r24, 0x0A	; 10
    15be:	18 f0       	brcs	.+6      	; 0x15c6 <strtod+0x176>
    15c0:	e6 1b       	sub	r30, r22
    15c2:	f7 0b       	sbc	r31, r23
    15c4:	1f c0       	rjmp	.+62     	; 0x1604 <strtod+0x1b4>
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	60 38       	cpi	r22, 0x80	; 128
    15cc:	9c e0       	ldi	r25, 0x0C	; 12
    15ce:	79 07       	cpc	r23, r25
    15d0:	5c f4       	brge	.+22     	; 0x15e8 <strtod+0x198>
    15d2:	db 01       	movw	r26, r22
    15d4:	aa 0f       	add	r26, r26
    15d6:	bb 1f       	adc	r27, r27
    15d8:	aa 0f       	add	r26, r26
    15da:	bb 1f       	adc	r27, r27
    15dc:	6a 0f       	add	r22, r26
    15de:	7b 1f       	adc	r23, r27
    15e0:	66 0f       	add	r22, r22
    15e2:	77 1f       	adc	r23, r23
    15e4:	68 0f       	add	r22, r24
    15e6:	71 1d       	adc	r23, r1
    15e8:	31 96       	adiw	r30, 0x01	; 1
    15ea:	df 01       	movw	r26, r30
    15ec:	11 97       	sbiw	r26, 0x01	; 1
    15ee:	8c 91       	ld	r24, X
    15f0:	80 53       	subi	r24, 0x30	; 48
    15f2:	8a 30       	cpi	r24, 0x0A	; 10
    15f4:	50 f3       	brcs	.-44     	; 0x15ca <strtod+0x17a>
    15f6:	14 ff       	sbrs	r17, 4
    15f8:	03 c0       	rjmp	.+6      	; 0x1600 <strtod+0x1b0>
    15fa:	71 95       	neg	r23
    15fc:	61 95       	neg	r22
    15fe:	71 09       	sbc	r23, r1
    1600:	c6 0f       	add	r28, r22
    1602:	d7 1f       	adc	r29, r23
    1604:	11 ff       	sbrs	r17, 1
    1606:	08 c0       	rjmp	.+16     	; 0x1618 <strtod+0x1c8>
    1608:	c1 14       	cp	r12, r1
    160a:	d1 04       	cpc	r13, r1
    160c:	29 f0       	breq	.+10     	; 0x1618 <strtod+0x1c8>
    160e:	cf 01       	movw	r24, r30
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	f6 01       	movw	r30, r12
    1614:	91 83       	std	Z+1, r25	; 0x01
    1616:	80 83       	st	Z, r24
    1618:	ca 01       	movw	r24, r20
    161a:	b9 01       	movw	r22, r18
    161c:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__floatunsisf>
    1620:	21 2f       	mov	r18, r17
    1622:	23 70       	andi	r18, 0x03	; 3
    1624:	23 30       	cpi	r18, 0x03	; 3
    1626:	19 f0       	breq	.+6      	; 0x162e <strtod+0x1de>
    1628:	4b 01       	movw	r8, r22
    162a:	5c 01       	movw	r10, r24
    162c:	06 c0       	rjmp	.+12     	; 0x163a <strtod+0x1ea>
    162e:	4b 01       	movw	r8, r22
    1630:	5c 01       	movw	r10, r24
    1632:	b7 fa       	bst	r11, 7
    1634:	b0 94       	com	r11
    1636:	b7 f8       	bld	r11, 7
    1638:	b0 94       	com	r11
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	a9 01       	movw	r20, r18
    1640:	c5 01       	movw	r24, r10
    1642:	b4 01       	movw	r22, r8
    1644:	0e 94 97 0b 	call	0x172e	; 0x172e <__cmpsf2>
    1648:	88 23       	and	r24, r24
    164a:	09 f4       	brne	.+2      	; 0x164e <strtod+0x1fe>
    164c:	3e c0       	rjmp	.+124    	; 0x16ca <strtod+0x27a>
    164e:	d7 ff       	sbrs	r29, 7
    1650:	06 c0       	rjmp	.+12     	; 0x165e <strtod+0x20e>
    1652:	d1 95       	neg	r29
    1654:	c1 95       	neg	r28
    1656:	d1 09       	sbc	r29, r1
    1658:	05 e7       	ldi	r16, 0x75	; 117
    165a:	11 e0       	ldi	r17, 0x01	; 1
    165c:	02 c0       	rjmp	.+4      	; 0x1662 <strtod+0x212>
    165e:	0d e8       	ldi	r16, 0x8D	; 141
    1660:	11 e0       	ldi	r17, 0x01	; 1
    1662:	68 01       	movw	r12, r16
    1664:	f8 e1       	ldi	r31, 0x18	; 24
    1666:	cf 1a       	sub	r12, r31
    1668:	d1 08       	sbc	r13, r1
    166a:	90 e2       	ldi	r25, 0x20	; 32
    166c:	e9 2e       	mov	r14, r25
    166e:	f1 2c       	mov	r15, r1
    1670:	ce 15       	cp	r28, r14
    1672:	df 05       	cpc	r29, r15
    1674:	74 f0       	brlt	.+28     	; 0x1692 <strtod+0x242>
    1676:	f8 01       	movw	r30, r16
    1678:	25 91       	lpm	r18, Z+
    167a:	35 91       	lpm	r19, Z+
    167c:	45 91       	lpm	r20, Z+
    167e:	54 91       	lpm	r21, Z
    1680:	c5 01       	movw	r24, r10
    1682:	b4 01       	movw	r22, r8
    1684:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <__mulsf3>
    1688:	4b 01       	movw	r8, r22
    168a:	5c 01       	movw	r10, r24
    168c:	ce 19       	sub	r28, r14
    168e:	df 09       	sbc	r29, r15
    1690:	ef cf       	rjmp	.-34     	; 0x1670 <strtod+0x220>
    1692:	04 50       	subi	r16, 0x04	; 4
    1694:	11 09       	sbc	r17, r1
    1696:	f5 94       	asr	r15
    1698:	e7 94       	ror	r14
    169a:	0c 15       	cp	r16, r12
    169c:	1d 05       	cpc	r17, r13
    169e:	41 f7       	brne	.-48     	; 0x1670 <strtod+0x220>
    16a0:	8a 2d       	mov	r24, r10
    16a2:	88 0f       	add	r24, r24
    16a4:	8b 2d       	mov	r24, r11
    16a6:	88 1f       	adc	r24, r24
    16a8:	8f 3f       	cpi	r24, 0xFF	; 255
    16aa:	49 f0       	breq	.+18     	; 0x16be <strtod+0x26e>
    16ac:	20 e0       	ldi	r18, 0x00	; 0
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	a9 01       	movw	r20, r18
    16b2:	c5 01       	movw	r24, r10
    16b4:	b4 01       	movw	r22, r8
    16b6:	0e 94 97 0b 	call	0x172e	; 0x172e <__cmpsf2>
    16ba:	81 11       	cpse	r24, r1
    16bc:	06 c0       	rjmp	.+12     	; 0x16ca <strtod+0x27a>
    16be:	82 e2       	ldi	r24, 0x22	; 34
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <errno+0x1>
    16c6:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <errno>
    16ca:	c5 01       	movw	r24, r10
    16cc:	b4 01       	movw	r22, r8
    16ce:	09 c0       	rjmp	.+18     	; 0x16e2 <strtod+0x292>
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	70 e0       	ldi	r23, 0x00	; 0
    16d4:	80 e8       	ldi	r24, 0x80	; 128
    16d6:	9f ef       	ldi	r25, 0xFF	; 255
    16d8:	04 c0       	rjmp	.+8      	; 0x16e2 <strtod+0x292>
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	80 ec       	ldi	r24, 0xC0	; 192
    16e0:	9f e7       	ldi	r25, 0x7F	; 127
    16e2:	cd b7       	in	r28, 0x3d	; 61
    16e4:	de b7       	in	r29, 0x3e	; 62
    16e6:	ec e0       	ldi	r30, 0x0C	; 12
    16e8:	0c 94 3f 08 	jmp	0x107e	; 0x107e <__epilogue_restores__+0xc>

000016ec <isspace>:
    16ec:	91 11       	cpse	r25, r1
    16ee:	0c 94 6a 0c 	jmp	0x18d4	; 0x18d4 <__ctype_isfalse>
    16f2:	80 32       	cpi	r24, 0x20	; 32
    16f4:	19 f0       	breq	.+6      	; 0x16fc <isspace+0x10>
    16f6:	89 50       	subi	r24, 0x09	; 9
    16f8:	85 50       	subi	r24, 0x05	; 5
    16fa:	c8 f7       	brcc	.-14     	; 0x16ee <isspace+0x2>
    16fc:	08 95       	ret

000016fe <strncasecmp_P>:
    16fe:	fb 01       	movw	r30, r22
    1700:	dc 01       	movw	r26, r24
    1702:	41 50       	subi	r20, 0x01	; 1
    1704:	50 40       	sbci	r21, 0x00	; 0
    1706:	88 f0       	brcs	.+34     	; 0x172a <strncasecmp_P+0x2c>
    1708:	8d 91       	ld	r24, X+
    170a:	81 34       	cpi	r24, 0x41	; 65
    170c:	1c f0       	brlt	.+6      	; 0x1714 <strncasecmp_P+0x16>
    170e:	8b 35       	cpi	r24, 0x5B	; 91
    1710:	0c f4       	brge	.+2      	; 0x1714 <strncasecmp_P+0x16>
    1712:	80 5e       	subi	r24, 0xE0	; 224
    1714:	65 91       	lpm	r22, Z+
    1716:	61 34       	cpi	r22, 0x41	; 65
    1718:	1c f0       	brlt	.+6      	; 0x1720 <strncasecmp_P+0x22>
    171a:	6b 35       	cpi	r22, 0x5B	; 91
    171c:	0c f4       	brge	.+2      	; 0x1720 <strncasecmp_P+0x22>
    171e:	60 5e       	subi	r22, 0xE0	; 224
    1720:	86 1b       	sub	r24, r22
    1722:	61 11       	cpse	r22, r1
    1724:	71 f3       	breq	.-36     	; 0x1702 <strncasecmp_P+0x4>
    1726:	99 0b       	sbc	r25, r25
    1728:	08 95       	ret
    172a:	88 1b       	sub	r24, r24
    172c:	fc cf       	rjmp	.-8      	; 0x1726 <strncasecmp_P+0x28>

0000172e <__cmpsf2>:
    172e:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <__fp_cmp>
    1732:	08 f4       	brcc	.+2      	; 0x1736 <__cmpsf2+0x8>
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	08 95       	ret

00001738 <__floatunsisf>:
    1738:	e8 94       	clt
    173a:	09 c0       	rjmp	.+18     	; 0x174e <__floatsisf+0x12>

0000173c <__floatsisf>:
    173c:	97 fb       	bst	r25, 7
    173e:	3e f4       	brtc	.+14     	; 0x174e <__floatsisf+0x12>
    1740:	90 95       	com	r25
    1742:	80 95       	com	r24
    1744:	70 95       	com	r23
    1746:	61 95       	neg	r22
    1748:	7f 4f       	sbci	r23, 0xFF	; 255
    174a:	8f 4f       	sbci	r24, 0xFF	; 255
    174c:	9f 4f       	sbci	r25, 0xFF	; 255
    174e:	99 23       	and	r25, r25
    1750:	a9 f0       	breq	.+42     	; 0x177c <__floatsisf+0x40>
    1752:	f9 2f       	mov	r31, r25
    1754:	96 e9       	ldi	r25, 0x96	; 150
    1756:	bb 27       	eor	r27, r27
    1758:	93 95       	inc	r25
    175a:	f6 95       	lsr	r31
    175c:	87 95       	ror	r24
    175e:	77 95       	ror	r23
    1760:	67 95       	ror	r22
    1762:	b7 95       	ror	r27
    1764:	f1 11       	cpse	r31, r1
    1766:	f8 cf       	rjmp	.-16     	; 0x1758 <__floatsisf+0x1c>
    1768:	fa f4       	brpl	.+62     	; 0x17a8 <__floatsisf+0x6c>
    176a:	bb 0f       	add	r27, r27
    176c:	11 f4       	brne	.+4      	; 0x1772 <__floatsisf+0x36>
    176e:	60 ff       	sbrs	r22, 0
    1770:	1b c0       	rjmp	.+54     	; 0x17a8 <__floatsisf+0x6c>
    1772:	6f 5f       	subi	r22, 0xFF	; 255
    1774:	7f 4f       	sbci	r23, 0xFF	; 255
    1776:	8f 4f       	sbci	r24, 0xFF	; 255
    1778:	9f 4f       	sbci	r25, 0xFF	; 255
    177a:	16 c0       	rjmp	.+44     	; 0x17a8 <__floatsisf+0x6c>
    177c:	88 23       	and	r24, r24
    177e:	11 f0       	breq	.+4      	; 0x1784 <__floatsisf+0x48>
    1780:	96 e9       	ldi	r25, 0x96	; 150
    1782:	11 c0       	rjmp	.+34     	; 0x17a6 <__floatsisf+0x6a>
    1784:	77 23       	and	r23, r23
    1786:	21 f0       	breq	.+8      	; 0x1790 <__floatsisf+0x54>
    1788:	9e e8       	ldi	r25, 0x8E	; 142
    178a:	87 2f       	mov	r24, r23
    178c:	76 2f       	mov	r23, r22
    178e:	05 c0       	rjmp	.+10     	; 0x179a <__floatsisf+0x5e>
    1790:	66 23       	and	r22, r22
    1792:	71 f0       	breq	.+28     	; 0x17b0 <__floatsisf+0x74>
    1794:	96 e8       	ldi	r25, 0x86	; 134
    1796:	86 2f       	mov	r24, r22
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	2a f0       	brmi	.+10     	; 0x17a8 <__floatsisf+0x6c>
    179e:	9a 95       	dec	r25
    17a0:	66 0f       	add	r22, r22
    17a2:	77 1f       	adc	r23, r23
    17a4:	88 1f       	adc	r24, r24
    17a6:	da f7       	brpl	.-10     	; 0x179e <__floatsisf+0x62>
    17a8:	88 0f       	add	r24, r24
    17aa:	96 95       	lsr	r25
    17ac:	87 95       	ror	r24
    17ae:	97 f9       	bld	r25, 7
    17b0:	08 95       	ret

000017b2 <__fp_cmp>:
    17b2:	99 0f       	add	r25, r25
    17b4:	00 08       	sbc	r0, r0
    17b6:	55 0f       	add	r21, r21
    17b8:	aa 0b       	sbc	r26, r26
    17ba:	e0 e8       	ldi	r30, 0x80	; 128
    17bc:	fe ef       	ldi	r31, 0xFE	; 254
    17be:	16 16       	cp	r1, r22
    17c0:	17 06       	cpc	r1, r23
    17c2:	e8 07       	cpc	r30, r24
    17c4:	f9 07       	cpc	r31, r25
    17c6:	c0 f0       	brcs	.+48     	; 0x17f8 <__fp_cmp+0x46>
    17c8:	12 16       	cp	r1, r18
    17ca:	13 06       	cpc	r1, r19
    17cc:	e4 07       	cpc	r30, r20
    17ce:	f5 07       	cpc	r31, r21
    17d0:	98 f0       	brcs	.+38     	; 0x17f8 <__fp_cmp+0x46>
    17d2:	62 1b       	sub	r22, r18
    17d4:	73 0b       	sbc	r23, r19
    17d6:	84 0b       	sbc	r24, r20
    17d8:	95 0b       	sbc	r25, r21
    17da:	39 f4       	brne	.+14     	; 0x17ea <__fp_cmp+0x38>
    17dc:	0a 26       	eor	r0, r26
    17de:	61 f0       	breq	.+24     	; 0x17f8 <__fp_cmp+0x46>
    17e0:	23 2b       	or	r18, r19
    17e2:	24 2b       	or	r18, r20
    17e4:	25 2b       	or	r18, r21
    17e6:	21 f4       	brne	.+8      	; 0x17f0 <__fp_cmp+0x3e>
    17e8:	08 95       	ret
    17ea:	0a 26       	eor	r0, r26
    17ec:	09 f4       	brne	.+2      	; 0x17f0 <__fp_cmp+0x3e>
    17ee:	a1 40       	sbci	r26, 0x01	; 1
    17f0:	a6 95       	lsr	r26
    17f2:	8f ef       	ldi	r24, 0xFF	; 255
    17f4:	81 1d       	adc	r24, r1
    17f6:	81 1d       	adc	r24, r1
    17f8:	08 95       	ret

000017fa <__mulsf3>:
    17fa:	0e 94 10 0c 	call	0x1820	; 0x1820 <__mulsf3x>
    17fe:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__fp_round>
    1802:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_pscA>
    1806:	38 f0       	brcs	.+14     	; 0x1816 <__mulsf3+0x1c>
    1808:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <__fp_pscB>
    180c:	20 f0       	brcs	.+8      	; 0x1816 <__mulsf3+0x1c>
    180e:	95 23       	and	r25, r21
    1810:	11 f0       	breq	.+4      	; 0x1816 <__mulsf3+0x1c>
    1812:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__fp_inf>
    1816:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_nan>
    181a:	11 24       	eor	r1, r1
    181c:	0c 94 b8 0c 	jmp	0x1970	; 0x1970 <__fp_szero>

00001820 <__mulsf3x>:
    1820:	0e 94 95 0c 	call	0x192a	; 0x192a <__fp_split3>
    1824:	70 f3       	brcs	.-36     	; 0x1802 <__mulsf3+0x8>

00001826 <__mulsf3_pse>:
    1826:	95 9f       	mul	r25, r21
    1828:	c1 f3       	breq	.-16     	; 0x181a <__mulsf3+0x20>
    182a:	95 0f       	add	r25, r21
    182c:	50 e0       	ldi	r21, 0x00	; 0
    182e:	55 1f       	adc	r21, r21
    1830:	62 9f       	mul	r22, r18
    1832:	f0 01       	movw	r30, r0
    1834:	72 9f       	mul	r23, r18
    1836:	bb 27       	eor	r27, r27
    1838:	f0 0d       	add	r31, r0
    183a:	b1 1d       	adc	r27, r1
    183c:	63 9f       	mul	r22, r19
    183e:	aa 27       	eor	r26, r26
    1840:	f0 0d       	add	r31, r0
    1842:	b1 1d       	adc	r27, r1
    1844:	aa 1f       	adc	r26, r26
    1846:	64 9f       	mul	r22, r20
    1848:	66 27       	eor	r22, r22
    184a:	b0 0d       	add	r27, r0
    184c:	a1 1d       	adc	r26, r1
    184e:	66 1f       	adc	r22, r22
    1850:	82 9f       	mul	r24, r18
    1852:	22 27       	eor	r18, r18
    1854:	b0 0d       	add	r27, r0
    1856:	a1 1d       	adc	r26, r1
    1858:	62 1f       	adc	r22, r18
    185a:	73 9f       	mul	r23, r19
    185c:	b0 0d       	add	r27, r0
    185e:	a1 1d       	adc	r26, r1
    1860:	62 1f       	adc	r22, r18
    1862:	83 9f       	mul	r24, r19
    1864:	a0 0d       	add	r26, r0
    1866:	61 1d       	adc	r22, r1
    1868:	22 1f       	adc	r18, r18
    186a:	74 9f       	mul	r23, r20
    186c:	33 27       	eor	r19, r19
    186e:	a0 0d       	add	r26, r0
    1870:	61 1d       	adc	r22, r1
    1872:	23 1f       	adc	r18, r19
    1874:	84 9f       	mul	r24, r20
    1876:	60 0d       	add	r22, r0
    1878:	21 1d       	adc	r18, r1
    187a:	82 2f       	mov	r24, r18
    187c:	76 2f       	mov	r23, r22
    187e:	6a 2f       	mov	r22, r26
    1880:	11 24       	eor	r1, r1
    1882:	9f 57       	subi	r25, 0x7F	; 127
    1884:	50 40       	sbci	r21, 0x00	; 0
    1886:	9a f0       	brmi	.+38     	; 0x18ae <__mulsf3_pse+0x88>
    1888:	f1 f0       	breq	.+60     	; 0x18c6 <__mulsf3_pse+0xa0>
    188a:	88 23       	and	r24, r24
    188c:	4a f0       	brmi	.+18     	; 0x18a0 <__mulsf3_pse+0x7a>
    188e:	ee 0f       	add	r30, r30
    1890:	ff 1f       	adc	r31, r31
    1892:	bb 1f       	adc	r27, r27
    1894:	66 1f       	adc	r22, r22
    1896:	77 1f       	adc	r23, r23
    1898:	88 1f       	adc	r24, r24
    189a:	91 50       	subi	r25, 0x01	; 1
    189c:	50 40       	sbci	r21, 0x00	; 0
    189e:	a9 f7       	brne	.-22     	; 0x188a <__mulsf3_pse+0x64>
    18a0:	9e 3f       	cpi	r25, 0xFE	; 254
    18a2:	51 05       	cpc	r21, r1
    18a4:	80 f0       	brcs	.+32     	; 0x18c6 <__mulsf3_pse+0xa0>
    18a6:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__fp_inf>
    18aa:	0c 94 b8 0c 	jmp	0x1970	; 0x1970 <__fp_szero>
    18ae:	5f 3f       	cpi	r21, 0xFF	; 255
    18b0:	e4 f3       	brlt	.-8      	; 0x18aa <__mulsf3_pse+0x84>
    18b2:	98 3e       	cpi	r25, 0xE8	; 232
    18b4:	d4 f3       	brlt	.-12     	; 0x18aa <__mulsf3_pse+0x84>
    18b6:	86 95       	lsr	r24
    18b8:	77 95       	ror	r23
    18ba:	67 95       	ror	r22
    18bc:	b7 95       	ror	r27
    18be:	f7 95       	ror	r31
    18c0:	e7 95       	ror	r30
    18c2:	9f 5f       	subi	r25, 0xFF	; 255
    18c4:	c1 f7       	brne	.-16     	; 0x18b6 <__mulsf3_pse+0x90>
    18c6:	fe 2b       	or	r31, r30
    18c8:	88 0f       	add	r24, r24
    18ca:	91 1d       	adc	r25, r1
    18cc:	96 95       	lsr	r25
    18ce:	87 95       	ror	r24
    18d0:	97 f9       	bld	r25, 7
    18d2:	08 95       	ret

000018d4 <__ctype_isfalse>:
    18d4:	99 27       	eor	r25, r25
    18d6:	88 27       	eor	r24, r24

000018d8 <__ctype_istrue>:
    18d8:	08 95       	ret

000018da <__fp_inf>:
    18da:	97 f9       	bld	r25, 7
    18dc:	9f 67       	ori	r25, 0x7F	; 127
    18de:	80 e8       	ldi	r24, 0x80	; 128
    18e0:	70 e0       	ldi	r23, 0x00	; 0
    18e2:	60 e0       	ldi	r22, 0x00	; 0
    18e4:	08 95       	ret

000018e6 <__fp_nan>:
    18e6:	9f ef       	ldi	r25, 0xFF	; 255
    18e8:	80 ec       	ldi	r24, 0xC0	; 192
    18ea:	08 95       	ret

000018ec <__fp_pscA>:
    18ec:	00 24       	eor	r0, r0
    18ee:	0a 94       	dec	r0
    18f0:	16 16       	cp	r1, r22
    18f2:	17 06       	cpc	r1, r23
    18f4:	18 06       	cpc	r1, r24
    18f6:	09 06       	cpc	r0, r25
    18f8:	08 95       	ret

000018fa <__fp_pscB>:
    18fa:	00 24       	eor	r0, r0
    18fc:	0a 94       	dec	r0
    18fe:	12 16       	cp	r1, r18
    1900:	13 06       	cpc	r1, r19
    1902:	14 06       	cpc	r1, r20
    1904:	05 06       	cpc	r0, r21
    1906:	08 95       	ret

00001908 <__fp_round>:
    1908:	09 2e       	mov	r0, r25
    190a:	03 94       	inc	r0
    190c:	00 0c       	add	r0, r0
    190e:	11 f4       	brne	.+4      	; 0x1914 <__fp_round+0xc>
    1910:	88 23       	and	r24, r24
    1912:	52 f0       	brmi	.+20     	; 0x1928 <__fp_round+0x20>
    1914:	bb 0f       	add	r27, r27
    1916:	40 f4       	brcc	.+16     	; 0x1928 <__fp_round+0x20>
    1918:	bf 2b       	or	r27, r31
    191a:	11 f4       	brne	.+4      	; 0x1920 <__fp_round+0x18>
    191c:	60 ff       	sbrs	r22, 0
    191e:	04 c0       	rjmp	.+8      	; 0x1928 <__fp_round+0x20>
    1920:	6f 5f       	subi	r22, 0xFF	; 255
    1922:	7f 4f       	sbci	r23, 0xFF	; 255
    1924:	8f 4f       	sbci	r24, 0xFF	; 255
    1926:	9f 4f       	sbci	r25, 0xFF	; 255
    1928:	08 95       	ret

0000192a <__fp_split3>:
    192a:	57 fd       	sbrc	r21, 7
    192c:	90 58       	subi	r25, 0x80	; 128
    192e:	44 0f       	add	r20, r20
    1930:	55 1f       	adc	r21, r21
    1932:	59 f0       	breq	.+22     	; 0x194a <__fp_splitA+0x10>
    1934:	5f 3f       	cpi	r21, 0xFF	; 255
    1936:	71 f0       	breq	.+28     	; 0x1954 <__fp_splitA+0x1a>
    1938:	47 95       	ror	r20

0000193a <__fp_splitA>:
    193a:	88 0f       	add	r24, r24
    193c:	97 fb       	bst	r25, 7
    193e:	99 1f       	adc	r25, r25
    1940:	61 f0       	breq	.+24     	; 0x195a <__fp_splitA+0x20>
    1942:	9f 3f       	cpi	r25, 0xFF	; 255
    1944:	79 f0       	breq	.+30     	; 0x1964 <__fp_splitA+0x2a>
    1946:	87 95       	ror	r24
    1948:	08 95       	ret
    194a:	12 16       	cp	r1, r18
    194c:	13 06       	cpc	r1, r19
    194e:	14 06       	cpc	r1, r20
    1950:	55 1f       	adc	r21, r21
    1952:	f2 cf       	rjmp	.-28     	; 0x1938 <__fp_split3+0xe>
    1954:	46 95       	lsr	r20
    1956:	f1 df       	rcall	.-30     	; 0x193a <__fp_splitA>
    1958:	08 c0       	rjmp	.+16     	; 0x196a <__fp_splitA+0x30>
    195a:	16 16       	cp	r1, r22
    195c:	17 06       	cpc	r1, r23
    195e:	18 06       	cpc	r1, r24
    1960:	99 1f       	adc	r25, r25
    1962:	f1 cf       	rjmp	.-30     	; 0x1946 <__fp_splitA+0xc>
    1964:	86 95       	lsr	r24
    1966:	71 05       	cpc	r23, r1
    1968:	61 05       	cpc	r22, r1
    196a:	08 94       	sec
    196c:	08 95       	ret

0000196e <__fp_zero>:
    196e:	e8 94       	clt

00001970 <__fp_szero>:
    1970:	bb 27       	eor	r27, r27
    1972:	66 27       	eor	r22, r22
    1974:	77 27       	eor	r23, r23
    1976:	cb 01       	movw	r24, r22
    1978:	97 f9       	bld	r25, 7
    197a:	08 95       	ret

0000197c <__muluhisi3>:
    197c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__umulhisi3>
    1980:	a5 9f       	mul	r26, r21
    1982:	90 0d       	add	r25, r0
    1984:	b4 9f       	mul	r27, r20
    1986:	90 0d       	add	r25, r0
    1988:	a4 9f       	mul	r26, r20
    198a:	80 0d       	add	r24, r0
    198c:	91 1d       	adc	r25, r1
    198e:	11 24       	eor	r1, r1
    1990:	08 95       	ret

00001992 <__umulhisi3>:
    1992:	a2 9f       	mul	r26, r18
    1994:	b0 01       	movw	r22, r0
    1996:	b3 9f       	mul	r27, r19
    1998:	c0 01       	movw	r24, r0
    199a:	a3 9f       	mul	r26, r19
    199c:	70 0d       	add	r23, r0
    199e:	81 1d       	adc	r24, r1
    19a0:	11 24       	eor	r1, r1
    19a2:	91 1d       	adc	r25, r1
    19a4:	b2 9f       	mul	r27, r18
    19a6:	70 0d       	add	r23, r0
    19a8:	81 1d       	adc	r24, r1
    19aa:	11 24       	eor	r1, r1
    19ac:	91 1d       	adc	r25, r1
    19ae:	08 95       	ret

000019b0 <_exit>:
    19b0:	f8 94       	cli

000019b2 <__stop_program>:
    19b2:	ff cf       	rjmp	.-2      	; 0x19b2 <__stop_program>
