
main_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000158  00800060  00001a10  00001aa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000214  008001b8  008001b8  00001bfc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001bfc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001c98  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c86  00000000  00000000  00001d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f1  00000000  00000000  00002996  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b23  00000000  00000000  00003087  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000158  00000000  00000000  00003bac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000456  00000000  00000000  00003d04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f5  00000000  00000000  0000415a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000454f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 00 	jmp	0x192	; 0x192 <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 c5 01 	jmp	0x38a	; 0x38a <__vector_8>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <pstr_nan>:
     156:	4e 41 4e                                            NAN

00000159 <pstr_inity>:
     159:	49 4e 49 54 59                                      INITY

0000015e <pstr_inf>:
     15e:	49 4e 46                                            INF

00000161 <pwr_m10>:
     161:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     171:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000179 <pwr_p10>:
     179:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     189:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000192 <__ctors_end>:
     192:	11 24       	eor	r1, r1
     194:	1f be       	out	0x3f, r1	; 63
     196:	cf e5       	ldi	r28, 0x5F	; 95
     198:	d4 e0       	ldi	r29, 0x04	; 4
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	cd bf       	out	0x3d, r28	; 61

0000019e <__do_copy_data>:
     19e:	11 e0       	ldi	r17, 0x01	; 1
     1a0:	a0 e6       	ldi	r26, 0x60	; 96
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e0 e1       	ldi	r30, 0x10	; 16
     1a6:	fa e1       	ldi	r31, 0x1A	; 26
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x10>
     1aa:	05 90       	lpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	a8 3b       	cpi	r26, 0xB8	; 184
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0xc>

000001b4 <__do_clear_bss>:
     1b4:	23 e0       	ldi	r18, 0x03	; 3
     1b6:	a8 eb       	ldi	r26, 0xB8	; 184
     1b8:	b1 e0       	ldi	r27, 0x01	; 1
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	ac 3c       	cpi	r26, 0xCC	; 204
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 34 04 	call	0x868	; 0x868 <main>
     1c8:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     1d0:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     1d2:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     1d4:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     1d6:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     1d8:	6c d0       	rcall	.+216    	; 0x2b2 <wait_msec>
ldi r24, 0x30
     1da:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1dc:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1de:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1e0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1e2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1e4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1e6:	6f d0       	rcall	.+222    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1e8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ea:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1ec:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ee:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1f0:	6a d0       	rcall	.+212    	; 0x2c6 <wait_usec>
pop r25
     1f2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1f4:	8f 91       	pop	r24
ldi r24, 0x30
     1f6:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1f8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1fa:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1fc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1fe:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     200:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     202:	61 d0       	rcall	.+194    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     204:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     206:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     208:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     20a:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     20c:	5c d0       	rcall	.+184    	; 0x2c6 <wait_usec>
pop r25
     20e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     210:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     212:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     214:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     216:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     218:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     21a:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     21e:	53 d0       	rcall	.+166    	; 0x2c6 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     220:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     222:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     224:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     226:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     228:	4e d0       	rcall	.+156    	; 0x2c6 <wait_usec>
pop r25
     22a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     22c:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     22e:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     230:	0e d0       	rcall	.+28     	; 0x24e <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     232:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     234:	0c d0       	rcall	.+24     	; 0x24e <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     236:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     238:	0a d0       	rcall	.+20     	; 0x24e <lcd_command_sim>
ldi r24, lo8(1530)
     23a:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     23c:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     23e:	43 d0       	rcall	.+134    	; 0x2c6 <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     240:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     242:	05 d0       	rcall	.+10     	; 0x24e <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     244:	9f 91       	pop	r25
pop r24
     246:	8f 91       	pop	r24
ret
     248:	08 95       	ret

0000024a <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     24a:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     24c:	00 d0       	rcall	.+0      	; 0x24e <lcd_command_sim>

0000024e <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     24e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     250:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     252:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     254:	06 d0       	rcall	.+12     	; 0x262 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     256:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     258:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     25a:	35 d0       	rcall	.+106    	; 0x2c6 <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     25c:	9f 91       	pop	r25
pop r24
     25e:	8f 91       	pop	r24
ret
     260:	08 95       	ret

00000262 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     262:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     264:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     266:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     268:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     26a:	2d d0       	rcall	.+90     	; 0x2c6 <wait_usec>
pop r25
     26c:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     26e:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     270:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     272:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     274:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     276:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     278:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     27a:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     27c:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     27e:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     280:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     282:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     284:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     286:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     288:	1e d0       	rcall	.+60     	; 0x2c6 <wait_usec>
pop r25
     28a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     28c:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     28e:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     290:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     292:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     294:	89 0f       	add	r24, r25
out PORTD, r24
     296:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     298:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     29a:	93 98       	cbi	0x12, 3	; 18
ret
     29c:	08 95       	ret

0000029e <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     29e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     2a0:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     2a2:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     2a4:	de df       	rcall	.-68     	; 0x262 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     2a6:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     2a8:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2aa:	0d d0       	rcall	.+26     	; 0x2c6 <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     2ac:	9f 91       	pop	r25
pop r24
     2ae:	8f 91       	pop	r24
ret
     2b0:	08 95       	ret

000002b2 <wait_msec>:

wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     2b2:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     2b4:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     2b6:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     2b8:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     2ba:	05 d0       	rcall	.+10     	; 0x2c6 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     2bc:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     2be:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     2c0:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2c2:	b9 f7       	brne	.-18     	; 0x2b2 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     2c4:	08 95       	ret

000002c6 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     2c6:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     2d0:	d1 f7       	brne	.-12     	; 0x2c6 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     2d2:	08 95       	ret

000002d4 <print>:


.global print
print:
     2d4:	e4 df       	rcall	.-56     	; 0x29e <lcd_data_sim>

000002d6 <usart_init>:
	while(c!='S') {
		c=usart_receive();
	}
	for(int i=0; i<12; ++i)
	usart_receive(); //flush ServedClient out of read buffer
}
     2d6:	1b b8       	out	0x0b, r1	; 11
     2d8:	28 e1       	ldi	r18, 0x18	; 24
     2da:	2a b9       	out	0x0a, r18	; 10
     2dc:	90 bd       	out	0x20, r25	; 32
     2de:	89 b9       	out	0x09, r24	; 9
     2e0:	86 e8       	ldi	r24, 0x86	; 134
     2e2:	80 bd       	out	0x20, r24	; 32
     2e4:	08 95       	ret

000002e6 <usart_transmit>:
     2e6:	5d 9b       	sbis	0x0b, 5	; 11
     2e8:	fe cf       	rjmp	.-4      	; 0x2e6 <usart_transmit>
     2ea:	8c b9       	out	0x0c, r24	; 12
     2ec:	08 95       	ret

000002ee <usart_receive>:
     2ee:	5f 9b       	sbis	0x0b, 7	; 11
     2f0:	fe cf       	rjmp	.-4      	; 0x2ee <usart_receive>
     2f2:	8c b1       	in	r24, 0x0c	; 12
     2f4:	08 95       	ret

000002f6 <serialWrite>:
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	ec 01       	movw	r28, r24
     2fe:	10 e0       	ldi	r17, 0x00	; 0
     300:	07 c0       	rjmp	.+14     	; 0x310 <serialWrite+0x1a>
     302:	fe 01       	movw	r30, r28
     304:	e8 0f       	add	r30, r24
     306:	f9 1f       	adc	r31, r25
     308:	80 81       	ld	r24, Z
     30a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <usart_transmit>
     30e:	1f 5f       	subi	r17, 0xFF	; 255
     310:	81 2f       	mov	r24, r17
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	fe 01       	movw	r30, r28
     316:	01 90       	ld	r0, Z+
     318:	00 20       	and	r0, r0
     31a:	e9 f7       	brne	.-6      	; 0x316 <serialWrite+0x20>
     31c:	31 97       	sbiw	r30, 0x01	; 1
     31e:	ec 1b       	sub	r30, r28
     320:	fd 0b       	sbc	r31, r29
     322:	8e 17       	cp	r24, r30
     324:	9f 07       	cpc	r25, r31
     326:	68 f3       	brcs	.-38     	; 0x302 <serialWrite+0xc>
     328:	df 91       	pop	r29
     32a:	cf 91       	pop	r28
     32c:	1f 91       	pop	r17
     32e:	08 95       	ret

00000330 <sendCommand>:
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	8c 01       	movw	r16, r24
     33a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>
     33e:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     342:	13 c0       	rjmp	.+38     	; 0x36a <sendCommand+0x3a>
     344:	86 34       	cpi	r24, 0x46	; 70
     346:	79 f4       	brne	.+30     	; 0x366 <sendCommand+0x36>
     348:	04 c0       	rjmp	.+8      	; 0x352 <sendCommand+0x22>
     34a:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     34e:	21 96       	adiw	r28, 0x01	; 1
     350:	02 c0       	rjmp	.+4      	; 0x356 <sendCommand+0x26>
     352:	c0 e0       	ldi	r28, 0x00	; 0
     354:	d0 e0       	ldi	r29, 0x00	; 0
     356:	c5 30       	cpi	r28, 0x05	; 5
     358:	d1 05       	cpc	r29, r1
     35a:	bc f3       	brlt	.-18     	; 0x34a <sendCommand+0x1a>
     35c:	8f ef       	ldi	r24, 0xFF	; 255
     35e:	88 bb       	out	0x18, r24	; 24
     360:	c8 01       	movw	r24, r16
     362:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>
     366:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     36a:	83 35       	cpi	r24, 0x53	; 83
     36c:	59 f7       	brne	.-42     	; 0x344 <sendCommand+0x14>
     36e:	c0 e0       	ldi	r28, 0x00	; 0
     370:	d0 e0       	ldi	r29, 0x00	; 0
     372:	03 c0       	rjmp	.+6      	; 0x37a <sendCommand+0x4a>
     374:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     378:	21 96       	adiw	r28, 0x01	; 1
     37a:	c8 30       	cpi	r28, 0x08	; 8
     37c:	d1 05       	cpc	r29, r1
     37e:	d4 f3       	brlt	.-12     	; 0x374 <sendCommand+0x44>
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	1f 91       	pop	r17
     386:	0f 91       	pop	r16
     388:	08 95       	ret

0000038a <__vector_8>:

ISR(TIMER1_OVF_vect) {
     38a:	1f 92       	push	r1
     38c:	0f 92       	push	r0
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	0f 92       	push	r0
     392:	11 24       	eor	r1, r1
     394:	cf 92       	push	r12
     396:	df 92       	push	r13
     398:	ef 92       	push	r14
     39a:	ff 92       	push	r15
     39c:	0f 93       	push	r16
     39e:	1f 93       	push	r17
     3a0:	2f 93       	push	r18
     3a2:	3f 93       	push	r19
     3a4:	4f 93       	push	r20
     3a6:	5f 93       	push	r21
     3a8:	6f 93       	push	r22
     3aa:	7f 93       	push	r23
     3ac:	8f 93       	push	r24
     3ae:	9f 93       	push	r25
     3b0:	af 93       	push	r26
     3b2:	bf 93       	push	r27
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	ef 93       	push	r30
     3ba:	ff 93       	push	r31
    char c;
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
     3bc:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <first>
     3c0:	81 11       	cpse	r24, r1
     3c2:	31 c2       	rjmp	.+1122   	; 0x826 <__stack+0x3c7>
     3c4:	e1 2c       	mov	r14, r1
     3c6:	f1 2c       	mov	r15, r1
     3c8:	74 c1       	rjmp	.+744    	; 0x6b2 <__stack+0x253>
            sendCommand(string_to_send);*/
			/*
            sprintf(string_to_send, "ESP:ssid:\"Middle_Board%d\"\n", k);
            strcpy(string_to_send, "ESP:password:\"awesomePassword\"\n");
            sendCommand(string_to_send);*/
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_avg\"[request]\n");
     3ca:	86 e2       	ldi	r24, 0x26	; 38
     3cc:	e0 e6       	ldi	r30, 0x60	; 96
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	af eb       	ldi	r26, 0xBF	; 191
     3d2:	b1 e0       	ldi	r27, 0x01	; 1
     3d4:	01 90       	ld	r0, Z+
     3d6:	0d 92       	st	X+, r0
     3d8:	8a 95       	dec	r24
     3da:	e1 f7       	brne	.-8      	; 0x3d4 <__vector_8+0x4a>
            sendCommand(string_to_send);
     3dc:	8f eb       	ldi	r24, 0xBF	; 191
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_avg\"[request]\n");
     3e4:	84 e2       	ldi	r24, 0x24	; 36
     3e6:	e6 e8       	ldi	r30, 0x86	; 134
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	af eb       	ldi	r26, 0xBF	; 191
     3ec:	b1 e0       	ldi	r27, 0x01	; 1
     3ee:	01 90       	ld	r0, Z+
     3f0:	0d 92       	st	X+, r0
     3f2:	8a 95       	dec	r24
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <__vector_8+0x64>
            sendCommand(string_to_send);
     3f6:	8f eb       	ldi	r24, 0xBF	; 191
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Moist_var\"[request]\n");
     3fe:	86 e2       	ldi	r24, 0x26	; 38
     400:	ea ea       	ldi	r30, 0xAA	; 170
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	af eb       	ldi	r26, 0xBF	; 191
     406:	b1 e0       	ldi	r27, 0x01	; 1
     408:	01 90       	ld	r0, Z+
     40a:	0d 92       	st	X+, r0
     40c:	8a 95       	dec	r24
     40e:	e1 f7       	brne	.-8      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
            sendCommand(string_to_send);
     410:	8f eb       	ldi	r24, 0xBF	; 191
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
            strcpy(string_to_send, "ESP:sensorValue:\"Tmp_var\"[request]\n");
     418:	84 e2       	ldi	r24, 0x24	; 36
     41a:	e0 ed       	ldi	r30, 0xD0	; 208
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	af eb       	ldi	r26, 0xBF	; 191
     420:	b1 e0       	ldi	r27, 0x01	; 1
     422:	01 90       	ld	r0, Z+
     424:	0d 92       	st	X+, r0
     426:	8a 95       	dec	r24
     428:	e1 f7       	brne	.-8      	; 0x422 <__DATA_REGION_LENGTH__+0x22>
            sendCommand(string_to_send);
     42a:	8f eb       	ldi	r24, 0xBF	; 191
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
            //strcpy(string_to_send, "ESP:connect\n"); //will wait until it can connect
            //sendCommand(string_to_send);
            //strcpy(string_to_send, "ESP:clientTransmit\n");
            //sendCommand(string_to_send);
            strcpy(string_to_send, "ESP:getAllValues\n");
     432:	82 e1       	ldi	r24, 0x12	; 18
     434:	e4 ef       	ldi	r30, 0xF4	; 244
     436:	f0 e0       	ldi	r31, 0x00	; 0
     438:	af eb       	ldi	r26, 0xBF	; 191
     43a:	b1 e0       	ldi	r27, 0x01	; 1
     43c:	01 90       	ld	r0, Z+
     43e:	0d 92       	st	X+, r0
     440:	8a 95       	dec	r24
     442:	e1 f7       	brne	.-8      	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
            serialWrite(string_to_send);
     444:	8f eb       	ldi	r24, 0xBF	; 191
     446:	91 e0       	ldi	r25, 0x01	; 1
     448:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <serialWrite>

            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     44c:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     450:	82 32       	cpi	r24, 0x22	; 34
     452:	e1 f7       	brne	.-8      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
               // c = getChar();
            }
            c=usart_receive();
     454:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     458:	86 34       	cpi	r24, 0x46	; 70
     45a:	11 f0       	breq	.+4      	; 0x460 <__stack+0x1>
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
            failed=false;
     45c:	10 e0       	ldi	r17, 0x00	; 0
     45e:	01 c0       	rjmp	.+2      	; 0x462 <__stack+0x3>
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
     460:	11 e0       	ldi	r17, 0x01	; 1
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
            failed=false;
     462:	c0 e0       	ldi	r28, 0x00	; 0
     464:	d0 e0       	ldi	r29, 0x00	; 0
     466:	0a c0       	rjmp	.+20     	; 0x47c <__stack+0x1d>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     468:	6e 01       	movw	r12, r28
     46a:	2f ef       	ldi	r18, 0xFF	; 255
     46c:	c2 1a       	sub	r12, r18
     46e:	d2 0a       	sbc	r13, r18
     470:	cc 53       	subi	r28, 0x3C	; 60
     472:	dc 4f       	sbci	r29, 0xFC	; 252
     474:	88 83       	st	Y, r24
                c = usart_receive();
     476:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     47a:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     47c:	82 32       	cpi	r24, 0x22	; 34
     47e:	11 f0       	breq	.+4      	; 0x484 <__stack+0x25>
     480:	11 23       	and	r17, r17
     482:	91 f3       	breq	.-28     	; 0x468 <__stack+0x9>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     484:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){ //fix failed case!!!!!!!!!
     488:	11 11       	cpse	r17, r1
     48a:	2e c0       	rjmp	.+92     	; 0x4e8 <__stack+0x89>
     48c:	25 e0       	ldi	r18, 0x05	; 5
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	0c c0       	rjmp	.+24     	; 0x4aa <__stack+0x4b>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     492:	f9 01       	movw	r30, r18
     494:	e8 1b       	sub	r30, r24
     496:	f9 0b       	sbc	r31, r25
     498:	ec 53       	subi	r30, 0x3C	; 60
     49a:	fc 4f       	sbci	r31, 0xFC	; 252
     49c:	80 81       	ld	r24, Z
     49e:	f9 01       	movw	r30, r18
     4a0:	ec 53       	subi	r30, 0x3C	; 60
     4a2:	fc 4f       	sbci	r31, 0xFC	; 252
     4a4:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ //fix failed case!!!!!!!!!
                for(int i=5; i>=6-counter; i--){
     4a6:	21 50       	subi	r18, 0x01	; 1
     4a8:	31 09       	sbc	r19, r1
     4aa:	86 e0       	ldi	r24, 0x06	; 6
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	8c 1b       	sub	r24, r28
     4b0:	9d 0b       	sbc	r25, r29
     4b2:	28 17       	cp	r18, r24
     4b4:	39 07       	cpc	r19, r25
     4b6:	6c f7       	brge	.-38     	; 0x492 <__stack+0x33>
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	07 c0       	rjmp	.+14     	; 0x4cc <__stack+0x6d>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     4be:	f9 01       	movw	r30, r18
     4c0:	ec 53       	subi	r30, 0x3C	; 60
     4c2:	fc 4f       	sbci	r31, 0xFC	; 252
     4c4:	40 e3       	ldi	r20, 0x30	; 48
     4c6:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){ //fix failed case!!!!!!!!!
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     4c8:	2f 5f       	subi	r18, 0xFF	; 255
     4ca:	3f 4f       	sbci	r19, 0xFF	; 255
     4cc:	28 17       	cp	r18, r24
     4ce:	39 07       	cpc	r19, r25
     4d0:	b4 f3       	brlt	.-20     	; 0x4be <__stack+0x5f>
                    conv_buffer[i] = '0';
                }
                moist_avgs[k]=atoi(conv_buffer);
     4d2:	84 ec       	ldi	r24, 0xC4	; 196
     4d4:	93 e0       	ldi	r25, 0x03	; 3
     4d6:	0e 94 86 08 	call	0x110c	; 0x110c <atoi>
     4da:	f7 01       	movw	r30, r14
     4dc:	ee 0f       	add	r30, r30
     4de:	ff 1f       	adc	r31, r31
     4e0:	e8 54       	subi	r30, 0x48	; 72
     4e2:	fe 4f       	sbci	r31, 0xFE	; 254
     4e4:	91 83       	std	Z+1, r25	; 0x01
     4e6:	80 83       	st	Z, r24
            }
            

            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     4e8:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     4ec:	82 32       	cpi	r24, 0x22	; 34
     4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__stack+0x89>
               // c = getChar();
            }
            c=usart_receive();
     4f0:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     4f4:	86 34       	cpi	r24, 0x46	; 70
     4f6:	61 f4       	brne	.+24     	; 0x510 <__stack+0xb1>
                failed=true;
     4f8:	11 e0       	ldi	r17, 0x01	; 1
     4fa:	0a c0       	rjmp	.+20     	; 0x510 <__stack+0xb1>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     4fc:	6e 01       	movw	r12, r28
     4fe:	9f ef       	ldi	r25, 0xFF	; 255
     500:	c9 1a       	sub	r12, r25
     502:	d9 0a       	sbc	r13, r25
     504:	cc 53       	subi	r28, 0x3C	; 60
     506:	dc 4f       	sbci	r29, 0xFC	; 252
     508:	88 83       	st	Y, r24
                c = usart_receive();
     50a:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     50e:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     510:	82 32       	cpi	r24, 0x22	; 34
     512:	11 f0       	breq	.+4      	; 0x518 <__stack+0xb9>
     514:	11 23       	and	r17, r17
     516:	91 f3       	breq	.-28     	; 0x4fc <__stack+0x9d>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     518:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     51c:	11 11       	cpse	r17, r1
     51e:	32 c0       	rjmp	.+100    	; 0x584 <__stack+0x125>
     520:	25 e0       	ldi	r18, 0x05	; 5
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	0c c0       	rjmp	.+24     	; 0x53e <__stack+0xdf>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     526:	f9 01       	movw	r30, r18
     528:	e8 1b       	sub	r30, r24
     52a:	f9 0b       	sbc	r31, r25
     52c:	ec 53       	subi	r30, 0x3C	; 60
     52e:	fc 4f       	sbci	r31, 0xFC	; 252
     530:	80 81       	ld	r24, Z
     532:	f9 01       	movw	r30, r18
     534:	ec 53       	subi	r30, 0x3C	; 60
     536:	fc 4f       	sbci	r31, 0xFC	; 252
     538:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     53a:	21 50       	subi	r18, 0x01	; 1
     53c:	31 09       	sbc	r19, r1
     53e:	86 e0       	ldi	r24, 0x06	; 6
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	8c 1b       	sub	r24, r28
     544:	9d 0b       	sbc	r25, r29
     546:	28 17       	cp	r18, r24
     548:	39 07       	cpc	r19, r25
     54a:	6c f7       	brge	.-38     	; 0x526 <__stack+0xc7>
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	07 c0       	rjmp	.+14     	; 0x560 <__stack+0x101>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     552:	f9 01       	movw	r30, r18
     554:	ec 53       	subi	r30, 0x3C	; 60
     556:	fc 4f       	sbci	r31, 0xFC	; 252
     558:	40 e3       	ldi	r20, 0x30	; 48
     55a:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     55c:	2f 5f       	subi	r18, 0xFF	; 255
     55e:	3f 4f       	sbci	r19, 0xFF	; 255
     560:	28 17       	cp	r18, r24
     562:	39 07       	cpc	r19, r25
     564:	b4 f3       	brlt	.-20     	; 0x552 <__stack+0xf3>
                    conv_buffer[i] = '0';
                }
                tmp_avgs[k]=atof(conv_buffer);
     566:	84 ec       	ldi	r24, 0xC4	; 196
     568:	93 e0       	ldi	r25, 0x03	; 3
     56a:	0e 94 82 08 	call	0x1104	; 0x1104 <atof>
     56e:	f7 01       	movw	r30, r14
     570:	ee 0f       	add	r30, r30
     572:	ff 1f       	adc	r31, r31
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	e1 5c       	subi	r30, 0xC1	; 193
     57a:	fc 4f       	sbci	r31, 0xFC	; 252
     57c:	60 83       	st	Z, r22
     57e:	71 83       	std	Z+1, r23	; 0x01
     580:	82 83       	std	Z+2, r24	; 0x02
     582:	93 83       	std	Z+3, r25	; 0x03
            }
            
            
            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     584:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     588:	82 32       	cpi	r24, 0x22	; 34
     58a:	e1 f7       	brne	.-8      	; 0x584 <__stack+0x125>
               // c = getChar();
            }
            c=usart_receive();
     58c:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     590:	86 34       	cpi	r24, 0x46	; 70
     592:	61 f4       	brne	.+24     	; 0x5ac <__stack+0x14d>
                failed=true;
     594:	11 e0       	ldi	r17, 0x01	; 1
     596:	0a c0       	rjmp	.+20     	; 0x5ac <__stack+0x14d>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     598:	6e 01       	movw	r12, r28
     59a:	2f ef       	ldi	r18, 0xFF	; 255
     59c:	c2 1a       	sub	r12, r18
     59e:	d2 0a       	sbc	r13, r18
     5a0:	cc 53       	subi	r28, 0x3C	; 60
     5a2:	dc 4f       	sbci	r29, 0xFC	; 252
     5a4:	88 83       	st	Y, r24
                c = usart_receive();
     5a6:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     5aa:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     5ac:	82 32       	cpi	r24, 0x22	; 34
     5ae:	11 f0       	breq	.+4      	; 0x5b4 <__stack+0x155>
     5b0:	11 23       	and	r17, r17
     5b2:	91 f3       	breq	.-28     	; 0x598 <__stack+0x139>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     5b4:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     5b8:	11 11       	cpse	r17, r1
     5ba:	2e c0       	rjmp	.+92     	; 0x618 <__stack+0x1b9>
     5bc:	25 e0       	ldi	r18, 0x05	; 5
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	0c c0       	rjmp	.+24     	; 0x5da <__stack+0x17b>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     5c2:	f9 01       	movw	r30, r18
     5c4:	e8 1b       	sub	r30, r24
     5c6:	f9 0b       	sbc	r31, r25
     5c8:	ec 53       	subi	r30, 0x3C	; 60
     5ca:	fc 4f       	sbci	r31, 0xFC	; 252
     5cc:	80 81       	ld	r24, Z
     5ce:	f9 01       	movw	r30, r18
     5d0:	ec 53       	subi	r30, 0x3C	; 60
     5d2:	fc 4f       	sbci	r31, 0xFC	; 252
     5d4:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     5d6:	21 50       	subi	r18, 0x01	; 1
     5d8:	31 09       	sbc	r19, r1
     5da:	86 e0       	ldi	r24, 0x06	; 6
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	8c 1b       	sub	r24, r28
     5e0:	9d 0b       	sbc	r25, r29
     5e2:	28 17       	cp	r18, r24
     5e4:	39 07       	cpc	r19, r25
     5e6:	6c f7       	brge	.-38     	; 0x5c2 <__stack+0x163>
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	07 c0       	rjmp	.+14     	; 0x5fc <__stack+0x19d>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     5ee:	f9 01       	movw	r30, r18
     5f0:	ec 53       	subi	r30, 0x3C	; 60
     5f2:	fc 4f       	sbci	r31, 0xFC	; 252
     5f4:	40 e3       	ldi	r20, 0x30	; 48
     5f6:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     5f8:	2f 5f       	subi	r18, 0xFF	; 255
     5fa:	3f 4f       	sbci	r19, 0xFF	; 255
     5fc:	28 17       	cp	r18, r24
     5fe:	39 07       	cpc	r19, r25
     600:	b4 f3       	brlt	.-20     	; 0x5ee <__stack+0x18f>
                    conv_buffer[i] = '0';
                }
                moist_vars[k]=atoi(conv_buffer);
     602:	84 ec       	ldi	r24, 0xC4	; 196
     604:	93 e0       	ldi	r25, 0x03	; 3
     606:	0e 94 86 08 	call	0x110c	; 0x110c <atoi>
     60a:	f7 01       	movw	r30, r14
     60c:	ee 0f       	add	r30, r30
     60e:	ff 1f       	adc	r31, r31
     610:	e4 54       	subi	r30, 0x44	; 68
     612:	fe 4f       	sbci	r31, 0xFE	; 254
     614:	91 83       	std	Z+1, r25	; 0x01
     616:	80 83       	st	Z, r24
            }
            

            while(usart_receive() != '"') { //scan input till you find ". The number will follow
     618:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
     61c:	82 32       	cpi	r24, 0x22	; 34
     61e:	e1 f7       	brne	.-8      	; 0x618 <__stack+0x1b9>
               // c = getChar();
            }
            c=usart_receive();
     620:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(c=='F')
     624:	86 34       	cpi	r24, 0x46	; 70
     626:	61 f4       	brne	.+24     	; 0x640 <__stack+0x1e1>
                failed=true;
     628:	11 e0       	ldi	r17, 0x01	; 1
     62a:	0a c0       	rjmp	.+20     	; 0x640 <__stack+0x1e1>
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     62c:	6e 01       	movw	r12, r28
     62e:	9f ef       	ldi	r25, 0xFF	; 255
     630:	c9 1a       	sub	r12, r25
     632:	d9 0a       	sbc	r13, r25
     634:	cc 53       	subi	r28, 0x3C	; 60
     636:	dc 4f       	sbci	r29, 0xFC	; 252
     638:	88 83       	st	Y, r24
                c = usart_receive();
     63a:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
                conv_buffer[counter++]=c;
     63e:	e6 01       	movw	r28, r12
               // c = getChar();
            }
            c=usart_receive();
            if(c=='F')
                failed=true;
            while(c != '"' && !failed){
     640:	82 32       	cpi	r24, 0x22	; 34
     642:	11 f0       	breq	.+4      	; 0x648 <__stack+0x1e9>
     644:	11 23       	and	r17, r17
     646:	91 f3       	breq	.-28     	; 0x62c <__stack+0x1cd>
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
     648:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
            if(!failed){
     64c:	11 11       	cpse	r17, r1
     64e:	2e c0       	rjmp	.+92     	; 0x6ac <__stack+0x24d>
     650:	25 e0       	ldi	r18, 0x05	; 5
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	0c c0       	rjmp	.+24     	; 0x66e <__stack+0x20f>
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
     656:	f9 01       	movw	r30, r18
     658:	e8 1b       	sub	r30, r24
     65a:	f9 0b       	sbc	r31, r25
     65c:	ec 53       	subi	r30, 0x3C	; 60
     65e:	fc 4f       	sbci	r31, 0xFC	; 252
     660:	80 81       	ld	r24, Z
     662:	f9 01       	movw	r30, r18
     664:	ec 53       	subi	r30, 0x3C	; 60
     666:	fc 4f       	sbci	r31, 0xFC	; 252
     668:	80 83       	st	Z, r24
                conv_buffer[counter++]=c;
                c = usart_receive();
            }
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
     66a:	21 50       	subi	r18, 0x01	; 1
     66c:	31 09       	sbc	r19, r1
     66e:	86 e0       	ldi	r24, 0x06	; 6
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	8c 1b       	sub	r24, r28
     674:	9d 0b       	sbc	r25, r29
     676:	28 17       	cp	r18, r24
     678:	39 07       	cpc	r19, r25
     67a:	6c f7       	brge	.-38     	; 0x656 <__stack+0x1f7>
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	07 c0       	rjmp	.+14     	; 0x690 <__stack+0x231>
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
                    conv_buffer[i] = '0';
     682:	f9 01       	movw	r30, r18
     684:	ec 53       	subi	r30, 0x3C	; 60
     686:	fc 4f       	sbci	r31, 0xFC	; 252
     688:	40 e3       	ldi	r20, 0x30	; 48
     68a:	40 83       	st	Z, r20
            c = usart_receive(); // also flush '\n' out of read buffer
            if(!failed){
                for(int i=5; i>=6-counter; i--){
                    conv_buffer[i] = conv_buffer[i - (6-counter)];
                }
                for(int i=0; i<(6-counter); i++){
     68c:	2f 5f       	subi	r18, 0xFF	; 255
     68e:	3f 4f       	sbci	r19, 0xFF	; 255
     690:	28 17       	cp	r18, r24
     692:	39 07       	cpc	r19, r25
     694:	b4 f3       	brlt	.-20     	; 0x682 <__stack+0x223>
                    conv_buffer[i] = '0';
                }
                tmp_vars[k]=atoi(conv_buffer);
     696:	84 ec       	ldi	r24, 0xC4	; 196
     698:	93 e0       	ldi	r25, 0x03	; 3
     69a:	0e 94 86 08 	call	0x110c	; 0x110c <atoi>
     69e:	f7 01       	movw	r30, r14
     6a0:	ee 0f       	add	r30, r30
     6a2:	ff 1f       	adc	r31, r31
     6a4:	e6 54       	subi	r30, 0x46	; 70
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	91 83       	std	Z+1, r25	; 0x01
     6aa:	80 83       	st	Z, r24
    char c;
    bool failed;
    int counter =0, watering_pot = 0, leds;

    if(!first) {
        for(int k=0; k<middle_boards; ++k){
     6ac:	2f ef       	ldi	r18, 0xFF	; 255
     6ae:	e2 1a       	sub	r14, r18
     6b0:	f2 0a       	sbc	r15, r18
     6b2:	1e 14       	cp	r1, r14
     6b4:	1f 04       	cpc	r1, r15
     6b6:	0c f0       	brlt	.+2      	; 0x6ba <__stack+0x25b>
     6b8:	88 ce       	rjmp	.-752    	; 0x3ca <__vector_8+0x40>
                    conv_buffer[i] = '0';
                }
                tmp_vars[k]=atoi(conv_buffer);
            }
        }
        if(!failed) {
     6ba:	11 11       	cpse	r17, r1
     6bc:	b6 c0       	rjmp	.+364    	; 0x82a <__stack+0x3cb>
            lcd_clear();
     6be:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_clear>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     6c2:	00 e0       	ldi	r16, 0x00	; 0
     6c4:	10 e0       	ldi	r17, 0x00	; 0
                tmp_vars[k]=atoi(conv_buffer);
            }
        }
        if(!failed) {
            lcd_clear();
            leds = 1;
     6c6:	ee 24       	eor	r14, r14
     6c8:	e3 94       	inc	r14
     6ca:	f1 2c       	mov	r15, r1
            watering_pot=0;
     6cc:	c1 2c       	mov	r12, r1
     6ce:	d1 2c       	mov	r13, r1
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     6d0:	a4 c0       	rjmp	.+328    	; 0x81a <__stack+0x3bb>
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);
     6d2:	f8 01       	movw	r30, r16
     6d4:	ee 0f       	add	r30, r30
     6d6:	ff 1f       	adc	r31, r31
     6d8:	ee 0f       	add	r30, r30
     6da:	ff 1f       	adc	r31, r31
     6dc:	e1 5c       	subi	r30, 0xC1	; 193
     6de:	fc 4f       	sbci	r31, 0xFC	; 252
     6e0:	80 81       	ld	r24, Z
     6e2:	91 81       	ldd	r25, Z+1	; 0x01
     6e4:	22 81       	ldd	r18, Z+2	; 0x02
     6e6:	33 81       	ldd	r19, Z+3	; 0x03
     6e8:	3f 93       	push	r19
     6ea:	2f 93       	push	r18
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	1f 93       	push	r17
     6f2:	0f 93       	push	r16
     6f4:	86 e0       	ldi	r24, 0x06	; 6
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	9f 93       	push	r25
     6fa:	8f 93       	push	r24
     6fc:	83 e4       	ldi	r24, 0x43	; 67
     6fe:	93 e0       	ldi	r25, 0x03	; 3
     700:	9f 93       	push	r25
     702:	8f 93       	push	r24
     704:	0e 94 d6 09 	call	0x13ac	; 0x13ac <sprintf>

                for(int m=0; m<strlen(string_to_print); ++m)
     708:	8d b7       	in	r24, 0x3d	; 61
     70a:	9e b7       	in	r25, 0x3e	; 62
     70c:	0a 96       	adiw	r24, 0x0a	; 10
     70e:	0f b6       	in	r0, 0x3f	; 63
     710:	f8 94       	cli
     712:	9e bf       	out	0x3e, r25	; 62
     714:	0f be       	out	0x3f, r0	; 63
     716:	8d bf       	out	0x3d, r24	; 61
     718:	c0 e0       	ldi	r28, 0x00	; 0
     71a:	d0 e0       	ldi	r29, 0x00	; 0
     71c:	07 c0       	rjmp	.+14     	; 0x72c <__stack+0x2cd>
                    print(string_to_print[m]);
     71e:	fe 01       	movw	r30, r28
     720:	ed 5b       	subi	r30, 0xBD	; 189
     722:	fc 4f       	sbci	r31, 0xFC	; 252
     724:	80 81       	ld	r24, Z
     726:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <print>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);

                for(int m=0; m<strlen(string_to_print); ++m)
     72a:	21 96       	adiw	r28, 0x01	; 1
     72c:	e3 e4       	ldi	r30, 0x43	; 67
     72e:	f3 e0       	ldi	r31, 0x03	; 3
     730:	01 90       	ld	r0, Z+
     732:	00 20       	and	r0, r0
     734:	e9 f7       	brne	.-6      	; 0x730 <__stack+0x2d1>
     736:	31 97       	sbiw	r30, 0x01	; 1
     738:	e3 54       	subi	r30, 0x43	; 67
     73a:	f3 40       	sbci	r31, 0x03	; 3
     73c:	ce 17       	cp	r28, r30
     73e:	df 07       	cpc	r29, r31
     740:	70 f3       	brcs	.-36     	; 0x71e <__stack+0x2bf>
                    print(string_to_print[m]);

                if(moist_avgs[k]>=800){
     742:	f8 01       	movw	r30, r16
     744:	ee 0f       	add	r30, r30
     746:	ff 1f       	adc	r31, r31
     748:	e8 54       	subi	r30, 0x48	; 72
     74a:	fe 4f       	sbci	r31, 0xFE	; 254
     74c:	80 81       	ld	r24, Z
     74e:	91 81       	ldd	r25, Z+1	; 0x01
     750:	80 32       	cpi	r24, 0x20	; 32
     752:	23 e0       	ldi	r18, 0x03	; 3
     754:	92 07       	cpc	r25, r18
     756:	7c f0       	brlt	.+30     	; 0x776 <__stack+0x317>
                    strcpy(string_to_print, "VDRY ");
     758:	86 e0       	ldi	r24, 0x06	; 6
     75a:	e2 e1       	ldi	r30, 0x12	; 18
     75c:	f1 e0       	ldi	r31, 0x01	; 1
     75e:	a3 e4       	ldi	r26, 0x43	; 67
     760:	b3 e0       	ldi	r27, 0x03	; 3
     762:	01 90       	ld	r0, Z+
     764:	0d 92       	st	X+, r0
     766:	8a 95       	dec	r24
     768:	e1 f7       	brne	.-8      	; 0x762 <__stack+0x303>
                    dry[k]=1;
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	f8 01       	movw	r30, r16
     76e:	e2 54       	subi	r30, 0x42	; 66
     770:	fe 4f       	sbci	r31, 0xFE	; 254
     772:	80 83       	st	Z, r24
     774:	23 c0       	rjmp	.+70     	; 0x7bc <__stack+0x35d>
                }
                else if(moist_avgs[k]>=600){
     776:	88 35       	cpi	r24, 0x58	; 88
     778:	22 e0       	ldi	r18, 0x02	; 2
     77a:	92 07       	cpc	r25, r18
     77c:	7c f0       	brlt	.+30     	; 0x79c <__stack+0x33d>
                    dry[k]=1;
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	f8 01       	movw	r30, r16
     782:	e2 54       	subi	r30, 0x42	; 66
     784:	fe 4f       	sbci	r31, 0xFE	; 254
     786:	80 83       	st	Z, r24
                    strcpy(string_to_print, "DRY ");
     788:	85 e0       	ldi	r24, 0x05	; 5
     78a:	e3 e1       	ldi	r30, 0x13	; 19
     78c:	f1 e0       	ldi	r31, 0x01	; 1
     78e:	a3 e4       	ldi	r26, 0x43	; 67
     790:	b3 e0       	ldi	r27, 0x03	; 3
     792:	01 90       	ld	r0, Z+
     794:	0d 92       	st	X+, r0
     796:	8a 95       	dec	r24
     798:	e1 f7       	brne	.-8      	; 0x792 <__stack+0x333>
     79a:	10 c0       	rjmp	.+32     	; 0x7bc <__stack+0x35d>
                }
                else if(moist_avgs[k]>=370) {
     79c:	82 37       	cpi	r24, 0x72	; 114
     79e:	91 40       	sbci	r25, 0x01	; 1
     7a0:	84 f0       	brlt	.+32     	; 0x7c2 <__stack+0x363>
                    dry[k]=0;
     7a2:	f8 01       	movw	r30, r16
     7a4:	e2 54       	subi	r30, 0x42	; 66
     7a6:	fe 4f       	sbci	r31, 0xFE	; 254
     7a8:	10 82       	st	Z, r1
                    strcpy(string_to_print, "HUM ");
     7aa:	85 e0       	ldi	r24, 0x05	; 5
     7ac:	e9 e1       	ldi	r30, 0x19	; 25
     7ae:	f1 e0       	ldi	r31, 0x01	; 1
     7b0:	a3 e4       	ldi	r26, 0x43	; 67
     7b2:	b3 e0       	ldi	r27, 0x03	; 3
     7b4:	01 90       	ld	r0, Z+
     7b6:	0d 92       	st	X+, r0
     7b8:	8a 95       	dec	r24
     7ba:	e1 f7       	brne	.-8      	; 0x7b4 <__stack+0x355>
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
                sprintf(string_to_print, "T %d: %.1f ", k, tmp_avgs[k]);

                for(int m=0; m<strlen(string_to_print); ++m)
     7bc:	c0 e0       	ldi	r28, 0x00	; 0
     7be:	d0 e0       	ldi	r29, 0x00	; 0
     7c0:	15 c0       	rjmp	.+42     	; 0x7ec <__stack+0x38d>
                else if(moist_avgs[k]>=370) {
                    dry[k]=0;
                    strcpy(string_to_print, "HUM ");
                }
                else{
                    dry[k]=0;
     7c2:	f8 01       	movw	r30, r16
     7c4:	e2 54       	subi	r30, 0x42	; 66
     7c6:	fe 4f       	sbci	r31, 0xFE	; 254
     7c8:	10 82       	st	Z, r1
                    strcpy(string_to_print, "VHUM ");
     7ca:	86 e0       	ldi	r24, 0x06	; 6
     7cc:	e8 e1       	ldi	r30, 0x18	; 24
     7ce:	f1 e0       	ldi	r31, 0x01	; 1
     7d0:	a3 e4       	ldi	r26, 0x43	; 67
     7d2:	b3 e0       	ldi	r27, 0x03	; 3
     7d4:	01 90       	ld	r0, Z+
     7d6:	0d 92       	st	X+, r0
     7d8:	8a 95       	dec	r24
     7da:	e1 f7       	brne	.-8      	; 0x7d4 <__stack+0x375>
     7dc:	ef cf       	rjmp	.-34     	; 0x7bc <__stack+0x35d>
                }

                for(int m=0; m<strlen(string_to_print); ++m)
                    print(string_to_print[m]);
     7de:	fe 01       	movw	r30, r28
     7e0:	ed 5b       	subi	r30, 0xBD	; 189
     7e2:	fc 4f       	sbci	r31, 0xFC	; 252
     7e4:	80 81       	ld	r24, Z
     7e6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <print>
                else{
                    dry[k]=0;
                    strcpy(string_to_print, "VHUM ");
                }

                for(int m=0; m<strlen(string_to_print); ++m)
     7ea:	21 96       	adiw	r28, 0x01	; 1
     7ec:	e3 e4       	ldi	r30, 0x43	; 67
     7ee:	f3 e0       	ldi	r31, 0x03	; 3
     7f0:	01 90       	ld	r0, Z+
     7f2:	00 20       	and	r0, r0
     7f4:	e9 f7       	brne	.-6      	; 0x7f0 <__stack+0x391>
     7f6:	31 97       	sbiw	r30, 0x01	; 1
     7f8:	e3 54       	subi	r30, 0x43	; 67
     7fa:	f3 40       	sbci	r31, 0x03	; 3
     7fc:	ce 17       	cp	r28, r30
     7fe:	df 07       	cpc	r29, r31
     800:	70 f3       	brcs	.-36     	; 0x7de <__stack+0x37f>
                    print(string_to_print[m]);
                
                if(dry[k])
     802:	f8 01       	movw	r30, r16
     804:	e2 54       	subi	r30, 0x42	; 66
     806:	fe 4f       	sbci	r31, 0xFE	; 254
     808:	80 81       	ld	r24, Z
     80a:	88 23       	and	r24, r24
     80c:	11 f0       	breq	.+4      	; 0x812 <__stack+0x3b3>
                    watering_pot = watering_pot | leds;
     80e:	ce 28       	or	r12, r14
     810:	df 28       	or	r13, r15
                leds = leds << 1;
     812:	ee 0c       	add	r14, r14
     814:	ff 1c       	adc	r15, r15
        }
        if(!failed) {
            lcd_clear();
            leds = 1;
            watering_pot=0;
            for(int k=0; k<middle_boards; ++k){//fix temperature!!!!!!
     816:	0f 5f       	subi	r16, 0xFF	; 255
     818:	1f 4f       	sbci	r17, 0xFF	; 255
     81a:	10 16       	cp	r1, r16
     81c:	11 06       	cpc	r1, r17
     81e:	0c f0       	brlt	.+2      	; 0x822 <__stack+0x3c3>
     820:	58 cf       	rjmp	.-336    	; 0x6d2 <__stack+0x273>
                
                if(dry[k])
                    watering_pot = watering_pot | leds;
                leds = leds << 1;
            }
            PORTB = watering_pot;
     822:	c8 ba       	out	0x18, r12	; 24
     824:	02 c0       	rjmp	.+4      	; 0x82a <__stack+0x3cb>
        }
    }
    else
        first=false;
     826:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <first>
    lcd_clear();
     82a:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_clear>
    TCNT1 = 3036;
     82e:	8c ed       	ldi	r24, 0xDC	; 220
     830:	9b e0       	ldi	r25, 0x0B	; 11
     832:	9d bd       	out	0x2d, r25	; 45
     834:	8c bd       	out	0x2c, r24	; 44
}
     836:	ff 91       	pop	r31
     838:	ef 91       	pop	r30
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	bf 91       	pop	r27
     840:	af 91       	pop	r26
     842:	9f 91       	pop	r25
     844:	8f 91       	pop	r24
     846:	7f 91       	pop	r23
     848:	6f 91       	pop	r22
     84a:	5f 91       	pop	r21
     84c:	4f 91       	pop	r20
     84e:	3f 91       	pop	r19
     850:	2f 91       	pop	r18
     852:	1f 91       	pop	r17
     854:	0f 91       	pop	r16
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	0f 90       	pop	r0
     860:	0f be       	out	0x3f, r0	; 63
     862:	0f 90       	pop	r0
     864:	1f 90       	pop	r1
     866:	18 95       	reti

00000868 <main>:


int main() {
	first = true;
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <first>
    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable

    UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
     86e:	83 e3       	ldi	r24, 0x33	; 51
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <usart_init>
	usart_transmit('\n');
     876:	8a e0       	ldi	r24, 0x0A	; 10
     878:	0e 94 73 01 	call	0x2e6	; 0x2e6 <usart_transmit>
	
    for(int i=0; i<middle_boards; ++i) { //initialize_values
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	1e c0       	rjmp	.+60     	; 0x8be <main+0x56>
        moist_avgs[i]=0;
     882:	9c 01       	movw	r18, r24
     884:	22 0f       	add	r18, r18
     886:	33 1f       	adc	r19, r19
     888:	f9 01       	movw	r30, r18
     88a:	e8 54       	subi	r30, 0x48	; 72
     88c:	fe 4f       	sbci	r31, 0xFE	; 254
     88e:	11 82       	std	Z+1, r1	; 0x01
     890:	10 82       	st	Z, r1
        tmp_avgs[i]=0.0;
     892:	fc 01       	movw	r30, r24
     894:	ee 0f       	add	r30, r30
     896:	ff 1f       	adc	r31, r31
     898:	ee 0f       	add	r30, r30
     89a:	ff 1f       	adc	r31, r31
     89c:	e1 5c       	subi	r30, 0xC1	; 193
     89e:	fc 4f       	sbci	r31, 0xFC	; 252
     8a0:	10 82       	st	Z, r1
     8a2:	11 82       	std	Z+1, r1	; 0x01
     8a4:	12 82       	std	Z+2, r1	; 0x02
     8a6:	13 82       	std	Z+3, r1	; 0x03
        moist_vars[i]=0;
     8a8:	f9 01       	movw	r30, r18
     8aa:	e4 54       	subi	r30, 0x44	; 68
     8ac:	fe 4f       	sbci	r31, 0xFE	; 254
     8ae:	11 82       	std	Z+1, r1	; 0x01
     8b0:	10 82       	st	Z, r1
        tmp_vars[i]=0;
     8b2:	f9 01       	movw	r30, r18
     8b4:	e6 54       	subi	r30, 0x46	; 70
     8b6:	fe 4f       	sbci	r31, 0xFE	; 254
     8b8:	11 82       	std	Z+1, r1	; 0x01
     8ba:	10 82       	st	Z, r1
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)*/
	
	usart_init(MYUBRR);
	usart_transmit('\n');
	
    for(int i=0; i<middle_boards; ++i) { //initialize_values
     8bc:	01 96       	adiw	r24, 0x01	; 1
     8be:	18 16       	cp	r1, r24
     8c0:	19 06       	cpc	r1, r25
     8c2:	fc f6       	brge	.-66     	; 0x882 <main+0x1a>
        tmp_avgs[i]=0.0;
        moist_vars[i]=0;
        tmp_vars[i]=0;
    }

    strcpy(string_to_send, "ESP:restart\n");
     8c4:	8d e0       	ldi	r24, 0x0D	; 13
     8c6:	ee e1       	ldi	r30, 0x1E	; 30
     8c8:	f1 e0       	ldi	r31, 0x01	; 1
     8ca:	af eb       	ldi	r26, 0xBF	; 191
     8cc:	b1 e0       	ldi	r27, 0x01	; 1
     8ce:	01 90       	ld	r0, Z+
     8d0:	0d 92       	st	X+, r0
     8d2:	8a 95       	dec	r24
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <main+0x66>
    sendCommand(string_to_send);
     8d6:	8f eb       	ldi	r24, 0xBF	; 191
     8d8:	91 e0       	ldi	r25, 0x01	; 1
     8da:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
	
	usart_receive(); //wait until restart is complete
     8de:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>
	while(UCSRA&(1<<RXC))
     8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <main+0x80>
	usart_receive();
     8e4:	0e 94 77 01 	call	0x2ee	; 0x2ee <usart_receive>

    strcpy(string_to_send, "ESP:restart\n");
    sendCommand(string_to_send);
	
	usart_receive(); //wait until restart is complete
	while(UCSRA&(1<<RXC))
     8e8:	5f 99       	sbic	0x0b, 7	; 11
     8ea:	fc cf       	rjmp	.-8      	; 0x8e4 <main+0x7c>
	usart_receive();
	
	strcpy(string_to_send, "ESP:ssid:\"Main_Board\"\n");
     8ec:	87 e1       	ldi	r24, 0x17	; 23
     8ee:	eb e2       	ldi	r30, 0x2B	; 43
     8f0:	f1 e0       	ldi	r31, 0x01	; 1
     8f2:	af eb       	ldi	r26, 0xBF	; 191
     8f4:	b1 e0       	ldi	r27, 0x01	; 1
     8f6:	01 90       	ld	r0, Z+
     8f8:	0d 92       	st	X+, r0
     8fa:	8a 95       	dec	r24
     8fc:	e1 f7       	brne	.-8      	; 0x8f6 <main+0x8e>
	sendCommand(string_to_send);
     8fe:	8f eb       	ldi	r24, 0xBF	; 191
     900:	91 e0       	ldi	r25, 0x01	; 1
     902:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
    sendCommand(string_to_send);

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
    sendCommand(string_to_send);*/

    strcpy(string_to_send, "ESP:addSensor:\"Moist_avg\"\n");
     906:	8b e1       	ldi	r24, 0x1B	; 27
     908:	e2 e4       	ldi	r30, 0x42	; 66
     90a:	f1 e0       	ldi	r31, 0x01	; 1
     90c:	af eb       	ldi	r26, 0xBF	; 191
     90e:	b1 e0       	ldi	r27, 0x01	; 1
     910:	01 90       	ld	r0, Z+
     912:	0d 92       	st	X+, r0
     914:	8a 95       	dec	r24
     916:	e1 f7       	brne	.-8      	; 0x910 <main+0xa8>
    sendCommand(string_to_send);
     918:	8f eb       	ldi	r24, 0xBF	; 191
     91a:	91 e0       	ldi	r25, 0x01	; 1
     91c:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_avg\"\n");
     920:	89 e1       	ldi	r24, 0x19	; 25
     922:	ed e5       	ldi	r30, 0x5D	; 93
     924:	f1 e0       	ldi	r31, 0x01	; 1
     926:	af eb       	ldi	r26, 0xBF	; 191
     928:	b1 e0       	ldi	r27, 0x01	; 1
     92a:	01 90       	ld	r0, Z+
     92c:	0d 92       	st	X+, r0
     92e:	8a 95       	dec	r24
     930:	e1 f7       	brne	.-8      	; 0x92a <main+0xc2>
    sendCommand(string_to_send);
     932:	8f eb       	ldi	r24, 0xBF	; 191
     934:	91 e0       	ldi	r25, 0x01	; 1
     936:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Moist_var\"\n");
     93a:	8b e1       	ldi	r24, 0x1B	; 27
     93c:	e6 e7       	ldi	r30, 0x76	; 118
     93e:	f1 e0       	ldi	r31, 0x01	; 1
     940:	af eb       	ldi	r26, 0xBF	; 191
     942:	b1 e0       	ldi	r27, 0x01	; 1
     944:	01 90       	ld	r0, Z+
     946:	0d 92       	st	X+, r0
     948:	8a 95       	dec	r24
     94a:	e1 f7       	brne	.-8      	; 0x944 <main+0xdc>
    sendCommand(string_to_send);
     94c:	8f eb       	ldi	r24, 0xBF	; 191
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_var\"\n");
     954:	89 e1       	ldi	r24, 0x19	; 25
     956:	e1 e9       	ldi	r30, 0x91	; 145
     958:	f1 e0       	ldi	r31, 0x01	; 1
     95a:	af eb       	ldi	r26, 0xBF	; 191
     95c:	b1 e0       	ldi	r27, 0x01	; 1
     95e:	01 90       	ld	r0, Z+
     960:	0d 92       	st	X+, r0
     962:	8a 95       	dec	r24
     964:	e1 f7       	brne	.-8      	; 0x95e <main+0xf6>
    sendCommand(string_to_send);
     966:	8f eb       	ldi	r24, 0xBF	; 191
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>
	
	strcpy(string_to_send, "ESP:APStart\n");
     96e:	8d e0       	ldi	r24, 0x0D	; 13
     970:	ea ea       	ldi	r30, 0xAA	; 170
     972:	f1 e0       	ldi	r31, 0x01	; 1
     974:	af eb       	ldi	r26, 0xBF	; 191
     976:	b1 e0       	ldi	r27, 0x01	; 1
     978:	01 90       	ld	r0, Z+
     97a:	0d 92       	st	X+, r0
     97c:	8a 95       	dec	r24
     97e:	e1 f7       	brne	.-8      	; 0x978 <main+0x110>
	sendCommand(string_to_send);
     980:	8f eb       	ldi	r24, 0xBF	; 191
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	0e 94 98 01 	call	0x330	; 0x330 <sendCommand>

    TCCR1B = 0x05; //CK/1024
     988:	85 e0       	ldi	r24, 0x05	; 5
     98a:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8 seconds
     98c:	8c ed       	ldi	r24, 0xDC	; 220
     98e:	9b e0       	ldi	r25, 0x0B	; 11
     990:	9d bd       	out	0x2d, r25	; 45
     992:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     994:	84 e0       	ldi	r24, 0x04	; 4
     996:	89 bf       	out	0x39, r24	; 57
    sei();
     998:	78 94       	sei
     99a:	ff cf       	rjmp	.-2      	; 0x99a <main+0x132>

0000099c <vfprintf>:
     99c:	a0 e1       	ldi	r26, 0x10	; 16
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	e4 ed       	ldi	r30, 0xD4	; 212
     9a2:	f4 e0       	ldi	r31, 0x04	; 4
     9a4:	0c 94 4b 08 	jmp	0x1096	; 0x1096 <__prologue_saves__>
     9a8:	7c 01       	movw	r14, r24
     9aa:	1b 01       	movw	r2, r22
     9ac:	6a 01       	movw	r12, r20
     9ae:	fc 01       	movw	r30, r24
     9b0:	17 82       	std	Z+7, r1	; 0x07
     9b2:	16 82       	std	Z+6, r1	; 0x06
     9b4:	83 81       	ldd	r24, Z+3	; 0x03
     9b6:	81 ff       	sbrs	r24, 1
     9b8:	44 c3       	rjmp	.+1672   	; 0x1042 <vfprintf+0x6a6>
     9ba:	9e 01       	movw	r18, r28
     9bc:	2f 5f       	subi	r18, 0xFF	; 255
     9be:	3f 4f       	sbci	r19, 0xFF	; 255
     9c0:	39 01       	movw	r6, r18
     9c2:	f7 01       	movw	r30, r14
     9c4:	93 81       	ldd	r25, Z+3	; 0x03
     9c6:	f1 01       	movw	r30, r2
     9c8:	93 fd       	sbrc	r25, 3
     9ca:	85 91       	lpm	r24, Z+
     9cc:	93 ff       	sbrs	r25, 3
     9ce:	81 91       	ld	r24, Z+
     9d0:	1f 01       	movw	r2, r30
     9d2:	88 23       	and	r24, r24
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <vfprintf+0x3c>
     9d6:	31 c3       	rjmp	.+1634   	; 0x103a <vfprintf+0x69e>
     9d8:	85 32       	cpi	r24, 0x25	; 37
     9da:	39 f4       	brne	.+14     	; 0x9ea <vfprintf+0x4e>
     9dc:	93 fd       	sbrc	r25, 3
     9de:	85 91       	lpm	r24, Z+
     9e0:	93 ff       	sbrs	r25, 3
     9e2:	81 91       	ld	r24, Z+
     9e4:	1f 01       	movw	r2, r30
     9e6:	85 32       	cpi	r24, 0x25	; 37
     9e8:	39 f4       	brne	.+14     	; 0x9f8 <vfprintf+0x5c>
     9ea:	b7 01       	movw	r22, r14
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     9f2:	56 01       	movw	r10, r12
     9f4:	65 01       	movw	r12, r10
     9f6:	e5 cf       	rjmp	.-54     	; 0x9c2 <vfprintf+0x26>
     9f8:	10 e0       	ldi	r17, 0x00	; 0
     9fa:	51 2c       	mov	r5, r1
     9fc:	91 2c       	mov	r9, r1
     9fe:	ff e1       	ldi	r31, 0x1F	; 31
     a00:	f9 15       	cp	r31, r9
     a02:	d8 f0       	brcs	.+54     	; 0xa3a <vfprintf+0x9e>
     a04:	8b 32       	cpi	r24, 0x2B	; 43
     a06:	79 f0       	breq	.+30     	; 0xa26 <vfprintf+0x8a>
     a08:	38 f4       	brcc	.+14     	; 0xa18 <vfprintf+0x7c>
     a0a:	80 32       	cpi	r24, 0x20	; 32
     a0c:	79 f0       	breq	.+30     	; 0xa2c <vfprintf+0x90>
     a0e:	83 32       	cpi	r24, 0x23	; 35
     a10:	a1 f4       	brne	.+40     	; 0xa3a <vfprintf+0x9e>
     a12:	f9 2d       	mov	r31, r9
     a14:	f0 61       	ori	r31, 0x10	; 16
     a16:	2e c0       	rjmp	.+92     	; 0xa74 <vfprintf+0xd8>
     a18:	8d 32       	cpi	r24, 0x2D	; 45
     a1a:	61 f0       	breq	.+24     	; 0xa34 <vfprintf+0x98>
     a1c:	80 33       	cpi	r24, 0x30	; 48
     a1e:	69 f4       	brne	.+26     	; 0xa3a <vfprintf+0x9e>
     a20:	29 2d       	mov	r18, r9
     a22:	21 60       	ori	r18, 0x01	; 1
     a24:	2d c0       	rjmp	.+90     	; 0xa80 <vfprintf+0xe4>
     a26:	39 2d       	mov	r19, r9
     a28:	32 60       	ori	r19, 0x02	; 2
     a2a:	93 2e       	mov	r9, r19
     a2c:	89 2d       	mov	r24, r9
     a2e:	84 60       	ori	r24, 0x04	; 4
     a30:	98 2e       	mov	r9, r24
     a32:	2a c0       	rjmp	.+84     	; 0xa88 <vfprintf+0xec>
     a34:	e9 2d       	mov	r30, r9
     a36:	e8 60       	ori	r30, 0x08	; 8
     a38:	15 c0       	rjmp	.+42     	; 0xa64 <vfprintf+0xc8>
     a3a:	97 fc       	sbrc	r9, 7
     a3c:	2d c0       	rjmp	.+90     	; 0xa98 <vfprintf+0xfc>
     a3e:	20 ed       	ldi	r18, 0xD0	; 208
     a40:	28 0f       	add	r18, r24
     a42:	2a 30       	cpi	r18, 0x0A	; 10
     a44:	88 f4       	brcc	.+34     	; 0xa68 <vfprintf+0xcc>
     a46:	96 fe       	sbrs	r9, 6
     a48:	06 c0       	rjmp	.+12     	; 0xa56 <vfprintf+0xba>
     a4a:	3a e0       	ldi	r19, 0x0A	; 10
     a4c:	13 9f       	mul	r17, r19
     a4e:	20 0d       	add	r18, r0
     a50:	11 24       	eor	r1, r1
     a52:	12 2f       	mov	r17, r18
     a54:	19 c0       	rjmp	.+50     	; 0xa88 <vfprintf+0xec>
     a56:	8a e0       	ldi	r24, 0x0A	; 10
     a58:	58 9e       	mul	r5, r24
     a5a:	20 0d       	add	r18, r0
     a5c:	11 24       	eor	r1, r1
     a5e:	52 2e       	mov	r5, r18
     a60:	e9 2d       	mov	r30, r9
     a62:	e0 62       	ori	r30, 0x20	; 32
     a64:	9e 2e       	mov	r9, r30
     a66:	10 c0       	rjmp	.+32     	; 0xa88 <vfprintf+0xec>
     a68:	8e 32       	cpi	r24, 0x2E	; 46
     a6a:	31 f4       	brne	.+12     	; 0xa78 <vfprintf+0xdc>
     a6c:	96 fc       	sbrc	r9, 6
     a6e:	e5 c2       	rjmp	.+1482   	; 0x103a <vfprintf+0x69e>
     a70:	f9 2d       	mov	r31, r9
     a72:	f0 64       	ori	r31, 0x40	; 64
     a74:	9f 2e       	mov	r9, r31
     a76:	08 c0       	rjmp	.+16     	; 0xa88 <vfprintf+0xec>
     a78:	8c 36       	cpi	r24, 0x6C	; 108
     a7a:	21 f4       	brne	.+8      	; 0xa84 <vfprintf+0xe8>
     a7c:	29 2d       	mov	r18, r9
     a7e:	20 68       	ori	r18, 0x80	; 128
     a80:	92 2e       	mov	r9, r18
     a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0xec>
     a84:	88 36       	cpi	r24, 0x68	; 104
     a86:	41 f4       	brne	.+16     	; 0xa98 <vfprintf+0xfc>
     a88:	f1 01       	movw	r30, r2
     a8a:	93 fd       	sbrc	r25, 3
     a8c:	85 91       	lpm	r24, Z+
     a8e:	93 ff       	sbrs	r25, 3
     a90:	81 91       	ld	r24, Z+
     a92:	1f 01       	movw	r2, r30
     a94:	81 11       	cpse	r24, r1
     a96:	b3 cf       	rjmp	.-154    	; 0x9fe <vfprintf+0x62>
     a98:	9b eb       	ldi	r25, 0xBB	; 187
     a9a:	98 0f       	add	r25, r24
     a9c:	93 30       	cpi	r25, 0x03	; 3
     a9e:	20 f4       	brcc	.+8      	; 0xaa8 <vfprintf+0x10c>
     aa0:	99 2d       	mov	r25, r9
     aa2:	90 61       	ori	r25, 0x10	; 16
     aa4:	80 5e       	subi	r24, 0xE0	; 224
     aa6:	07 c0       	rjmp	.+14     	; 0xab6 <vfprintf+0x11a>
     aa8:	9b e9       	ldi	r25, 0x9B	; 155
     aaa:	98 0f       	add	r25, r24
     aac:	93 30       	cpi	r25, 0x03	; 3
     aae:	08 f0       	brcs	.+2      	; 0xab2 <vfprintf+0x116>
     ab0:	66 c1       	rjmp	.+716    	; 0xd7e <vfprintf+0x3e2>
     ab2:	99 2d       	mov	r25, r9
     ab4:	9f 7e       	andi	r25, 0xEF	; 239
     ab6:	96 ff       	sbrs	r25, 6
     ab8:	16 e0       	ldi	r17, 0x06	; 6
     aba:	9f 73       	andi	r25, 0x3F	; 63
     abc:	99 2e       	mov	r9, r25
     abe:	85 36       	cpi	r24, 0x65	; 101
     ac0:	19 f4       	brne	.+6      	; 0xac8 <vfprintf+0x12c>
     ac2:	90 64       	ori	r25, 0x40	; 64
     ac4:	99 2e       	mov	r9, r25
     ac6:	08 c0       	rjmp	.+16     	; 0xad8 <vfprintf+0x13c>
     ac8:	86 36       	cpi	r24, 0x66	; 102
     aca:	21 f4       	brne	.+8      	; 0xad4 <vfprintf+0x138>
     acc:	39 2f       	mov	r19, r25
     ace:	30 68       	ori	r19, 0x80	; 128
     ad0:	93 2e       	mov	r9, r19
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <vfprintf+0x13c>
     ad4:	11 11       	cpse	r17, r1
     ad6:	11 50       	subi	r17, 0x01	; 1
     ad8:	97 fe       	sbrs	r9, 7
     ada:	07 c0       	rjmp	.+14     	; 0xaea <vfprintf+0x14e>
     adc:	1c 33       	cpi	r17, 0x3C	; 60
     ade:	50 f4       	brcc	.+20     	; 0xaf4 <vfprintf+0x158>
     ae0:	44 24       	eor	r4, r4
     ae2:	43 94       	inc	r4
     ae4:	41 0e       	add	r4, r17
     ae6:	27 e0       	ldi	r18, 0x07	; 7
     ae8:	0b c0       	rjmp	.+22     	; 0xb00 <vfprintf+0x164>
     aea:	18 30       	cpi	r17, 0x08	; 8
     aec:	38 f0       	brcs	.+14     	; 0xafc <vfprintf+0x160>
     aee:	27 e0       	ldi	r18, 0x07	; 7
     af0:	17 e0       	ldi	r17, 0x07	; 7
     af2:	05 c0       	rjmp	.+10     	; 0xafe <vfprintf+0x162>
     af4:	27 e0       	ldi	r18, 0x07	; 7
     af6:	9c e3       	ldi	r25, 0x3C	; 60
     af8:	49 2e       	mov	r4, r25
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <vfprintf+0x164>
     afc:	21 2f       	mov	r18, r17
     afe:	41 2c       	mov	r4, r1
     b00:	56 01       	movw	r10, r12
     b02:	84 e0       	ldi	r24, 0x04	; 4
     b04:	a8 0e       	add	r10, r24
     b06:	b1 1c       	adc	r11, r1
     b08:	f6 01       	movw	r30, r12
     b0a:	60 81       	ld	r22, Z
     b0c:	71 81       	ldd	r23, Z+1	; 0x01
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	04 2d       	mov	r16, r4
     b14:	a3 01       	movw	r20, r6
     b16:	0e 94 a4 08 	call	0x1148	; 0x1148 <__ftoa_engine>
     b1a:	6c 01       	movw	r12, r24
     b1c:	f9 81       	ldd	r31, Y+1	; 0x01
     b1e:	fc 87       	std	Y+12, r31	; 0x0c
     b20:	f0 ff       	sbrs	r31, 0
     b22:	02 c0       	rjmp	.+4      	; 0xb28 <vfprintf+0x18c>
     b24:	f3 ff       	sbrs	r31, 3
     b26:	06 c0       	rjmp	.+12     	; 0xb34 <vfprintf+0x198>
     b28:	91 fc       	sbrc	r9, 1
     b2a:	06 c0       	rjmp	.+12     	; 0xb38 <vfprintf+0x19c>
     b2c:	92 fe       	sbrs	r9, 2
     b2e:	06 c0       	rjmp	.+12     	; 0xb3c <vfprintf+0x1a0>
     b30:	00 e2       	ldi	r16, 0x20	; 32
     b32:	05 c0       	rjmp	.+10     	; 0xb3e <vfprintf+0x1a2>
     b34:	0d e2       	ldi	r16, 0x2D	; 45
     b36:	03 c0       	rjmp	.+6      	; 0xb3e <vfprintf+0x1a2>
     b38:	0b e2       	ldi	r16, 0x2B	; 43
     b3a:	01 c0       	rjmp	.+2      	; 0xb3e <vfprintf+0x1a2>
     b3c:	00 e0       	ldi	r16, 0x00	; 0
     b3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     b40:	8c 70       	andi	r24, 0x0C	; 12
     b42:	19 f0       	breq	.+6      	; 0xb4a <vfprintf+0x1ae>
     b44:	01 11       	cpse	r16, r1
     b46:	5a c2       	rjmp	.+1204   	; 0xffc <vfprintf+0x660>
     b48:	9b c2       	rjmp	.+1334   	; 0x1080 <vfprintf+0x6e4>
     b4a:	97 fe       	sbrs	r9, 7
     b4c:	10 c0       	rjmp	.+32     	; 0xb6e <vfprintf+0x1d2>
     b4e:	4c 0c       	add	r4, r12
     b50:	fc 85       	ldd	r31, Y+12	; 0x0c
     b52:	f4 ff       	sbrs	r31, 4
     b54:	04 c0       	rjmp	.+8      	; 0xb5e <vfprintf+0x1c2>
     b56:	8a 81       	ldd	r24, Y+2	; 0x02
     b58:	81 33       	cpi	r24, 0x31	; 49
     b5a:	09 f4       	brne	.+2      	; 0xb5e <vfprintf+0x1c2>
     b5c:	4a 94       	dec	r4
     b5e:	14 14       	cp	r1, r4
     b60:	74 f5       	brge	.+92     	; 0xbbe <vfprintf+0x222>
     b62:	28 e0       	ldi	r18, 0x08	; 8
     b64:	24 15       	cp	r18, r4
     b66:	78 f5       	brcc	.+94     	; 0xbc6 <vfprintf+0x22a>
     b68:	88 e0       	ldi	r24, 0x08	; 8
     b6a:	48 2e       	mov	r4, r24
     b6c:	2c c0       	rjmp	.+88     	; 0xbc6 <vfprintf+0x22a>
     b6e:	96 fc       	sbrc	r9, 6
     b70:	2a c0       	rjmp	.+84     	; 0xbc6 <vfprintf+0x22a>
     b72:	81 2f       	mov	r24, r17
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	8c 15       	cp	r24, r12
     b78:	9d 05       	cpc	r25, r13
     b7a:	9c f0       	brlt	.+38     	; 0xba2 <vfprintf+0x206>
     b7c:	3c ef       	ldi	r19, 0xFC	; 252
     b7e:	c3 16       	cp	r12, r19
     b80:	3f ef       	ldi	r19, 0xFF	; 255
     b82:	d3 06       	cpc	r13, r19
     b84:	74 f0       	brlt	.+28     	; 0xba2 <vfprintf+0x206>
     b86:	89 2d       	mov	r24, r9
     b88:	80 68       	ori	r24, 0x80	; 128
     b8a:	98 2e       	mov	r9, r24
     b8c:	0a c0       	rjmp	.+20     	; 0xba2 <vfprintf+0x206>
     b8e:	e2 e0       	ldi	r30, 0x02	; 2
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	ec 0f       	add	r30, r28
     b94:	fd 1f       	adc	r31, r29
     b96:	e1 0f       	add	r30, r17
     b98:	f1 1d       	adc	r31, r1
     b9a:	80 81       	ld	r24, Z
     b9c:	80 33       	cpi	r24, 0x30	; 48
     b9e:	19 f4       	brne	.+6      	; 0xba6 <vfprintf+0x20a>
     ba0:	11 50       	subi	r17, 0x01	; 1
     ba2:	11 11       	cpse	r17, r1
     ba4:	f4 cf       	rjmp	.-24     	; 0xb8e <vfprintf+0x1f2>
     ba6:	97 fe       	sbrs	r9, 7
     ba8:	0e c0       	rjmp	.+28     	; 0xbc6 <vfprintf+0x22a>
     baa:	44 24       	eor	r4, r4
     bac:	43 94       	inc	r4
     bae:	41 0e       	add	r4, r17
     bb0:	81 2f       	mov	r24, r17
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	c8 16       	cp	r12, r24
     bb6:	d9 06       	cpc	r13, r25
     bb8:	2c f4       	brge	.+10     	; 0xbc4 <vfprintf+0x228>
     bba:	1c 19       	sub	r17, r12
     bbc:	04 c0       	rjmp	.+8      	; 0xbc6 <vfprintf+0x22a>
     bbe:	44 24       	eor	r4, r4
     bc0:	43 94       	inc	r4
     bc2:	01 c0       	rjmp	.+2      	; 0xbc6 <vfprintf+0x22a>
     bc4:	10 e0       	ldi	r17, 0x00	; 0
     bc6:	97 fe       	sbrs	r9, 7
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <vfprintf+0x23a>
     bca:	1c 14       	cp	r1, r12
     bcc:	1d 04       	cpc	r1, r13
     bce:	34 f4       	brge	.+12     	; 0xbdc <vfprintf+0x240>
     bd0:	c6 01       	movw	r24, r12
     bd2:	01 96       	adiw	r24, 0x01	; 1
     bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <vfprintf+0x244>
     bd6:	85 e0       	ldi	r24, 0x05	; 5
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x244>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	01 11       	cpse	r16, r1
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	11 23       	and	r17, r17
     be6:	31 f0       	breq	.+12     	; 0xbf4 <vfprintf+0x258>
     be8:	21 2f       	mov	r18, r17
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	2f 5f       	subi	r18, 0xFF	; 255
     bee:	3f 4f       	sbci	r19, 0xFF	; 255
     bf0:	82 0f       	add	r24, r18
     bf2:	93 1f       	adc	r25, r19
     bf4:	25 2d       	mov	r18, r5
     bf6:	30 e0       	ldi	r19, 0x00	; 0
     bf8:	82 17       	cp	r24, r18
     bfa:	93 07       	cpc	r25, r19
     bfc:	14 f4       	brge	.+4      	; 0xc02 <vfprintf+0x266>
     bfe:	58 1a       	sub	r5, r24
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <vfprintf+0x268>
     c02:	51 2c       	mov	r5, r1
     c04:	89 2d       	mov	r24, r9
     c06:	89 70       	andi	r24, 0x09	; 9
     c08:	49 f4       	brne	.+18     	; 0xc1c <vfprintf+0x280>
     c0a:	55 20       	and	r5, r5
     c0c:	39 f0       	breq	.+14     	; 0xc1c <vfprintf+0x280>
     c0e:	b7 01       	movw	r22, r14
     c10:	80 e2       	ldi	r24, 0x20	; 32
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     c18:	5a 94       	dec	r5
     c1a:	f7 cf       	rjmp	.-18     	; 0xc0a <vfprintf+0x26e>
     c1c:	00 23       	and	r16, r16
     c1e:	29 f0       	breq	.+10     	; 0xc2a <vfprintf+0x28e>
     c20:	b7 01       	movw	r22, r14
     c22:	80 2f       	mov	r24, r16
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     c2a:	93 fc       	sbrc	r9, 3
     c2c:	09 c0       	rjmp	.+18     	; 0xc40 <vfprintf+0x2a4>
     c2e:	55 20       	and	r5, r5
     c30:	39 f0       	breq	.+14     	; 0xc40 <vfprintf+0x2a4>
     c32:	b7 01       	movw	r22, r14
     c34:	80 e3       	ldi	r24, 0x30	; 48
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     c3c:	5a 94       	dec	r5
     c3e:	f7 cf       	rjmp	.-18     	; 0xc2e <vfprintf+0x292>
     c40:	97 fe       	sbrs	r9, 7
     c42:	4c c0       	rjmp	.+152    	; 0xcdc <vfprintf+0x340>
     c44:	46 01       	movw	r8, r12
     c46:	d7 fe       	sbrs	r13, 7
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <vfprintf+0x2b2>
     c4a:	81 2c       	mov	r8, r1
     c4c:	91 2c       	mov	r9, r1
     c4e:	c6 01       	movw	r24, r12
     c50:	88 19       	sub	r24, r8
     c52:	99 09       	sbc	r25, r9
     c54:	f3 01       	movw	r30, r6
     c56:	e8 0f       	add	r30, r24
     c58:	f9 1f       	adc	r31, r25
     c5a:	fe 87       	std	Y+14, r31	; 0x0e
     c5c:	ed 87       	std	Y+13, r30	; 0x0d
     c5e:	96 01       	movw	r18, r12
     c60:	24 19       	sub	r18, r4
     c62:	31 09       	sbc	r19, r1
     c64:	38 8b       	std	Y+16, r19	; 0x10
     c66:	2f 87       	std	Y+15, r18	; 0x0f
     c68:	01 2f       	mov	r16, r17
     c6a:	10 e0       	ldi	r17, 0x00	; 0
     c6c:	11 95       	neg	r17
     c6e:	01 95       	neg	r16
     c70:	11 09       	sbc	r17, r1
     c72:	3f ef       	ldi	r19, 0xFF	; 255
     c74:	83 16       	cp	r8, r19
     c76:	93 06       	cpc	r9, r19
     c78:	29 f4       	brne	.+10     	; 0xc84 <vfprintf+0x2e8>
     c7a:	b7 01       	movw	r22, r14
     c7c:	8e e2       	ldi	r24, 0x2E	; 46
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     c84:	c8 14       	cp	r12, r8
     c86:	d9 04       	cpc	r13, r9
     c88:	4c f0       	brlt	.+18     	; 0xc9c <vfprintf+0x300>
     c8a:	8f 85       	ldd	r24, Y+15	; 0x0f
     c8c:	98 89       	ldd	r25, Y+16	; 0x10
     c8e:	88 15       	cp	r24, r8
     c90:	99 05       	cpc	r25, r9
     c92:	24 f4       	brge	.+8      	; 0xc9c <vfprintf+0x300>
     c94:	ed 85       	ldd	r30, Y+13	; 0x0d
     c96:	fe 85       	ldd	r31, Y+14	; 0x0e
     c98:	81 81       	ldd	r24, Z+1	; 0x01
     c9a:	01 c0       	rjmp	.+2      	; 0xc9e <vfprintf+0x302>
     c9c:	80 e3       	ldi	r24, 0x30	; 48
     c9e:	f1 e0       	ldi	r31, 0x01	; 1
     ca0:	8f 1a       	sub	r8, r31
     ca2:	91 08       	sbc	r9, r1
     ca4:	2d 85       	ldd	r18, Y+13	; 0x0d
     ca6:	3e 85       	ldd	r19, Y+14	; 0x0e
     ca8:	2f 5f       	subi	r18, 0xFF	; 255
     caa:	3f 4f       	sbci	r19, 0xFF	; 255
     cac:	3e 87       	std	Y+14, r19	; 0x0e
     cae:	2d 87       	std	Y+13, r18	; 0x0d
     cb0:	80 16       	cp	r8, r16
     cb2:	91 06       	cpc	r9, r17
     cb4:	2c f0       	brlt	.+10     	; 0xcc0 <vfprintf+0x324>
     cb6:	b7 01       	movw	r22, r14
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     cbe:	d9 cf       	rjmp	.-78     	; 0xc72 <vfprintf+0x2d6>
     cc0:	c8 14       	cp	r12, r8
     cc2:	d9 04       	cpc	r13, r9
     cc4:	41 f4       	brne	.+16     	; 0xcd6 <vfprintf+0x33a>
     cc6:	9a 81       	ldd	r25, Y+2	; 0x02
     cc8:	96 33       	cpi	r25, 0x36	; 54
     cca:	20 f4       	brcc	.+8      	; 0xcd4 <vfprintf+0x338>
     ccc:	95 33       	cpi	r25, 0x35	; 53
     cce:	19 f4       	brne	.+6      	; 0xcd6 <vfprintf+0x33a>
     cd0:	3c 85       	ldd	r19, Y+12	; 0x0c
     cd2:	34 ff       	sbrs	r19, 4
     cd4:	81 e3       	ldi	r24, 0x31	; 49
     cd6:	b7 01       	movw	r22, r14
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	4e c0       	rjmp	.+156    	; 0xd78 <vfprintf+0x3dc>
     cdc:	8a 81       	ldd	r24, Y+2	; 0x02
     cde:	81 33       	cpi	r24, 0x31	; 49
     ce0:	19 f0       	breq	.+6      	; 0xce8 <vfprintf+0x34c>
     ce2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce4:	9f 7e       	andi	r25, 0xEF	; 239
     ce6:	9c 87       	std	Y+12, r25	; 0x0c
     ce8:	b7 01       	movw	r22, r14
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     cf0:	11 11       	cpse	r17, r1
     cf2:	05 c0       	rjmp	.+10     	; 0xcfe <vfprintf+0x362>
     cf4:	94 fc       	sbrc	r9, 4
     cf6:	18 c0       	rjmp	.+48     	; 0xd28 <vfprintf+0x38c>
     cf8:	85 e6       	ldi	r24, 0x65	; 101
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	17 c0       	rjmp	.+46     	; 0xd2c <vfprintf+0x390>
     cfe:	b7 01       	movw	r22, r14
     d00:	8e e2       	ldi	r24, 0x2E	; 46
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d08:	1e 5f       	subi	r17, 0xFE	; 254
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	01 e0       	ldi	r16, 0x01	; 1
     d0e:	08 0f       	add	r16, r24
     d10:	f3 01       	movw	r30, r6
     d12:	e8 0f       	add	r30, r24
     d14:	f1 1d       	adc	r31, r1
     d16:	80 81       	ld	r24, Z
     d18:	b7 01       	movw	r22, r14
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d20:	80 2f       	mov	r24, r16
     d22:	01 13       	cpse	r16, r17
     d24:	f3 cf       	rjmp	.-26     	; 0xd0c <vfprintf+0x370>
     d26:	e6 cf       	rjmp	.-52     	; 0xcf4 <vfprintf+0x358>
     d28:	85 e4       	ldi	r24, 0x45	; 69
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	b7 01       	movw	r22, r14
     d2e:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d32:	d7 fc       	sbrc	r13, 7
     d34:	06 c0       	rjmp	.+12     	; 0xd42 <vfprintf+0x3a6>
     d36:	c1 14       	cp	r12, r1
     d38:	d1 04       	cpc	r13, r1
     d3a:	41 f4       	brne	.+16     	; 0xd4c <vfprintf+0x3b0>
     d3c:	ec 85       	ldd	r30, Y+12	; 0x0c
     d3e:	e4 ff       	sbrs	r30, 4
     d40:	05 c0       	rjmp	.+10     	; 0xd4c <vfprintf+0x3b0>
     d42:	d1 94       	neg	r13
     d44:	c1 94       	neg	r12
     d46:	d1 08       	sbc	r13, r1
     d48:	8d e2       	ldi	r24, 0x2D	; 45
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <vfprintf+0x3b2>
     d4c:	8b e2       	ldi	r24, 0x2B	; 43
     d4e:	b7 01       	movw	r22, r14
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d56:	80 e3       	ldi	r24, 0x30	; 48
     d58:	2a e0       	ldi	r18, 0x0A	; 10
     d5a:	c2 16       	cp	r12, r18
     d5c:	d1 04       	cpc	r13, r1
     d5e:	2c f0       	brlt	.+10     	; 0xd6a <vfprintf+0x3ce>
     d60:	8f 5f       	subi	r24, 0xFF	; 255
     d62:	fa e0       	ldi	r31, 0x0A	; 10
     d64:	cf 1a       	sub	r12, r31
     d66:	d1 08       	sbc	r13, r1
     d68:	f7 cf       	rjmp	.-18     	; 0xd58 <vfprintf+0x3bc>
     d6a:	b7 01       	movw	r22, r14
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d72:	b7 01       	movw	r22, r14
     d74:	c6 01       	movw	r24, r12
     d76:	c0 96       	adiw	r24, 0x30	; 48
     d78:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     d7c:	54 c1       	rjmp	.+680    	; 0x1026 <vfprintf+0x68a>
     d7e:	83 36       	cpi	r24, 0x63	; 99
     d80:	31 f0       	breq	.+12     	; 0xd8e <vfprintf+0x3f2>
     d82:	83 37       	cpi	r24, 0x73	; 115
     d84:	79 f0       	breq	.+30     	; 0xda4 <vfprintf+0x408>
     d86:	83 35       	cpi	r24, 0x53	; 83
     d88:	09 f0       	breq	.+2      	; 0xd8c <vfprintf+0x3f0>
     d8a:	56 c0       	rjmp	.+172    	; 0xe38 <vfprintf+0x49c>
     d8c:	20 c0       	rjmp	.+64     	; 0xdce <vfprintf+0x432>
     d8e:	56 01       	movw	r10, r12
     d90:	32 e0       	ldi	r19, 0x02	; 2
     d92:	a3 0e       	add	r10, r19
     d94:	b1 1c       	adc	r11, r1
     d96:	f6 01       	movw	r30, r12
     d98:	80 81       	ld	r24, Z
     d9a:	89 83       	std	Y+1, r24	; 0x01
     d9c:	01 e0       	ldi	r16, 0x01	; 1
     d9e:	10 e0       	ldi	r17, 0x00	; 0
     da0:	63 01       	movw	r12, r6
     da2:	12 c0       	rjmp	.+36     	; 0xdc8 <vfprintf+0x42c>
     da4:	56 01       	movw	r10, r12
     da6:	f2 e0       	ldi	r31, 0x02	; 2
     da8:	af 0e       	add	r10, r31
     daa:	b1 1c       	adc	r11, r1
     dac:	f6 01       	movw	r30, r12
     dae:	c0 80       	ld	r12, Z
     db0:	d1 80       	ldd	r13, Z+1	; 0x01
     db2:	96 fe       	sbrs	r9, 6
     db4:	03 c0       	rjmp	.+6      	; 0xdbc <vfprintf+0x420>
     db6:	61 2f       	mov	r22, r17
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <vfprintf+0x424>
     dbc:	6f ef       	ldi	r22, 0xFF	; 255
     dbe:	7f ef       	ldi	r23, 0xFF	; 255
     dc0:	c6 01       	movw	r24, r12
     dc2:	0e 94 87 09 	call	0x130e	; 0x130e <strnlen>
     dc6:	8c 01       	movw	r16, r24
     dc8:	f9 2d       	mov	r31, r9
     dca:	ff 77       	andi	r31, 0x7F	; 127
     dcc:	14 c0       	rjmp	.+40     	; 0xdf6 <vfprintf+0x45a>
     dce:	56 01       	movw	r10, r12
     dd0:	22 e0       	ldi	r18, 0x02	; 2
     dd2:	a2 0e       	add	r10, r18
     dd4:	b1 1c       	adc	r11, r1
     dd6:	f6 01       	movw	r30, r12
     dd8:	c0 80       	ld	r12, Z
     dda:	d1 80       	ldd	r13, Z+1	; 0x01
     ddc:	96 fe       	sbrs	r9, 6
     dde:	03 c0       	rjmp	.+6      	; 0xde6 <vfprintf+0x44a>
     de0:	61 2f       	mov	r22, r17
     de2:	70 e0       	ldi	r23, 0x00	; 0
     de4:	02 c0       	rjmp	.+4      	; 0xdea <vfprintf+0x44e>
     de6:	6f ef       	ldi	r22, 0xFF	; 255
     de8:	7f ef       	ldi	r23, 0xFF	; 255
     dea:	c6 01       	movw	r24, r12
     dec:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <strnlen_P>
     df0:	8c 01       	movw	r16, r24
     df2:	f9 2d       	mov	r31, r9
     df4:	f0 68       	ori	r31, 0x80	; 128
     df6:	9f 2e       	mov	r9, r31
     df8:	f3 fd       	sbrc	r31, 3
     dfa:	1a c0       	rjmp	.+52     	; 0xe30 <vfprintf+0x494>
     dfc:	85 2d       	mov	r24, r5
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	08 17       	cp	r16, r24
     e02:	19 07       	cpc	r17, r25
     e04:	a8 f4       	brcc	.+42     	; 0xe30 <vfprintf+0x494>
     e06:	b7 01       	movw	r22, r14
     e08:	80 e2       	ldi	r24, 0x20	; 32
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     e10:	5a 94       	dec	r5
     e12:	f4 cf       	rjmp	.-24     	; 0xdfc <vfprintf+0x460>
     e14:	f6 01       	movw	r30, r12
     e16:	97 fc       	sbrc	r9, 7
     e18:	85 91       	lpm	r24, Z+
     e1a:	97 fe       	sbrs	r9, 7
     e1c:	81 91       	ld	r24, Z+
     e1e:	6f 01       	movw	r12, r30
     e20:	b7 01       	movw	r22, r14
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     e28:	51 10       	cpse	r5, r1
     e2a:	5a 94       	dec	r5
     e2c:	01 50       	subi	r16, 0x01	; 1
     e2e:	11 09       	sbc	r17, r1
     e30:	01 15       	cp	r16, r1
     e32:	11 05       	cpc	r17, r1
     e34:	79 f7       	brne	.-34     	; 0xe14 <vfprintf+0x478>
     e36:	f7 c0       	rjmp	.+494    	; 0x1026 <vfprintf+0x68a>
     e38:	84 36       	cpi	r24, 0x64	; 100
     e3a:	11 f0       	breq	.+4      	; 0xe40 <vfprintf+0x4a4>
     e3c:	89 36       	cpi	r24, 0x69	; 105
     e3e:	61 f5       	brne	.+88     	; 0xe98 <vfprintf+0x4fc>
     e40:	56 01       	movw	r10, r12
     e42:	97 fe       	sbrs	r9, 7
     e44:	09 c0       	rjmp	.+18     	; 0xe58 <vfprintf+0x4bc>
     e46:	24 e0       	ldi	r18, 0x04	; 4
     e48:	a2 0e       	add	r10, r18
     e4a:	b1 1c       	adc	r11, r1
     e4c:	f6 01       	movw	r30, r12
     e4e:	60 81       	ld	r22, Z
     e50:	71 81       	ldd	r23, Z+1	; 0x01
     e52:	82 81       	ldd	r24, Z+2	; 0x02
     e54:	93 81       	ldd	r25, Z+3	; 0x03
     e56:	0a c0       	rjmp	.+20     	; 0xe6c <vfprintf+0x4d0>
     e58:	f2 e0       	ldi	r31, 0x02	; 2
     e5a:	af 0e       	add	r10, r31
     e5c:	b1 1c       	adc	r11, r1
     e5e:	f6 01       	movw	r30, r12
     e60:	60 81       	ld	r22, Z
     e62:	71 81       	ldd	r23, Z+1	; 0x01
     e64:	07 2e       	mov	r0, r23
     e66:	00 0c       	add	r0, r0
     e68:	88 0b       	sbc	r24, r24
     e6a:	99 0b       	sbc	r25, r25
     e6c:	f9 2d       	mov	r31, r9
     e6e:	ff 76       	andi	r31, 0x6F	; 111
     e70:	9f 2e       	mov	r9, r31
     e72:	97 ff       	sbrs	r25, 7
     e74:	09 c0       	rjmp	.+18     	; 0xe88 <vfprintf+0x4ec>
     e76:	90 95       	com	r25
     e78:	80 95       	com	r24
     e7a:	70 95       	com	r23
     e7c:	61 95       	neg	r22
     e7e:	7f 4f       	sbci	r23, 0xFF	; 255
     e80:	8f 4f       	sbci	r24, 0xFF	; 255
     e82:	9f 4f       	sbci	r25, 0xFF	; 255
     e84:	f0 68       	ori	r31, 0x80	; 128
     e86:	9f 2e       	mov	r9, r31
     e88:	2a e0       	ldi	r18, 0x0A	; 10
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	a3 01       	movw	r20, r6
     e8e:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <__ultoa_invert>
     e92:	c8 2e       	mov	r12, r24
     e94:	c6 18       	sub	r12, r6
     e96:	3f c0       	rjmp	.+126    	; 0xf16 <vfprintf+0x57a>
     e98:	09 2d       	mov	r16, r9
     e9a:	85 37       	cpi	r24, 0x75	; 117
     e9c:	21 f4       	brne	.+8      	; 0xea6 <vfprintf+0x50a>
     e9e:	0f 7e       	andi	r16, 0xEF	; 239
     ea0:	2a e0       	ldi	r18, 0x0A	; 10
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	1d c0       	rjmp	.+58     	; 0xee0 <vfprintf+0x544>
     ea6:	09 7f       	andi	r16, 0xF9	; 249
     ea8:	8f 36       	cpi	r24, 0x6F	; 111
     eaa:	91 f0       	breq	.+36     	; 0xed0 <vfprintf+0x534>
     eac:	18 f4       	brcc	.+6      	; 0xeb4 <vfprintf+0x518>
     eae:	88 35       	cpi	r24, 0x58	; 88
     eb0:	59 f0       	breq	.+22     	; 0xec8 <vfprintf+0x52c>
     eb2:	c3 c0       	rjmp	.+390    	; 0x103a <vfprintf+0x69e>
     eb4:	80 37       	cpi	r24, 0x70	; 112
     eb6:	19 f0       	breq	.+6      	; 0xebe <vfprintf+0x522>
     eb8:	88 37       	cpi	r24, 0x78	; 120
     eba:	11 f0       	breq	.+4      	; 0xec0 <vfprintf+0x524>
     ebc:	be c0       	rjmp	.+380    	; 0x103a <vfprintf+0x69e>
     ebe:	00 61       	ori	r16, 0x10	; 16
     ec0:	04 ff       	sbrs	r16, 4
     ec2:	09 c0       	rjmp	.+18     	; 0xed6 <vfprintf+0x53a>
     ec4:	04 60       	ori	r16, 0x04	; 4
     ec6:	07 c0       	rjmp	.+14     	; 0xed6 <vfprintf+0x53a>
     ec8:	94 fe       	sbrs	r9, 4
     eca:	08 c0       	rjmp	.+16     	; 0xedc <vfprintf+0x540>
     ecc:	06 60       	ori	r16, 0x06	; 6
     ece:	06 c0       	rjmp	.+12     	; 0xedc <vfprintf+0x540>
     ed0:	28 e0       	ldi	r18, 0x08	; 8
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <vfprintf+0x544>
     ed6:	20 e1       	ldi	r18, 0x10	; 16
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <vfprintf+0x544>
     edc:	20 e1       	ldi	r18, 0x10	; 16
     ede:	32 e0       	ldi	r19, 0x02	; 2
     ee0:	56 01       	movw	r10, r12
     ee2:	07 ff       	sbrs	r16, 7
     ee4:	09 c0       	rjmp	.+18     	; 0xef8 <vfprintf+0x55c>
     ee6:	84 e0       	ldi	r24, 0x04	; 4
     ee8:	a8 0e       	add	r10, r24
     eea:	b1 1c       	adc	r11, r1
     eec:	f6 01       	movw	r30, r12
     eee:	60 81       	ld	r22, Z
     ef0:	71 81       	ldd	r23, Z+1	; 0x01
     ef2:	82 81       	ldd	r24, Z+2	; 0x02
     ef4:	93 81       	ldd	r25, Z+3	; 0x03
     ef6:	08 c0       	rjmp	.+16     	; 0xf08 <vfprintf+0x56c>
     ef8:	f2 e0       	ldi	r31, 0x02	; 2
     efa:	af 0e       	add	r10, r31
     efc:	b1 1c       	adc	r11, r1
     efe:	f6 01       	movw	r30, r12
     f00:	60 81       	ld	r22, Z
     f02:	71 81       	ldd	r23, Z+1	; 0x01
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	a3 01       	movw	r20, r6
     f0a:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <__ultoa_invert>
     f0e:	c8 2e       	mov	r12, r24
     f10:	c6 18       	sub	r12, r6
     f12:	0f 77       	andi	r16, 0x7F	; 127
     f14:	90 2e       	mov	r9, r16
     f16:	96 fe       	sbrs	r9, 6
     f18:	0b c0       	rjmp	.+22     	; 0xf30 <vfprintf+0x594>
     f1a:	09 2d       	mov	r16, r9
     f1c:	0e 7f       	andi	r16, 0xFE	; 254
     f1e:	c1 16       	cp	r12, r17
     f20:	50 f4       	brcc	.+20     	; 0xf36 <vfprintf+0x59a>
     f22:	94 fe       	sbrs	r9, 4
     f24:	0a c0       	rjmp	.+20     	; 0xf3a <vfprintf+0x59e>
     f26:	92 fc       	sbrc	r9, 2
     f28:	08 c0       	rjmp	.+16     	; 0xf3a <vfprintf+0x59e>
     f2a:	09 2d       	mov	r16, r9
     f2c:	0e 7e       	andi	r16, 0xEE	; 238
     f2e:	05 c0       	rjmp	.+10     	; 0xf3a <vfprintf+0x59e>
     f30:	dc 2c       	mov	r13, r12
     f32:	09 2d       	mov	r16, r9
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <vfprintf+0x5a0>
     f36:	dc 2c       	mov	r13, r12
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <vfprintf+0x5a0>
     f3a:	d1 2e       	mov	r13, r17
     f3c:	04 ff       	sbrs	r16, 4
     f3e:	0d c0       	rjmp	.+26     	; 0xf5a <vfprintf+0x5be>
     f40:	fe 01       	movw	r30, r28
     f42:	ec 0d       	add	r30, r12
     f44:	f1 1d       	adc	r31, r1
     f46:	80 81       	ld	r24, Z
     f48:	80 33       	cpi	r24, 0x30	; 48
     f4a:	11 f4       	brne	.+4      	; 0xf50 <vfprintf+0x5b4>
     f4c:	09 7e       	andi	r16, 0xE9	; 233
     f4e:	09 c0       	rjmp	.+18     	; 0xf62 <vfprintf+0x5c6>
     f50:	02 ff       	sbrs	r16, 2
     f52:	06 c0       	rjmp	.+12     	; 0xf60 <vfprintf+0x5c4>
     f54:	d3 94       	inc	r13
     f56:	d3 94       	inc	r13
     f58:	04 c0       	rjmp	.+8      	; 0xf62 <vfprintf+0x5c6>
     f5a:	80 2f       	mov	r24, r16
     f5c:	86 78       	andi	r24, 0x86	; 134
     f5e:	09 f0       	breq	.+2      	; 0xf62 <vfprintf+0x5c6>
     f60:	d3 94       	inc	r13
     f62:	03 fd       	sbrc	r16, 3
     f64:	11 c0       	rjmp	.+34     	; 0xf88 <vfprintf+0x5ec>
     f66:	00 ff       	sbrs	r16, 0
     f68:	06 c0       	rjmp	.+12     	; 0xf76 <vfprintf+0x5da>
     f6a:	1c 2d       	mov	r17, r12
     f6c:	d5 14       	cp	r13, r5
     f6e:	80 f4       	brcc	.+32     	; 0xf90 <vfprintf+0x5f4>
     f70:	15 0d       	add	r17, r5
     f72:	1d 19       	sub	r17, r13
     f74:	0d c0       	rjmp	.+26     	; 0xf90 <vfprintf+0x5f4>
     f76:	d5 14       	cp	r13, r5
     f78:	58 f4       	brcc	.+22     	; 0xf90 <vfprintf+0x5f4>
     f7a:	b7 01       	movw	r22, r14
     f7c:	80 e2       	ldi	r24, 0x20	; 32
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     f84:	d3 94       	inc	r13
     f86:	f7 cf       	rjmp	.-18     	; 0xf76 <vfprintf+0x5da>
     f88:	d5 14       	cp	r13, r5
     f8a:	10 f4       	brcc	.+4      	; 0xf90 <vfprintf+0x5f4>
     f8c:	5d 18       	sub	r5, r13
     f8e:	01 c0       	rjmp	.+2      	; 0xf92 <vfprintf+0x5f6>
     f90:	51 2c       	mov	r5, r1
     f92:	04 ff       	sbrs	r16, 4
     f94:	10 c0       	rjmp	.+32     	; 0xfb6 <vfprintf+0x61a>
     f96:	b7 01       	movw	r22, r14
     f98:	80 e3       	ldi	r24, 0x30	; 48
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     fa0:	02 ff       	sbrs	r16, 2
     fa2:	17 c0       	rjmp	.+46     	; 0xfd2 <vfprintf+0x636>
     fa4:	01 fd       	sbrc	r16, 1
     fa6:	03 c0       	rjmp	.+6      	; 0xfae <vfprintf+0x612>
     fa8:	88 e7       	ldi	r24, 0x78	; 120
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <vfprintf+0x616>
     fae:	88 e5       	ldi	r24, 0x58	; 88
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	b7 01       	movw	r22, r14
     fb4:	0c c0       	rjmp	.+24     	; 0xfce <vfprintf+0x632>
     fb6:	80 2f       	mov	r24, r16
     fb8:	86 78       	andi	r24, 0x86	; 134
     fba:	59 f0       	breq	.+22     	; 0xfd2 <vfprintf+0x636>
     fbc:	01 ff       	sbrs	r16, 1
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <vfprintf+0x628>
     fc0:	8b e2       	ldi	r24, 0x2B	; 43
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <vfprintf+0x62a>
     fc4:	80 e2       	ldi	r24, 0x20	; 32
     fc6:	07 fd       	sbrc	r16, 7
     fc8:	8d e2       	ldi	r24, 0x2D	; 45
     fca:	b7 01       	movw	r22, r14
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     fd2:	c1 16       	cp	r12, r17
     fd4:	38 f4       	brcc	.+14     	; 0xfe4 <vfprintf+0x648>
     fd6:	b7 01       	movw	r22, r14
     fd8:	80 e3       	ldi	r24, 0x30	; 48
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     fe0:	11 50       	subi	r17, 0x01	; 1
     fe2:	f7 cf       	rjmp	.-18     	; 0xfd2 <vfprintf+0x636>
     fe4:	ca 94       	dec	r12
     fe6:	f3 01       	movw	r30, r6
     fe8:	ec 0d       	add	r30, r12
     fea:	f1 1d       	adc	r31, r1
     fec:	80 81       	ld	r24, Z
     fee:	b7 01       	movw	r22, r14
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
     ff6:	c1 10       	cpse	r12, r1
     ff8:	f5 cf       	rjmp	.-22     	; 0xfe4 <vfprintf+0x648>
     ffa:	15 c0       	rjmp	.+42     	; 0x1026 <vfprintf+0x68a>
     ffc:	f4 e0       	ldi	r31, 0x04	; 4
     ffe:	f5 15       	cp	r31, r5
    1000:	60 f5       	brcc	.+88     	; 0x105a <vfprintf+0x6be>
    1002:	84 e0       	ldi	r24, 0x04	; 4
    1004:	58 1a       	sub	r5, r24
    1006:	93 fe       	sbrs	r9, 3
    1008:	1f c0       	rjmp	.+62     	; 0x1048 <vfprintf+0x6ac>
    100a:	01 11       	cpse	r16, r1
    100c:	27 c0       	rjmp	.+78     	; 0x105c <vfprintf+0x6c0>
    100e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1010:	23 ff       	sbrs	r18, 3
    1012:	2a c0       	rjmp	.+84     	; 0x1068 <vfprintf+0x6cc>
    1014:	04 e5       	ldi	r16, 0x54	; 84
    1016:	10 e0       	ldi	r17, 0x00	; 0
    1018:	39 2d       	mov	r19, r9
    101a:	30 71       	andi	r19, 0x10	; 16
    101c:	93 2e       	mov	r9, r19
    101e:	f8 01       	movw	r30, r16
    1020:	84 91       	lpm	r24, Z
    1022:	81 11       	cpse	r24, r1
    1024:	24 c0       	rjmp	.+72     	; 0x106e <vfprintf+0x6d2>
    1026:	55 20       	and	r5, r5
    1028:	09 f4       	brne	.+2      	; 0x102c <vfprintf+0x690>
    102a:	e4 cc       	rjmp	.-1592   	; 0x9f4 <vfprintf+0x58>
    102c:	b7 01       	movw	r22, r14
    102e:	80 e2       	ldi	r24, 0x20	; 32
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
    1036:	5a 94       	dec	r5
    1038:	f6 cf       	rjmp	.-20     	; 0x1026 <vfprintf+0x68a>
    103a:	f7 01       	movw	r30, r14
    103c:	86 81       	ldd	r24, Z+6	; 0x06
    103e:	97 81       	ldd	r25, Z+7	; 0x07
    1040:	26 c0       	rjmp	.+76     	; 0x108e <vfprintf+0x6f2>
    1042:	8f ef       	ldi	r24, 0xFF	; 255
    1044:	9f ef       	ldi	r25, 0xFF	; 255
    1046:	23 c0       	rjmp	.+70     	; 0x108e <vfprintf+0x6f2>
    1048:	b7 01       	movw	r22, r14
    104a:	80 e2       	ldi	r24, 0x20	; 32
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
    1052:	5a 94       	dec	r5
    1054:	51 10       	cpse	r5, r1
    1056:	f8 cf       	rjmp	.-16     	; 0x1048 <vfprintf+0x6ac>
    1058:	d8 cf       	rjmp	.-80     	; 0x100a <vfprintf+0x66e>
    105a:	51 2c       	mov	r5, r1
    105c:	b7 01       	movw	r22, r14
    105e:	80 2f       	mov	r24, r16
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
    1066:	d3 cf       	rjmp	.-90     	; 0x100e <vfprintf+0x672>
    1068:	08 e5       	ldi	r16, 0x58	; 88
    106a:	10 e0       	ldi	r17, 0x00	; 0
    106c:	d5 cf       	rjmp	.-86     	; 0x1018 <vfprintf+0x67c>
    106e:	91 10       	cpse	r9, r1
    1070:	80 52       	subi	r24, 0x20	; 32
    1072:	b7 01       	movw	r22, r14
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 9a 09 	call	0x1334	; 0x1334 <fputc>
    107a:	0f 5f       	subi	r16, 0xFF	; 255
    107c:	1f 4f       	sbci	r17, 0xFF	; 255
    107e:	cf cf       	rjmp	.-98     	; 0x101e <vfprintf+0x682>
    1080:	23 e0       	ldi	r18, 0x03	; 3
    1082:	25 15       	cp	r18, r5
    1084:	10 f4       	brcc	.+4      	; 0x108a <vfprintf+0x6ee>
    1086:	83 e0       	ldi	r24, 0x03	; 3
    1088:	bd cf       	rjmp	.-134    	; 0x1004 <vfprintf+0x668>
    108a:	51 2c       	mov	r5, r1
    108c:	c0 cf       	rjmp	.-128    	; 0x100e <vfprintf+0x672>
    108e:	60 96       	adiw	r28, 0x10	; 16
    1090:	e2 e1       	ldi	r30, 0x12	; 18
    1092:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__epilogue_restores__>

00001096 <__prologue_saves__>:
    1096:	2f 92       	push	r2
    1098:	3f 92       	push	r3
    109a:	4f 92       	push	r4
    109c:	5f 92       	push	r5
    109e:	6f 92       	push	r6
    10a0:	7f 92       	push	r7
    10a2:	8f 92       	push	r8
    10a4:	9f 92       	push	r9
    10a6:	af 92       	push	r10
    10a8:	bf 92       	push	r11
    10aa:	cf 92       	push	r12
    10ac:	df 92       	push	r13
    10ae:	ef 92       	push	r14
    10b0:	ff 92       	push	r15
    10b2:	0f 93       	push	r16
    10b4:	1f 93       	push	r17
    10b6:	cf 93       	push	r28
    10b8:	df 93       	push	r29
    10ba:	cd b7       	in	r28, 0x3d	; 61
    10bc:	de b7       	in	r29, 0x3e	; 62
    10be:	ca 1b       	sub	r28, r26
    10c0:	db 0b       	sbc	r29, r27
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	f8 94       	cli
    10c6:	de bf       	out	0x3e, r29	; 62
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	cd bf       	out	0x3d, r28	; 61
    10cc:	09 94       	ijmp

000010ce <__epilogue_restores__>:
    10ce:	2a 88       	ldd	r2, Y+18	; 0x12
    10d0:	39 88       	ldd	r3, Y+17	; 0x11
    10d2:	48 88       	ldd	r4, Y+16	; 0x10
    10d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    10d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    10d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    10da:	8c 84       	ldd	r8, Y+12	; 0x0c
    10dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    10de:	aa 84       	ldd	r10, Y+10	; 0x0a
    10e0:	b9 84       	ldd	r11, Y+9	; 0x09
    10e2:	c8 84       	ldd	r12, Y+8	; 0x08
    10e4:	df 80       	ldd	r13, Y+7	; 0x07
    10e6:	ee 80       	ldd	r14, Y+6	; 0x06
    10e8:	fd 80       	ldd	r15, Y+5	; 0x05
    10ea:	0c 81       	ldd	r16, Y+4	; 0x04
    10ec:	1b 81       	ldd	r17, Y+3	; 0x03
    10ee:	aa 81       	ldd	r26, Y+2	; 0x02
    10f0:	b9 81       	ldd	r27, Y+1	; 0x01
    10f2:	ce 0f       	add	r28, r30
    10f4:	d1 1d       	adc	r29, r1
    10f6:	0f b6       	in	r0, 0x3f	; 63
    10f8:	f8 94       	cli
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	ed 01       	movw	r28, r26
    1102:	08 95       	ret

00001104 <atof>:
    1104:	66 27       	eor	r22, r22
    1106:	77 27       	eor	r23, r23
    1108:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <strtod>

0000110c <atoi>:
    110c:	fc 01       	movw	r30, r24
    110e:	88 27       	eor	r24, r24
    1110:	99 27       	eor	r25, r25
    1112:	e8 94       	clt
    1114:	21 91       	ld	r18, Z+
    1116:	20 32       	cpi	r18, 0x20	; 32
    1118:	e9 f3       	breq	.-6      	; 0x1114 <atoi+0x8>
    111a:	29 30       	cpi	r18, 0x09	; 9
    111c:	10 f0       	brcs	.+4      	; 0x1122 <atoi+0x16>
    111e:	2e 30       	cpi	r18, 0x0E	; 14
    1120:	c8 f3       	brcs	.-14     	; 0x1114 <atoi+0x8>
    1122:	2b 32       	cpi	r18, 0x2B	; 43
    1124:	41 f0       	breq	.+16     	; 0x1136 <atoi+0x2a>
    1126:	2d 32       	cpi	r18, 0x2D	; 45
    1128:	39 f4       	brne	.+14     	; 0x1138 <atoi+0x2c>
    112a:	68 94       	set
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <atoi+0x2a>
    112e:	0e 94 92 09 	call	0x1324	; 0x1324 <__mulhi_const_10>
    1132:	82 0f       	add	r24, r18
    1134:	91 1d       	adc	r25, r1
    1136:	21 91       	ld	r18, Z+
    1138:	20 53       	subi	r18, 0x30	; 48
    113a:	2a 30       	cpi	r18, 0x0A	; 10
    113c:	c0 f3       	brcs	.-16     	; 0x112e <atoi+0x22>
    113e:	1e f4       	brtc	.+6      	; 0x1146 <atoi+0x3a>
    1140:	90 95       	com	r25
    1142:	81 95       	neg	r24
    1144:	9f 4f       	sbci	r25, 0xFF	; 255
    1146:	08 95       	ret

00001148 <__ftoa_engine>:
    1148:	28 30       	cpi	r18, 0x08	; 8
    114a:	08 f0       	brcs	.+2      	; 0x114e <__ftoa_engine+0x6>
    114c:	27 e0       	ldi	r18, 0x07	; 7
    114e:	33 27       	eor	r19, r19
    1150:	da 01       	movw	r26, r20
    1152:	99 0f       	add	r25, r25
    1154:	31 1d       	adc	r19, r1
    1156:	87 fd       	sbrc	r24, 7
    1158:	91 60       	ori	r25, 0x01	; 1
    115a:	00 96       	adiw	r24, 0x00	; 0
    115c:	61 05       	cpc	r22, r1
    115e:	71 05       	cpc	r23, r1
    1160:	39 f4       	brne	.+14     	; 0x1170 <__ftoa_engine+0x28>
    1162:	32 60       	ori	r19, 0x02	; 2
    1164:	2e 5f       	subi	r18, 0xFE	; 254
    1166:	3d 93       	st	X+, r19
    1168:	30 e3       	ldi	r19, 0x30	; 48
    116a:	2a 95       	dec	r18
    116c:	e1 f7       	brne	.-8      	; 0x1166 <__ftoa_engine+0x1e>
    116e:	08 95       	ret
    1170:	9f 3f       	cpi	r25, 0xFF	; 255
    1172:	30 f0       	brcs	.+12     	; 0x1180 <__ftoa_engine+0x38>
    1174:	80 38       	cpi	r24, 0x80	; 128
    1176:	71 05       	cpc	r23, r1
    1178:	61 05       	cpc	r22, r1
    117a:	09 f0       	breq	.+2      	; 0x117e <__ftoa_engine+0x36>
    117c:	3c 5f       	subi	r19, 0xFC	; 252
    117e:	3c 5f       	subi	r19, 0xFC	; 252
    1180:	3d 93       	st	X+, r19
    1182:	91 30       	cpi	r25, 0x01	; 1
    1184:	08 f0       	brcs	.+2      	; 0x1188 <__ftoa_engine+0x40>
    1186:	80 68       	ori	r24, 0x80	; 128
    1188:	91 1d       	adc	r25, r1
    118a:	df 93       	push	r29
    118c:	cf 93       	push	r28
    118e:	1f 93       	push	r17
    1190:	0f 93       	push	r16
    1192:	ff 92       	push	r15
    1194:	ef 92       	push	r14
    1196:	19 2f       	mov	r17, r25
    1198:	98 7f       	andi	r25, 0xF8	; 248
    119a:	96 95       	lsr	r25
    119c:	e9 2f       	mov	r30, r25
    119e:	96 95       	lsr	r25
    11a0:	96 95       	lsr	r25
    11a2:	e9 0f       	add	r30, r25
    11a4:	ff 27       	eor	r31, r31
    11a6:	ea 54       	subi	r30, 0x4A	; 74
    11a8:	ff 4f       	sbci	r31, 0xFF	; 255
    11aa:	99 27       	eor	r25, r25
    11ac:	33 27       	eor	r19, r19
    11ae:	ee 24       	eor	r14, r14
    11b0:	ff 24       	eor	r15, r15
    11b2:	a7 01       	movw	r20, r14
    11b4:	e7 01       	movw	r28, r14
    11b6:	05 90       	lpm	r0, Z+
    11b8:	08 94       	sec
    11ba:	07 94       	ror	r0
    11bc:	28 f4       	brcc	.+10     	; 0x11c8 <__ftoa_engine+0x80>
    11be:	36 0f       	add	r19, r22
    11c0:	e7 1e       	adc	r14, r23
    11c2:	f8 1e       	adc	r15, r24
    11c4:	49 1f       	adc	r20, r25
    11c6:	51 1d       	adc	r21, r1
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	06 94       	lsr	r0
    11d2:	a1 f7       	brne	.-24     	; 0x11bc <__ftoa_engine+0x74>
    11d4:	05 90       	lpm	r0, Z+
    11d6:	07 94       	ror	r0
    11d8:	28 f4       	brcc	.+10     	; 0x11e4 <__ftoa_engine+0x9c>
    11da:	e7 0e       	add	r14, r23
    11dc:	f8 1e       	adc	r15, r24
    11de:	49 1f       	adc	r20, r25
    11e0:	56 1f       	adc	r21, r22
    11e2:	c1 1d       	adc	r28, r1
    11e4:	77 0f       	add	r23, r23
    11e6:	88 1f       	adc	r24, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	66 1f       	adc	r22, r22
    11ec:	06 94       	lsr	r0
    11ee:	a1 f7       	brne	.-24     	; 0x11d8 <__ftoa_engine+0x90>
    11f0:	05 90       	lpm	r0, Z+
    11f2:	07 94       	ror	r0
    11f4:	28 f4       	brcc	.+10     	; 0x1200 <__ftoa_engine+0xb8>
    11f6:	f8 0e       	add	r15, r24
    11f8:	49 1f       	adc	r20, r25
    11fa:	56 1f       	adc	r21, r22
    11fc:	c7 1f       	adc	r28, r23
    11fe:	d1 1d       	adc	r29, r1
    1200:	88 0f       	add	r24, r24
    1202:	99 1f       	adc	r25, r25
    1204:	66 1f       	adc	r22, r22
    1206:	77 1f       	adc	r23, r23
    1208:	06 94       	lsr	r0
    120a:	a1 f7       	brne	.-24     	; 0x11f4 <__ftoa_engine+0xac>
    120c:	05 90       	lpm	r0, Z+
    120e:	07 94       	ror	r0
    1210:	20 f4       	brcc	.+8      	; 0x121a <__ftoa_engine+0xd2>
    1212:	49 0f       	add	r20, r25
    1214:	56 1f       	adc	r21, r22
    1216:	c7 1f       	adc	r28, r23
    1218:	d8 1f       	adc	r29, r24
    121a:	99 0f       	add	r25, r25
    121c:	66 1f       	adc	r22, r22
    121e:	77 1f       	adc	r23, r23
    1220:	88 1f       	adc	r24, r24
    1222:	06 94       	lsr	r0
    1224:	a9 f7       	brne	.-22     	; 0x1210 <__ftoa_engine+0xc8>
    1226:	84 91       	lpm	r24, Z
    1228:	10 95       	com	r17
    122a:	17 70       	andi	r17, 0x07	; 7
    122c:	41 f0       	breq	.+16     	; 0x123e <__ftoa_engine+0xf6>
    122e:	d6 95       	lsr	r29
    1230:	c7 95       	ror	r28
    1232:	57 95       	ror	r21
    1234:	47 95       	ror	r20
    1236:	f7 94       	ror	r15
    1238:	e7 94       	ror	r14
    123a:	1a 95       	dec	r17
    123c:	c1 f7       	brne	.-16     	; 0x122e <__ftoa_engine+0xe6>
    123e:	ec e5       	ldi	r30, 0x5C	; 92
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	68 94       	set
    1244:	15 90       	lpm	r1, Z+
    1246:	15 91       	lpm	r17, Z+
    1248:	35 91       	lpm	r19, Z+
    124a:	65 91       	lpm	r22, Z+
    124c:	95 91       	lpm	r25, Z+
    124e:	05 90       	lpm	r0, Z+
    1250:	7f e2       	ldi	r23, 0x2F	; 47
    1252:	73 95       	inc	r23
    1254:	e1 18       	sub	r14, r1
    1256:	f1 0a       	sbc	r15, r17
    1258:	43 0b       	sbc	r20, r19
    125a:	56 0b       	sbc	r21, r22
    125c:	c9 0b       	sbc	r28, r25
    125e:	d0 09       	sbc	r29, r0
    1260:	c0 f7       	brcc	.-16     	; 0x1252 <__ftoa_engine+0x10a>
    1262:	e1 0c       	add	r14, r1
    1264:	f1 1e       	adc	r15, r17
    1266:	43 1f       	adc	r20, r19
    1268:	56 1f       	adc	r21, r22
    126a:	c9 1f       	adc	r28, r25
    126c:	d0 1d       	adc	r29, r0
    126e:	7e f4       	brtc	.+30     	; 0x128e <__ftoa_engine+0x146>
    1270:	70 33       	cpi	r23, 0x30	; 48
    1272:	11 f4       	brne	.+4      	; 0x1278 <__ftoa_engine+0x130>
    1274:	8a 95       	dec	r24
    1276:	e6 cf       	rjmp	.-52     	; 0x1244 <__ftoa_engine+0xfc>
    1278:	e8 94       	clt
    127a:	01 50       	subi	r16, 0x01	; 1
    127c:	30 f0       	brcs	.+12     	; 0x128a <__ftoa_engine+0x142>
    127e:	08 0f       	add	r16, r24
    1280:	0a f4       	brpl	.+2      	; 0x1284 <__ftoa_engine+0x13c>
    1282:	00 27       	eor	r16, r16
    1284:	02 17       	cp	r16, r18
    1286:	08 f4       	brcc	.+2      	; 0x128a <__ftoa_engine+0x142>
    1288:	20 2f       	mov	r18, r16
    128a:	23 95       	inc	r18
    128c:	02 2f       	mov	r16, r18
    128e:	7a 33       	cpi	r23, 0x3A	; 58
    1290:	28 f0       	brcs	.+10     	; 0x129c <__ftoa_engine+0x154>
    1292:	79 e3       	ldi	r23, 0x39	; 57
    1294:	7d 93       	st	X+, r23
    1296:	2a 95       	dec	r18
    1298:	e9 f7       	brne	.-6      	; 0x1294 <__ftoa_engine+0x14c>
    129a:	10 c0       	rjmp	.+32     	; 0x12bc <__ftoa_engine+0x174>
    129c:	7d 93       	st	X+, r23
    129e:	2a 95       	dec	r18
    12a0:	89 f6       	brne	.-94     	; 0x1244 <__ftoa_engine+0xfc>
    12a2:	06 94       	lsr	r0
    12a4:	97 95       	ror	r25
    12a6:	67 95       	ror	r22
    12a8:	37 95       	ror	r19
    12aa:	17 95       	ror	r17
    12ac:	17 94       	ror	r1
    12ae:	e1 18       	sub	r14, r1
    12b0:	f1 0a       	sbc	r15, r17
    12b2:	43 0b       	sbc	r20, r19
    12b4:	56 0b       	sbc	r21, r22
    12b6:	c9 0b       	sbc	r28, r25
    12b8:	d0 09       	sbc	r29, r0
    12ba:	98 f0       	brcs	.+38     	; 0x12e2 <__ftoa_engine+0x19a>
    12bc:	23 95       	inc	r18
    12be:	7e 91       	ld	r23, -X
    12c0:	73 95       	inc	r23
    12c2:	7a 33       	cpi	r23, 0x3A	; 58
    12c4:	08 f0       	brcs	.+2      	; 0x12c8 <__ftoa_engine+0x180>
    12c6:	70 e3       	ldi	r23, 0x30	; 48
    12c8:	7c 93       	st	X, r23
    12ca:	20 13       	cpse	r18, r16
    12cc:	b8 f7       	brcc	.-18     	; 0x12bc <__ftoa_engine+0x174>
    12ce:	7e 91       	ld	r23, -X
    12d0:	70 61       	ori	r23, 0x10	; 16
    12d2:	7d 93       	st	X+, r23
    12d4:	30 f0       	brcs	.+12     	; 0x12e2 <__ftoa_engine+0x19a>
    12d6:	83 95       	inc	r24
    12d8:	71 e3       	ldi	r23, 0x31	; 49
    12da:	7d 93       	st	X+, r23
    12dc:	70 e3       	ldi	r23, 0x30	; 48
    12de:	2a 95       	dec	r18
    12e0:	e1 f7       	brne	.-8      	; 0x12da <__ftoa_engine+0x192>
    12e2:	11 24       	eor	r1, r1
    12e4:	ef 90       	pop	r14
    12e6:	ff 90       	pop	r15
    12e8:	0f 91       	pop	r16
    12ea:	1f 91       	pop	r17
    12ec:	cf 91       	pop	r28
    12ee:	df 91       	pop	r29
    12f0:	99 27       	eor	r25, r25
    12f2:	87 fd       	sbrc	r24, 7
    12f4:	90 95       	com	r25
    12f6:	08 95       	ret

000012f8 <strnlen_P>:
    12f8:	fc 01       	movw	r30, r24
    12fa:	05 90       	lpm	r0, Z+
    12fc:	61 50       	subi	r22, 0x01	; 1
    12fe:	70 40       	sbci	r23, 0x00	; 0
    1300:	01 10       	cpse	r0, r1
    1302:	d8 f7       	brcc	.-10     	; 0x12fa <strnlen_P+0x2>
    1304:	80 95       	com	r24
    1306:	90 95       	com	r25
    1308:	8e 0f       	add	r24, r30
    130a:	9f 1f       	adc	r25, r31
    130c:	08 95       	ret

0000130e <strnlen>:
    130e:	fc 01       	movw	r30, r24
    1310:	61 50       	subi	r22, 0x01	; 1
    1312:	70 40       	sbci	r23, 0x00	; 0
    1314:	01 90       	ld	r0, Z+
    1316:	01 10       	cpse	r0, r1
    1318:	d8 f7       	brcc	.-10     	; 0x1310 <strnlen+0x2>
    131a:	80 95       	com	r24
    131c:	90 95       	com	r25
    131e:	8e 0f       	add	r24, r30
    1320:	9f 1f       	adc	r25, r31
    1322:	08 95       	ret

00001324 <__mulhi_const_10>:
    1324:	7a e0       	ldi	r23, 0x0A	; 10
    1326:	97 9f       	mul	r25, r23
    1328:	90 2d       	mov	r25, r0
    132a:	87 9f       	mul	r24, r23
    132c:	80 2d       	mov	r24, r0
    132e:	91 0d       	add	r25, r1
    1330:	11 24       	eor	r1, r1
    1332:	08 95       	ret

00001334 <fputc>:
    1334:	0f 93       	push	r16
    1336:	1f 93       	push	r17
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	fb 01       	movw	r30, r22
    133e:	23 81       	ldd	r18, Z+3	; 0x03
    1340:	21 fd       	sbrc	r18, 1
    1342:	03 c0       	rjmp	.+6      	; 0x134a <fputc+0x16>
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	9f ef       	ldi	r25, 0xFF	; 255
    1348:	2c c0       	rjmp	.+88     	; 0x13a2 <fputc+0x6e>
    134a:	22 ff       	sbrs	r18, 2
    134c:	16 c0       	rjmp	.+44     	; 0x137a <fputc+0x46>
    134e:	46 81       	ldd	r20, Z+6	; 0x06
    1350:	57 81       	ldd	r21, Z+7	; 0x07
    1352:	24 81       	ldd	r18, Z+4	; 0x04
    1354:	35 81       	ldd	r19, Z+5	; 0x05
    1356:	42 17       	cp	r20, r18
    1358:	53 07       	cpc	r21, r19
    135a:	44 f4       	brge	.+16     	; 0x136c <fputc+0x38>
    135c:	a0 81       	ld	r26, Z
    135e:	b1 81       	ldd	r27, Z+1	; 0x01
    1360:	9d 01       	movw	r18, r26
    1362:	2f 5f       	subi	r18, 0xFF	; 255
    1364:	3f 4f       	sbci	r19, 0xFF	; 255
    1366:	31 83       	std	Z+1, r19	; 0x01
    1368:	20 83       	st	Z, r18
    136a:	8c 93       	st	X, r24
    136c:	26 81       	ldd	r18, Z+6	; 0x06
    136e:	37 81       	ldd	r19, Z+7	; 0x07
    1370:	2f 5f       	subi	r18, 0xFF	; 255
    1372:	3f 4f       	sbci	r19, 0xFF	; 255
    1374:	37 83       	std	Z+7, r19	; 0x07
    1376:	26 83       	std	Z+6, r18	; 0x06
    1378:	14 c0       	rjmp	.+40     	; 0x13a2 <fputc+0x6e>
    137a:	8b 01       	movw	r16, r22
    137c:	ec 01       	movw	r28, r24
    137e:	fb 01       	movw	r30, r22
    1380:	00 84       	ldd	r0, Z+8	; 0x08
    1382:	f1 85       	ldd	r31, Z+9	; 0x09
    1384:	e0 2d       	mov	r30, r0
    1386:	09 95       	icall
    1388:	89 2b       	or	r24, r25
    138a:	e1 f6       	brne	.-72     	; 0x1344 <fputc+0x10>
    138c:	d8 01       	movw	r26, r16
    138e:	16 96       	adiw	r26, 0x06	; 6
    1390:	8d 91       	ld	r24, X+
    1392:	9c 91       	ld	r25, X
    1394:	17 97       	sbiw	r26, 0x07	; 7
    1396:	01 96       	adiw	r24, 0x01	; 1
    1398:	17 96       	adiw	r26, 0x07	; 7
    139a:	9c 93       	st	X, r25
    139c:	8e 93       	st	-X, r24
    139e:	16 97       	sbiw	r26, 0x06	; 6
    13a0:	ce 01       	movw	r24, r28
    13a2:	df 91       	pop	r29
    13a4:	cf 91       	pop	r28
    13a6:	1f 91       	pop	r17
    13a8:	0f 91       	pop	r16
    13aa:	08 95       	ret

000013ac <sprintf>:
    13ac:	ae e0       	ldi	r26, 0x0E	; 14
    13ae:	b0 e0       	ldi	r27, 0x00	; 0
    13b0:	ec ed       	ldi	r30, 0xDC	; 220
    13b2:	f9 e0       	ldi	r31, 0x09	; 9
    13b4:	0c 94 59 08 	jmp	0x10b2	; 0x10b2 <__prologue_saves__+0x1c>
    13b8:	0d 89       	ldd	r16, Y+21	; 0x15
    13ba:	1e 89       	ldd	r17, Y+22	; 0x16
    13bc:	86 e0       	ldi	r24, 0x06	; 6
    13be:	8c 83       	std	Y+4, r24	; 0x04
    13c0:	1a 83       	std	Y+2, r17	; 0x02
    13c2:	09 83       	std	Y+1, r16	; 0x01
    13c4:	8f ef       	ldi	r24, 0xFF	; 255
    13c6:	9f e7       	ldi	r25, 0x7F	; 127
    13c8:	9e 83       	std	Y+6, r25	; 0x06
    13ca:	8d 83       	std	Y+5, r24	; 0x05
    13cc:	ae 01       	movw	r20, r28
    13ce:	47 5e       	subi	r20, 0xE7	; 231
    13d0:	5f 4f       	sbci	r21, 0xFF	; 255
    13d2:	6f 89       	ldd	r22, Y+23	; 0x17
    13d4:	78 8d       	ldd	r23, Y+24	; 0x18
    13d6:	ce 01       	movw	r24, r28
    13d8:	01 96       	adiw	r24, 0x01	; 1
    13da:	0e 94 ce 04 	call	0x99c	; 0x99c <vfprintf>
    13de:	ef 81       	ldd	r30, Y+7	; 0x07
    13e0:	f8 85       	ldd	r31, Y+8	; 0x08
    13e2:	e0 0f       	add	r30, r16
    13e4:	f1 1f       	adc	r31, r17
    13e6:	10 82       	st	Z, r1
    13e8:	2e 96       	adiw	r28, 0x0e	; 14
    13ea:	e4 e0       	ldi	r30, 0x04	; 4
    13ec:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <__epilogue_restores__+0x1c>

000013f0 <__ultoa_invert>:
    13f0:	fa 01       	movw	r30, r20
    13f2:	aa 27       	eor	r26, r26
    13f4:	28 30       	cpi	r18, 0x08	; 8
    13f6:	51 f1       	breq	.+84     	; 0x144c <__ultoa_invert+0x5c>
    13f8:	20 31       	cpi	r18, 0x10	; 16
    13fa:	81 f1       	breq	.+96     	; 0x145c <__ultoa_invert+0x6c>
    13fc:	e8 94       	clt
    13fe:	6f 93       	push	r22
    1400:	6e 7f       	andi	r22, 0xFE	; 254
    1402:	6e 5f       	subi	r22, 0xFE	; 254
    1404:	7f 4f       	sbci	r23, 0xFF	; 255
    1406:	8f 4f       	sbci	r24, 0xFF	; 255
    1408:	9f 4f       	sbci	r25, 0xFF	; 255
    140a:	af 4f       	sbci	r26, 0xFF	; 255
    140c:	b1 e0       	ldi	r27, 0x01	; 1
    140e:	3e d0       	rcall	.+124    	; 0x148c <__ultoa_invert+0x9c>
    1410:	b4 e0       	ldi	r27, 0x04	; 4
    1412:	3c d0       	rcall	.+120    	; 0x148c <__ultoa_invert+0x9c>
    1414:	67 0f       	add	r22, r23
    1416:	78 1f       	adc	r23, r24
    1418:	89 1f       	adc	r24, r25
    141a:	9a 1f       	adc	r25, r26
    141c:	a1 1d       	adc	r26, r1
    141e:	68 0f       	add	r22, r24
    1420:	79 1f       	adc	r23, r25
    1422:	8a 1f       	adc	r24, r26
    1424:	91 1d       	adc	r25, r1
    1426:	a1 1d       	adc	r26, r1
    1428:	6a 0f       	add	r22, r26
    142a:	71 1d       	adc	r23, r1
    142c:	81 1d       	adc	r24, r1
    142e:	91 1d       	adc	r25, r1
    1430:	a1 1d       	adc	r26, r1
    1432:	20 d0       	rcall	.+64     	; 0x1474 <__ultoa_invert+0x84>
    1434:	09 f4       	brne	.+2      	; 0x1438 <__ultoa_invert+0x48>
    1436:	68 94       	set
    1438:	3f 91       	pop	r19
    143a:	2a e0       	ldi	r18, 0x0A	; 10
    143c:	26 9f       	mul	r18, r22
    143e:	11 24       	eor	r1, r1
    1440:	30 19       	sub	r19, r0
    1442:	30 5d       	subi	r19, 0xD0	; 208
    1444:	31 93       	st	Z+, r19
    1446:	de f6       	brtc	.-74     	; 0x13fe <__ultoa_invert+0xe>
    1448:	cf 01       	movw	r24, r30
    144a:	08 95       	ret
    144c:	46 2f       	mov	r20, r22
    144e:	47 70       	andi	r20, 0x07	; 7
    1450:	40 5d       	subi	r20, 0xD0	; 208
    1452:	41 93       	st	Z+, r20
    1454:	b3 e0       	ldi	r27, 0x03	; 3
    1456:	0f d0       	rcall	.+30     	; 0x1476 <__ultoa_invert+0x86>
    1458:	c9 f7       	brne	.-14     	; 0x144c <__ultoa_invert+0x5c>
    145a:	f6 cf       	rjmp	.-20     	; 0x1448 <__ultoa_invert+0x58>
    145c:	46 2f       	mov	r20, r22
    145e:	4f 70       	andi	r20, 0x0F	; 15
    1460:	40 5d       	subi	r20, 0xD0	; 208
    1462:	4a 33       	cpi	r20, 0x3A	; 58
    1464:	18 f0       	brcs	.+6      	; 0x146c <__ultoa_invert+0x7c>
    1466:	49 5d       	subi	r20, 0xD9	; 217
    1468:	31 fd       	sbrc	r19, 1
    146a:	40 52       	subi	r20, 0x20	; 32
    146c:	41 93       	st	Z+, r20
    146e:	02 d0       	rcall	.+4      	; 0x1474 <__ultoa_invert+0x84>
    1470:	a9 f7       	brne	.-22     	; 0x145c <__ultoa_invert+0x6c>
    1472:	ea cf       	rjmp	.-44     	; 0x1448 <__ultoa_invert+0x58>
    1474:	b4 e0       	ldi	r27, 0x04	; 4
    1476:	a6 95       	lsr	r26
    1478:	97 95       	ror	r25
    147a:	87 95       	ror	r24
    147c:	77 95       	ror	r23
    147e:	67 95       	ror	r22
    1480:	ba 95       	dec	r27
    1482:	c9 f7       	brne	.-14     	; 0x1476 <__ultoa_invert+0x86>
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	61 05       	cpc	r22, r1
    1488:	71 05       	cpc	r23, r1
    148a:	08 95       	ret
    148c:	9b 01       	movw	r18, r22
    148e:	ac 01       	movw	r20, r24
    1490:	0a 2e       	mov	r0, r26
    1492:	06 94       	lsr	r0
    1494:	57 95       	ror	r21
    1496:	47 95       	ror	r20
    1498:	37 95       	ror	r19
    149a:	27 95       	ror	r18
    149c:	ba 95       	dec	r27
    149e:	c9 f7       	brne	.-14     	; 0x1492 <__ultoa_invert+0xa2>
    14a0:	62 0f       	add	r22, r18
    14a2:	73 1f       	adc	r23, r19
    14a4:	84 1f       	adc	r24, r20
    14a6:	95 1f       	adc	r25, r21
    14a8:	a0 1d       	adc	r26, r0
    14aa:	08 95       	ret

000014ac <strtod>:
    14ac:	a0 e0       	ldi	r26, 0x00	; 0
    14ae:	b0 e0       	ldi	r27, 0x00	; 0
    14b0:	ec e5       	ldi	r30, 0x5C	; 92
    14b2:	fa e0       	ldi	r31, 0x0A	; 10
    14b4:	0c 94 51 08 	jmp	0x10a2	; 0x10a2 <__prologue_saves__+0xc>
    14b8:	ec 01       	movw	r28, r24
    14ba:	6b 01       	movw	r12, r22
    14bc:	61 15       	cp	r22, r1
    14be:	71 05       	cpc	r23, r1
    14c0:	19 f0       	breq	.+6      	; 0x14c8 <strtod+0x1c>
    14c2:	fb 01       	movw	r30, r22
    14c4:	91 83       	std	Z+1, r25	; 0x01
    14c6:	80 83       	st	Z, r24
    14c8:	7e 01       	movw	r14, r28
    14ca:	ff ef       	ldi	r31, 0xFF	; 255
    14cc:	ef 1a       	sub	r14, r31
    14ce:	ff 0a       	sbc	r15, r31
    14d0:	08 81       	ld	r16, Y
    14d2:	80 2f       	mov	r24, r16
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	0e 94 a4 0b 	call	0x1748	; 0x1748 <isspace>
    14da:	89 2b       	or	r24, r25
    14dc:	11 f0       	breq	.+4      	; 0x14e2 <strtod+0x36>
    14de:	e7 01       	movw	r28, r14
    14e0:	f3 cf       	rjmp	.-26     	; 0x14c8 <strtod+0x1c>
    14e2:	0d 32       	cpi	r16, 0x2D	; 45
    14e4:	39 f4       	brne	.+14     	; 0x14f4 <strtod+0x48>
    14e6:	7e 01       	movw	r14, r28
    14e8:	82 e0       	ldi	r24, 0x02	; 2
    14ea:	e8 0e       	add	r14, r24
    14ec:	f1 1c       	adc	r15, r1
    14ee:	09 81       	ldd	r16, Y+1	; 0x01
    14f0:	11 e0       	ldi	r17, 0x01	; 1
    14f2:	08 c0       	rjmp	.+16     	; 0x1504 <strtod+0x58>
    14f4:	0b 32       	cpi	r16, 0x2B	; 43
    14f6:	29 f4       	brne	.+10     	; 0x1502 <strtod+0x56>
    14f8:	7e 01       	movw	r14, r28
    14fa:	92 e0       	ldi	r25, 0x02	; 2
    14fc:	e9 0e       	add	r14, r25
    14fe:	f1 1c       	adc	r15, r1
    1500:	09 81       	ldd	r16, Y+1	; 0x01
    1502:	10 e0       	ldi	r17, 0x00	; 0
    1504:	e7 01       	movw	r28, r14
    1506:	21 97       	sbiw	r28, 0x01	; 1
    1508:	43 e0       	ldi	r20, 0x03	; 3
    150a:	50 e0       	ldi	r21, 0x00	; 0
    150c:	6e e5       	ldi	r22, 0x5E	; 94
    150e:	71 e0       	ldi	r23, 0x01	; 1
    1510:	ce 01       	movw	r24, r28
    1512:	0e 94 ad 0b 	call	0x175a	; 0x175a <strncasecmp_P>
    1516:	89 2b       	or	r24, r25
    1518:	c1 f4       	brne	.+48     	; 0x154a <strtod+0x9e>
    151a:	23 96       	adiw	r28, 0x03	; 3
    151c:	45 e0       	ldi	r20, 0x05	; 5
    151e:	50 e0       	ldi	r21, 0x00	; 0
    1520:	69 e5       	ldi	r22, 0x59	; 89
    1522:	71 e0       	ldi	r23, 0x01	; 1
    1524:	ce 01       	movw	r24, r28
    1526:	0e 94 ad 0b 	call	0x175a	; 0x175a <strncasecmp_P>
    152a:	89 2b       	or	r24, r25
    152c:	09 f4       	brne	.+2      	; 0x1530 <strtod+0x84>
    152e:	25 96       	adiw	r28, 0x05	; 5
    1530:	c1 14       	cp	r12, r1
    1532:	d1 04       	cpc	r13, r1
    1534:	19 f0       	breq	.+6      	; 0x153c <strtod+0x90>
    1536:	f6 01       	movw	r30, r12
    1538:	d1 83       	std	Z+1, r29	; 0x01
    153a:	c0 83       	st	Z, r28
    153c:	11 11       	cpse	r17, r1
    153e:	f6 c0       	rjmp	.+492    	; 0x172c <strtod+0x280>
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	80 e8       	ldi	r24, 0x80	; 128
    1546:	9f e7       	ldi	r25, 0x7F	; 127
    1548:	fa c0       	rjmp	.+500    	; 0x173e <strtod+0x292>
    154a:	43 e0       	ldi	r20, 0x03	; 3
    154c:	50 e0       	ldi	r21, 0x00	; 0
    154e:	66 e5       	ldi	r22, 0x56	; 86
    1550:	71 e0       	ldi	r23, 0x01	; 1
    1552:	ce 01       	movw	r24, r28
    1554:	0e 94 ad 0b 	call	0x175a	; 0x175a <strncasecmp_P>
    1558:	89 2b       	or	r24, r25
    155a:	59 f4       	brne	.+22     	; 0x1572 <strtod+0xc6>
    155c:	c1 14       	cp	r12, r1
    155e:	d1 04       	cpc	r13, r1
    1560:	09 f4       	brne	.+2      	; 0x1564 <strtod+0xb8>
    1562:	e9 c0       	rjmp	.+466    	; 0x1736 <strtod+0x28a>
    1564:	f2 e0       	ldi	r31, 0x02	; 2
    1566:	ef 0e       	add	r14, r31
    1568:	f1 1c       	adc	r15, r1
    156a:	f6 01       	movw	r30, r12
    156c:	f1 82       	std	Z+1, r15	; 0x01
    156e:	e0 82       	st	Z, r14
    1570:	e2 c0       	rjmp	.+452    	; 0x1736 <strtod+0x28a>
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	a9 01       	movw	r20, r18
    1578:	c0 e0       	ldi	r28, 0x00	; 0
    157a:	d0 e0       	ldi	r29, 0x00	; 0
    157c:	f7 01       	movw	r30, r14
    157e:	80 ed       	ldi	r24, 0xD0	; 208
    1580:	a8 2e       	mov	r10, r24
    1582:	a0 0e       	add	r10, r16
    1584:	89 e0       	ldi	r24, 0x09	; 9
    1586:	8a 15       	cp	r24, r10
    1588:	30 f1       	brcs	.+76     	; 0x15d6 <strtod+0x12a>
    158a:	91 2f       	mov	r25, r17
    158c:	92 60       	ori	r25, 0x02	; 2
    158e:	b9 2e       	mov	r11, r25
    1590:	81 2f       	mov	r24, r17
    1592:	88 70       	andi	r24, 0x08	; 8
    1594:	12 ff       	sbrs	r17, 2
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <strtod+0xf4>
    1598:	81 11       	cpse	r24, r1
    159a:	24 c0       	rjmp	.+72     	; 0x15e4 <strtod+0x138>
    159c:	21 96       	adiw	r28, 0x01	; 1
    159e:	22 c0       	rjmp	.+68     	; 0x15e4 <strtod+0x138>
    15a0:	81 11       	cpse	r24, r1
    15a2:	21 97       	sbiw	r28, 0x01	; 1
    15a4:	a5 e0       	ldi	r26, 0x05	; 5
    15a6:	b0 e0       	ldi	r27, 0x00	; 0
    15a8:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <__muluhisi3>
    15ac:	dc 01       	movw	r26, r24
    15ae:	cb 01       	movw	r24, r22
    15b0:	88 0f       	add	r24, r24
    15b2:	99 1f       	adc	r25, r25
    15b4:	aa 1f       	adc	r26, r26
    15b6:	bb 1f       	adc	r27, r27
    15b8:	9c 01       	movw	r18, r24
    15ba:	ad 01       	movw	r20, r26
    15bc:	2a 0d       	add	r18, r10
    15be:	31 1d       	adc	r19, r1
    15c0:	41 1d       	adc	r20, r1
    15c2:	51 1d       	adc	r21, r1
    15c4:	28 39       	cpi	r18, 0x98	; 152
    15c6:	89 e9       	ldi	r24, 0x99	; 153
    15c8:	38 07       	cpc	r19, r24
    15ca:	48 07       	cpc	r20, r24
    15cc:	89 e1       	ldi	r24, 0x19	; 25
    15ce:	58 07       	cpc	r21, r24
    15d0:	48 f0       	brcs	.+18     	; 0x15e4 <strtod+0x138>
    15d2:	16 60       	ori	r17, 0x06	; 6
    15d4:	06 c0       	rjmp	.+12     	; 0x15e2 <strtod+0x136>
    15d6:	9e ef       	ldi	r25, 0xFE	; 254
    15d8:	a9 12       	cpse	r10, r25
    15da:	0a c0       	rjmp	.+20     	; 0x15f0 <strtod+0x144>
    15dc:	13 fd       	sbrc	r17, 3
    15de:	40 c0       	rjmp	.+128    	; 0x1660 <strtod+0x1b4>
    15e0:	18 60       	ori	r17, 0x08	; 8
    15e2:	b1 2e       	mov	r11, r17
    15e4:	8f ef       	ldi	r24, 0xFF	; 255
    15e6:	e8 1a       	sub	r14, r24
    15e8:	f8 0a       	sbc	r15, r24
    15ea:	00 81       	ld	r16, Z
    15ec:	1b 2d       	mov	r17, r11
    15ee:	c6 cf       	rjmp	.-116    	; 0x157c <strtod+0xd0>
    15f0:	80 2f       	mov	r24, r16
    15f2:	8f 7d       	andi	r24, 0xDF	; 223
    15f4:	85 34       	cpi	r24, 0x45	; 69
    15f6:	a1 f5       	brne	.+104    	; 0x1660 <strtod+0x1b4>
    15f8:	80 81       	ld	r24, Z
    15fa:	8d 32       	cpi	r24, 0x2D	; 45
    15fc:	11 f4       	brne	.+4      	; 0x1602 <strtod+0x156>
    15fe:	10 61       	ori	r17, 0x10	; 16
    1600:	06 c0       	rjmp	.+12     	; 0x160e <strtod+0x162>
    1602:	8b 32       	cpi	r24, 0x2B	; 43
    1604:	21 f0       	breq	.+8      	; 0x160e <strtod+0x162>
    1606:	31 96       	adiw	r30, 0x01	; 1
    1608:	61 e0       	ldi	r22, 0x01	; 1
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <strtod+0x16a>
    160e:	81 81       	ldd	r24, Z+1	; 0x01
    1610:	32 96       	adiw	r30, 0x02	; 2
    1612:	62 e0       	ldi	r22, 0x02	; 2
    1614:	70 e0       	ldi	r23, 0x00	; 0
    1616:	80 53       	subi	r24, 0x30	; 48
    1618:	8a 30       	cpi	r24, 0x0A	; 10
    161a:	18 f0       	brcs	.+6      	; 0x1622 <strtod+0x176>
    161c:	e6 1b       	sub	r30, r22
    161e:	f7 0b       	sbc	r31, r23
    1620:	1f c0       	rjmp	.+62     	; 0x1660 <strtod+0x1b4>
    1622:	60 e0       	ldi	r22, 0x00	; 0
    1624:	70 e0       	ldi	r23, 0x00	; 0
    1626:	60 38       	cpi	r22, 0x80	; 128
    1628:	9c e0       	ldi	r25, 0x0C	; 12
    162a:	79 07       	cpc	r23, r25
    162c:	5c f4       	brge	.+22     	; 0x1644 <strtod+0x198>
    162e:	db 01       	movw	r26, r22
    1630:	aa 0f       	add	r26, r26
    1632:	bb 1f       	adc	r27, r27
    1634:	aa 0f       	add	r26, r26
    1636:	bb 1f       	adc	r27, r27
    1638:	6a 0f       	add	r22, r26
    163a:	7b 1f       	adc	r23, r27
    163c:	66 0f       	add	r22, r22
    163e:	77 1f       	adc	r23, r23
    1640:	68 0f       	add	r22, r24
    1642:	71 1d       	adc	r23, r1
    1644:	31 96       	adiw	r30, 0x01	; 1
    1646:	df 01       	movw	r26, r30
    1648:	11 97       	sbiw	r26, 0x01	; 1
    164a:	8c 91       	ld	r24, X
    164c:	80 53       	subi	r24, 0x30	; 48
    164e:	8a 30       	cpi	r24, 0x0A	; 10
    1650:	50 f3       	brcs	.-44     	; 0x1626 <strtod+0x17a>
    1652:	14 ff       	sbrs	r17, 4
    1654:	03 c0       	rjmp	.+6      	; 0x165c <strtod+0x1b0>
    1656:	71 95       	neg	r23
    1658:	61 95       	neg	r22
    165a:	71 09       	sbc	r23, r1
    165c:	c6 0f       	add	r28, r22
    165e:	d7 1f       	adc	r29, r23
    1660:	11 ff       	sbrs	r17, 1
    1662:	08 c0       	rjmp	.+16     	; 0x1674 <strtod+0x1c8>
    1664:	c1 14       	cp	r12, r1
    1666:	d1 04       	cpc	r13, r1
    1668:	29 f0       	breq	.+10     	; 0x1674 <strtod+0x1c8>
    166a:	cf 01       	movw	r24, r30
    166c:	01 97       	sbiw	r24, 0x01	; 1
    166e:	f6 01       	movw	r30, r12
    1670:	91 83       	std	Z+1, r25	; 0x01
    1672:	80 83       	st	Z, r24
    1674:	ca 01       	movw	r24, r20
    1676:	b9 01       	movw	r22, r18
    1678:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__floatunsisf>
    167c:	21 2f       	mov	r18, r17
    167e:	23 70       	andi	r18, 0x03	; 3
    1680:	23 30       	cpi	r18, 0x03	; 3
    1682:	19 f0       	breq	.+6      	; 0x168a <strtod+0x1de>
    1684:	4b 01       	movw	r8, r22
    1686:	5c 01       	movw	r10, r24
    1688:	06 c0       	rjmp	.+12     	; 0x1696 <strtod+0x1ea>
    168a:	4b 01       	movw	r8, r22
    168c:	5c 01       	movw	r10, r24
    168e:	b7 fa       	bst	r11, 7
    1690:	b0 94       	com	r11
    1692:	b7 f8       	bld	r11, 7
    1694:	b0 94       	com	r11
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	a9 01       	movw	r20, r18
    169c:	c5 01       	movw	r24, r10
    169e:	b4 01       	movw	r22, r8
    16a0:	0e 94 c5 0b 	call	0x178a	; 0x178a <__cmpsf2>
    16a4:	88 23       	and	r24, r24
    16a6:	09 f4       	brne	.+2      	; 0x16aa <strtod+0x1fe>
    16a8:	3e c0       	rjmp	.+124    	; 0x1726 <strtod+0x27a>
    16aa:	d7 ff       	sbrs	r29, 7
    16ac:	06 c0       	rjmp	.+12     	; 0x16ba <strtod+0x20e>
    16ae:	d1 95       	neg	r29
    16b0:	c1 95       	neg	r28
    16b2:	d1 09       	sbc	r29, r1
    16b4:	05 e7       	ldi	r16, 0x75	; 117
    16b6:	11 e0       	ldi	r17, 0x01	; 1
    16b8:	02 c0       	rjmp	.+4      	; 0x16be <strtod+0x212>
    16ba:	0d e8       	ldi	r16, 0x8D	; 141
    16bc:	11 e0       	ldi	r17, 0x01	; 1
    16be:	68 01       	movw	r12, r16
    16c0:	f8 e1       	ldi	r31, 0x18	; 24
    16c2:	cf 1a       	sub	r12, r31
    16c4:	d1 08       	sbc	r13, r1
    16c6:	90 e2       	ldi	r25, 0x20	; 32
    16c8:	e9 2e       	mov	r14, r25
    16ca:	f1 2c       	mov	r15, r1
    16cc:	ce 15       	cp	r28, r14
    16ce:	df 05       	cpc	r29, r15
    16d0:	74 f0       	brlt	.+28     	; 0x16ee <strtod+0x242>
    16d2:	f8 01       	movw	r30, r16
    16d4:	25 91       	lpm	r18, Z+
    16d6:	35 91       	lpm	r19, Z+
    16d8:	45 91       	lpm	r20, Z+
    16da:	54 91       	lpm	r21, Z
    16dc:	c5 01       	movw	r24, r10
    16de:	b4 01       	movw	r22, r8
    16e0:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__mulsf3>
    16e4:	4b 01       	movw	r8, r22
    16e6:	5c 01       	movw	r10, r24
    16e8:	ce 19       	sub	r28, r14
    16ea:	df 09       	sbc	r29, r15
    16ec:	ef cf       	rjmp	.-34     	; 0x16cc <strtod+0x220>
    16ee:	04 50       	subi	r16, 0x04	; 4
    16f0:	11 09       	sbc	r17, r1
    16f2:	f5 94       	asr	r15
    16f4:	e7 94       	ror	r14
    16f6:	0c 15       	cp	r16, r12
    16f8:	1d 05       	cpc	r17, r13
    16fa:	41 f7       	brne	.-48     	; 0x16cc <strtod+0x220>
    16fc:	8a 2d       	mov	r24, r10
    16fe:	88 0f       	add	r24, r24
    1700:	8b 2d       	mov	r24, r11
    1702:	88 1f       	adc	r24, r24
    1704:	8f 3f       	cpi	r24, 0xFF	; 255
    1706:	49 f0       	breq	.+18     	; 0x171a <strtod+0x26e>
    1708:	20 e0       	ldi	r18, 0x00	; 0
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	a9 01       	movw	r20, r18
    170e:	c5 01       	movw	r24, r10
    1710:	b4 01       	movw	r22, r8
    1712:	0e 94 c5 0b 	call	0x178a	; 0x178a <__cmpsf2>
    1716:	81 11       	cpse	r24, r1
    1718:	06 c0       	rjmp	.+12     	; 0x1726 <strtod+0x27a>
    171a:	82 e2       	ldi	r24, 0x22	; 34
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	90 93 cb 03 	sts	0x03CB, r25	; 0x8003cb <errno+0x1>
    1722:	80 93 ca 03 	sts	0x03CA, r24	; 0x8003ca <errno>
    1726:	c5 01       	movw	r24, r10
    1728:	b4 01       	movw	r22, r8
    172a:	09 c0       	rjmp	.+18     	; 0x173e <strtod+0x292>
    172c:	60 e0       	ldi	r22, 0x00	; 0
    172e:	70 e0       	ldi	r23, 0x00	; 0
    1730:	80 e8       	ldi	r24, 0x80	; 128
    1732:	9f ef       	ldi	r25, 0xFF	; 255
    1734:	04 c0       	rjmp	.+8      	; 0x173e <strtod+0x292>
    1736:	60 e0       	ldi	r22, 0x00	; 0
    1738:	70 e0       	ldi	r23, 0x00	; 0
    173a:	80 ec       	ldi	r24, 0xC0	; 192
    173c:	9f e7       	ldi	r25, 0x7F	; 127
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	ec e0       	ldi	r30, 0x0C	; 12
    1744:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__epilogue_restores__+0xc>

00001748 <isspace>:
    1748:	91 11       	cpse	r25, r1
    174a:	0c 94 98 0c 	jmp	0x1930	; 0x1930 <__ctype_isfalse>
    174e:	80 32       	cpi	r24, 0x20	; 32
    1750:	19 f0       	breq	.+6      	; 0x1758 <isspace+0x10>
    1752:	89 50       	subi	r24, 0x09	; 9
    1754:	85 50       	subi	r24, 0x05	; 5
    1756:	c8 f7       	brcc	.-14     	; 0x174a <isspace+0x2>
    1758:	08 95       	ret

0000175a <strncasecmp_P>:
    175a:	fb 01       	movw	r30, r22
    175c:	dc 01       	movw	r26, r24
    175e:	41 50       	subi	r20, 0x01	; 1
    1760:	50 40       	sbci	r21, 0x00	; 0
    1762:	88 f0       	brcs	.+34     	; 0x1786 <strncasecmp_P+0x2c>
    1764:	8d 91       	ld	r24, X+
    1766:	81 34       	cpi	r24, 0x41	; 65
    1768:	1c f0       	brlt	.+6      	; 0x1770 <strncasecmp_P+0x16>
    176a:	8b 35       	cpi	r24, 0x5B	; 91
    176c:	0c f4       	brge	.+2      	; 0x1770 <strncasecmp_P+0x16>
    176e:	80 5e       	subi	r24, 0xE0	; 224
    1770:	65 91       	lpm	r22, Z+
    1772:	61 34       	cpi	r22, 0x41	; 65
    1774:	1c f0       	brlt	.+6      	; 0x177c <strncasecmp_P+0x22>
    1776:	6b 35       	cpi	r22, 0x5B	; 91
    1778:	0c f4       	brge	.+2      	; 0x177c <strncasecmp_P+0x22>
    177a:	60 5e       	subi	r22, 0xE0	; 224
    177c:	86 1b       	sub	r24, r22
    177e:	61 11       	cpse	r22, r1
    1780:	71 f3       	breq	.-36     	; 0x175e <strncasecmp_P+0x4>
    1782:	99 0b       	sbc	r25, r25
    1784:	08 95       	ret
    1786:	88 1b       	sub	r24, r24
    1788:	fc cf       	rjmp	.-8      	; 0x1782 <strncasecmp_P+0x28>

0000178a <__cmpsf2>:
    178a:	0e 94 07 0c 	call	0x180e	; 0x180e <__fp_cmp>
    178e:	08 f4       	brcc	.+2      	; 0x1792 <__cmpsf2+0x8>
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	08 95       	ret

00001794 <__floatunsisf>:
    1794:	e8 94       	clt
    1796:	09 c0       	rjmp	.+18     	; 0x17aa <__floatsisf+0x12>

00001798 <__floatsisf>:
    1798:	97 fb       	bst	r25, 7
    179a:	3e f4       	brtc	.+14     	; 0x17aa <__floatsisf+0x12>
    179c:	90 95       	com	r25
    179e:	80 95       	com	r24
    17a0:	70 95       	com	r23
    17a2:	61 95       	neg	r22
    17a4:	7f 4f       	sbci	r23, 0xFF	; 255
    17a6:	8f 4f       	sbci	r24, 0xFF	; 255
    17a8:	9f 4f       	sbci	r25, 0xFF	; 255
    17aa:	99 23       	and	r25, r25
    17ac:	a9 f0       	breq	.+42     	; 0x17d8 <__floatsisf+0x40>
    17ae:	f9 2f       	mov	r31, r25
    17b0:	96 e9       	ldi	r25, 0x96	; 150
    17b2:	bb 27       	eor	r27, r27
    17b4:	93 95       	inc	r25
    17b6:	f6 95       	lsr	r31
    17b8:	87 95       	ror	r24
    17ba:	77 95       	ror	r23
    17bc:	67 95       	ror	r22
    17be:	b7 95       	ror	r27
    17c0:	f1 11       	cpse	r31, r1
    17c2:	f8 cf       	rjmp	.-16     	; 0x17b4 <__floatsisf+0x1c>
    17c4:	fa f4       	brpl	.+62     	; 0x1804 <__floatsisf+0x6c>
    17c6:	bb 0f       	add	r27, r27
    17c8:	11 f4       	brne	.+4      	; 0x17ce <__floatsisf+0x36>
    17ca:	60 ff       	sbrs	r22, 0
    17cc:	1b c0       	rjmp	.+54     	; 0x1804 <__floatsisf+0x6c>
    17ce:	6f 5f       	subi	r22, 0xFF	; 255
    17d0:	7f 4f       	sbci	r23, 0xFF	; 255
    17d2:	8f 4f       	sbci	r24, 0xFF	; 255
    17d4:	9f 4f       	sbci	r25, 0xFF	; 255
    17d6:	16 c0       	rjmp	.+44     	; 0x1804 <__floatsisf+0x6c>
    17d8:	88 23       	and	r24, r24
    17da:	11 f0       	breq	.+4      	; 0x17e0 <__floatsisf+0x48>
    17dc:	96 e9       	ldi	r25, 0x96	; 150
    17de:	11 c0       	rjmp	.+34     	; 0x1802 <__floatsisf+0x6a>
    17e0:	77 23       	and	r23, r23
    17e2:	21 f0       	breq	.+8      	; 0x17ec <__floatsisf+0x54>
    17e4:	9e e8       	ldi	r25, 0x8E	; 142
    17e6:	87 2f       	mov	r24, r23
    17e8:	76 2f       	mov	r23, r22
    17ea:	05 c0       	rjmp	.+10     	; 0x17f6 <__floatsisf+0x5e>
    17ec:	66 23       	and	r22, r22
    17ee:	71 f0       	breq	.+28     	; 0x180c <__floatsisf+0x74>
    17f0:	96 e8       	ldi	r25, 0x86	; 134
    17f2:	86 2f       	mov	r24, r22
    17f4:	70 e0       	ldi	r23, 0x00	; 0
    17f6:	60 e0       	ldi	r22, 0x00	; 0
    17f8:	2a f0       	brmi	.+10     	; 0x1804 <__floatsisf+0x6c>
    17fa:	9a 95       	dec	r25
    17fc:	66 0f       	add	r22, r22
    17fe:	77 1f       	adc	r23, r23
    1800:	88 1f       	adc	r24, r24
    1802:	da f7       	brpl	.-10     	; 0x17fa <__floatsisf+0x62>
    1804:	88 0f       	add	r24, r24
    1806:	96 95       	lsr	r25
    1808:	87 95       	ror	r24
    180a:	97 f9       	bld	r25, 7
    180c:	08 95       	ret

0000180e <__fp_cmp>:
    180e:	99 0f       	add	r25, r25
    1810:	00 08       	sbc	r0, r0
    1812:	55 0f       	add	r21, r21
    1814:	aa 0b       	sbc	r26, r26
    1816:	e0 e8       	ldi	r30, 0x80	; 128
    1818:	fe ef       	ldi	r31, 0xFE	; 254
    181a:	16 16       	cp	r1, r22
    181c:	17 06       	cpc	r1, r23
    181e:	e8 07       	cpc	r30, r24
    1820:	f9 07       	cpc	r31, r25
    1822:	c0 f0       	brcs	.+48     	; 0x1854 <__fp_cmp+0x46>
    1824:	12 16       	cp	r1, r18
    1826:	13 06       	cpc	r1, r19
    1828:	e4 07       	cpc	r30, r20
    182a:	f5 07       	cpc	r31, r21
    182c:	98 f0       	brcs	.+38     	; 0x1854 <__fp_cmp+0x46>
    182e:	62 1b       	sub	r22, r18
    1830:	73 0b       	sbc	r23, r19
    1832:	84 0b       	sbc	r24, r20
    1834:	95 0b       	sbc	r25, r21
    1836:	39 f4       	brne	.+14     	; 0x1846 <__fp_cmp+0x38>
    1838:	0a 26       	eor	r0, r26
    183a:	61 f0       	breq	.+24     	; 0x1854 <__fp_cmp+0x46>
    183c:	23 2b       	or	r18, r19
    183e:	24 2b       	or	r18, r20
    1840:	25 2b       	or	r18, r21
    1842:	21 f4       	brne	.+8      	; 0x184c <__fp_cmp+0x3e>
    1844:	08 95       	ret
    1846:	0a 26       	eor	r0, r26
    1848:	09 f4       	brne	.+2      	; 0x184c <__fp_cmp+0x3e>
    184a:	a1 40       	sbci	r26, 0x01	; 1
    184c:	a6 95       	lsr	r26
    184e:	8f ef       	ldi	r24, 0xFF	; 255
    1850:	81 1d       	adc	r24, r1
    1852:	81 1d       	adc	r24, r1
    1854:	08 95       	ret

00001856 <__mulsf3>:
    1856:	0e 94 3e 0c 	call	0x187c	; 0x187c <__mulsf3x>
    185a:	0c 94 b2 0c 	jmp	0x1964	; 0x1964 <__fp_round>
    185e:	0e 94 a4 0c 	call	0x1948	; 0x1948 <__fp_pscA>
    1862:	38 f0       	brcs	.+14     	; 0x1872 <__mulsf3+0x1c>
    1864:	0e 94 ab 0c 	call	0x1956	; 0x1956 <__fp_pscB>
    1868:	20 f0       	brcs	.+8      	; 0x1872 <__mulsf3+0x1c>
    186a:	95 23       	and	r25, r21
    186c:	11 f0       	breq	.+4      	; 0x1872 <__mulsf3+0x1c>
    186e:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__fp_inf>
    1872:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__fp_nan>
    1876:	11 24       	eor	r1, r1
    1878:	0c 94 e6 0c 	jmp	0x19cc	; 0x19cc <__fp_szero>

0000187c <__mulsf3x>:
    187c:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__fp_split3>
    1880:	70 f3       	brcs	.-36     	; 0x185e <__mulsf3+0x8>

00001882 <__mulsf3_pse>:
    1882:	95 9f       	mul	r25, r21
    1884:	c1 f3       	breq	.-16     	; 0x1876 <__mulsf3+0x20>
    1886:	95 0f       	add	r25, r21
    1888:	50 e0       	ldi	r21, 0x00	; 0
    188a:	55 1f       	adc	r21, r21
    188c:	62 9f       	mul	r22, r18
    188e:	f0 01       	movw	r30, r0
    1890:	72 9f       	mul	r23, r18
    1892:	bb 27       	eor	r27, r27
    1894:	f0 0d       	add	r31, r0
    1896:	b1 1d       	adc	r27, r1
    1898:	63 9f       	mul	r22, r19
    189a:	aa 27       	eor	r26, r26
    189c:	f0 0d       	add	r31, r0
    189e:	b1 1d       	adc	r27, r1
    18a0:	aa 1f       	adc	r26, r26
    18a2:	64 9f       	mul	r22, r20
    18a4:	66 27       	eor	r22, r22
    18a6:	b0 0d       	add	r27, r0
    18a8:	a1 1d       	adc	r26, r1
    18aa:	66 1f       	adc	r22, r22
    18ac:	82 9f       	mul	r24, r18
    18ae:	22 27       	eor	r18, r18
    18b0:	b0 0d       	add	r27, r0
    18b2:	a1 1d       	adc	r26, r1
    18b4:	62 1f       	adc	r22, r18
    18b6:	73 9f       	mul	r23, r19
    18b8:	b0 0d       	add	r27, r0
    18ba:	a1 1d       	adc	r26, r1
    18bc:	62 1f       	adc	r22, r18
    18be:	83 9f       	mul	r24, r19
    18c0:	a0 0d       	add	r26, r0
    18c2:	61 1d       	adc	r22, r1
    18c4:	22 1f       	adc	r18, r18
    18c6:	74 9f       	mul	r23, r20
    18c8:	33 27       	eor	r19, r19
    18ca:	a0 0d       	add	r26, r0
    18cc:	61 1d       	adc	r22, r1
    18ce:	23 1f       	adc	r18, r19
    18d0:	84 9f       	mul	r24, r20
    18d2:	60 0d       	add	r22, r0
    18d4:	21 1d       	adc	r18, r1
    18d6:	82 2f       	mov	r24, r18
    18d8:	76 2f       	mov	r23, r22
    18da:	6a 2f       	mov	r22, r26
    18dc:	11 24       	eor	r1, r1
    18de:	9f 57       	subi	r25, 0x7F	; 127
    18e0:	50 40       	sbci	r21, 0x00	; 0
    18e2:	9a f0       	brmi	.+38     	; 0x190a <__mulsf3_pse+0x88>
    18e4:	f1 f0       	breq	.+60     	; 0x1922 <__mulsf3_pse+0xa0>
    18e6:	88 23       	and	r24, r24
    18e8:	4a f0       	brmi	.+18     	; 0x18fc <__mulsf3_pse+0x7a>
    18ea:	ee 0f       	add	r30, r30
    18ec:	ff 1f       	adc	r31, r31
    18ee:	bb 1f       	adc	r27, r27
    18f0:	66 1f       	adc	r22, r22
    18f2:	77 1f       	adc	r23, r23
    18f4:	88 1f       	adc	r24, r24
    18f6:	91 50       	subi	r25, 0x01	; 1
    18f8:	50 40       	sbci	r21, 0x00	; 0
    18fa:	a9 f7       	brne	.-22     	; 0x18e6 <__mulsf3_pse+0x64>
    18fc:	9e 3f       	cpi	r25, 0xFE	; 254
    18fe:	51 05       	cpc	r21, r1
    1900:	80 f0       	brcs	.+32     	; 0x1922 <__mulsf3_pse+0xa0>
    1902:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__fp_inf>
    1906:	0c 94 e6 0c 	jmp	0x19cc	; 0x19cc <__fp_szero>
    190a:	5f 3f       	cpi	r21, 0xFF	; 255
    190c:	e4 f3       	brlt	.-8      	; 0x1906 <__mulsf3_pse+0x84>
    190e:	98 3e       	cpi	r25, 0xE8	; 232
    1910:	d4 f3       	brlt	.-12     	; 0x1906 <__mulsf3_pse+0x84>
    1912:	86 95       	lsr	r24
    1914:	77 95       	ror	r23
    1916:	67 95       	ror	r22
    1918:	b7 95       	ror	r27
    191a:	f7 95       	ror	r31
    191c:	e7 95       	ror	r30
    191e:	9f 5f       	subi	r25, 0xFF	; 255
    1920:	c1 f7       	brne	.-16     	; 0x1912 <__mulsf3_pse+0x90>
    1922:	fe 2b       	or	r31, r30
    1924:	88 0f       	add	r24, r24
    1926:	91 1d       	adc	r25, r1
    1928:	96 95       	lsr	r25
    192a:	87 95       	ror	r24
    192c:	97 f9       	bld	r25, 7
    192e:	08 95       	ret

00001930 <__ctype_isfalse>:
    1930:	99 27       	eor	r25, r25
    1932:	88 27       	eor	r24, r24

00001934 <__ctype_istrue>:
    1934:	08 95       	ret

00001936 <__fp_inf>:
    1936:	97 f9       	bld	r25, 7
    1938:	9f 67       	ori	r25, 0x7F	; 127
    193a:	80 e8       	ldi	r24, 0x80	; 128
    193c:	70 e0       	ldi	r23, 0x00	; 0
    193e:	60 e0       	ldi	r22, 0x00	; 0
    1940:	08 95       	ret

00001942 <__fp_nan>:
    1942:	9f ef       	ldi	r25, 0xFF	; 255
    1944:	80 ec       	ldi	r24, 0xC0	; 192
    1946:	08 95       	ret

00001948 <__fp_pscA>:
    1948:	00 24       	eor	r0, r0
    194a:	0a 94       	dec	r0
    194c:	16 16       	cp	r1, r22
    194e:	17 06       	cpc	r1, r23
    1950:	18 06       	cpc	r1, r24
    1952:	09 06       	cpc	r0, r25
    1954:	08 95       	ret

00001956 <__fp_pscB>:
    1956:	00 24       	eor	r0, r0
    1958:	0a 94       	dec	r0
    195a:	12 16       	cp	r1, r18
    195c:	13 06       	cpc	r1, r19
    195e:	14 06       	cpc	r1, r20
    1960:	05 06       	cpc	r0, r21
    1962:	08 95       	ret

00001964 <__fp_round>:
    1964:	09 2e       	mov	r0, r25
    1966:	03 94       	inc	r0
    1968:	00 0c       	add	r0, r0
    196a:	11 f4       	brne	.+4      	; 0x1970 <__fp_round+0xc>
    196c:	88 23       	and	r24, r24
    196e:	52 f0       	brmi	.+20     	; 0x1984 <__fp_round+0x20>
    1970:	bb 0f       	add	r27, r27
    1972:	40 f4       	brcc	.+16     	; 0x1984 <__fp_round+0x20>
    1974:	bf 2b       	or	r27, r31
    1976:	11 f4       	brne	.+4      	; 0x197c <__fp_round+0x18>
    1978:	60 ff       	sbrs	r22, 0
    197a:	04 c0       	rjmp	.+8      	; 0x1984 <__fp_round+0x20>
    197c:	6f 5f       	subi	r22, 0xFF	; 255
    197e:	7f 4f       	sbci	r23, 0xFF	; 255
    1980:	8f 4f       	sbci	r24, 0xFF	; 255
    1982:	9f 4f       	sbci	r25, 0xFF	; 255
    1984:	08 95       	ret

00001986 <__fp_split3>:
    1986:	57 fd       	sbrc	r21, 7
    1988:	90 58       	subi	r25, 0x80	; 128
    198a:	44 0f       	add	r20, r20
    198c:	55 1f       	adc	r21, r21
    198e:	59 f0       	breq	.+22     	; 0x19a6 <__fp_splitA+0x10>
    1990:	5f 3f       	cpi	r21, 0xFF	; 255
    1992:	71 f0       	breq	.+28     	; 0x19b0 <__fp_splitA+0x1a>
    1994:	47 95       	ror	r20

00001996 <__fp_splitA>:
    1996:	88 0f       	add	r24, r24
    1998:	97 fb       	bst	r25, 7
    199a:	99 1f       	adc	r25, r25
    199c:	61 f0       	breq	.+24     	; 0x19b6 <__fp_splitA+0x20>
    199e:	9f 3f       	cpi	r25, 0xFF	; 255
    19a0:	79 f0       	breq	.+30     	; 0x19c0 <__fp_splitA+0x2a>
    19a2:	87 95       	ror	r24
    19a4:	08 95       	ret
    19a6:	12 16       	cp	r1, r18
    19a8:	13 06       	cpc	r1, r19
    19aa:	14 06       	cpc	r1, r20
    19ac:	55 1f       	adc	r21, r21
    19ae:	f2 cf       	rjmp	.-28     	; 0x1994 <__fp_split3+0xe>
    19b0:	46 95       	lsr	r20
    19b2:	f1 df       	rcall	.-30     	; 0x1996 <__fp_splitA>
    19b4:	08 c0       	rjmp	.+16     	; 0x19c6 <__fp_splitA+0x30>
    19b6:	16 16       	cp	r1, r22
    19b8:	17 06       	cpc	r1, r23
    19ba:	18 06       	cpc	r1, r24
    19bc:	99 1f       	adc	r25, r25
    19be:	f1 cf       	rjmp	.-30     	; 0x19a2 <__fp_splitA+0xc>
    19c0:	86 95       	lsr	r24
    19c2:	71 05       	cpc	r23, r1
    19c4:	61 05       	cpc	r22, r1
    19c6:	08 94       	sec
    19c8:	08 95       	ret

000019ca <__fp_zero>:
    19ca:	e8 94       	clt

000019cc <__fp_szero>:
    19cc:	bb 27       	eor	r27, r27
    19ce:	66 27       	eor	r22, r22
    19d0:	77 27       	eor	r23, r23
    19d2:	cb 01       	movw	r24, r22
    19d4:	97 f9       	bld	r25, 7
    19d6:	08 95       	ret

000019d8 <__muluhisi3>:
    19d8:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__umulhisi3>
    19dc:	a5 9f       	mul	r26, r21
    19de:	90 0d       	add	r25, r0
    19e0:	b4 9f       	mul	r27, r20
    19e2:	90 0d       	add	r25, r0
    19e4:	a4 9f       	mul	r26, r20
    19e6:	80 0d       	add	r24, r0
    19e8:	91 1d       	adc	r25, r1
    19ea:	11 24       	eor	r1, r1
    19ec:	08 95       	ret

000019ee <__umulhisi3>:
    19ee:	a2 9f       	mul	r26, r18
    19f0:	b0 01       	movw	r22, r0
    19f2:	b3 9f       	mul	r27, r19
    19f4:	c0 01       	movw	r24, r0
    19f6:	a3 9f       	mul	r26, r19
    19f8:	70 0d       	add	r23, r0
    19fa:	81 1d       	adc	r24, r1
    19fc:	11 24       	eor	r1, r1
    19fe:	91 1d       	adc	r25, r1
    1a00:	b2 9f       	mul	r27, r18
    1a02:	70 0d       	add	r23, r0
    1a04:	81 1d       	adc	r24, r1
    1a06:	11 24       	eor	r1, r1
    1a08:	91 1d       	adc	r25, r1
    1a0a:	08 95       	ret

00001a0c <_exit>:
    1a0c:	f8 94       	cli

00001a0e <__stop_program>:
    1a0e:	ff cf       	rjmp	.-2      	; 0x1a0e <__stop_program>
