
sensor_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001402  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b2  00800060  00001402  00001496  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000188  00800112  00800112  00001548  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001548  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  000015e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a8c  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d5  00000000  00000000  00002104  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000adc  00000000  00000000  000027d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  000032b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fd  00000000  00000000  0000347c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000054e  00000000  00000000  00003879  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003dc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 32 02 	jmp	0x464	; 0x464 <__vector_8>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 a4 02 	jmp	0x548	; 0x548 <__vector_14>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d4 e0       	ldi	r29, 0x04	; 4
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	11 e0       	ldi	r17, 0x01	; 1
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e2 e0       	ldi	r30, 0x02	; 2
     16a:	f4 e1       	ldi	r31, 0x14	; 20
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a2 31       	cpi	r26, 0x12	; 18
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	22 e0       	ldi	r18, 0x02	; 2
     17a:	a2 e1       	ldi	r26, 0x12	; 18
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	aa 39       	cpi	r26, 0x9A	; 154
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 52 03 	call	0x6a4	; 0x6a4 <main>
     18c:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <one_wire_receive_byte>:
#include <avr/io.h>
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

one_wire_receive_byte:
ldi r27 ,8
     194:	b8 e0       	ldi	r27, 0x08	; 8
clr r26
     196:	aa 27       	eor	r26, r26

00000198 <loop_>:
loop_:
rcall one_wire_receive_bit
     198:	08 d0       	rcall	.+16     	; 0x1aa <one_wire_receive_bit>
lsr r26
     19a:	a6 95       	lsr	r26
sbrc r24 ,0
     19c:	80 fd       	sbrc	r24, 0
ldi r24 ,0x80
     19e:	80 e8       	ldi	r24, 0x80	; 128
or r26 ,r24
     1a0:	a8 2b       	or	r26, r24
dec r27
     1a2:	ba 95       	dec	r27
brne loop_
     1a4:	c9 f7       	brne	.-14     	; 0x198 <loop_>
mov r24 ,r26
     1a6:	8a 2f       	mov	r24, r26
ret
     1a8:	08 95       	ret

000001aa <one_wire_receive_bit>:
; return value: The bit read is stored in the lsb of r24.
; if 0 is read or 1 if 1 is read.
; registers affected: r25:r24
; routines called: wait_usec
one_wire_receive_bit:
sbi DDRA ,4
     1aa:	d4 9a       	sbi	0x1a, 4	; 26
cbi PORTA ,4 ; generate time slot
     1ac:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,0x02
     1ae:	82 e0       	ldi	r24, 0x02	; 2
ldi r25 ,0x00
     1b0:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1b2:	4a d0       	rcall	.+148    	; 0x248 <wait_usec>
cbi DDRA ,4 ; release the line
     1b4:	d4 98       	cbi	0x1a, 4	; 26
cbi PORTA ,4
     1b6:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,10 ; wait 10 μs
     1b8:	8a e0       	ldi	r24, 0x0A	; 10
ldi r25 ,0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1bc:	45 d0       	rcall	.+138    	; 0x248 <wait_usec>
clr r24 ; sample the line
     1be:	88 27       	eor	r24, r24
sbic PINA ,4
     1c0:	cc 99       	sbic	0x19, 4	; 25
ldi r24 ,1
     1c2:	81 e0       	ldi	r24, 0x01	; 1
push r24
     1c4:	8f 93       	push	r24
ldi r24 ,49 ; delay 49 μs to meet the standards
     1c6:	81 e3       	ldi	r24, 0x31	; 49
ldi r25 ,0 ; for a minimum of 60 μsec time slot
     1c8:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; and a minimum of 1 μsec recovery time
     1ca:	3e d0       	rcall	.+124    	; 0x248 <wait_usec>
pop r24
     1cc:	8f 91       	pop	r24
ret
     1ce:	08 95       	ret

000001d0 <one_wire_transmit_byte>:
; r24: the byte to be transmitted must be stored here.
; return value: None.
; registers affected: r27:r26 ,r25:r24
; routines called: one_wire_transmit_bit
one_wire_transmit_byte:
mov r26 ,r24
     1d0:	a8 2f       	mov	r26, r24
ldi r27 ,8
     1d2:	b8 e0       	ldi	r27, 0x08	; 8

000001d4 <_one_more_>:
_one_more_:
clr r24
     1d4:	88 27       	eor	r24, r24
sbrc r26 ,0
     1d6:	a0 fd       	sbrc	r26, 0
ldi r24 ,0x01
     1d8:	81 e0       	ldi	r24, 0x01	; 1
rcall one_wire_transmit_bit
     1da:	04 d0       	rcall	.+8      	; 0x1e4 <one_wire_transmit_bit>
lsr r26
     1dc:	a6 95       	lsr	r26
dec r27
     1de:	ba 95       	dec	r27
brne _one_more_
     1e0:	c9 f7       	brne	.-14     	; 0x1d4 <_one_more_>
ret
     1e2:	08 95       	ret

000001e4 <one_wire_transmit_bit>:
; be cleared to transmit 0.
; return value: None.
; registers affected: r25:r24
; routines called: wait_usec
one_wire_transmit_bit:
push r24 ; save r24
     1e4:	8f 93       	push	r24
sbi DDRA ,4
     1e6:	d4 9a       	sbi	0x1a, 4	; 26
cbi PORTA ,4 ; generate time slot
     1e8:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,0x02
     1ea:	82 e0       	ldi	r24, 0x02	; 2
ldi r25 ,0x00
     1ec:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1ee:	2c d0       	rcall	.+88     	; 0x248 <wait_usec>
pop r24 ; output bit
     1f0:	8f 91       	pop	r24
sbrc r24 ,0
     1f2:	80 fd       	sbrc	r24, 0
sbi PORTA ,4
     1f4:	dc 9a       	sbi	0x1b, 4	; 27
sbrs r24 ,0
     1f6:	80 ff       	sbrs	r24, 0
cbi PORTA ,4
     1f8:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,58 ; wait 58 μsec for the
     1fa:	8a e3       	ldi	r24, 0x3A	; 58
ldi r25 ,0 ; device to sample the line
     1fc:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec 
     1fe:	24 d0       	rcall	.+72     	; 0x248 <wait_usec>
cbi DDRA ,4 ; recovery time
     200:	d4 98       	cbi	0x1a, 4	; 26
cbi PORTA ,4
     202:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,0x01
     204:	81 e0       	ldi	r24, 0x01	; 1
ldi r25 ,0x00
     206:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     208:	1f d0       	rcall	.+62     	; 0x248 <wait_usec>
ret
     20a:	08 95       	ret

0000020c <one_wire_reset>:
; return value: 1 is stored in r24
; if a device is detected, or 0 else.
; registers affected r25:r24
; routines called: wait_usec
one_wire_reset:
sbi DDRA ,4 ; 4 configured for output
     20c:	d4 9a       	sbi	0x1a, 4	; 26
cbi PORTA ,4 ; 480 μsec reset pulse
     20e:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,lo8(480)
     210:	80 ee       	ldi	r24, 0xE0	; 224
ldi r25 ,hi8(480)
     212:	91 e0       	ldi	r25, 0x01	; 1
rcall wait_usec
     214:	19 d0       	rcall	.+50     	; 0x248 <wait_usec>
cbi DDRA ,4 ; 4 configured for input
     216:	d4 98       	cbi	0x1a, 4	; 26
cbi PORTA ,4
     218:	dc 98       	cbi	0x1b, 4	; 27
ldi r24 ,100 ; wait 100 μsec for devices
     21a:	84 e6       	ldi	r24, 0x64	; 100
ldi r25 ,0 ; to transmit the presence pulse
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     21e:	14 d0       	rcall	.+40     	; 0x248 <wait_usec>
in r24 ,PINA ; sample the line
     220:	89 b3       	in	r24, 0x19	; 25
push r24
     222:	8f 93       	push	r24
ldi r24 ,lo8(380) ; wait for 380 μsec
     224:	8c e7       	ldi	r24, 0x7C	; 124
ldi r25 ,hi8(380)
     226:	91 e0       	ldi	r25, 0x01	; 1
rcall wait_usec
     228:	0f d0       	rcall	.+30     	; 0x248 <wait_usec>
pop r25 ; return 0 if no device was
     22a:	9f 91       	pop	r25
clr r24 ; detected or 1 else
     22c:	88 27       	eor	r24, r24
sbrs r25 ,4
     22e:	94 ff       	sbrs	r25, 4
ldi r24 ,0x01
     230:	81 e0       	ldi	r24, 0x01	; 1
ret
     232:	08 95       	ret

00000234 <wait_msec>:

wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     234:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     236:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     238:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     23a:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     23c:	05 d0       	rcall	.+10     	; 0x248 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     23e:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     240:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     242:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     244:	b9 f7       	brne	.-18     	; 0x234 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     246:	08 95       	ret

00000248 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     248:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     252:	d1 f7       	brne	.-12     	; 0x248 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     254:	08 95       	ret

00000256 <readDS1820>:

.global readDS1820
readDS1820:
rcall one_wire_reset ;returns 0 if there is no connected device
     256:	da df       	rcall	.-76     	; 0x20c <one_wire_reset>
sbrs r24, 0
     258:	80 ff       	sbrs	r24, 0
jmp nodevicedetected
     25a:	0c 94 45 01 	jmp	0x28a	; 0x28a <nodevicedetected>

ldi r24, 0xCC   ; we know there is only one device
     25e:	8c ec       	ldi	r24, 0xCC	; 204
rcall one_wire_transmit_byte
     260:	b7 df       	rcall	.-146    	; 0x1d0 <one_wire_transmit_byte>
ldi r24, 0x44   ; start measuring temperature
     262:	84 e4       	ldi	r24, 0x44	; 68
rcall one_wire_transmit_byte
     264:	b5 df       	rcall	.-150    	; 0x1d0 <one_wire_transmit_byte>

00000266 <notdone>:

notdone:
rcall one_wire_receive_bit  ; LSB of r24 = 1 if read is complete
     266:	a1 df       	rcall	.-190    	; 0x1aa <one_wire_receive_bit>
sbrs r24, 0
     268:	80 ff       	sbrs	r24, 0
jmp notdone
     26a:	0c 94 33 01 	jmp	0x266	; 0x266 <notdone>

rcall one_wire_reset
     26e:	ce df       	rcall	.-100    	; 0x20c <one_wire_reset>
sbrs r24, 0
     270:	80 ff       	sbrs	r24, 0
jmp nodevicedetected
     272:	0c 94 45 01 	jmp	0x28a	; 0x28a <nodevicedetected>
ldi r24, 0xCC   ; we know there is only one device
     276:	8c ec       	ldi	r24, 0xCC	; 204
rcall one_wire_transmit_byte
     278:	ab df       	rcall	.-170    	; 0x1d0 <one_wire_transmit_byte>
ldi r24, 0xBE   ; read 16bit temperature measurement
     27a:	8e eb       	ldi	r24, 0xBE	; 190
rcall one_wire_transmit_byte
     27c:	a9 df       	rcall	.-174    	; 0x1d0 <one_wire_transmit_byte>
rcall one_wire_receive_byte  ; read 8 LSB 
     27e:	8a df       	rcall	.-236    	; 0x194 <one_wire_receive_byte>
push r24
     280:	8f 93       	push	r24
rcall one_wire_receive_byte  ; read 8 MSB 
     282:	88 df       	rcall	.-240    	; 0x194 <one_wire_receive_byte>
mov r25, r24
     284:	98 2f       	mov	r25, r24
pop r24
     286:	8f 91       	pop	r24
ret
     288:	08 95       	ret

0000028a <nodevicedetected>:
;rol r24 ; bit 7-> sign, bit6-0 -> abs(temperature value) 
;ldi r25, 0x00
;ret

nodevicedetected:
ldi r25, 0x80
     28a:	90 e8       	ldi	r25, 0x80	; 128
ldi r24, 0x00
     28c:	80 e0       	ldi	r24, 0x00	; 0
ret
     28e:	08 95       	ret

00000290 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     290:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     292:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     294:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     296:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     298:	6c d0       	rcall	.+216    	; 0x372 <wait_msec>
ldi r24, 0x30
     29a:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     29c:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     29e:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     2a0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     2a2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2a6:	6f d0       	rcall	.+222    	; 0x386 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     2a8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     2aa:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     2ac:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     2ae:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     2b0:	6a d0       	rcall	.+212    	; 0x386 <wait_usec>
pop r25
     2b2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     2b4:	8f 91       	pop	r24
ldi r24, 0x30
     2b6:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     2b8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     2ba:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     2bc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     2be:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     2c0:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2c2:	61 d0       	rcall	.+194    	; 0x386 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     2c4:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     2c6:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     2c8:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     2ca:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     2cc:	5c d0       	rcall	.+184    	; 0x386 <wait_usec>
pop r25
     2ce:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     2d0:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     2d2:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     2d4:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     2d6:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     2d8:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     2da:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     2dc:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     2de:	53 d0       	rcall	.+166    	; 0x386 <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     2e0:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     2e2:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     2e4:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     2e6:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     2e8:	4e d0       	rcall	.+156    	; 0x386 <wait_usec>
pop r25
     2ea:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     2ec:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     2ee:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     2f0:	0e d0       	rcall	.+28     	; 0x30e <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     2f2:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     2f4:	0c d0       	rcall	.+24     	; 0x30e <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     2f6:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     2f8:	0a d0       	rcall	.+20     	; 0x30e <lcd_command_sim>
ldi r24, lo8(1530)
     2fa:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     2fc:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     2fe:	43 d0       	rcall	.+134    	; 0x386 <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     300:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     302:	05 d0       	rcall	.+10     	; 0x30e <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     304:	9f 91       	pop	r25
pop r24
     306:	8f 91       	pop	r24
ret
     308:	08 95       	ret

0000030a <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     30a:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     30c:	00 d0       	rcall	.+0      	; 0x30e <lcd_command_sim>

0000030e <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     30e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     310:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     312:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     314:	06 d0       	rcall	.+12     	; 0x322 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     316:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     318:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     31a:	35 d0       	rcall	.+106    	; 0x386 <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     31c:	9f 91       	pop	r25
pop r24
     31e:	8f 91       	pop	r24
ret
     320:	08 95       	ret

00000322 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     322:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     324:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     326:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     328:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     32a:	2d d0       	rcall	.+90     	; 0x386 <wait_usec>
pop r25
     32c:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     32e:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     330:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     332:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     334:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     336:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     338:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     33a:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     33c:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     33e:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     340:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     342:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     344:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     346:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     348:	1e d0       	rcall	.+60     	; 0x386 <wait_usec>
pop r25
     34a:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     34c:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     34e:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     350:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     352:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     354:	89 0f       	add	r24, r25
out PORTD, r24
     356:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     358:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     35a:	93 98       	cbi	0x12, 3	; 18
ret
     35c:	08 95       	ret

0000035e <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     35e:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     360:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     362:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     364:	de df       	rcall	.-68     	; 0x322 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     366:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     368:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     36a:	0d d0       	rcall	.+26     	; 0x386 <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     36c:	9f 91       	pop	r25
pop r24
     36e:	8f 91       	pop	r24
ret
     370:	08 95       	ret

00000372 <wait_msec>:

wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     372:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     374:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     376:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     378:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     37a:	05 d0       	rcall	.+10     	; 0x386 <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     37c:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     37e:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     380:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     382:	b9 f7       	brne	.-18     	; 0x372 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     384:	08 95       	ret

00000386 <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     386:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     390:	d1 f7       	brne	.-12     	; 0x386 <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     392:	08 95       	ret

00000394 <print>:


.global print
print:
     394:	e4 df       	rcall	.-56     	; 0x35e <lcd_data_sim>

00000396 <USART_init>:
}
*/

void USART_init(void)
{
	UCSRA = 0;
     396:	1b b8       	out	0x0b, r1	; 11
	UCSRB = (1<<RXEN) | (1<<TXEN);
     398:	88 e1       	ldi	r24, 0x18	; 24
     39a:	8a b9       	out	0x0a, r24	; 10
	UBRRH = 0;
     39c:	10 bc       	out	0x20, r1	; 32
	UBRRL = 51; //baudrate 9600
     39e:	83 e3       	ldi	r24, 0x33	; 51
     3a0:	89 b9       	out	0x09, r24	; 9
	UCSRC = (1 << URSEL) | (3 << UCSZ0);
     3a2:	86 e8       	ldi	r24, 0x86	; 134
     3a4:	80 bd       	out	0x20, r24	; 32
     3a6:	08 95       	ret

000003a8 <USART_receive>:
}

unsigned char USART_receive(void)
{
	while((UCSRA & 0x80) == 0 ){}
     3a8:	5f 9b       	sbis	0x0b, 7	; 11
     3aa:	fe cf       	rjmp	.-4      	; 0x3a8 <USART_receive>
	return UDR;
     3ac:	8c b1       	in	r24, 0x0c	; 12
}
     3ae:	08 95       	ret

000003b0 <USART_transmit>:

void USART_transmit(char input)
{
	while((UCSRA & 0x20) == 0){}
     3b0:	5d 9b       	sbis	0x0b, 5	; 11
     3b2:	fe cf       	rjmp	.-4      	; 0x3b0 <USART_transmit>
	UDR = input;
     3b4:	8c b9       	out	0x0c, r24	; 12
     3b6:	08 95       	ret

000003b8 <serialWrite>:
}

void serialWrite(char c[]) {
     3b8:	ff 92       	push	r15
     3ba:	0f 93       	push	r16
     3bc:	1f 93       	push	r17
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	8c 01       	movw	r16, r24
	for(uint8_t i=0; i<strlen(c); ++i) {
     3c4:	f1 2c       	mov	r15, r1
     3c6:	0a c0       	rjmp	.+20     	; 0x3dc <serialWrite+0x24>
		USART_transmit(c[i]); //transmit command one character at a time
     3c8:	e8 01       	movw	r28, r16
     3ca:	c8 0f       	add	r28, r24
     3cc:	d9 1f       	adc	r29, r25
     3ce:	88 81       	ld	r24, Y
     3d0:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <USART_transmit>
		print(c[i]);
     3d4:	88 81       	ld	r24, Y
     3d6:	0e 94 ca 01 	call	0x394	; 0x394 <print>
	while((UCSRA & 0x20) == 0){}
	UDR = input;
}

void serialWrite(char c[]) {
	for(uint8_t i=0; i<strlen(c); ++i) {
     3da:	f3 94       	inc	r15
     3dc:	8f 2d       	mov	r24, r15
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	f8 01       	movw	r30, r16
     3e2:	01 90       	ld	r0, Z+
     3e4:	00 20       	and	r0, r0
     3e6:	e9 f7       	brne	.-6      	; 0x3e2 <serialWrite+0x2a>
     3e8:	31 97       	sbiw	r30, 0x01	; 1
     3ea:	e0 1b       	sub	r30, r16
     3ec:	f1 0b       	sbc	r31, r17
     3ee:	8e 17       	cp	r24, r30
     3f0:	9f 07       	cpc	r25, r31
     3f2:	50 f3       	brcs	.-44     	; 0x3c8 <serialWrite+0x10>
		USART_transmit(c[i]); //transmit command one character at a time
		print(c[i]);
	}
}
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	1f 91       	pop	r17
     3fa:	0f 91       	pop	r16
     3fc:	ff 90       	pop	r15
     3fe:	08 95       	ret

00000400 <sendCommand>:

void sendCommand(char command[]) {
     400:	0f 93       	push	r16
     402:	1f 93       	push	r17
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	8c 01       	movw	r16, r24
	serialWrite(command);
     40a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <serialWrite>
	unsigned char c;
	
	c=USART_receive();
     40e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <USART_receive>
     412:	c8 2f       	mov	r28, r24
	PORTB=0xFF; //debug
     414:	8f ef       	ldi	r24, 0xFF	; 255
     416:	88 bb       	out	0x18, r24	; 24
	print(c); //debug
     418:	8c 2f       	mov	r24, r28
     41a:	0e 94 ca 01 	call	0x394	; 0x394 <print>
	while(c!='S'){ //wait until "success" reply from esp
     41e:	12 c0       	rjmp	.+36     	; 0x444 <sendCommand+0x44>
		if(c=='F') { //if command execution failed re-transmit it
     420:	c6 34       	cpi	r28, 0x46	; 70
     422:	69 f4       	brne	.+26     	; 0x43e <sendCommand+0x3e>
     424:	04 c0       	rjmp	.+8      	; 0x42e <sendCommand+0x2e>
			for(int i=0; i<5; ++i)
				USART_receive(); //flush fail out of read buffer
     426:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <USART_receive>
	c=USART_receive();
	PORTB=0xFF; //debug
	print(c); //debug
	while(c!='S'){ //wait until "success" reply from esp
		if(c=='F') { //if command execution failed re-transmit it
			for(int i=0; i<5; ++i)
     42a:	21 96       	adiw	r28, 0x01	; 1
     42c:	02 c0       	rjmp	.+4      	; 0x432 <sendCommand+0x32>
     42e:	c0 e0       	ldi	r28, 0x00	; 0
     430:	d0 e0       	ldi	r29, 0x00	; 0
     432:	c5 30       	cpi	r28, 0x05	; 5
     434:	d1 05       	cpc	r29, r1
     436:	bc f3       	brlt	.-18     	; 0x426 <sendCommand+0x26>
				USART_receive(); //flush fail out of read buffer
			serialWrite(command);
     438:	c8 01       	movw	r24, r16
     43a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <serialWrite>
		}
		c=USART_receive();
     43e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <USART_receive>
     442:	c8 2f       	mov	r28, r24
	unsigned char c;
	
	c=USART_receive();
	PORTB=0xFF; //debug
	print(c); //debug
	while(c!='S'){ //wait until "success" reply from esp
     444:	c3 35       	cpi	r28, 0x53	; 83
     446:	61 f7       	brne	.-40     	; 0x420 <sendCommand+0x20>
     448:	c0 e0       	ldi	r28, 0x00	; 0
     44a:	d0 e0       	ldi	r29, 0x00	; 0
     44c:	03 c0       	rjmp	.+6      	; 0x454 <sendCommand+0x54>
			serialWrite(command);
		}
		c=USART_receive();
	}
	for(int i=0; i<8; ++i)
		USART_receive(); //flush success out of read buffer
     44e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <USART_receive>
				USART_receive(); //flush fail out of read buffer
			serialWrite(command);
		}
		c=USART_receive();
	}
	for(int i=0; i<8; ++i)
     452:	21 96       	adiw	r28, 0x01	; 1
     454:	c8 30       	cpi	r28, 0x08	; 8
     456:	d1 05       	cpc	r29, r1
     458:	d4 f3       	brlt	.-12     	; 0x44e <sendCommand+0x4e>
		USART_receive(); //flush success out of read buffer
}
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	1f 91       	pop	r17
     460:	0f 91       	pop	r16
     462:	08 95       	ret

00000464 <__vector_8>:


ISR(TIMER1_OVF_vect) {
     464:	1f 92       	push	r1
     466:	0f 92       	push	r0
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	0f 92       	push	r0
     46c:	11 24       	eor	r1, r1
     46e:	2f 93       	push	r18
     470:	3f 93       	push	r19
     472:	4f 93       	push	r20
     474:	5f 93       	push	r21
     476:	6f 93       	push	r22
     478:	7f 93       	push	r23
     47a:	8f 93       	push	r24
     47c:	9f 93       	push	r25
     47e:	af 93       	push	r26
     480:	bf 93       	push	r27
     482:	cf 93       	push	r28
     484:	df 93       	push	r29
     486:	ef 93       	push	r30
     488:	ff 93       	push	r31
	PORTB=0xFF;
     48a:	8f ef       	ldi	r24, 0xFF	; 255
     48c:	88 bb       	out	0x18, r24	; 24
    if(!first) {
     48e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     492:	81 11       	cpse	r24, r1
     494:	3b c0       	rjmp	.+118    	; 0x50c <__vector_8+0xa8>
        /*itoa(moist_sensor, conv_buffer, 10); //convert value read to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[%d]\n", moist_sensor);
     496:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <moist_sensor+0x1>
     49a:	8f 93       	push	r24
     49c:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <moist_sensor>
     4a0:	8f 93       	push	r24
     4a2:	81 e6       	ldi	r24, 0x61	; 97
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	c2 e1       	ldi	r28, 0x12	; 18
     4ac:	d1 e0       	ldi	r29, 0x01	; 1
     4ae:	df 93       	push	r29
     4b0:	cf 93       	push	r28
     4b2:	0e 94 7f 09 	call	0x12fe	; 0x12fe <sprintf>

        sendCommand(string_to_send); //send command to set the value of the moisture sensor
     4b6:	ce 01       	movw	r24, r28
     4b8:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>
        /*itoa(tmp_sensor, conv_buffer, 10);
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[");
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[%.1f]\n", tmp_sensor/2.0);
     4bc:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <tmp_sensor>
     4c0:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <tmp_sensor+0x1>
     4c4:	07 2e       	mov	r0, r23
     4c6:	00 0c       	add	r0, r0
     4c8:	88 0b       	sbc	r24, r24
     4ca:	99 0b       	sbc	r25, r25
     4cc:	0e 94 a8 03 	call	0x750	; 0x750 <__floatsisf>
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e0       	ldi	r20, 0x00	; 0
     4d6:	5f e3       	ldi	r21, 0x3F	; 63
     4d8:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__mulsf3>
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	7f 93       	push	r23
     4e2:	6f 93       	push	r22
     4e4:	85 e8       	ldi	r24, 0x85	; 133
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	9f 93       	push	r25
     4ea:	8f 93       	push	r24
     4ec:	df 93       	push	r29
     4ee:	cf 93       	push	r28
     4f0:	0e 94 7f 09 	call	0x12fe	; 0x12fe <sprintf>
        sendCommand(string_to_send); //send command to set the value of the temperature sensor
     4f4:	ce 01       	movw	r24, r28
     4f6:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>
     4fa:	8d b7       	in	r24, 0x3d	; 61
     4fc:	9e b7       	in	r25, 0x3e	; 62
     4fe:	0e 96       	adiw	r24, 0x0e	; 14
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	9e bf       	out	0x3e, r25	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	8d bf       	out	0x3d, r24	; 61
     50a:	02 c0       	rjmp	.+4      	; 0x510 <__vector_8+0xac>
    }
    else
        first=false;
     50c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    ADMUX = 0x40; // Vref: Vcc(5V for easyAVR6) and analog input from PINA0 (moisture sensor)
     510:	80 e4       	ldi	r24, 0x40	; 64
     512:	87 b9       	out	0x07, r24	; 7
    ADCSRA = ADCSRA | 0x40; // ADC Enable, ADC Interrupt Enable and f = CLK/128
     514:	86 b1       	in	r24, 0x06	; 6
     516:	80 64       	ori	r24, 0x40	; 64
     518:	86 b9       	out	0x06, r24	; 6

    TCNT1 = 3036;
     51a:	8c ed       	ldi	r24, 0xDC	; 220
     51c:	9b e0       	ldi	r25, 0x0B	; 11
     51e:	9d bd       	out	0x2d, r25	; 45
     520:	8c bd       	out	0x2c, r24	; 44
}
     522:	ff 91       	pop	r31
     524:	ef 91       	pop	r30
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	bf 91       	pop	r27
     52c:	af 91       	pop	r26
     52e:	9f 91       	pop	r25
     530:	8f 91       	pop	r24
     532:	7f 91       	pop	r23
     534:	6f 91       	pop	r22
     536:	5f 91       	pop	r21
     538:	4f 91       	pop	r20
     53a:	3f 91       	pop	r19
     53c:	2f 91       	pop	r18
     53e:	0f 90       	pop	r0
     540:	0f be       	out	0x3f, r0	; 63
     542:	0f 90       	pop	r0
     544:	1f 90       	pop	r1
     546:	18 95       	reti

00000548 <__vector_14>:

ISR(ADC_vect) {
     548:	1f 92       	push	r1
     54a:	0f 92       	push	r0
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	0f 92       	push	r0
     550:	11 24       	eor	r1, r1
     552:	2f 93       	push	r18
     554:	3f 93       	push	r19
     556:	4f 93       	push	r20
     558:	5f 93       	push	r21
     55a:	6f 93       	push	r22
     55c:	7f 93       	push	r23
     55e:	8f 93       	push	r24
     560:	9f 93       	push	r25
     562:	af 93       	push	r26
     564:	bf 93       	push	r27
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	ef 93       	push	r30
     56c:	ff 93       	push	r31
    moist_sensor = ADCW;
     56e:	84 b1       	in	r24, 0x04	; 4
     570:	95 b1       	in	r25, 0x05	; 5
     572:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <moist_sensor+0x1>
     576:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <moist_sensor>
    tmp_sensor = readDS1820();
     57a:	0e 94 2b 01 	call	0x256	; 0x256 <readDS1820>
     57e:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <tmp_sensor+0x1>
     582:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <tmp_sensor>
    if((tmp_sensor&0xFF00)==0xFF00){ //if temperature is negative convert it to the corresponding value
     586:	9c 01       	movw	r18, r24
     588:	22 27       	eor	r18, r18
     58a:	21 15       	cp	r18, r1
     58c:	3f 4f       	sbci	r19, 0xFF	; 255
     58e:	51 f4       	brne	.+20     	; 0x5a4 <__vector_14+0x5c>
        tmp_sensor--;
     590:	01 97       	sbiw	r24, 0x01	; 1
        tmp_sensor = tmp_sensor&0x00FF;
     592:	99 27       	eor	r25, r25
        tmp_sensor = tmp_sensor^0x00FF;
     594:	80 95       	com	r24
        tmp_sensor = -tmp_sensor;
     596:	91 95       	neg	r25
     598:	81 95       	neg	r24
     59a:	91 09       	sbc	r25, r1
     59c:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <tmp_sensor+0x1>
     5a0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <tmp_sensor>
    }
    
    //for debugging
	lcd_clear();
     5a4:	0e 94 85 01 	call	0x30a	; 0x30a <lcd_clear>
	
	PORTB=0xFF;
     5a8:	8f ef       	ldi	r24, 0xFF	; 255
     5aa:	88 bb       	out	0x18, r24	; 24
	
    sprintf(conv_buffer, "%d", moist_sensor);
     5ac:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <moist_sensor+0x1>
     5b0:	8f 93       	push	r24
     5b2:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <moist_sensor>
     5b6:	8f 93       	push	r24
     5b8:	89 ea       	ldi	r24, 0xA9	; 169
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	9f 93       	push	r25
     5be:	8f 93       	push	r24
     5c0:	84 e9       	ldi	r24, 0x94	; 148
     5c2:	92 e0       	ldi	r25, 0x02	; 2
     5c4:	9f 93       	push	r25
     5c6:	8f 93       	push	r24
     5c8:	0e 94 7f 09 	call	0x12fe	; 0x12fe <sprintf>
    for(int m=0; m<strlen(conv_buffer); ++m)
     5cc:	0f 90       	pop	r0
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	c0 e0       	ldi	r28, 0x00	; 0
     5da:	d0 e0       	ldi	r29, 0x00	; 0
     5dc:	07 c0       	rjmp	.+14     	; 0x5ec <__vector_14+0xa4>
        print(conv_buffer[m]);
     5de:	fe 01       	movw	r30, r28
     5e0:	ec 56       	subi	r30, 0x6C	; 108
     5e2:	fd 4f       	sbci	r31, 0xFD	; 253
     5e4:	80 81       	ld	r24, Z
     5e6:	0e 94 ca 01 	call	0x394	; 0x394 <print>
	lcd_clear();
	
	PORTB=0xFF;
	
    sprintf(conv_buffer, "%d", moist_sensor);
    for(int m=0; m<strlen(conv_buffer); ++m)
     5ea:	21 96       	adiw	r28, 0x01	; 1
     5ec:	e4 e9       	ldi	r30, 0x94	; 148
     5ee:	f2 e0       	ldi	r31, 0x02	; 2
     5f0:	01 90       	ld	r0, Z+
     5f2:	00 20       	and	r0, r0
     5f4:	e9 f7       	brne	.-6      	; 0x5f0 <__vector_14+0xa8>
     5f6:	31 97       	sbiw	r30, 0x01	; 1
     5f8:	e4 59       	subi	r30, 0x94	; 148
     5fa:	f2 40       	sbci	r31, 0x02	; 2
     5fc:	ce 17       	cp	r28, r30
     5fe:	df 07       	cpc	r29, r31
     600:	70 f3       	brcs	.-36     	; 0x5de <__vector_14+0x96>
        print(conv_buffer[m]);

    print('\n');
     602:	8a e0       	ldi	r24, 0x0A	; 10
     604:	0e 94 ca 01 	call	0x394	; 0x394 <print>

    sprintf(conv_buffer, "%.1f", tmp_sensor/2.0);
     608:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <tmp_sensor>
     60c:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <tmp_sensor+0x1>
     610:	07 2e       	mov	r0, r23
     612:	00 0c       	add	r0, r0
     614:	88 0b       	sbc	r24, r24
     616:	99 0b       	sbc	r25, r25
     618:	0e 94 a8 03 	call	0x750	; 0x750 <__floatsisf>
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	5f e3       	ldi	r21, 0x3F	; 63
     624:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__mulsf3>
     628:	9f 93       	push	r25
     62a:	8f 93       	push	r24
     62c:	7f 93       	push	r23
     62e:	6f 93       	push	r22
     630:	8c ea       	ldi	r24, 0xAC	; 172
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	9f 93       	push	r25
     636:	8f 93       	push	r24
     638:	84 e9       	ldi	r24, 0x94	; 148
     63a:	92 e0       	ldi	r25, 0x02	; 2
     63c:	9f 93       	push	r25
     63e:	8f 93       	push	r24
     640:	0e 94 7f 09 	call	0x12fe	; 0x12fe <sprintf>
    for(int m=0; m<strlen(conv_buffer); ++m)
     644:	8d b7       	in	r24, 0x3d	; 61
     646:	9e b7       	in	r25, 0x3e	; 62
     648:	08 96       	adiw	r24, 0x08	; 8
     64a:	0f b6       	in	r0, 0x3f	; 63
     64c:	f8 94       	cli
     64e:	9e bf       	out	0x3e, r25	; 62
     650:	0f be       	out	0x3f, r0	; 63
     652:	8d bf       	out	0x3d, r24	; 61
     654:	c0 e0       	ldi	r28, 0x00	; 0
     656:	d0 e0       	ldi	r29, 0x00	; 0
     658:	07 c0       	rjmp	.+14     	; 0x668 <__vector_14+0x120>
        print(conv_buffer[m]);
     65a:	fe 01       	movw	r30, r28
     65c:	ec 56       	subi	r30, 0x6C	; 108
     65e:	fd 4f       	sbci	r31, 0xFD	; 253
     660:	80 81       	ld	r24, Z
     662:	0e 94 ca 01 	call	0x394	; 0x394 <print>
        print(conv_buffer[m]);

    print('\n');

    sprintf(conv_buffer, "%.1f", tmp_sensor/2.0);
    for(int m=0; m<strlen(conv_buffer); ++m)
     666:	21 96       	adiw	r28, 0x01	; 1
     668:	e4 e9       	ldi	r30, 0x94	; 148
     66a:	f2 e0       	ldi	r31, 0x02	; 2
     66c:	01 90       	ld	r0, Z+
     66e:	00 20       	and	r0, r0
     670:	e9 f7       	brne	.-6      	; 0x66c <__vector_14+0x124>
     672:	31 97       	sbiw	r30, 0x01	; 1
     674:	e4 59       	subi	r30, 0x94	; 148
     676:	f2 40       	sbci	r31, 0x02	; 2
     678:	ce 17       	cp	r28, r30
     67a:	df 07       	cpc	r29, r31
     67c:	70 f3       	brcs	.-36     	; 0x65a <__vector_14+0x112>
        print(conv_buffer[m]);
    //debugging end

}
     67e:	ff 91       	pop	r31
     680:	ef 91       	pop	r30
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	bf 91       	pop	r27
     688:	af 91       	pop	r26
     68a:	9f 91       	pop	r25
     68c:	8f 91       	pop	r24
     68e:	7f 91       	pop	r23
     690:	6f 91       	pop	r22
     692:	5f 91       	pop	r21
     694:	4f 91       	pop	r20
     696:	3f 91       	pop	r19
     698:	2f 91       	pop	r18
     69a:	0f 90       	pop	r0
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	0f 90       	pop	r0
     6a0:	1f 90       	pop	r1
     6a2:	18 95       	reti

000006a4 <main>:


int main(){

    first = true;
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    moist_sensor=tmp_sensor=0;
     6aa:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <tmp_sensor+0x1>
     6ae:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <tmp_sensor>
     6b2:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <moist_sensor+0x1>
     6b6:	10 92 98 02 	sts	0x0298, r1	; 0x800298 <moist_sensor>

    DDRA = 0x00; // Port A input
     6ba:	1a ba       	out	0x1a, r1	; 26
	DDRB= 0xFF;
     6bc:	cf ef       	ldi	r28, 0xFF	; 255
     6be:	c7 bb       	out	0x17, r28	; 23
	
	DDRD=0xFF; //for debugging for lcd
     6c0:	c1 bb       	out	0x11, r28	; 17
    //Receiver and Transmitter Enable, RX_interrupt enable, TX_interrupt enable

    //UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    //UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)
	
	USART_init();
     6c2:	0e 94 cb 01 	call	0x396	; 0x396 <USART_init>

    TCCR1B = 0x05; //CK/1024
     6c6:	85 e0       	ldi	r24, 0x05	; 5
     6c8:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8s between interrupts
     6ca:	8c ed       	ldi	r24, 0xDC	; 220
     6cc:	9b e0       	ldi	r25, 0x0B	; 11
     6ce:	9d bd       	out	0x2d, r25	; 45
     6d0:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     6d2:	84 e0       	ldi	r24, 0x04	; 4
     6d4:	89 bf       	out	0x39, r24	; 57

    ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADIE); //ADC enable, frequency = CLK/128 and enable interrupts
     6d6:	8f e8       	ldi	r24, 0x8F	; 143
     6d8:	86 b9       	out	0x06, r24	; 6

    lcd_init_sim();
     6da:	0e 94 48 01 	call	0x290	; 0x290 <lcd_init_sim>
	
    
    //strcpy(string_to_send, "ESP:restart\n");
    //sendCommand(string_to_send);
    
    strcpy(string_to_send, "ESP:ssid: \"Sens_Board1\"\n");
     6de:	89 e1       	ldi	r24, 0x19	; 25
     6e0:	e1 eb       	ldi	r30, 0xB1	; 177
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	a2 e1       	ldi	r26, 0x12	; 18
     6e6:	b1 e0       	ldi	r27, 0x01	; 1
     6e8:	01 90       	ld	r0, Z+
     6ea:	0d 92       	st	X+, r0
     6ec:	8a 95       	dec	r24
     6ee:	e1 f7       	brne	.-8      	; 0x6e8 <main+0x44>
    sendCommand(string_to_send);
     6f0:	82 e1       	ldi	r24, 0x12	; 18
     6f2:	91 e0       	ldi	r25, 0x01	; 1
     6f4:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor: \"Moist_Sensor\"\n");
     6f8:	8f e1       	ldi	r24, 0x1F	; 31
     6fa:	ea ec       	ldi	r30, 0xCA	; 202
     6fc:	f0 e0       	ldi	r31, 0x00	; 0
     6fe:	a2 e1       	ldi	r26, 0x12	; 18
     700:	b1 e0       	ldi	r27, 0x01	; 1
     702:	01 90       	ld	r0, Z+
     704:	0d 92       	st	X+, r0
     706:	8a 95       	dec	r24
     708:	e1 f7       	brne	.-8      	; 0x702 <main+0x5e>
    sendCommand(string_to_send);
     70a:	82 e1       	ldi	r24, 0x12	; 18
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor:\"Tmp_Sensor\"\n");
     712:	8c e1       	ldi	r24, 0x1C	; 28
     714:	e9 ee       	ldi	r30, 0xE9	; 233
     716:	f0 e0       	ldi	r31, 0x00	; 0
     718:	a2 e1       	ldi	r26, 0x12	; 18
     71a:	b1 e0       	ldi	r27, 0x01	; 1
     71c:	01 90       	ld	r0, Z+
     71e:	0d 92       	st	X+, r0
     720:	8a 95       	dec	r24
     722:	e1 f7       	brne	.-8      	; 0x71c <main+0x78>
    sendCommand(string_to_send);
     724:	82 e1       	ldi	r24, 0x12	; 18
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>

    strcpy(string_to_send, "ESP:APStart\n");
     72c:	8d e0       	ldi	r24, 0x0D	; 13
     72e:	e5 e0       	ldi	r30, 0x05	; 5
     730:	f1 e0       	ldi	r31, 0x01	; 1
     732:	a2 e1       	ldi	r26, 0x12	; 18
     734:	b1 e0       	ldi	r27, 0x01	; 1
     736:	01 90       	ld	r0, Z+
     738:	0d 92       	st	X+, r0
     73a:	8a 95       	dec	r24
     73c:	e1 f7       	brne	.-8      	; 0x736 <main+0x92>
    sendCommand(string_to_send);
     73e:	82 e1       	ldi	r24, 0x12	; 18
     740:	91 e0       	ldi	r25, 0x01	; 1
     742:	0e 94 00 02 	call	0x400	; 0x400 <sendCommand>
	
	PORTB=0xFF;
     746:	c8 bb       	out	0x18, r28	; 24

    

    sei();
     748:	78 94       	sei
     74a:	ff cf       	rjmp	.-2      	; 0x74a <main+0xa6>

0000074c <__floatunsisf>:
     74c:	e8 94       	clt
     74e:	09 c0       	rjmp	.+18     	; 0x762 <__floatsisf+0x12>

00000750 <__floatsisf>:
     750:	97 fb       	bst	r25, 7
     752:	3e f4       	brtc	.+14     	; 0x762 <__floatsisf+0x12>
     754:	90 95       	com	r25
     756:	80 95       	com	r24
     758:	70 95       	com	r23
     75a:	61 95       	neg	r22
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	8f 4f       	sbci	r24, 0xFF	; 255
     760:	9f 4f       	sbci	r25, 0xFF	; 255
     762:	99 23       	and	r25, r25
     764:	a9 f0       	breq	.+42     	; 0x790 <__floatsisf+0x40>
     766:	f9 2f       	mov	r31, r25
     768:	96 e9       	ldi	r25, 0x96	; 150
     76a:	bb 27       	eor	r27, r27
     76c:	93 95       	inc	r25
     76e:	f6 95       	lsr	r31
     770:	87 95       	ror	r24
     772:	77 95       	ror	r23
     774:	67 95       	ror	r22
     776:	b7 95       	ror	r27
     778:	f1 11       	cpse	r31, r1
     77a:	f8 cf       	rjmp	.-16     	; 0x76c <__floatsisf+0x1c>
     77c:	fa f4       	brpl	.+62     	; 0x7bc <__floatsisf+0x6c>
     77e:	bb 0f       	add	r27, r27
     780:	11 f4       	brne	.+4      	; 0x786 <__floatsisf+0x36>
     782:	60 ff       	sbrs	r22, 0
     784:	1b c0       	rjmp	.+54     	; 0x7bc <__floatsisf+0x6c>
     786:	6f 5f       	subi	r22, 0xFF	; 255
     788:	7f 4f       	sbci	r23, 0xFF	; 255
     78a:	8f 4f       	sbci	r24, 0xFF	; 255
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	16 c0       	rjmp	.+44     	; 0x7bc <__floatsisf+0x6c>
     790:	88 23       	and	r24, r24
     792:	11 f0       	breq	.+4      	; 0x798 <__floatsisf+0x48>
     794:	96 e9       	ldi	r25, 0x96	; 150
     796:	11 c0       	rjmp	.+34     	; 0x7ba <__floatsisf+0x6a>
     798:	77 23       	and	r23, r23
     79a:	21 f0       	breq	.+8      	; 0x7a4 <__floatsisf+0x54>
     79c:	9e e8       	ldi	r25, 0x8E	; 142
     79e:	87 2f       	mov	r24, r23
     7a0:	76 2f       	mov	r23, r22
     7a2:	05 c0       	rjmp	.+10     	; 0x7ae <__floatsisf+0x5e>
     7a4:	66 23       	and	r22, r22
     7a6:	71 f0       	breq	.+28     	; 0x7c4 <__floatsisf+0x74>
     7a8:	96 e8       	ldi	r25, 0x86	; 134
     7aa:	86 2f       	mov	r24, r22
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	2a f0       	brmi	.+10     	; 0x7bc <__floatsisf+0x6c>
     7b2:	9a 95       	dec	r25
     7b4:	66 0f       	add	r22, r22
     7b6:	77 1f       	adc	r23, r23
     7b8:	88 1f       	adc	r24, r24
     7ba:	da f7       	brpl	.-10     	; 0x7b2 <__floatsisf+0x62>
     7bc:	88 0f       	add	r24, r24
     7be:	96 95       	lsr	r25
     7c0:	87 95       	ror	r24
     7c2:	97 f9       	bld	r25, 7
     7c4:	08 95       	ret

000007c6 <__mulsf3>:
     7c6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__mulsf3x>
     7ca:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_round>
     7ce:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__fp_pscA>
     7d2:	38 f0       	brcs	.+14     	; 0x7e2 <__mulsf3+0x1c>
     7d4:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__fp_pscB>
     7d8:	20 f0       	brcs	.+8      	; 0x7e2 <__mulsf3+0x1c>
     7da:	95 23       	and	r25, r21
     7dc:	11 f0       	breq	.+4      	; 0x7e2 <__mulsf3+0x1c>
     7de:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <__fp_inf>
     7e2:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <__fp_nan>
     7e6:	11 24       	eor	r1, r1
     7e8:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_szero>

000007ec <__mulsf3x>:
     7ec:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__fp_split3>
     7f0:	70 f3       	brcs	.-36     	; 0x7ce <__mulsf3+0x8>

000007f2 <__mulsf3_pse>:
     7f2:	95 9f       	mul	r25, r21
     7f4:	c1 f3       	breq	.-16     	; 0x7e6 <__mulsf3+0x20>
     7f6:	95 0f       	add	r25, r21
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	55 1f       	adc	r21, r21
     7fc:	62 9f       	mul	r22, r18
     7fe:	f0 01       	movw	r30, r0
     800:	72 9f       	mul	r23, r18
     802:	bb 27       	eor	r27, r27
     804:	f0 0d       	add	r31, r0
     806:	b1 1d       	adc	r27, r1
     808:	63 9f       	mul	r22, r19
     80a:	aa 27       	eor	r26, r26
     80c:	f0 0d       	add	r31, r0
     80e:	b1 1d       	adc	r27, r1
     810:	aa 1f       	adc	r26, r26
     812:	64 9f       	mul	r22, r20
     814:	66 27       	eor	r22, r22
     816:	b0 0d       	add	r27, r0
     818:	a1 1d       	adc	r26, r1
     81a:	66 1f       	adc	r22, r22
     81c:	82 9f       	mul	r24, r18
     81e:	22 27       	eor	r18, r18
     820:	b0 0d       	add	r27, r0
     822:	a1 1d       	adc	r26, r1
     824:	62 1f       	adc	r22, r18
     826:	73 9f       	mul	r23, r19
     828:	b0 0d       	add	r27, r0
     82a:	a1 1d       	adc	r26, r1
     82c:	62 1f       	adc	r22, r18
     82e:	83 9f       	mul	r24, r19
     830:	a0 0d       	add	r26, r0
     832:	61 1d       	adc	r22, r1
     834:	22 1f       	adc	r18, r18
     836:	74 9f       	mul	r23, r20
     838:	33 27       	eor	r19, r19
     83a:	a0 0d       	add	r26, r0
     83c:	61 1d       	adc	r22, r1
     83e:	23 1f       	adc	r18, r19
     840:	84 9f       	mul	r24, r20
     842:	60 0d       	add	r22, r0
     844:	21 1d       	adc	r18, r1
     846:	82 2f       	mov	r24, r18
     848:	76 2f       	mov	r23, r22
     84a:	6a 2f       	mov	r22, r26
     84c:	11 24       	eor	r1, r1
     84e:	9f 57       	subi	r25, 0x7F	; 127
     850:	50 40       	sbci	r21, 0x00	; 0
     852:	9a f0       	brmi	.+38     	; 0x87a <__mulsf3_pse+0x88>
     854:	f1 f0       	breq	.+60     	; 0x892 <__mulsf3_pse+0xa0>
     856:	88 23       	and	r24, r24
     858:	4a f0       	brmi	.+18     	; 0x86c <__mulsf3_pse+0x7a>
     85a:	ee 0f       	add	r30, r30
     85c:	ff 1f       	adc	r31, r31
     85e:	bb 1f       	adc	r27, r27
     860:	66 1f       	adc	r22, r22
     862:	77 1f       	adc	r23, r23
     864:	88 1f       	adc	r24, r24
     866:	91 50       	subi	r25, 0x01	; 1
     868:	50 40       	sbci	r21, 0x00	; 0
     86a:	a9 f7       	brne	.-22     	; 0x856 <__mulsf3_pse+0x64>
     86c:	9e 3f       	cpi	r25, 0xFE	; 254
     86e:	51 05       	cpc	r21, r1
     870:	80 f0       	brcs	.+32     	; 0x892 <__mulsf3_pse+0xa0>
     872:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <__fp_inf>
     876:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_szero>
     87a:	5f 3f       	cpi	r21, 0xFF	; 255
     87c:	e4 f3       	brlt	.-8      	; 0x876 <__mulsf3_pse+0x84>
     87e:	98 3e       	cpi	r25, 0xE8	; 232
     880:	d4 f3       	brlt	.-12     	; 0x876 <__mulsf3_pse+0x84>
     882:	86 95       	lsr	r24
     884:	77 95       	ror	r23
     886:	67 95       	ror	r22
     888:	b7 95       	ror	r27
     88a:	f7 95       	ror	r31
     88c:	e7 95       	ror	r30
     88e:	9f 5f       	subi	r25, 0xFF	; 255
     890:	c1 f7       	brne	.-16     	; 0x882 <__mulsf3_pse+0x90>
     892:	fe 2b       	or	r31, r30
     894:	88 0f       	add	r24, r24
     896:	91 1d       	adc	r25, r1
     898:	96 95       	lsr	r25
     89a:	87 95       	ror	r24
     89c:	97 f9       	bld	r25, 7
     89e:	08 95       	ret

000008a0 <__fp_inf>:
     8a0:	97 f9       	bld	r25, 7
     8a2:	9f 67       	ori	r25, 0x7F	; 127
     8a4:	80 e8       	ldi	r24, 0x80	; 128
     8a6:	70 e0       	ldi	r23, 0x00	; 0
     8a8:	60 e0       	ldi	r22, 0x00	; 0
     8aa:	08 95       	ret

000008ac <__fp_nan>:
     8ac:	9f ef       	ldi	r25, 0xFF	; 255
     8ae:	80 ec       	ldi	r24, 0xC0	; 192
     8b0:	08 95       	ret

000008b2 <__fp_pscA>:
     8b2:	00 24       	eor	r0, r0
     8b4:	0a 94       	dec	r0
     8b6:	16 16       	cp	r1, r22
     8b8:	17 06       	cpc	r1, r23
     8ba:	18 06       	cpc	r1, r24
     8bc:	09 06       	cpc	r0, r25
     8be:	08 95       	ret

000008c0 <__fp_pscB>:
     8c0:	00 24       	eor	r0, r0
     8c2:	0a 94       	dec	r0
     8c4:	12 16       	cp	r1, r18
     8c6:	13 06       	cpc	r1, r19
     8c8:	14 06       	cpc	r1, r20
     8ca:	05 06       	cpc	r0, r21
     8cc:	08 95       	ret

000008ce <__fp_round>:
     8ce:	09 2e       	mov	r0, r25
     8d0:	03 94       	inc	r0
     8d2:	00 0c       	add	r0, r0
     8d4:	11 f4       	brne	.+4      	; 0x8da <__fp_round+0xc>
     8d6:	88 23       	and	r24, r24
     8d8:	52 f0       	brmi	.+20     	; 0x8ee <__fp_round+0x20>
     8da:	bb 0f       	add	r27, r27
     8dc:	40 f4       	brcc	.+16     	; 0x8ee <__fp_round+0x20>
     8de:	bf 2b       	or	r27, r31
     8e0:	11 f4       	brne	.+4      	; 0x8e6 <__fp_round+0x18>
     8e2:	60 ff       	sbrs	r22, 0
     8e4:	04 c0       	rjmp	.+8      	; 0x8ee <__fp_round+0x20>
     8e6:	6f 5f       	subi	r22, 0xFF	; 255
     8e8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ea:	8f 4f       	sbci	r24, 0xFF	; 255
     8ec:	9f 4f       	sbci	r25, 0xFF	; 255
     8ee:	08 95       	ret

000008f0 <__fp_split3>:
     8f0:	57 fd       	sbrc	r21, 7
     8f2:	90 58       	subi	r25, 0x80	; 128
     8f4:	44 0f       	add	r20, r20
     8f6:	55 1f       	adc	r21, r21
     8f8:	59 f0       	breq	.+22     	; 0x910 <__fp_splitA+0x10>
     8fa:	5f 3f       	cpi	r21, 0xFF	; 255
     8fc:	71 f0       	breq	.+28     	; 0x91a <__fp_splitA+0x1a>
     8fe:	47 95       	ror	r20

00000900 <__fp_splitA>:
     900:	88 0f       	add	r24, r24
     902:	97 fb       	bst	r25, 7
     904:	99 1f       	adc	r25, r25
     906:	61 f0       	breq	.+24     	; 0x920 <__fp_splitA+0x20>
     908:	9f 3f       	cpi	r25, 0xFF	; 255
     90a:	79 f0       	breq	.+30     	; 0x92a <__fp_splitA+0x2a>
     90c:	87 95       	ror	r24
     90e:	08 95       	ret
     910:	12 16       	cp	r1, r18
     912:	13 06       	cpc	r1, r19
     914:	14 06       	cpc	r1, r20
     916:	55 1f       	adc	r21, r21
     918:	f2 cf       	rjmp	.-28     	; 0x8fe <__fp_split3+0xe>
     91a:	46 95       	lsr	r20
     91c:	f1 df       	rcall	.-30     	; 0x900 <__fp_splitA>
     91e:	08 c0       	rjmp	.+16     	; 0x930 <__fp_splitA+0x30>
     920:	16 16       	cp	r1, r22
     922:	17 06       	cpc	r1, r23
     924:	18 06       	cpc	r1, r24
     926:	99 1f       	adc	r25, r25
     928:	f1 cf       	rjmp	.-30     	; 0x90c <__fp_splitA+0xc>
     92a:	86 95       	lsr	r24
     92c:	71 05       	cpc	r23, r1
     92e:	61 05       	cpc	r22, r1
     930:	08 94       	sec
     932:	08 95       	ret

00000934 <__fp_zero>:
     934:	e8 94       	clt

00000936 <__fp_szero>:
     936:	bb 27       	eor	r27, r27
     938:	66 27       	eor	r22, r22
     93a:	77 27       	eor	r23, r23
     93c:	cb 01       	movw	r24, r22
     93e:	97 f9       	bld	r25, 7
     940:	08 95       	ret

00000942 <vfprintf>:
     942:	a0 e1       	ldi	r26, 0x10	; 16
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e7 ea       	ldi	r30, 0xA7	; 167
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__prologue_saves__>
     94e:	7c 01       	movw	r14, r24
     950:	1b 01       	movw	r2, r22
     952:	6a 01       	movw	r12, r20
     954:	fc 01       	movw	r30, r24
     956:	17 82       	std	Z+7, r1	; 0x07
     958:	16 82       	std	Z+6, r1	; 0x06
     95a:	83 81       	ldd	r24, Z+3	; 0x03
     95c:	81 ff       	sbrs	r24, 1
     95e:	44 c3       	rjmp	.+1672   	; 0xfe8 <vfprintf+0x6a6>
     960:	9e 01       	movw	r18, r28
     962:	2f 5f       	subi	r18, 0xFF	; 255
     964:	3f 4f       	sbci	r19, 0xFF	; 255
     966:	39 01       	movw	r6, r18
     968:	f7 01       	movw	r30, r14
     96a:	93 81       	ldd	r25, Z+3	; 0x03
     96c:	f1 01       	movw	r30, r2
     96e:	93 fd       	sbrc	r25, 3
     970:	85 91       	lpm	r24, Z+
     972:	93 ff       	sbrs	r25, 3
     974:	81 91       	ld	r24, Z+
     976:	1f 01       	movw	r2, r30
     978:	88 23       	and	r24, r24
     97a:	09 f4       	brne	.+2      	; 0x97e <vfprintf+0x3c>
     97c:	31 c3       	rjmp	.+1634   	; 0xfe0 <vfprintf+0x69e>
     97e:	85 32       	cpi	r24, 0x25	; 37
     980:	39 f4       	brne	.+14     	; 0x990 <vfprintf+0x4e>
     982:	93 fd       	sbrc	r25, 3
     984:	85 91       	lpm	r24, Z+
     986:	93 ff       	sbrs	r25, 3
     988:	81 91       	ld	r24, Z+
     98a:	1f 01       	movw	r2, r30
     98c:	85 32       	cpi	r24, 0x25	; 37
     98e:	39 f4       	brne	.+14     	; 0x99e <vfprintf+0x5c>
     990:	b7 01       	movw	r22, r14
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     998:	56 01       	movw	r10, r12
     99a:	65 01       	movw	r12, r10
     99c:	e5 cf       	rjmp	.-54     	; 0x968 <vfprintf+0x26>
     99e:	10 e0       	ldi	r17, 0x00	; 0
     9a0:	51 2c       	mov	r5, r1
     9a2:	91 2c       	mov	r9, r1
     9a4:	ff e1       	ldi	r31, 0x1F	; 31
     9a6:	f9 15       	cp	r31, r9
     9a8:	d8 f0       	brcs	.+54     	; 0x9e0 <vfprintf+0x9e>
     9aa:	8b 32       	cpi	r24, 0x2B	; 43
     9ac:	79 f0       	breq	.+30     	; 0x9cc <vfprintf+0x8a>
     9ae:	38 f4       	brcc	.+14     	; 0x9be <vfprintf+0x7c>
     9b0:	80 32       	cpi	r24, 0x20	; 32
     9b2:	79 f0       	breq	.+30     	; 0x9d2 <vfprintf+0x90>
     9b4:	83 32       	cpi	r24, 0x23	; 35
     9b6:	a1 f4       	brne	.+40     	; 0x9e0 <vfprintf+0x9e>
     9b8:	f9 2d       	mov	r31, r9
     9ba:	f0 61       	ori	r31, 0x10	; 16
     9bc:	2e c0       	rjmp	.+92     	; 0xa1a <vfprintf+0xd8>
     9be:	8d 32       	cpi	r24, 0x2D	; 45
     9c0:	61 f0       	breq	.+24     	; 0x9da <vfprintf+0x98>
     9c2:	80 33       	cpi	r24, 0x30	; 48
     9c4:	69 f4       	brne	.+26     	; 0x9e0 <vfprintf+0x9e>
     9c6:	29 2d       	mov	r18, r9
     9c8:	21 60       	ori	r18, 0x01	; 1
     9ca:	2d c0       	rjmp	.+90     	; 0xa26 <vfprintf+0xe4>
     9cc:	39 2d       	mov	r19, r9
     9ce:	32 60       	ori	r19, 0x02	; 2
     9d0:	93 2e       	mov	r9, r19
     9d2:	89 2d       	mov	r24, r9
     9d4:	84 60       	ori	r24, 0x04	; 4
     9d6:	98 2e       	mov	r9, r24
     9d8:	2a c0       	rjmp	.+84     	; 0xa2e <vfprintf+0xec>
     9da:	e9 2d       	mov	r30, r9
     9dc:	e8 60       	ori	r30, 0x08	; 8
     9de:	15 c0       	rjmp	.+42     	; 0xa0a <vfprintf+0xc8>
     9e0:	97 fc       	sbrc	r9, 7
     9e2:	2d c0       	rjmp	.+90     	; 0xa3e <vfprintf+0xfc>
     9e4:	20 ed       	ldi	r18, 0xD0	; 208
     9e6:	28 0f       	add	r18, r24
     9e8:	2a 30       	cpi	r18, 0x0A	; 10
     9ea:	88 f4       	brcc	.+34     	; 0xa0e <vfprintf+0xcc>
     9ec:	96 fe       	sbrs	r9, 6
     9ee:	06 c0       	rjmp	.+12     	; 0x9fc <vfprintf+0xba>
     9f0:	3a e0       	ldi	r19, 0x0A	; 10
     9f2:	13 9f       	mul	r17, r19
     9f4:	20 0d       	add	r18, r0
     9f6:	11 24       	eor	r1, r1
     9f8:	12 2f       	mov	r17, r18
     9fa:	19 c0       	rjmp	.+50     	; 0xa2e <vfprintf+0xec>
     9fc:	8a e0       	ldi	r24, 0x0A	; 10
     9fe:	58 9e       	mul	r5, r24
     a00:	20 0d       	add	r18, r0
     a02:	11 24       	eor	r1, r1
     a04:	52 2e       	mov	r5, r18
     a06:	e9 2d       	mov	r30, r9
     a08:	e0 62       	ori	r30, 0x20	; 32
     a0a:	9e 2e       	mov	r9, r30
     a0c:	10 c0       	rjmp	.+32     	; 0xa2e <vfprintf+0xec>
     a0e:	8e 32       	cpi	r24, 0x2E	; 46
     a10:	31 f4       	brne	.+12     	; 0xa1e <vfprintf+0xdc>
     a12:	96 fc       	sbrc	r9, 6
     a14:	e5 c2       	rjmp	.+1482   	; 0xfe0 <vfprintf+0x69e>
     a16:	f9 2d       	mov	r31, r9
     a18:	f0 64       	ori	r31, 0x40	; 64
     a1a:	9f 2e       	mov	r9, r31
     a1c:	08 c0       	rjmp	.+16     	; 0xa2e <vfprintf+0xec>
     a1e:	8c 36       	cpi	r24, 0x6C	; 108
     a20:	21 f4       	brne	.+8      	; 0xa2a <vfprintf+0xe8>
     a22:	29 2d       	mov	r18, r9
     a24:	20 68       	ori	r18, 0x80	; 128
     a26:	92 2e       	mov	r9, r18
     a28:	02 c0       	rjmp	.+4      	; 0xa2e <vfprintf+0xec>
     a2a:	88 36       	cpi	r24, 0x68	; 104
     a2c:	41 f4       	brne	.+16     	; 0xa3e <vfprintf+0xfc>
     a2e:	f1 01       	movw	r30, r2
     a30:	93 fd       	sbrc	r25, 3
     a32:	85 91       	lpm	r24, Z+
     a34:	93 ff       	sbrs	r25, 3
     a36:	81 91       	ld	r24, Z+
     a38:	1f 01       	movw	r2, r30
     a3a:	81 11       	cpse	r24, r1
     a3c:	b3 cf       	rjmp	.-154    	; 0x9a4 <vfprintf+0x62>
     a3e:	9b eb       	ldi	r25, 0xBB	; 187
     a40:	98 0f       	add	r25, r24
     a42:	93 30       	cpi	r25, 0x03	; 3
     a44:	20 f4       	brcc	.+8      	; 0xa4e <vfprintf+0x10c>
     a46:	99 2d       	mov	r25, r9
     a48:	90 61       	ori	r25, 0x10	; 16
     a4a:	80 5e       	subi	r24, 0xE0	; 224
     a4c:	07 c0       	rjmp	.+14     	; 0xa5c <vfprintf+0x11a>
     a4e:	9b e9       	ldi	r25, 0x9B	; 155
     a50:	98 0f       	add	r25, r24
     a52:	93 30       	cpi	r25, 0x03	; 3
     a54:	08 f0       	brcs	.+2      	; 0xa58 <vfprintf+0x116>
     a56:	66 c1       	rjmp	.+716    	; 0xd24 <vfprintf+0x3e2>
     a58:	99 2d       	mov	r25, r9
     a5a:	9f 7e       	andi	r25, 0xEF	; 239
     a5c:	96 ff       	sbrs	r25, 6
     a5e:	16 e0       	ldi	r17, 0x06	; 6
     a60:	9f 73       	andi	r25, 0x3F	; 63
     a62:	99 2e       	mov	r9, r25
     a64:	85 36       	cpi	r24, 0x65	; 101
     a66:	19 f4       	brne	.+6      	; 0xa6e <vfprintf+0x12c>
     a68:	90 64       	ori	r25, 0x40	; 64
     a6a:	99 2e       	mov	r9, r25
     a6c:	08 c0       	rjmp	.+16     	; 0xa7e <vfprintf+0x13c>
     a6e:	86 36       	cpi	r24, 0x66	; 102
     a70:	21 f4       	brne	.+8      	; 0xa7a <vfprintf+0x138>
     a72:	39 2f       	mov	r19, r25
     a74:	30 68       	ori	r19, 0x80	; 128
     a76:	93 2e       	mov	r9, r19
     a78:	02 c0       	rjmp	.+4      	; 0xa7e <vfprintf+0x13c>
     a7a:	11 11       	cpse	r17, r1
     a7c:	11 50       	subi	r17, 0x01	; 1
     a7e:	97 fe       	sbrs	r9, 7
     a80:	07 c0       	rjmp	.+14     	; 0xa90 <vfprintf+0x14e>
     a82:	1c 33       	cpi	r17, 0x3C	; 60
     a84:	50 f4       	brcc	.+20     	; 0xa9a <vfprintf+0x158>
     a86:	44 24       	eor	r4, r4
     a88:	43 94       	inc	r4
     a8a:	41 0e       	add	r4, r17
     a8c:	27 e0       	ldi	r18, 0x07	; 7
     a8e:	0b c0       	rjmp	.+22     	; 0xaa6 <vfprintf+0x164>
     a90:	18 30       	cpi	r17, 0x08	; 8
     a92:	38 f0       	brcs	.+14     	; 0xaa2 <vfprintf+0x160>
     a94:	27 e0       	ldi	r18, 0x07	; 7
     a96:	17 e0       	ldi	r17, 0x07	; 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <vfprintf+0x162>
     a9a:	27 e0       	ldi	r18, 0x07	; 7
     a9c:	9c e3       	ldi	r25, 0x3C	; 60
     a9e:	49 2e       	mov	r4, r25
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <vfprintf+0x164>
     aa2:	21 2f       	mov	r18, r17
     aa4:	41 2c       	mov	r4, r1
     aa6:	56 01       	movw	r10, r12
     aa8:	84 e0       	ldi	r24, 0x04	; 4
     aaa:	a8 0e       	add	r10, r24
     aac:	b1 1c       	adc	r11, r1
     aae:	f6 01       	movw	r30, r12
     ab0:	60 81       	ld	r22, Z
     ab2:	71 81       	ldd	r23, Z+1	; 0x01
     ab4:	82 81       	ldd	r24, Z+2	; 0x02
     ab6:	93 81       	ldd	r25, Z+3	; 0x03
     ab8:	04 2d       	mov	r16, r4
     aba:	a3 01       	movw	r20, r6
     abc:	0e 94 55 08 	call	0x10aa	; 0x10aa <__ftoa_engine>
     ac0:	6c 01       	movw	r12, r24
     ac2:	f9 81       	ldd	r31, Y+1	; 0x01
     ac4:	fc 87       	std	Y+12, r31	; 0x0c
     ac6:	f0 ff       	sbrs	r31, 0
     ac8:	02 c0       	rjmp	.+4      	; 0xace <vfprintf+0x18c>
     aca:	f3 ff       	sbrs	r31, 3
     acc:	06 c0       	rjmp	.+12     	; 0xada <vfprintf+0x198>
     ace:	91 fc       	sbrc	r9, 1
     ad0:	06 c0       	rjmp	.+12     	; 0xade <vfprintf+0x19c>
     ad2:	92 fe       	sbrs	r9, 2
     ad4:	06 c0       	rjmp	.+12     	; 0xae2 <vfprintf+0x1a0>
     ad6:	00 e2       	ldi	r16, 0x20	; 32
     ad8:	05 c0       	rjmp	.+10     	; 0xae4 <vfprintf+0x1a2>
     ada:	0d e2       	ldi	r16, 0x2D	; 45
     adc:	03 c0       	rjmp	.+6      	; 0xae4 <vfprintf+0x1a2>
     ade:	0b e2       	ldi	r16, 0x2B	; 43
     ae0:	01 c0       	rjmp	.+2      	; 0xae4 <vfprintf+0x1a2>
     ae2:	00 e0       	ldi	r16, 0x00	; 0
     ae4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ae6:	8c 70       	andi	r24, 0x0C	; 12
     ae8:	19 f0       	breq	.+6      	; 0xaf0 <vfprintf+0x1ae>
     aea:	01 11       	cpse	r16, r1
     aec:	5a c2       	rjmp	.+1204   	; 0xfa2 <vfprintf+0x660>
     aee:	9b c2       	rjmp	.+1334   	; 0x1026 <vfprintf+0x6e4>
     af0:	97 fe       	sbrs	r9, 7
     af2:	10 c0       	rjmp	.+32     	; 0xb14 <vfprintf+0x1d2>
     af4:	4c 0c       	add	r4, r12
     af6:	fc 85       	ldd	r31, Y+12	; 0x0c
     af8:	f4 ff       	sbrs	r31, 4
     afa:	04 c0       	rjmp	.+8      	; 0xb04 <vfprintf+0x1c2>
     afc:	8a 81       	ldd	r24, Y+2	; 0x02
     afe:	81 33       	cpi	r24, 0x31	; 49
     b00:	09 f4       	brne	.+2      	; 0xb04 <vfprintf+0x1c2>
     b02:	4a 94       	dec	r4
     b04:	14 14       	cp	r1, r4
     b06:	74 f5       	brge	.+92     	; 0xb64 <vfprintf+0x222>
     b08:	28 e0       	ldi	r18, 0x08	; 8
     b0a:	24 15       	cp	r18, r4
     b0c:	78 f5       	brcc	.+94     	; 0xb6c <vfprintf+0x22a>
     b0e:	88 e0       	ldi	r24, 0x08	; 8
     b10:	48 2e       	mov	r4, r24
     b12:	2c c0       	rjmp	.+88     	; 0xb6c <vfprintf+0x22a>
     b14:	96 fc       	sbrc	r9, 6
     b16:	2a c0       	rjmp	.+84     	; 0xb6c <vfprintf+0x22a>
     b18:	81 2f       	mov	r24, r17
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	8c 15       	cp	r24, r12
     b1e:	9d 05       	cpc	r25, r13
     b20:	9c f0       	brlt	.+38     	; 0xb48 <vfprintf+0x206>
     b22:	3c ef       	ldi	r19, 0xFC	; 252
     b24:	c3 16       	cp	r12, r19
     b26:	3f ef       	ldi	r19, 0xFF	; 255
     b28:	d3 06       	cpc	r13, r19
     b2a:	74 f0       	brlt	.+28     	; 0xb48 <vfprintf+0x206>
     b2c:	89 2d       	mov	r24, r9
     b2e:	80 68       	ori	r24, 0x80	; 128
     b30:	98 2e       	mov	r9, r24
     b32:	0a c0       	rjmp	.+20     	; 0xb48 <vfprintf+0x206>
     b34:	e2 e0       	ldi	r30, 0x02	; 2
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	ec 0f       	add	r30, r28
     b3a:	fd 1f       	adc	r31, r29
     b3c:	e1 0f       	add	r30, r17
     b3e:	f1 1d       	adc	r31, r1
     b40:	80 81       	ld	r24, Z
     b42:	80 33       	cpi	r24, 0x30	; 48
     b44:	19 f4       	brne	.+6      	; 0xb4c <vfprintf+0x20a>
     b46:	11 50       	subi	r17, 0x01	; 1
     b48:	11 11       	cpse	r17, r1
     b4a:	f4 cf       	rjmp	.-24     	; 0xb34 <vfprintf+0x1f2>
     b4c:	97 fe       	sbrs	r9, 7
     b4e:	0e c0       	rjmp	.+28     	; 0xb6c <vfprintf+0x22a>
     b50:	44 24       	eor	r4, r4
     b52:	43 94       	inc	r4
     b54:	41 0e       	add	r4, r17
     b56:	81 2f       	mov	r24, r17
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	c8 16       	cp	r12, r24
     b5c:	d9 06       	cpc	r13, r25
     b5e:	2c f4       	brge	.+10     	; 0xb6a <vfprintf+0x228>
     b60:	1c 19       	sub	r17, r12
     b62:	04 c0       	rjmp	.+8      	; 0xb6c <vfprintf+0x22a>
     b64:	44 24       	eor	r4, r4
     b66:	43 94       	inc	r4
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <vfprintf+0x22a>
     b6a:	10 e0       	ldi	r17, 0x00	; 0
     b6c:	97 fe       	sbrs	r9, 7
     b6e:	06 c0       	rjmp	.+12     	; 0xb7c <vfprintf+0x23a>
     b70:	1c 14       	cp	r1, r12
     b72:	1d 04       	cpc	r1, r13
     b74:	34 f4       	brge	.+12     	; 0xb82 <vfprintf+0x240>
     b76:	c6 01       	movw	r24, r12
     b78:	01 96       	adiw	r24, 0x01	; 1
     b7a:	05 c0       	rjmp	.+10     	; 0xb86 <vfprintf+0x244>
     b7c:	85 e0       	ldi	r24, 0x05	; 5
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	02 c0       	rjmp	.+4      	; 0xb86 <vfprintf+0x244>
     b82:	81 e0       	ldi	r24, 0x01	; 1
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	01 11       	cpse	r16, r1
     b88:	01 96       	adiw	r24, 0x01	; 1
     b8a:	11 23       	and	r17, r17
     b8c:	31 f0       	breq	.+12     	; 0xb9a <vfprintf+0x258>
     b8e:	21 2f       	mov	r18, r17
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	2f 5f       	subi	r18, 0xFF	; 255
     b94:	3f 4f       	sbci	r19, 0xFF	; 255
     b96:	82 0f       	add	r24, r18
     b98:	93 1f       	adc	r25, r19
     b9a:	25 2d       	mov	r18, r5
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	82 17       	cp	r24, r18
     ba0:	93 07       	cpc	r25, r19
     ba2:	14 f4       	brge	.+4      	; 0xba8 <vfprintf+0x266>
     ba4:	58 1a       	sub	r5, r24
     ba6:	01 c0       	rjmp	.+2      	; 0xbaa <vfprintf+0x268>
     ba8:	51 2c       	mov	r5, r1
     baa:	89 2d       	mov	r24, r9
     bac:	89 70       	andi	r24, 0x09	; 9
     bae:	49 f4       	brne	.+18     	; 0xbc2 <vfprintf+0x280>
     bb0:	55 20       	and	r5, r5
     bb2:	39 f0       	breq	.+14     	; 0xbc2 <vfprintf+0x280>
     bb4:	b7 01       	movw	r22, r14
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     bbe:	5a 94       	dec	r5
     bc0:	f7 cf       	rjmp	.-18     	; 0xbb0 <vfprintf+0x26e>
     bc2:	00 23       	and	r16, r16
     bc4:	29 f0       	breq	.+10     	; 0xbd0 <vfprintf+0x28e>
     bc6:	b7 01       	movw	r22, r14
     bc8:	80 2f       	mov	r24, r16
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     bd0:	93 fc       	sbrc	r9, 3
     bd2:	09 c0       	rjmp	.+18     	; 0xbe6 <vfprintf+0x2a4>
     bd4:	55 20       	and	r5, r5
     bd6:	39 f0       	breq	.+14     	; 0xbe6 <vfprintf+0x2a4>
     bd8:	b7 01       	movw	r22, r14
     bda:	80 e3       	ldi	r24, 0x30	; 48
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     be2:	5a 94       	dec	r5
     be4:	f7 cf       	rjmp	.-18     	; 0xbd4 <vfprintf+0x292>
     be6:	97 fe       	sbrs	r9, 7
     be8:	4c c0       	rjmp	.+152    	; 0xc82 <vfprintf+0x340>
     bea:	46 01       	movw	r8, r12
     bec:	d7 fe       	sbrs	r13, 7
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <vfprintf+0x2b2>
     bf0:	81 2c       	mov	r8, r1
     bf2:	91 2c       	mov	r9, r1
     bf4:	c6 01       	movw	r24, r12
     bf6:	88 19       	sub	r24, r8
     bf8:	99 09       	sbc	r25, r9
     bfa:	f3 01       	movw	r30, r6
     bfc:	e8 0f       	add	r30, r24
     bfe:	f9 1f       	adc	r31, r25
     c00:	fe 87       	std	Y+14, r31	; 0x0e
     c02:	ed 87       	std	Y+13, r30	; 0x0d
     c04:	96 01       	movw	r18, r12
     c06:	24 19       	sub	r18, r4
     c08:	31 09       	sbc	r19, r1
     c0a:	38 8b       	std	Y+16, r19	; 0x10
     c0c:	2f 87       	std	Y+15, r18	; 0x0f
     c0e:	01 2f       	mov	r16, r17
     c10:	10 e0       	ldi	r17, 0x00	; 0
     c12:	11 95       	neg	r17
     c14:	01 95       	neg	r16
     c16:	11 09       	sbc	r17, r1
     c18:	3f ef       	ldi	r19, 0xFF	; 255
     c1a:	83 16       	cp	r8, r19
     c1c:	93 06       	cpc	r9, r19
     c1e:	29 f4       	brne	.+10     	; 0xc2a <vfprintf+0x2e8>
     c20:	b7 01       	movw	r22, r14
     c22:	8e e2       	ldi	r24, 0x2E	; 46
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     c2a:	c8 14       	cp	r12, r8
     c2c:	d9 04       	cpc	r13, r9
     c2e:	4c f0       	brlt	.+18     	; 0xc42 <vfprintf+0x300>
     c30:	8f 85       	ldd	r24, Y+15	; 0x0f
     c32:	98 89       	ldd	r25, Y+16	; 0x10
     c34:	88 15       	cp	r24, r8
     c36:	99 05       	cpc	r25, r9
     c38:	24 f4       	brge	.+8      	; 0xc42 <vfprintf+0x300>
     c3a:	ed 85       	ldd	r30, Y+13	; 0x0d
     c3c:	fe 85       	ldd	r31, Y+14	; 0x0e
     c3e:	81 81       	ldd	r24, Z+1	; 0x01
     c40:	01 c0       	rjmp	.+2      	; 0xc44 <vfprintf+0x302>
     c42:	80 e3       	ldi	r24, 0x30	; 48
     c44:	f1 e0       	ldi	r31, 0x01	; 1
     c46:	8f 1a       	sub	r8, r31
     c48:	91 08       	sbc	r9, r1
     c4a:	2d 85       	ldd	r18, Y+13	; 0x0d
     c4c:	3e 85       	ldd	r19, Y+14	; 0x0e
     c4e:	2f 5f       	subi	r18, 0xFF	; 255
     c50:	3f 4f       	sbci	r19, 0xFF	; 255
     c52:	3e 87       	std	Y+14, r19	; 0x0e
     c54:	2d 87       	std	Y+13, r18	; 0x0d
     c56:	80 16       	cp	r8, r16
     c58:	91 06       	cpc	r9, r17
     c5a:	2c f0       	brlt	.+10     	; 0xc66 <vfprintf+0x324>
     c5c:	b7 01       	movw	r22, r14
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     c64:	d9 cf       	rjmp	.-78     	; 0xc18 <vfprintf+0x2d6>
     c66:	c8 14       	cp	r12, r8
     c68:	d9 04       	cpc	r13, r9
     c6a:	41 f4       	brne	.+16     	; 0xc7c <vfprintf+0x33a>
     c6c:	9a 81       	ldd	r25, Y+2	; 0x02
     c6e:	96 33       	cpi	r25, 0x36	; 54
     c70:	20 f4       	brcc	.+8      	; 0xc7a <vfprintf+0x338>
     c72:	95 33       	cpi	r25, 0x35	; 53
     c74:	19 f4       	brne	.+6      	; 0xc7c <vfprintf+0x33a>
     c76:	3c 85       	ldd	r19, Y+12	; 0x0c
     c78:	34 ff       	sbrs	r19, 4
     c7a:	81 e3       	ldi	r24, 0x31	; 49
     c7c:	b7 01       	movw	r22, r14
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	4e c0       	rjmp	.+156    	; 0xd1e <vfprintf+0x3dc>
     c82:	8a 81       	ldd	r24, Y+2	; 0x02
     c84:	81 33       	cpi	r24, 0x31	; 49
     c86:	19 f0       	breq	.+6      	; 0xc8e <vfprintf+0x34c>
     c88:	9c 85       	ldd	r25, Y+12	; 0x0c
     c8a:	9f 7e       	andi	r25, 0xEF	; 239
     c8c:	9c 87       	std	Y+12, r25	; 0x0c
     c8e:	b7 01       	movw	r22, r14
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     c96:	11 11       	cpse	r17, r1
     c98:	05 c0       	rjmp	.+10     	; 0xca4 <vfprintf+0x362>
     c9a:	94 fc       	sbrc	r9, 4
     c9c:	18 c0       	rjmp	.+48     	; 0xcce <vfprintf+0x38c>
     c9e:	85 e6       	ldi	r24, 0x65	; 101
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	17 c0       	rjmp	.+46     	; 0xcd2 <vfprintf+0x390>
     ca4:	b7 01       	movw	r22, r14
     ca6:	8e e2       	ldi	r24, 0x2E	; 46
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     cae:	1e 5f       	subi	r17, 0xFE	; 254
     cb0:	82 e0       	ldi	r24, 0x02	; 2
     cb2:	01 e0       	ldi	r16, 0x01	; 1
     cb4:	08 0f       	add	r16, r24
     cb6:	f3 01       	movw	r30, r6
     cb8:	e8 0f       	add	r30, r24
     cba:	f1 1d       	adc	r31, r1
     cbc:	80 81       	ld	r24, Z
     cbe:	b7 01       	movw	r22, r14
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     cc6:	80 2f       	mov	r24, r16
     cc8:	01 13       	cpse	r16, r17
     cca:	f3 cf       	rjmp	.-26     	; 0xcb2 <vfprintf+0x370>
     ccc:	e6 cf       	rjmp	.-52     	; 0xc9a <vfprintf+0x358>
     cce:	85 e4       	ldi	r24, 0x45	; 69
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	b7 01       	movw	r22, r14
     cd4:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     cd8:	d7 fc       	sbrc	r13, 7
     cda:	06 c0       	rjmp	.+12     	; 0xce8 <vfprintf+0x3a6>
     cdc:	c1 14       	cp	r12, r1
     cde:	d1 04       	cpc	r13, r1
     ce0:	41 f4       	brne	.+16     	; 0xcf2 <vfprintf+0x3b0>
     ce2:	ec 85       	ldd	r30, Y+12	; 0x0c
     ce4:	e4 ff       	sbrs	r30, 4
     ce6:	05 c0       	rjmp	.+10     	; 0xcf2 <vfprintf+0x3b0>
     ce8:	d1 94       	neg	r13
     cea:	c1 94       	neg	r12
     cec:	d1 08       	sbc	r13, r1
     cee:	8d e2       	ldi	r24, 0x2D	; 45
     cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <vfprintf+0x3b2>
     cf2:	8b e2       	ldi	r24, 0x2B	; 43
     cf4:	b7 01       	movw	r22, r14
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     cfc:	80 e3       	ldi	r24, 0x30	; 48
     cfe:	2a e0       	ldi	r18, 0x0A	; 10
     d00:	c2 16       	cp	r12, r18
     d02:	d1 04       	cpc	r13, r1
     d04:	2c f0       	brlt	.+10     	; 0xd10 <vfprintf+0x3ce>
     d06:	8f 5f       	subi	r24, 0xFF	; 255
     d08:	fa e0       	ldi	r31, 0x0A	; 10
     d0a:	cf 1a       	sub	r12, r31
     d0c:	d1 08       	sbc	r13, r1
     d0e:	f7 cf       	rjmp	.-18     	; 0xcfe <vfprintf+0x3bc>
     d10:	b7 01       	movw	r22, r14
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     d18:	b7 01       	movw	r22, r14
     d1a:	c6 01       	movw	r24, r12
     d1c:	c0 96       	adiw	r24, 0x30	; 48
     d1e:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     d22:	54 c1       	rjmp	.+680    	; 0xfcc <vfprintf+0x68a>
     d24:	83 36       	cpi	r24, 0x63	; 99
     d26:	31 f0       	breq	.+12     	; 0xd34 <vfprintf+0x3f2>
     d28:	83 37       	cpi	r24, 0x73	; 115
     d2a:	79 f0       	breq	.+30     	; 0xd4a <vfprintf+0x408>
     d2c:	83 35       	cpi	r24, 0x53	; 83
     d2e:	09 f0       	breq	.+2      	; 0xd32 <vfprintf+0x3f0>
     d30:	56 c0       	rjmp	.+172    	; 0xdde <vfprintf+0x49c>
     d32:	20 c0       	rjmp	.+64     	; 0xd74 <vfprintf+0x432>
     d34:	56 01       	movw	r10, r12
     d36:	32 e0       	ldi	r19, 0x02	; 2
     d38:	a3 0e       	add	r10, r19
     d3a:	b1 1c       	adc	r11, r1
     d3c:	f6 01       	movw	r30, r12
     d3e:	80 81       	ld	r24, Z
     d40:	89 83       	std	Y+1, r24	; 0x01
     d42:	01 e0       	ldi	r16, 0x01	; 1
     d44:	10 e0       	ldi	r17, 0x00	; 0
     d46:	63 01       	movw	r12, r6
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <vfprintf+0x42c>
     d4a:	56 01       	movw	r10, r12
     d4c:	f2 e0       	ldi	r31, 0x02	; 2
     d4e:	af 0e       	add	r10, r31
     d50:	b1 1c       	adc	r11, r1
     d52:	f6 01       	movw	r30, r12
     d54:	c0 80       	ld	r12, Z
     d56:	d1 80       	ldd	r13, Z+1	; 0x01
     d58:	96 fe       	sbrs	r9, 6
     d5a:	03 c0       	rjmp	.+6      	; 0xd62 <vfprintf+0x420>
     d5c:	61 2f       	mov	r22, r17
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x424>
     d62:	6f ef       	ldi	r22, 0xFF	; 255
     d64:	7f ef       	ldi	r23, 0xFF	; 255
     d66:	c6 01       	movw	r24, r12
     d68:	0e 94 38 09 	call	0x1270	; 0x1270 <strnlen>
     d6c:	8c 01       	movw	r16, r24
     d6e:	f9 2d       	mov	r31, r9
     d70:	ff 77       	andi	r31, 0x7F	; 127
     d72:	14 c0       	rjmp	.+40     	; 0xd9c <vfprintf+0x45a>
     d74:	56 01       	movw	r10, r12
     d76:	22 e0       	ldi	r18, 0x02	; 2
     d78:	a2 0e       	add	r10, r18
     d7a:	b1 1c       	adc	r11, r1
     d7c:	f6 01       	movw	r30, r12
     d7e:	c0 80       	ld	r12, Z
     d80:	d1 80       	ldd	r13, Z+1	; 0x01
     d82:	96 fe       	sbrs	r9, 6
     d84:	03 c0       	rjmp	.+6      	; 0xd8c <vfprintf+0x44a>
     d86:	61 2f       	mov	r22, r17
     d88:	70 e0       	ldi	r23, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x44e>
     d8c:	6f ef       	ldi	r22, 0xFF	; 255
     d8e:	7f ef       	ldi	r23, 0xFF	; 255
     d90:	c6 01       	movw	r24, r12
     d92:	0e 94 2d 09 	call	0x125a	; 0x125a <strnlen_P>
     d96:	8c 01       	movw	r16, r24
     d98:	f9 2d       	mov	r31, r9
     d9a:	f0 68       	ori	r31, 0x80	; 128
     d9c:	9f 2e       	mov	r9, r31
     d9e:	f3 fd       	sbrc	r31, 3
     da0:	1a c0       	rjmp	.+52     	; 0xdd6 <vfprintf+0x494>
     da2:	85 2d       	mov	r24, r5
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	08 17       	cp	r16, r24
     da8:	19 07       	cpc	r17, r25
     daa:	a8 f4       	brcc	.+42     	; 0xdd6 <vfprintf+0x494>
     dac:	b7 01       	movw	r22, r14
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     db6:	5a 94       	dec	r5
     db8:	f4 cf       	rjmp	.-24     	; 0xda2 <vfprintf+0x460>
     dba:	f6 01       	movw	r30, r12
     dbc:	97 fc       	sbrc	r9, 7
     dbe:	85 91       	lpm	r24, Z+
     dc0:	97 fe       	sbrs	r9, 7
     dc2:	81 91       	ld	r24, Z+
     dc4:	6f 01       	movw	r12, r30
     dc6:	b7 01       	movw	r22, r14
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     dce:	51 10       	cpse	r5, r1
     dd0:	5a 94       	dec	r5
     dd2:	01 50       	subi	r16, 0x01	; 1
     dd4:	11 09       	sbc	r17, r1
     dd6:	01 15       	cp	r16, r1
     dd8:	11 05       	cpc	r17, r1
     dda:	79 f7       	brne	.-34     	; 0xdba <vfprintf+0x478>
     ddc:	f7 c0       	rjmp	.+494    	; 0xfcc <vfprintf+0x68a>
     dde:	84 36       	cpi	r24, 0x64	; 100
     de0:	11 f0       	breq	.+4      	; 0xde6 <vfprintf+0x4a4>
     de2:	89 36       	cpi	r24, 0x69	; 105
     de4:	61 f5       	brne	.+88     	; 0xe3e <vfprintf+0x4fc>
     de6:	56 01       	movw	r10, r12
     de8:	97 fe       	sbrs	r9, 7
     dea:	09 c0       	rjmp	.+18     	; 0xdfe <vfprintf+0x4bc>
     dec:	24 e0       	ldi	r18, 0x04	; 4
     dee:	a2 0e       	add	r10, r18
     df0:	b1 1c       	adc	r11, r1
     df2:	f6 01       	movw	r30, r12
     df4:	60 81       	ld	r22, Z
     df6:	71 81       	ldd	r23, Z+1	; 0x01
     df8:	82 81       	ldd	r24, Z+2	; 0x02
     dfa:	93 81       	ldd	r25, Z+3	; 0x03
     dfc:	0a c0       	rjmp	.+20     	; 0xe12 <vfprintf+0x4d0>
     dfe:	f2 e0       	ldi	r31, 0x02	; 2
     e00:	af 0e       	add	r10, r31
     e02:	b1 1c       	adc	r11, r1
     e04:	f6 01       	movw	r30, r12
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	07 2e       	mov	r0, r23
     e0c:	00 0c       	add	r0, r0
     e0e:	88 0b       	sbc	r24, r24
     e10:	99 0b       	sbc	r25, r25
     e12:	f9 2d       	mov	r31, r9
     e14:	ff 76       	andi	r31, 0x6F	; 111
     e16:	9f 2e       	mov	r9, r31
     e18:	97 ff       	sbrs	r25, 7
     e1a:	09 c0       	rjmp	.+18     	; 0xe2e <vfprintf+0x4ec>
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	61 95       	neg	r22
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	f0 68       	ori	r31, 0x80	; 128
     e2c:	9f 2e       	mov	r9, r31
     e2e:	2a e0       	ldi	r18, 0x0A	; 10
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	a3 01       	movw	r20, r6
     e34:	0e 94 a1 09 	call	0x1342	; 0x1342 <__ultoa_invert>
     e38:	c8 2e       	mov	r12, r24
     e3a:	c6 18       	sub	r12, r6
     e3c:	3f c0       	rjmp	.+126    	; 0xebc <vfprintf+0x57a>
     e3e:	09 2d       	mov	r16, r9
     e40:	85 37       	cpi	r24, 0x75	; 117
     e42:	21 f4       	brne	.+8      	; 0xe4c <vfprintf+0x50a>
     e44:	0f 7e       	andi	r16, 0xEF	; 239
     e46:	2a e0       	ldi	r18, 0x0A	; 10
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	1d c0       	rjmp	.+58     	; 0xe86 <vfprintf+0x544>
     e4c:	09 7f       	andi	r16, 0xF9	; 249
     e4e:	8f 36       	cpi	r24, 0x6F	; 111
     e50:	91 f0       	breq	.+36     	; 0xe76 <vfprintf+0x534>
     e52:	18 f4       	brcc	.+6      	; 0xe5a <vfprintf+0x518>
     e54:	88 35       	cpi	r24, 0x58	; 88
     e56:	59 f0       	breq	.+22     	; 0xe6e <vfprintf+0x52c>
     e58:	c3 c0       	rjmp	.+390    	; 0xfe0 <vfprintf+0x69e>
     e5a:	80 37       	cpi	r24, 0x70	; 112
     e5c:	19 f0       	breq	.+6      	; 0xe64 <vfprintf+0x522>
     e5e:	88 37       	cpi	r24, 0x78	; 120
     e60:	11 f0       	breq	.+4      	; 0xe66 <vfprintf+0x524>
     e62:	be c0       	rjmp	.+380    	; 0xfe0 <vfprintf+0x69e>
     e64:	00 61       	ori	r16, 0x10	; 16
     e66:	04 ff       	sbrs	r16, 4
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <vfprintf+0x53a>
     e6a:	04 60       	ori	r16, 0x04	; 4
     e6c:	07 c0       	rjmp	.+14     	; 0xe7c <vfprintf+0x53a>
     e6e:	94 fe       	sbrs	r9, 4
     e70:	08 c0       	rjmp	.+16     	; 0xe82 <vfprintf+0x540>
     e72:	06 60       	ori	r16, 0x06	; 6
     e74:	06 c0       	rjmp	.+12     	; 0xe82 <vfprintf+0x540>
     e76:	28 e0       	ldi	r18, 0x08	; 8
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <vfprintf+0x544>
     e7c:	20 e1       	ldi	r18, 0x10	; 16
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <vfprintf+0x544>
     e82:	20 e1       	ldi	r18, 0x10	; 16
     e84:	32 e0       	ldi	r19, 0x02	; 2
     e86:	56 01       	movw	r10, r12
     e88:	07 ff       	sbrs	r16, 7
     e8a:	09 c0       	rjmp	.+18     	; 0xe9e <vfprintf+0x55c>
     e8c:	84 e0       	ldi	r24, 0x04	; 4
     e8e:	a8 0e       	add	r10, r24
     e90:	b1 1c       	adc	r11, r1
     e92:	f6 01       	movw	r30, r12
     e94:	60 81       	ld	r22, Z
     e96:	71 81       	ldd	r23, Z+1	; 0x01
     e98:	82 81       	ldd	r24, Z+2	; 0x02
     e9a:	93 81       	ldd	r25, Z+3	; 0x03
     e9c:	08 c0       	rjmp	.+16     	; 0xeae <vfprintf+0x56c>
     e9e:	f2 e0       	ldi	r31, 0x02	; 2
     ea0:	af 0e       	add	r10, r31
     ea2:	b1 1c       	adc	r11, r1
     ea4:	f6 01       	movw	r30, r12
     ea6:	60 81       	ld	r22, Z
     ea8:	71 81       	ldd	r23, Z+1	; 0x01
     eaa:	80 e0       	ldi	r24, 0x00	; 0
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	a3 01       	movw	r20, r6
     eb0:	0e 94 a1 09 	call	0x1342	; 0x1342 <__ultoa_invert>
     eb4:	c8 2e       	mov	r12, r24
     eb6:	c6 18       	sub	r12, r6
     eb8:	0f 77       	andi	r16, 0x7F	; 127
     eba:	90 2e       	mov	r9, r16
     ebc:	96 fe       	sbrs	r9, 6
     ebe:	0b c0       	rjmp	.+22     	; 0xed6 <vfprintf+0x594>
     ec0:	09 2d       	mov	r16, r9
     ec2:	0e 7f       	andi	r16, 0xFE	; 254
     ec4:	c1 16       	cp	r12, r17
     ec6:	50 f4       	brcc	.+20     	; 0xedc <vfprintf+0x59a>
     ec8:	94 fe       	sbrs	r9, 4
     eca:	0a c0       	rjmp	.+20     	; 0xee0 <vfprintf+0x59e>
     ecc:	92 fc       	sbrc	r9, 2
     ece:	08 c0       	rjmp	.+16     	; 0xee0 <vfprintf+0x59e>
     ed0:	09 2d       	mov	r16, r9
     ed2:	0e 7e       	andi	r16, 0xEE	; 238
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <vfprintf+0x59e>
     ed6:	dc 2c       	mov	r13, r12
     ed8:	09 2d       	mov	r16, r9
     eda:	03 c0       	rjmp	.+6      	; 0xee2 <vfprintf+0x5a0>
     edc:	dc 2c       	mov	r13, r12
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <vfprintf+0x5a0>
     ee0:	d1 2e       	mov	r13, r17
     ee2:	04 ff       	sbrs	r16, 4
     ee4:	0d c0       	rjmp	.+26     	; 0xf00 <vfprintf+0x5be>
     ee6:	fe 01       	movw	r30, r28
     ee8:	ec 0d       	add	r30, r12
     eea:	f1 1d       	adc	r31, r1
     eec:	80 81       	ld	r24, Z
     eee:	80 33       	cpi	r24, 0x30	; 48
     ef0:	11 f4       	brne	.+4      	; 0xef6 <vfprintf+0x5b4>
     ef2:	09 7e       	andi	r16, 0xE9	; 233
     ef4:	09 c0       	rjmp	.+18     	; 0xf08 <vfprintf+0x5c6>
     ef6:	02 ff       	sbrs	r16, 2
     ef8:	06 c0       	rjmp	.+12     	; 0xf06 <vfprintf+0x5c4>
     efa:	d3 94       	inc	r13
     efc:	d3 94       	inc	r13
     efe:	04 c0       	rjmp	.+8      	; 0xf08 <vfprintf+0x5c6>
     f00:	80 2f       	mov	r24, r16
     f02:	86 78       	andi	r24, 0x86	; 134
     f04:	09 f0       	breq	.+2      	; 0xf08 <vfprintf+0x5c6>
     f06:	d3 94       	inc	r13
     f08:	03 fd       	sbrc	r16, 3
     f0a:	11 c0       	rjmp	.+34     	; 0xf2e <vfprintf+0x5ec>
     f0c:	00 ff       	sbrs	r16, 0
     f0e:	06 c0       	rjmp	.+12     	; 0xf1c <vfprintf+0x5da>
     f10:	1c 2d       	mov	r17, r12
     f12:	d5 14       	cp	r13, r5
     f14:	80 f4       	brcc	.+32     	; 0xf36 <vfprintf+0x5f4>
     f16:	15 0d       	add	r17, r5
     f18:	1d 19       	sub	r17, r13
     f1a:	0d c0       	rjmp	.+26     	; 0xf36 <vfprintf+0x5f4>
     f1c:	d5 14       	cp	r13, r5
     f1e:	58 f4       	brcc	.+22     	; 0xf36 <vfprintf+0x5f4>
     f20:	b7 01       	movw	r22, r14
     f22:	80 e2       	ldi	r24, 0x20	; 32
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     f2a:	d3 94       	inc	r13
     f2c:	f7 cf       	rjmp	.-18     	; 0xf1c <vfprintf+0x5da>
     f2e:	d5 14       	cp	r13, r5
     f30:	10 f4       	brcc	.+4      	; 0xf36 <vfprintf+0x5f4>
     f32:	5d 18       	sub	r5, r13
     f34:	01 c0       	rjmp	.+2      	; 0xf38 <vfprintf+0x5f6>
     f36:	51 2c       	mov	r5, r1
     f38:	04 ff       	sbrs	r16, 4
     f3a:	10 c0       	rjmp	.+32     	; 0xf5c <vfprintf+0x61a>
     f3c:	b7 01       	movw	r22, r14
     f3e:	80 e3       	ldi	r24, 0x30	; 48
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     f46:	02 ff       	sbrs	r16, 2
     f48:	17 c0       	rjmp	.+46     	; 0xf78 <vfprintf+0x636>
     f4a:	01 fd       	sbrc	r16, 1
     f4c:	03 c0       	rjmp	.+6      	; 0xf54 <vfprintf+0x612>
     f4e:	88 e7       	ldi	r24, 0x78	; 120
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <vfprintf+0x616>
     f54:	88 e5       	ldi	r24, 0x58	; 88
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	b7 01       	movw	r22, r14
     f5a:	0c c0       	rjmp	.+24     	; 0xf74 <vfprintf+0x632>
     f5c:	80 2f       	mov	r24, r16
     f5e:	86 78       	andi	r24, 0x86	; 134
     f60:	59 f0       	breq	.+22     	; 0xf78 <vfprintf+0x636>
     f62:	01 ff       	sbrs	r16, 1
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <vfprintf+0x628>
     f66:	8b e2       	ldi	r24, 0x2B	; 43
     f68:	01 c0       	rjmp	.+2      	; 0xf6c <vfprintf+0x62a>
     f6a:	80 e2       	ldi	r24, 0x20	; 32
     f6c:	07 fd       	sbrc	r16, 7
     f6e:	8d e2       	ldi	r24, 0x2D	; 45
     f70:	b7 01       	movw	r22, r14
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     f78:	c1 16       	cp	r12, r17
     f7a:	38 f4       	brcc	.+14     	; 0xf8a <vfprintf+0x648>
     f7c:	b7 01       	movw	r22, r14
     f7e:	80 e3       	ldi	r24, 0x30	; 48
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     f86:	11 50       	subi	r17, 0x01	; 1
     f88:	f7 cf       	rjmp	.-18     	; 0xf78 <vfprintf+0x636>
     f8a:	ca 94       	dec	r12
     f8c:	f3 01       	movw	r30, r6
     f8e:	ec 0d       	add	r30, r12
     f90:	f1 1d       	adc	r31, r1
     f92:	80 81       	ld	r24, Z
     f94:	b7 01       	movw	r22, r14
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     f9c:	c1 10       	cpse	r12, r1
     f9e:	f5 cf       	rjmp	.-22     	; 0xf8a <vfprintf+0x648>
     fa0:	15 c0       	rjmp	.+42     	; 0xfcc <vfprintf+0x68a>
     fa2:	f4 e0       	ldi	r31, 0x04	; 4
     fa4:	f5 15       	cp	r31, r5
     fa6:	60 f5       	brcc	.+88     	; 0x1000 <vfprintf+0x6be>
     fa8:	84 e0       	ldi	r24, 0x04	; 4
     faa:	58 1a       	sub	r5, r24
     fac:	93 fe       	sbrs	r9, 3
     fae:	1f c0       	rjmp	.+62     	; 0xfee <vfprintf+0x6ac>
     fb0:	01 11       	cpse	r16, r1
     fb2:	27 c0       	rjmp	.+78     	; 0x1002 <vfprintf+0x6c0>
     fb4:	2c 85       	ldd	r18, Y+12	; 0x0c
     fb6:	23 ff       	sbrs	r18, 3
     fb8:	2a c0       	rjmp	.+84     	; 0x100e <vfprintf+0x6cc>
     fba:	04 e5       	ldi	r16, 0x54	; 84
     fbc:	10 e0       	ldi	r17, 0x00	; 0
     fbe:	39 2d       	mov	r19, r9
     fc0:	30 71       	andi	r19, 0x10	; 16
     fc2:	93 2e       	mov	r9, r19
     fc4:	f8 01       	movw	r30, r16
     fc6:	84 91       	lpm	r24, Z
     fc8:	81 11       	cpse	r24, r1
     fca:	24 c0       	rjmp	.+72     	; 0x1014 <vfprintf+0x6d2>
     fcc:	55 20       	and	r5, r5
     fce:	09 f4       	brne	.+2      	; 0xfd2 <vfprintf+0x690>
     fd0:	e4 cc       	rjmp	.-1592   	; 0x99a <vfprintf+0x58>
     fd2:	b7 01       	movw	r22, r14
     fd4:	80 e2       	ldi	r24, 0x20	; 32
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     fdc:	5a 94       	dec	r5
     fde:	f6 cf       	rjmp	.-20     	; 0xfcc <vfprintf+0x68a>
     fe0:	f7 01       	movw	r30, r14
     fe2:	86 81       	ldd	r24, Z+6	; 0x06
     fe4:	97 81       	ldd	r25, Z+7	; 0x07
     fe6:	26 c0       	rjmp	.+76     	; 0x1034 <vfprintf+0x6f2>
     fe8:	8f ef       	ldi	r24, 0xFF	; 255
     fea:	9f ef       	ldi	r25, 0xFF	; 255
     fec:	23 c0       	rjmp	.+70     	; 0x1034 <vfprintf+0x6f2>
     fee:	b7 01       	movw	r22, r14
     ff0:	80 e2       	ldi	r24, 0x20	; 32
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
     ff8:	5a 94       	dec	r5
     ffa:	51 10       	cpse	r5, r1
     ffc:	f8 cf       	rjmp	.-16     	; 0xfee <vfprintf+0x6ac>
     ffe:	d8 cf       	rjmp	.-80     	; 0xfb0 <vfprintf+0x66e>
    1000:	51 2c       	mov	r5, r1
    1002:	b7 01       	movw	r22, r14
    1004:	80 2f       	mov	r24, r16
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
    100c:	d3 cf       	rjmp	.-90     	; 0xfb4 <vfprintf+0x672>
    100e:	08 e5       	ldi	r16, 0x58	; 88
    1010:	10 e0       	ldi	r17, 0x00	; 0
    1012:	d5 cf       	rjmp	.-86     	; 0xfbe <vfprintf+0x67c>
    1014:	91 10       	cpse	r9, r1
    1016:	80 52       	subi	r24, 0x20	; 32
    1018:	b7 01       	movw	r22, r14
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 43 09 	call	0x1286	; 0x1286 <fputc>
    1020:	0f 5f       	subi	r16, 0xFF	; 255
    1022:	1f 4f       	sbci	r17, 0xFF	; 255
    1024:	cf cf       	rjmp	.-98     	; 0xfc4 <vfprintf+0x682>
    1026:	23 e0       	ldi	r18, 0x03	; 3
    1028:	25 15       	cp	r18, r5
    102a:	10 f4       	brcc	.+4      	; 0x1030 <vfprintf+0x6ee>
    102c:	83 e0       	ldi	r24, 0x03	; 3
    102e:	bd cf       	rjmp	.-134    	; 0xfaa <vfprintf+0x668>
    1030:	51 2c       	mov	r5, r1
    1032:	c0 cf       	rjmp	.-128    	; 0xfb4 <vfprintf+0x672>
    1034:	60 96       	adiw	r28, 0x10	; 16
    1036:	e2 e1       	ldi	r30, 0x12	; 18
    1038:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__epilogue_restores__>

0000103c <__prologue_saves__>:
    103c:	2f 92       	push	r2
    103e:	3f 92       	push	r3
    1040:	4f 92       	push	r4
    1042:	5f 92       	push	r5
    1044:	6f 92       	push	r6
    1046:	7f 92       	push	r7
    1048:	8f 92       	push	r8
    104a:	9f 92       	push	r9
    104c:	af 92       	push	r10
    104e:	bf 92       	push	r11
    1050:	cf 92       	push	r12
    1052:	df 92       	push	r13
    1054:	ef 92       	push	r14
    1056:	ff 92       	push	r15
    1058:	0f 93       	push	r16
    105a:	1f 93       	push	r17
    105c:	cf 93       	push	r28
    105e:	df 93       	push	r29
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	ca 1b       	sub	r28, r26
    1066:	db 0b       	sbc	r29, r27
    1068:	0f b6       	in	r0, 0x3f	; 63
    106a:	f8 94       	cli
    106c:	de bf       	out	0x3e, r29	; 62
    106e:	0f be       	out	0x3f, r0	; 63
    1070:	cd bf       	out	0x3d, r28	; 61
    1072:	09 94       	ijmp

00001074 <__epilogue_restores__>:
    1074:	2a 88       	ldd	r2, Y+18	; 0x12
    1076:	39 88       	ldd	r3, Y+17	; 0x11
    1078:	48 88       	ldd	r4, Y+16	; 0x10
    107a:	5f 84       	ldd	r5, Y+15	; 0x0f
    107c:	6e 84       	ldd	r6, Y+14	; 0x0e
    107e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1080:	8c 84       	ldd	r8, Y+12	; 0x0c
    1082:	9b 84       	ldd	r9, Y+11	; 0x0b
    1084:	aa 84       	ldd	r10, Y+10	; 0x0a
    1086:	b9 84       	ldd	r11, Y+9	; 0x09
    1088:	c8 84       	ldd	r12, Y+8	; 0x08
    108a:	df 80       	ldd	r13, Y+7	; 0x07
    108c:	ee 80       	ldd	r14, Y+6	; 0x06
    108e:	fd 80       	ldd	r15, Y+5	; 0x05
    1090:	0c 81       	ldd	r16, Y+4	; 0x04
    1092:	1b 81       	ldd	r17, Y+3	; 0x03
    1094:	aa 81       	ldd	r26, Y+2	; 0x02
    1096:	b9 81       	ldd	r27, Y+1	; 0x01
    1098:	ce 0f       	add	r28, r30
    109a:	d1 1d       	adc	r29, r1
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	f8 94       	cli
    10a0:	de bf       	out	0x3e, r29	; 62
    10a2:	0f be       	out	0x3f, r0	; 63
    10a4:	cd bf       	out	0x3d, r28	; 61
    10a6:	ed 01       	movw	r28, r26
    10a8:	08 95       	ret

000010aa <__ftoa_engine>:
    10aa:	28 30       	cpi	r18, 0x08	; 8
    10ac:	08 f0       	brcs	.+2      	; 0x10b0 <__ftoa_engine+0x6>
    10ae:	27 e0       	ldi	r18, 0x07	; 7
    10b0:	33 27       	eor	r19, r19
    10b2:	da 01       	movw	r26, r20
    10b4:	99 0f       	add	r25, r25
    10b6:	31 1d       	adc	r19, r1
    10b8:	87 fd       	sbrc	r24, 7
    10ba:	91 60       	ori	r25, 0x01	; 1
    10bc:	00 96       	adiw	r24, 0x00	; 0
    10be:	61 05       	cpc	r22, r1
    10c0:	71 05       	cpc	r23, r1
    10c2:	39 f4       	brne	.+14     	; 0x10d2 <__ftoa_engine+0x28>
    10c4:	32 60       	ori	r19, 0x02	; 2
    10c6:	2e 5f       	subi	r18, 0xFE	; 254
    10c8:	3d 93       	st	X+, r19
    10ca:	30 e3       	ldi	r19, 0x30	; 48
    10cc:	2a 95       	dec	r18
    10ce:	e1 f7       	brne	.-8      	; 0x10c8 <__ftoa_engine+0x1e>
    10d0:	08 95       	ret
    10d2:	9f 3f       	cpi	r25, 0xFF	; 255
    10d4:	30 f0       	brcs	.+12     	; 0x10e2 <__ftoa_engine+0x38>
    10d6:	80 38       	cpi	r24, 0x80	; 128
    10d8:	71 05       	cpc	r23, r1
    10da:	61 05       	cpc	r22, r1
    10dc:	09 f0       	breq	.+2      	; 0x10e0 <__ftoa_engine+0x36>
    10de:	3c 5f       	subi	r19, 0xFC	; 252
    10e0:	3c 5f       	subi	r19, 0xFC	; 252
    10e2:	3d 93       	st	X+, r19
    10e4:	91 30       	cpi	r25, 0x01	; 1
    10e6:	08 f0       	brcs	.+2      	; 0x10ea <__ftoa_engine+0x40>
    10e8:	80 68       	ori	r24, 0x80	; 128
    10ea:	91 1d       	adc	r25, r1
    10ec:	df 93       	push	r29
    10ee:	cf 93       	push	r28
    10f0:	1f 93       	push	r17
    10f2:	0f 93       	push	r16
    10f4:	ff 92       	push	r15
    10f6:	ef 92       	push	r14
    10f8:	19 2f       	mov	r17, r25
    10fa:	98 7f       	andi	r25, 0xF8	; 248
    10fc:	96 95       	lsr	r25
    10fe:	e9 2f       	mov	r30, r25
    1100:	96 95       	lsr	r25
    1102:	96 95       	lsr	r25
    1104:	e9 0f       	add	r30, r25
    1106:	ff 27       	eor	r31, r31
    1108:	ea 54       	subi	r30, 0x4A	; 74
    110a:	ff 4f       	sbci	r31, 0xFF	; 255
    110c:	99 27       	eor	r25, r25
    110e:	33 27       	eor	r19, r19
    1110:	ee 24       	eor	r14, r14
    1112:	ff 24       	eor	r15, r15
    1114:	a7 01       	movw	r20, r14
    1116:	e7 01       	movw	r28, r14
    1118:	05 90       	lpm	r0, Z+
    111a:	08 94       	sec
    111c:	07 94       	ror	r0
    111e:	28 f4       	brcc	.+10     	; 0x112a <__ftoa_engine+0x80>
    1120:	36 0f       	add	r19, r22
    1122:	e7 1e       	adc	r14, r23
    1124:	f8 1e       	adc	r15, r24
    1126:	49 1f       	adc	r20, r25
    1128:	51 1d       	adc	r21, r1
    112a:	66 0f       	add	r22, r22
    112c:	77 1f       	adc	r23, r23
    112e:	88 1f       	adc	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	06 94       	lsr	r0
    1134:	a1 f7       	brne	.-24     	; 0x111e <__ftoa_engine+0x74>
    1136:	05 90       	lpm	r0, Z+
    1138:	07 94       	ror	r0
    113a:	28 f4       	brcc	.+10     	; 0x1146 <__ftoa_engine+0x9c>
    113c:	e7 0e       	add	r14, r23
    113e:	f8 1e       	adc	r15, r24
    1140:	49 1f       	adc	r20, r25
    1142:	56 1f       	adc	r21, r22
    1144:	c1 1d       	adc	r28, r1
    1146:	77 0f       	add	r23, r23
    1148:	88 1f       	adc	r24, r24
    114a:	99 1f       	adc	r25, r25
    114c:	66 1f       	adc	r22, r22
    114e:	06 94       	lsr	r0
    1150:	a1 f7       	brne	.-24     	; 0x113a <__ftoa_engine+0x90>
    1152:	05 90       	lpm	r0, Z+
    1154:	07 94       	ror	r0
    1156:	28 f4       	brcc	.+10     	; 0x1162 <__ftoa_engine+0xb8>
    1158:	f8 0e       	add	r15, r24
    115a:	49 1f       	adc	r20, r25
    115c:	56 1f       	adc	r21, r22
    115e:	c7 1f       	adc	r28, r23
    1160:	d1 1d       	adc	r29, r1
    1162:	88 0f       	add	r24, r24
    1164:	99 1f       	adc	r25, r25
    1166:	66 1f       	adc	r22, r22
    1168:	77 1f       	adc	r23, r23
    116a:	06 94       	lsr	r0
    116c:	a1 f7       	brne	.-24     	; 0x1156 <__ftoa_engine+0xac>
    116e:	05 90       	lpm	r0, Z+
    1170:	07 94       	ror	r0
    1172:	20 f4       	brcc	.+8      	; 0x117c <__ftoa_engine+0xd2>
    1174:	49 0f       	add	r20, r25
    1176:	56 1f       	adc	r21, r22
    1178:	c7 1f       	adc	r28, r23
    117a:	d8 1f       	adc	r29, r24
    117c:	99 0f       	add	r25, r25
    117e:	66 1f       	adc	r22, r22
    1180:	77 1f       	adc	r23, r23
    1182:	88 1f       	adc	r24, r24
    1184:	06 94       	lsr	r0
    1186:	a9 f7       	brne	.-22     	; 0x1172 <__ftoa_engine+0xc8>
    1188:	84 91       	lpm	r24, Z
    118a:	10 95       	com	r17
    118c:	17 70       	andi	r17, 0x07	; 7
    118e:	41 f0       	breq	.+16     	; 0x11a0 <__ftoa_engine+0xf6>
    1190:	d6 95       	lsr	r29
    1192:	c7 95       	ror	r28
    1194:	57 95       	ror	r21
    1196:	47 95       	ror	r20
    1198:	f7 94       	ror	r15
    119a:	e7 94       	ror	r14
    119c:	1a 95       	dec	r17
    119e:	c1 f7       	brne	.-16     	; 0x1190 <__ftoa_engine+0xe6>
    11a0:	ec e5       	ldi	r30, 0x5C	; 92
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	68 94       	set
    11a6:	15 90       	lpm	r1, Z+
    11a8:	15 91       	lpm	r17, Z+
    11aa:	35 91       	lpm	r19, Z+
    11ac:	65 91       	lpm	r22, Z+
    11ae:	95 91       	lpm	r25, Z+
    11b0:	05 90       	lpm	r0, Z+
    11b2:	7f e2       	ldi	r23, 0x2F	; 47
    11b4:	73 95       	inc	r23
    11b6:	e1 18       	sub	r14, r1
    11b8:	f1 0a       	sbc	r15, r17
    11ba:	43 0b       	sbc	r20, r19
    11bc:	56 0b       	sbc	r21, r22
    11be:	c9 0b       	sbc	r28, r25
    11c0:	d0 09       	sbc	r29, r0
    11c2:	c0 f7       	brcc	.-16     	; 0x11b4 <__ftoa_engine+0x10a>
    11c4:	e1 0c       	add	r14, r1
    11c6:	f1 1e       	adc	r15, r17
    11c8:	43 1f       	adc	r20, r19
    11ca:	56 1f       	adc	r21, r22
    11cc:	c9 1f       	adc	r28, r25
    11ce:	d0 1d       	adc	r29, r0
    11d0:	7e f4       	brtc	.+30     	; 0x11f0 <__ftoa_engine+0x146>
    11d2:	70 33       	cpi	r23, 0x30	; 48
    11d4:	11 f4       	brne	.+4      	; 0x11da <__ftoa_engine+0x130>
    11d6:	8a 95       	dec	r24
    11d8:	e6 cf       	rjmp	.-52     	; 0x11a6 <__ftoa_engine+0xfc>
    11da:	e8 94       	clt
    11dc:	01 50       	subi	r16, 0x01	; 1
    11de:	30 f0       	brcs	.+12     	; 0x11ec <__ftoa_engine+0x142>
    11e0:	08 0f       	add	r16, r24
    11e2:	0a f4       	brpl	.+2      	; 0x11e6 <__ftoa_engine+0x13c>
    11e4:	00 27       	eor	r16, r16
    11e6:	02 17       	cp	r16, r18
    11e8:	08 f4       	brcc	.+2      	; 0x11ec <__ftoa_engine+0x142>
    11ea:	20 2f       	mov	r18, r16
    11ec:	23 95       	inc	r18
    11ee:	02 2f       	mov	r16, r18
    11f0:	7a 33       	cpi	r23, 0x3A	; 58
    11f2:	28 f0       	brcs	.+10     	; 0x11fe <__ftoa_engine+0x154>
    11f4:	79 e3       	ldi	r23, 0x39	; 57
    11f6:	7d 93       	st	X+, r23
    11f8:	2a 95       	dec	r18
    11fa:	e9 f7       	brne	.-6      	; 0x11f6 <__ftoa_engine+0x14c>
    11fc:	10 c0       	rjmp	.+32     	; 0x121e <__ftoa_engine+0x174>
    11fe:	7d 93       	st	X+, r23
    1200:	2a 95       	dec	r18
    1202:	89 f6       	brne	.-94     	; 0x11a6 <__ftoa_engine+0xfc>
    1204:	06 94       	lsr	r0
    1206:	97 95       	ror	r25
    1208:	67 95       	ror	r22
    120a:	37 95       	ror	r19
    120c:	17 95       	ror	r17
    120e:	17 94       	ror	r1
    1210:	e1 18       	sub	r14, r1
    1212:	f1 0a       	sbc	r15, r17
    1214:	43 0b       	sbc	r20, r19
    1216:	56 0b       	sbc	r21, r22
    1218:	c9 0b       	sbc	r28, r25
    121a:	d0 09       	sbc	r29, r0
    121c:	98 f0       	brcs	.+38     	; 0x1244 <__ftoa_engine+0x19a>
    121e:	23 95       	inc	r18
    1220:	7e 91       	ld	r23, -X
    1222:	73 95       	inc	r23
    1224:	7a 33       	cpi	r23, 0x3A	; 58
    1226:	08 f0       	brcs	.+2      	; 0x122a <__ftoa_engine+0x180>
    1228:	70 e3       	ldi	r23, 0x30	; 48
    122a:	7c 93       	st	X, r23
    122c:	20 13       	cpse	r18, r16
    122e:	b8 f7       	brcc	.-18     	; 0x121e <__ftoa_engine+0x174>
    1230:	7e 91       	ld	r23, -X
    1232:	70 61       	ori	r23, 0x10	; 16
    1234:	7d 93       	st	X+, r23
    1236:	30 f0       	brcs	.+12     	; 0x1244 <__ftoa_engine+0x19a>
    1238:	83 95       	inc	r24
    123a:	71 e3       	ldi	r23, 0x31	; 49
    123c:	7d 93       	st	X+, r23
    123e:	70 e3       	ldi	r23, 0x30	; 48
    1240:	2a 95       	dec	r18
    1242:	e1 f7       	brne	.-8      	; 0x123c <__ftoa_engine+0x192>
    1244:	11 24       	eor	r1, r1
    1246:	ef 90       	pop	r14
    1248:	ff 90       	pop	r15
    124a:	0f 91       	pop	r16
    124c:	1f 91       	pop	r17
    124e:	cf 91       	pop	r28
    1250:	df 91       	pop	r29
    1252:	99 27       	eor	r25, r25
    1254:	87 fd       	sbrc	r24, 7
    1256:	90 95       	com	r25
    1258:	08 95       	ret

0000125a <strnlen_P>:
    125a:	fc 01       	movw	r30, r24
    125c:	05 90       	lpm	r0, Z+
    125e:	61 50       	subi	r22, 0x01	; 1
    1260:	70 40       	sbci	r23, 0x00	; 0
    1262:	01 10       	cpse	r0, r1
    1264:	d8 f7       	brcc	.-10     	; 0x125c <strnlen_P+0x2>
    1266:	80 95       	com	r24
    1268:	90 95       	com	r25
    126a:	8e 0f       	add	r24, r30
    126c:	9f 1f       	adc	r25, r31
    126e:	08 95       	ret

00001270 <strnlen>:
    1270:	fc 01       	movw	r30, r24
    1272:	61 50       	subi	r22, 0x01	; 1
    1274:	70 40       	sbci	r23, 0x00	; 0
    1276:	01 90       	ld	r0, Z+
    1278:	01 10       	cpse	r0, r1
    127a:	d8 f7       	brcc	.-10     	; 0x1272 <strnlen+0x2>
    127c:	80 95       	com	r24
    127e:	90 95       	com	r25
    1280:	8e 0f       	add	r24, r30
    1282:	9f 1f       	adc	r25, r31
    1284:	08 95       	ret

00001286 <fputc>:
    1286:	0f 93       	push	r16
    1288:	1f 93       	push	r17
    128a:	cf 93       	push	r28
    128c:	df 93       	push	r29
    128e:	fb 01       	movw	r30, r22
    1290:	23 81       	ldd	r18, Z+3	; 0x03
    1292:	21 fd       	sbrc	r18, 1
    1294:	03 c0       	rjmp	.+6      	; 0x129c <fputc+0x16>
    1296:	8f ef       	ldi	r24, 0xFF	; 255
    1298:	9f ef       	ldi	r25, 0xFF	; 255
    129a:	2c c0       	rjmp	.+88     	; 0x12f4 <fputc+0x6e>
    129c:	22 ff       	sbrs	r18, 2
    129e:	16 c0       	rjmp	.+44     	; 0x12cc <fputc+0x46>
    12a0:	46 81       	ldd	r20, Z+6	; 0x06
    12a2:	57 81       	ldd	r21, Z+7	; 0x07
    12a4:	24 81       	ldd	r18, Z+4	; 0x04
    12a6:	35 81       	ldd	r19, Z+5	; 0x05
    12a8:	42 17       	cp	r20, r18
    12aa:	53 07       	cpc	r21, r19
    12ac:	44 f4       	brge	.+16     	; 0x12be <fputc+0x38>
    12ae:	a0 81       	ld	r26, Z
    12b0:	b1 81       	ldd	r27, Z+1	; 0x01
    12b2:	9d 01       	movw	r18, r26
    12b4:	2f 5f       	subi	r18, 0xFF	; 255
    12b6:	3f 4f       	sbci	r19, 0xFF	; 255
    12b8:	31 83       	std	Z+1, r19	; 0x01
    12ba:	20 83       	st	Z, r18
    12bc:	8c 93       	st	X, r24
    12be:	26 81       	ldd	r18, Z+6	; 0x06
    12c0:	37 81       	ldd	r19, Z+7	; 0x07
    12c2:	2f 5f       	subi	r18, 0xFF	; 255
    12c4:	3f 4f       	sbci	r19, 0xFF	; 255
    12c6:	37 83       	std	Z+7, r19	; 0x07
    12c8:	26 83       	std	Z+6, r18	; 0x06
    12ca:	14 c0       	rjmp	.+40     	; 0x12f4 <fputc+0x6e>
    12cc:	8b 01       	movw	r16, r22
    12ce:	ec 01       	movw	r28, r24
    12d0:	fb 01       	movw	r30, r22
    12d2:	00 84       	ldd	r0, Z+8	; 0x08
    12d4:	f1 85       	ldd	r31, Z+9	; 0x09
    12d6:	e0 2d       	mov	r30, r0
    12d8:	09 95       	icall
    12da:	89 2b       	or	r24, r25
    12dc:	e1 f6       	brne	.-72     	; 0x1296 <fputc+0x10>
    12de:	d8 01       	movw	r26, r16
    12e0:	16 96       	adiw	r26, 0x06	; 6
    12e2:	8d 91       	ld	r24, X+
    12e4:	9c 91       	ld	r25, X
    12e6:	17 97       	sbiw	r26, 0x07	; 7
    12e8:	01 96       	adiw	r24, 0x01	; 1
    12ea:	17 96       	adiw	r26, 0x07	; 7
    12ec:	9c 93       	st	X, r25
    12ee:	8e 93       	st	-X, r24
    12f0:	16 97       	sbiw	r26, 0x06	; 6
    12f2:	ce 01       	movw	r24, r28
    12f4:	df 91       	pop	r29
    12f6:	cf 91       	pop	r28
    12f8:	1f 91       	pop	r17
    12fa:	0f 91       	pop	r16
    12fc:	08 95       	ret

000012fe <sprintf>:
    12fe:	ae e0       	ldi	r26, 0x0E	; 14
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	e5 e8       	ldi	r30, 0x85	; 133
    1304:	f9 e0       	ldi	r31, 0x09	; 9
    1306:	0c 94 2c 08 	jmp	0x1058	; 0x1058 <__prologue_saves__+0x1c>
    130a:	0d 89       	ldd	r16, Y+21	; 0x15
    130c:	1e 89       	ldd	r17, Y+22	; 0x16
    130e:	86 e0       	ldi	r24, 0x06	; 6
    1310:	8c 83       	std	Y+4, r24	; 0x04
    1312:	1a 83       	std	Y+2, r17	; 0x02
    1314:	09 83       	std	Y+1, r16	; 0x01
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f e7       	ldi	r25, 0x7F	; 127
    131a:	9e 83       	std	Y+6, r25	; 0x06
    131c:	8d 83       	std	Y+5, r24	; 0x05
    131e:	ae 01       	movw	r20, r28
    1320:	47 5e       	subi	r20, 0xE7	; 231
    1322:	5f 4f       	sbci	r21, 0xFF	; 255
    1324:	6f 89       	ldd	r22, Y+23	; 0x17
    1326:	78 8d       	ldd	r23, Y+24	; 0x18
    1328:	ce 01       	movw	r24, r28
    132a:	01 96       	adiw	r24, 0x01	; 1
    132c:	0e 94 a1 04 	call	0x942	; 0x942 <vfprintf>
    1330:	ef 81       	ldd	r30, Y+7	; 0x07
    1332:	f8 85       	ldd	r31, Y+8	; 0x08
    1334:	e0 0f       	add	r30, r16
    1336:	f1 1f       	adc	r31, r17
    1338:	10 82       	st	Z, r1
    133a:	2e 96       	adiw	r28, 0x0e	; 14
    133c:	e4 e0       	ldi	r30, 0x04	; 4
    133e:	0c 94 48 08 	jmp	0x1090	; 0x1090 <__epilogue_restores__+0x1c>

00001342 <__ultoa_invert>:
    1342:	fa 01       	movw	r30, r20
    1344:	aa 27       	eor	r26, r26
    1346:	28 30       	cpi	r18, 0x08	; 8
    1348:	51 f1       	breq	.+84     	; 0x139e <__ultoa_invert+0x5c>
    134a:	20 31       	cpi	r18, 0x10	; 16
    134c:	81 f1       	breq	.+96     	; 0x13ae <__ultoa_invert+0x6c>
    134e:	e8 94       	clt
    1350:	6f 93       	push	r22
    1352:	6e 7f       	andi	r22, 0xFE	; 254
    1354:	6e 5f       	subi	r22, 0xFE	; 254
    1356:	7f 4f       	sbci	r23, 0xFF	; 255
    1358:	8f 4f       	sbci	r24, 0xFF	; 255
    135a:	9f 4f       	sbci	r25, 0xFF	; 255
    135c:	af 4f       	sbci	r26, 0xFF	; 255
    135e:	b1 e0       	ldi	r27, 0x01	; 1
    1360:	3e d0       	rcall	.+124    	; 0x13de <__ultoa_invert+0x9c>
    1362:	b4 e0       	ldi	r27, 0x04	; 4
    1364:	3c d0       	rcall	.+120    	; 0x13de <__ultoa_invert+0x9c>
    1366:	67 0f       	add	r22, r23
    1368:	78 1f       	adc	r23, r24
    136a:	89 1f       	adc	r24, r25
    136c:	9a 1f       	adc	r25, r26
    136e:	a1 1d       	adc	r26, r1
    1370:	68 0f       	add	r22, r24
    1372:	79 1f       	adc	r23, r25
    1374:	8a 1f       	adc	r24, r26
    1376:	91 1d       	adc	r25, r1
    1378:	a1 1d       	adc	r26, r1
    137a:	6a 0f       	add	r22, r26
    137c:	71 1d       	adc	r23, r1
    137e:	81 1d       	adc	r24, r1
    1380:	91 1d       	adc	r25, r1
    1382:	a1 1d       	adc	r26, r1
    1384:	20 d0       	rcall	.+64     	; 0x13c6 <__ultoa_invert+0x84>
    1386:	09 f4       	brne	.+2      	; 0x138a <__ultoa_invert+0x48>
    1388:	68 94       	set
    138a:	3f 91       	pop	r19
    138c:	2a e0       	ldi	r18, 0x0A	; 10
    138e:	26 9f       	mul	r18, r22
    1390:	11 24       	eor	r1, r1
    1392:	30 19       	sub	r19, r0
    1394:	30 5d       	subi	r19, 0xD0	; 208
    1396:	31 93       	st	Z+, r19
    1398:	de f6       	brtc	.-74     	; 0x1350 <__ultoa_invert+0xe>
    139a:	cf 01       	movw	r24, r30
    139c:	08 95       	ret
    139e:	46 2f       	mov	r20, r22
    13a0:	47 70       	andi	r20, 0x07	; 7
    13a2:	40 5d       	subi	r20, 0xD0	; 208
    13a4:	41 93       	st	Z+, r20
    13a6:	b3 e0       	ldi	r27, 0x03	; 3
    13a8:	0f d0       	rcall	.+30     	; 0x13c8 <__ultoa_invert+0x86>
    13aa:	c9 f7       	brne	.-14     	; 0x139e <__ultoa_invert+0x5c>
    13ac:	f6 cf       	rjmp	.-20     	; 0x139a <__ultoa_invert+0x58>
    13ae:	46 2f       	mov	r20, r22
    13b0:	4f 70       	andi	r20, 0x0F	; 15
    13b2:	40 5d       	subi	r20, 0xD0	; 208
    13b4:	4a 33       	cpi	r20, 0x3A	; 58
    13b6:	18 f0       	brcs	.+6      	; 0x13be <__ultoa_invert+0x7c>
    13b8:	49 5d       	subi	r20, 0xD9	; 217
    13ba:	31 fd       	sbrc	r19, 1
    13bc:	40 52       	subi	r20, 0x20	; 32
    13be:	41 93       	st	Z+, r20
    13c0:	02 d0       	rcall	.+4      	; 0x13c6 <__ultoa_invert+0x84>
    13c2:	a9 f7       	brne	.-22     	; 0x13ae <__ultoa_invert+0x6c>
    13c4:	ea cf       	rjmp	.-44     	; 0x139a <__ultoa_invert+0x58>
    13c6:	b4 e0       	ldi	r27, 0x04	; 4
    13c8:	a6 95       	lsr	r26
    13ca:	97 95       	ror	r25
    13cc:	87 95       	ror	r24
    13ce:	77 95       	ror	r23
    13d0:	67 95       	ror	r22
    13d2:	ba 95       	dec	r27
    13d4:	c9 f7       	brne	.-14     	; 0x13c8 <__ultoa_invert+0x86>
    13d6:	00 97       	sbiw	r24, 0x00	; 0
    13d8:	61 05       	cpc	r22, r1
    13da:	71 05       	cpc	r23, r1
    13dc:	08 95       	ret
    13de:	9b 01       	movw	r18, r22
    13e0:	ac 01       	movw	r20, r24
    13e2:	0a 2e       	mov	r0, r26
    13e4:	06 94       	lsr	r0
    13e6:	57 95       	ror	r21
    13e8:	47 95       	ror	r20
    13ea:	37 95       	ror	r19
    13ec:	27 95       	ror	r18
    13ee:	ba 95       	dec	r27
    13f0:	c9 f7       	brne	.-14     	; 0x13e4 <__ultoa_invert+0xa2>
    13f2:	62 0f       	add	r22, r18
    13f4:	73 1f       	adc	r23, r19
    13f6:	84 1f       	adc	r24, r20
    13f8:	95 1f       	adc	r25, r21
    13fa:	a0 1d       	adc	r26, r0
    13fc:	08 95       	ret

000013fe <_exit>:
    13fe:	f8 94       	cli

00001400 <__stop_program>:
    1400:	ff cf       	rjmp	.-2      	; 0x1400 <__stop_program>
