
sensor_node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001228  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b8  00800060  00001228  000012bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000188  00800118  00800118  00001374  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001410  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a0f  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000067b  00000000  00000000  00001e97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000075f  00000000  00000000  00002512  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00002c74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042c  00000000  00000000  00002df4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000041d  00000000  00000000  00003220  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000363d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__vector_8>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 18 02 	jmp	0x430	; 0x430 <__vector_14>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d4 e0       	ldi	r29, 0x04	; 4
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	11 e0       	ldi	r17, 0x01	; 1
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e8 e2       	ldi	r30, 0x28	; 40
     16a:	f2 e1       	ldi	r31, 0x12	; 18
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a8 31       	cpi	r26, 0x18	; 24
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	22 e0       	ldi	r18, 0x02	; 2
     17a:	a8 e1       	ldi	r26, 0x18	; 24
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a0 3a       	cpi	r26, 0xA0	; 160
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 4b 02 	call	0x496	; 0x496 <main>
     18c:	0c 94 12 09 	jmp	0x1224	; 0x1224 <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <lcd_init_sim>:
#define _SFR_ASM_COMPAT 1
#define __SFR_OFFSET 0

.global lcd_init_sim
lcd_init_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     194:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     196:	9f 93       	push	r25
ldi r24, 40 ; Όταν ο ελεγκτής της lcd τροφοδοτείται με
     198:	88 e2       	ldi	r24, 0x28	; 40
ldi r25, 0 ; ρεύμα εκτελεί την δική του αρχικοποίηση.
     19a:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_msec ; Αναμονή 40 msec μέχρι αυτή να ολοκληρωθεί.
     19c:	6c d0       	rcall	.+216    	; 0x276 <wait_msec>
ldi r24, 0x30
     19e:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1a0:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1a2:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1a4:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1a6:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1a8:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1aa:	6f d0       	rcall	.+222    	; 0x28a <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1ac:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ae:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1b0:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1b2:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1b4:	6a d0       	rcall	.+212    	; 0x28a <wait_usec>
pop r25
     1b6:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1b8:	8f 91       	pop	r24
ldi r24, 0x30
     1ba:	80 e3       	ldi	r24, 0x30	; 48
out PORTD, r24
     1bc:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1be:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1c0:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1c2:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1c4:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1c6:	61 d0       	rcall	.+194    	; 0x28a <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1c8:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1ca:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1cc:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ce:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1d0:	5c d0       	rcall	.+184    	; 0x28a <wait_usec>
pop r25
     1d2:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1d4:	8f 91       	pop	r24
ldi r24,0x20 ; αλλαγή σε 4-bit mode
     1d6:	80 e2       	ldi	r24, 0x20	; 32
out PORTD, r24
     1d8:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3
     1da:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     1dc:	93 98       	cbi	0x12, 3	; 18
ldi r24,39
     1de:	87 e2       	ldi	r24, 0x27	; 39
ldi r25,0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     1e2:	53 d0       	rcall	.+166    	; 0x28a <wait_usec>
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     1e4:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     1e6:	9f 93       	push	r25
ldi r24 ,lo8(1000) ; πρόσβασης
     1e8:	88 ee       	ldi	r24, 0xE8	; 232
ldi r25 ,hi8(1000)
     1ea:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec
     1ec:	4e d0       	rcall	.+156    	; 0x28a <wait_usec>
pop r25
     1ee:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     1f0:	8f 91       	pop	r24
ldi r24,0x28 ; επιλογή χαρακτήρων μεγέθους 5x8 κουκίδων
     1f2:	88 e2       	ldi	r24, 0x28	; 40
rcall lcd_command_sim ; και εμφάνιση δύο γραμμών στην οθόνη
     1f4:	0e d0       	rcall	.+28     	; 0x212 <lcd_command_sim>
ldi r24,0x0c ; ενεργοποίηση της οθόνης, απόκρυψη του κέρσορα
     1f6:	8c e0       	ldi	r24, 0x0C	; 12
rcall lcd_command_sim
     1f8:	0c d0       	rcall	.+24     	; 0x212 <lcd_command_sim>
ldi r24,0x01 ; καθαρισμός της οθόνης
     1fa:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     1fc:	0a d0       	rcall	.+20     	; 0x212 <lcd_command_sim>
ldi r24, lo8(1530)
     1fe:	8a ef       	ldi	r24, 0xFA	; 250
ldi r25, hi8(1530)
     200:	95 e0       	ldi	r25, 0x05	; 5
rcall wait_usec
     202:	43 d0       	rcall	.+134    	; 0x28a <wait_usec>
ldi r24 ,0x06 ; ενεργοποίηση αυτόματης αύξησης κατά 1 της διεύθυνσης
     204:	86 e0       	ldi	r24, 0x06	; 6
rcall lcd_command_sim ; που είναι αποθηκευμένη στον μετρητή διευθύνσεων και
     206:	05 d0       	rcall	.+10     	; 0x212 <lcd_command_sim>
; απενεργοποίηση της ολίσθησης ολόκληρης της οθόνης
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     208:	9f 91       	pop	r25
pop r24
     20a:	8f 91       	pop	r24
ret
     20c:	08 95       	ret

0000020e <lcd_clear>:


.global lcd_clear
lcd_clear:
ldi r24,0x01 ; καθαρισμός της οθόνης
     20e:	81 e0       	ldi	r24, 0x01	; 1
rcall lcd_command_sim
     210:	00 d0       	rcall	.+0      	; 0x212 <lcd_command_sim>

00000212 <lcd_command_sim>:

lcd_command_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     212:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     214:	9f 93       	push	r25
cbi PORTD, PD2 ; επιλογή του καταχωρητή εντολών (PD2=0)
     216:	92 98       	cbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή της εντολής και αναμονή 39μsec
     218:	06 d0       	rcall	.+12     	; 0x226 <write_2_nibbles_sim>
ldi r24, 39 ; για την ολοκλήρωση της εκτέλεσης της από τον ελεγκτή της lcd.
     21a:	87 e2       	ldi	r24, 0x27	; 39
ldi r25, 0 ; ΣΗΜ.: υπάρχουν δύο εντολές, οι clear display και return home,
     21c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec ; που απαιτούν σημαντικά μεγαλύτερο χρονικό διάστημα.
     21e:	35 d0       	rcall	.+106    	; 0x28a <wait_usec>
pop r25 ; επανάφερε τους καταχωρητές r25:r24
     220:	9f 91       	pop	r25
pop r24
     222:	8f 91       	pop	r24
ret
     224:	08 95       	ret

00000226 <write_2_nibbles_sim>:

write_2_nibbles_sim:
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     226:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     228:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     22a:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     22c:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     22e:	2d d0       	rcall	.+90     	; 0x28a <wait_usec>
pop r25
     230:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     232:	8f 91       	pop	r24
push r24 ; στέλνει τα 4 MSB
     234:	8f 93       	push	r24
in r25, PIND ; διαβάζονται τα 4 LSB και τα ξαναστέλνουμε
     236:	90 b3       	in	r25, 0x10	; 16
andi r25, 0x0f ; για να μην χαλάσουμε την όποια προηγούμενη κατάσταση
     238:	9f 70       	andi	r25, 0x0F	; 15
andi r24, 0xf0 ; απομονώνονται τα 4 MSB και
     23a:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25 ; συνδυάζονται με τα προϋπάρχοντα 4 LSB
     23c:	89 0f       	add	r24, r25
out PORTD, r24 ; και δίνονται στην έξοδο
     23e:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; δημιουργείται παλμός Enable στον ακροδέκτη PD3
     240:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3 ; PD3=1 και μετά PD3=0
     242:	93 98       	cbi	0x12, 3	; 18
push r24 ; τμήμα κώδικα που προστίθεται για τη σωστή
     244:	8f 93       	push	r24
push r25 ; λειτουργία του προγραμματος απομακρυσμένης
     246:	9f 93       	push	r25
ldi r24 ,lo8(6000) ; πρόσβασης
     248:	80 e7       	ldi	r24, 0x70	; 112
ldi r25 ,hi8(6000)
     24a:	97 e1       	ldi	r25, 0x17	; 23
rcall wait_usec
     24c:	1e d0       	rcall	.+60     	; 0x28a <wait_usec>
pop r25
     24e:	9f 91       	pop	r25
pop r24 ; τέλος τμήμα κώδικα
     250:	8f 91       	pop	r24
pop r24 ; στέλνει τα 4 LSB. Ανακτάται το byte.
     252:	8f 91       	pop	r24
swap r24 ; εναλλάσσονται τα 4 MSB με τα 4 LSB
     254:	82 95       	swap	r24
andi r24 ,0xf0 ; που με την σειρά τους αποστέλλονται
     256:	80 7f       	andi	r24, 0xF0	; 240
add r24, r25
     258:	89 0f       	add	r24, r25
out PORTD, r24
     25a:	82 bb       	out	0x12, r24	; 18
sbi PORTD, PD3 ; Νέος παλμός Enable
     25c:	93 9a       	sbi	0x12, 3	; 18
cbi PORTD, PD3
     25e:	93 98       	cbi	0x12, 3	; 18
ret
     260:	08 95       	ret

00000262 <lcd_data_sim>:

lcd_data_sim:
push r24 ; αποθήκευσε τους καταχωρητές r25:r24 γιατί τους
     262:	8f 93       	push	r24
push r25 ; αλλάζουμε μέσα στη ρουτίνα
     264:	9f 93       	push	r25
sbi PORTD, PD2 ; επιλογή του καταχωρητή δεδομένων (PD2=1)
     266:	92 9a       	sbi	0x12, 2	; 18
rcall write_2_nibbles_sim ; αποστολή του byte
     268:	de df       	rcall	.-68     	; 0x226 <write_2_nibbles_sim>
ldi r24 ,43 ; αναμονή 43μsec μέχρι να ολοκληρωθεί η λήψη
     26a:	8b e2       	ldi	r24, 0x2B	; 43
ldi r25 ,0 ; των δεδομένων από τον ελεγκτή της lcd
     26c:	90 e0       	ldi	r25, 0x00	; 0
rcall wait_usec
     26e:	0d d0       	rcall	.+26     	; 0x28a <wait_usec>
pop r25 ;επανάφερε τους καταχωρητές r25:r24
     270:	9f 91       	pop	r25
pop r24
     272:	8f 91       	pop	r24
ret
     274:	08 95       	ret

00000276 <wait_msec>:

wait_msec:
push r24 ; 2 κύκλοι (0.250 μsec)
     276:	8f 93       	push	r24
push r25 ; 2 κύκλοι
     278:	9f 93       	push	r25
ldi r24 , lo8(998) ; φόρτωσε τον καταχ. r25:r24 με 998 (1 κύκλος - 0.125 μsec)
     27a:	86 ee       	ldi	r24, 0xE6	; 230
ldi r25 , hi8(998) ; 1 κύκλος (0.125 μsec)
     27c:	93 e0       	ldi	r25, 0x03	; 3
rcall wait_usec ; 3 κύκλοι (0.375 μsec), προκαλεί συνολικά καθυστέρηση 998.375 μsec
     27e:	05 d0       	rcall	.+10     	; 0x28a <wait_usec>
pop r25 ; 2 κύκλοι (0.250 μsec)
     280:	9f 91       	pop	r25
pop r24 ; 2 κύκλοι
     282:	8f 91       	pop	r24
sbiw r24 , 1 ; 2 κύκλοι
     284:	01 97       	sbiw	r24, 0x01	; 1
brne wait_msec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     286:	b9 f7       	brne	.-18     	; 0x276 <wait_msec>
ret ; 4 κύκλοι (0.500 μsec)
     288:	08 95       	ret

0000028a <wait_usec>:

wait_usec:
sbiw r24 ,1 ; 2 κύκλοι (0.250 μsec)
     28a:	01 97       	sbiw	r24, 0x01	; 1
	...
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
nop ; 1 κύκλος (0.125 μsec)
brne wait_usec ; 1 ή 2 κύκλοι (0.125 ή 0.250 μsec)
     294:	d1 f7       	brne	.-12     	; 0x28a <wait_usec>
ret ; 4 κύκλοι (0.500 μsec)
     296:	08 95       	ret

00000298 <print>:


.global print
print:
     298:	e4 df       	rcall	.-56     	; 0x262 <lcd_data_sim>

0000029a <usart_init>:
        getChar(); //flush success out of read buffer
}
*/

void usart_init(unsigned int ubrr){
	UCSRA=0;
     29a:	1b b8       	out	0x0b, r1	; 11
	UCSRB=(1<<RXEN)|(1<<TXEN);
     29c:	28 e1       	ldi	r18, 0x18	; 24
     29e:	2a b9       	out	0x0a, r18	; 10
	UBRRH=(unsigned char)(ubrr>>8);
     2a0:	90 bd       	out	0x20, r25	; 32
	UBRRL=(unsigned char)ubrr;
     2a2:	89 b9       	out	0x09, r24	; 9
	UCSRC=(1 << URSEL) | (3 << UCSZ0);
     2a4:	86 e8       	ldi	r24, 0x86	; 134
     2a6:	80 bd       	out	0x20, r24	; 32
     2a8:	08 95       	ret

000002aa <usart_transmit>:
	return;
}

void usart_transmit(uint8_t data){
	while(!(UCSRA&(1<<UDRE)));
     2aa:	5d 9b       	sbis	0x0b, 5	; 11
     2ac:	fe cf       	rjmp	.-4      	; 0x2aa <usart_transmit>
	UDR=data;
     2ae:	8c b9       	out	0x0c, r24	; 12
     2b0:	08 95       	ret

000002b2 <usart_receive>:
}

uint8_t usart_receive(){
	while(!(UCSRA&(1<<RXC)));
     2b2:	5f 9b       	sbis	0x0b, 7	; 11
     2b4:	fe cf       	rjmp	.-4      	; 0x2b2 <usart_receive>
	return UDR;
     2b6:	8c b1       	in	r24, 0x0c	; 12
}
     2b8:	08 95       	ret

000002ba <serialWrite>:

void serialWrite(char c[]) {
     2ba:	1f 93       	push	r17
     2bc:	cf 93       	push	r28
     2be:	df 93       	push	r29
     2c0:	ec 01       	movw	r28, r24
	for(uint8_t i=0; i<strlen(c); ++i) {
     2c2:	10 e0       	ldi	r17, 0x00	; 0
     2c4:	07 c0       	rjmp	.+14     	; 0x2d4 <serialWrite+0x1a>
		usart_transmit(c[i]); //transmit command one character at a time
     2c6:	fe 01       	movw	r30, r28
     2c8:	e8 0f       	add	r30, r24
     2ca:	f9 1f       	adc	r31, r25
     2cc:	80 81       	ld	r24, Z
     2ce:	0e 94 55 01 	call	0x2aa	; 0x2aa <usart_transmit>
	while(!(UCSRA&(1<<RXC)));
	return UDR;
}

void serialWrite(char c[]) {
	for(uint8_t i=0; i<strlen(c); ++i) {
     2d2:	1f 5f       	subi	r17, 0xFF	; 255
     2d4:	81 2f       	mov	r24, r17
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	fe 01       	movw	r30, r28
     2da:	01 90       	ld	r0, Z+
     2dc:	00 20       	and	r0, r0
     2de:	e9 f7       	brne	.-6      	; 0x2da <serialWrite+0x20>
     2e0:	31 97       	sbiw	r30, 0x01	; 1
     2e2:	ec 1b       	sub	r30, r28
     2e4:	fd 0b       	sbc	r31, r29
     2e6:	8e 17       	cp	r24, r30
     2e8:	9f 07       	cpc	r25, r31
     2ea:	68 f3       	brcs	.-38     	; 0x2c6 <serialWrite+0xc>
		usart_transmit(c[i]); //transmit command one character at a time
		//print(c[i]); //debug
	}
}
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	08 95       	ret

000002f4 <sendCommand>:

void sendCommand(char command[]) {
     2f4:	0f 93       	push	r16
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	8c 01       	movw	r16, r24
	serialWrite(command);
     2fe:	0e 94 5d 01 	call	0x2ba	; 0x2ba <serialWrite>
	unsigned char c;
	
	c=usart_receive();
     302:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
	//PORTB=0xFF; //debug -- never reaches this part
	//print(c); //debug
	while(c!='S'){ //wait until "success" reply from esp
     306:	13 c0       	rjmp	.+38     	; 0x32e <sendCommand+0x3a>
		if(c=='F') { //if command execution failed re-transmit it
     308:	86 34       	cpi	r24, 0x46	; 70
     30a:	79 f4       	brne	.+30     	; 0x32a <sendCommand+0x36>
     30c:	04 c0       	rjmp	.+8      	; 0x316 <sendCommand+0x22>
			for(int i=0; i<5; ++i)
				usart_receive(); //flush fail out of read buffer
     30e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
	c=usart_receive();
	//PORTB=0xFF; //debug -- never reaches this part
	//print(c); //debug
	while(c!='S'){ //wait until "success" reply from esp
		if(c=='F') { //if command execution failed re-transmit it
			for(int i=0; i<5; ++i)
     312:	21 96       	adiw	r28, 0x01	; 1
     314:	02 c0       	rjmp	.+4      	; 0x31a <sendCommand+0x26>
     316:	c0 e0       	ldi	r28, 0x00	; 0
     318:	d0 e0       	ldi	r29, 0x00	; 0
     31a:	c5 30       	cpi	r28, 0x05	; 5
     31c:	d1 05       	cpc	r29, r1
     31e:	bc f3       	brlt	.-18     	; 0x30e <sendCommand+0x1a>
				usart_receive(); //flush fail out of read buffer
			PORTB=0xFF;
     320:	8f ef       	ldi	r24, 0xFF	; 255
     322:	88 bb       	out	0x18, r24	; 24
			serialWrite(command);
     324:	c8 01       	movw	r24, r16
     326:	0e 94 5d 01 	call	0x2ba	; 0x2ba <serialWrite>
		}
		c=usart_receive();
     32a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
	unsigned char c;
	
	c=usart_receive();
	//PORTB=0xFF; //debug -- never reaches this part
	//print(c); //debug
	while(c!='S'){ //wait until "success" reply from esp
     32e:	83 35       	cpi	r24, 0x53	; 83
     330:	59 f7       	brne	.-42     	; 0x308 <sendCommand+0x14>
     332:	c0 e0       	ldi	r28, 0x00	; 0
     334:	d0 e0       	ldi	r29, 0x00	; 0
     336:	03 c0       	rjmp	.+6      	; 0x33e <sendCommand+0x4a>
		c=usart_receive();
	}
	//PORTB=0xFF;
	for(int i=0; i<8; ++i)
    //print(c);
		usart_receive(); //flush success out of read buffer
     338:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
			serialWrite(command);
		}
		c=usart_receive();
	}
	//PORTB=0xFF;
	for(int i=0; i<8; ++i)
     33c:	21 96       	adiw	r28, 0x01	; 1
     33e:	c8 30       	cpi	r28, 0x08	; 8
     340:	d1 05       	cpc	r29, r1
     342:	d4 f3       	brlt	.-12     	; 0x338 <sendCommand+0x44>
    //print(c);
		usart_receive(); //flush success out of read buffer
}
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	1f 91       	pop	r17
     34a:	0f 91       	pop	r16
     34c:	08 95       	ret

0000034e <__vector_8>:


ISR(TIMER1_OVF_vect) {
     34e:	1f 92       	push	r1
     350:	0f 92       	push	r0
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	0f 92       	push	r0
     356:	11 24       	eor	r1, r1
     358:	2f 93       	push	r18
     35a:	3f 93       	push	r19
     35c:	4f 93       	push	r20
     35e:	5f 93       	push	r21
     360:	6f 93       	push	r22
     362:	7f 93       	push	r23
     364:	8f 93       	push	r24
     366:	9f 93       	push	r25
     368:	af 93       	push	r26
     36a:	bf 93       	push	r27
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	ef 93       	push	r30
     372:	ff 93       	push	r31
	//PORTB=0x00;
	
	while((UCSRA & 0x80) == 1)
     374:	8b b1       	in	r24, 0x0b	; 11
		usart_receive(); //flush possible "Served Client" out of the system before sending new data
	
	//PORTB=0xFF;
    if(!first) {
     376:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     37a:	81 11       	cpse	r24, r1
     37c:	3b c0       	rjmp	.+118    	; 0x3f4 <__vector_8+0xa6>
        /*itoa(moist_sensor, conv_buffer, 10); //convert value read to string to send it to ESP
        strcpy(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"["); //create the string to send to set the sensor value
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/
        sprintf(string_to_send, "ESP:sensorValue:\"Moist_Sensor\"[%d]\n", moist_sensor);
     37e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <moist_sensor+0x1>
     382:	8f 93       	push	r24
     384:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <moist_sensor>
     388:	8f 93       	push	r24
     38a:	81 e6       	ldi	r24, 0x61	; 97
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	9f 93       	push	r25
     390:	8f 93       	push	r24
     392:	c8 e1       	ldi	r28, 0x18	; 24
     394:	d1 e0       	ldi	r29, 0x01	; 1
     396:	df 93       	push	r29
     398:	cf 93       	push	r28
     39a:	0e 94 92 08 	call	0x1124	; 0x1124 <sprintf>
		

        sendCommand(string_to_send); //send command to set the value of the moisture sensor
     39e:	ce 01       	movw	r24, r28
     3a0:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>
        /*itoa(tmp_sensor, conv_buffer, 10);
        strcpy(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[");
        strcat(string_to_send, conv_buffer);
        strcat(string_to_send, "]\n");*/

        sprintf(string_to_send, "ESP:sensorValue:\"Tmp_Sensor\"[%.1f]\n", tmp_sensor/2.0);
     3a4:	60 91 98 01 	lds	r22, 0x0198	; 0x800198 <tmp_sensor>
     3a8:	70 91 99 01 	lds	r23, 0x0199	; 0x800199 <tmp_sensor+0x1>
     3ac:	07 2e       	mov	r0, r23
     3ae:	00 0c       	add	r0, r0
     3b0:	88 0b       	sbc	r24, r24
     3b2:	99 0b       	sbc	r25, r25
     3b4:	0e 94 bb 02 	call	0x576	; 0x576 <__floatsisf>
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	5f e3       	ldi	r21, 0x3F	; 63
     3c0:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__mulsf3>
     3c4:	9f 93       	push	r25
     3c6:	8f 93       	push	r24
     3c8:	7f 93       	push	r23
     3ca:	6f 93       	push	r22
     3cc:	85 e8       	ldi	r24, 0x85	; 133
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	9f 93       	push	r25
     3d2:	8f 93       	push	r24
     3d4:	df 93       	push	r29
     3d6:	cf 93       	push	r28
     3d8:	0e 94 92 08 	call	0x1124	; 0x1124 <sprintf>
        sendCommand(string_to_send); //send command to set the value of the temperature sensor
     3dc:	ce 01       	movw	r24, r28
     3de:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>
     3e2:	8d b7       	in	r24, 0x3d	; 61
     3e4:	9e b7       	in	r25, 0x3e	; 62
     3e6:	0e 96       	adiw	r24, 0x0e	; 14
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	f8 94       	cli
     3ec:	9e bf       	out	0x3e, r25	; 62
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	8d bf       	out	0x3d, r24	; 61
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <__vector_8+0xaa>
    }
    else
        first=false;
     3f4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    ADMUX = 0x40; // Vref: Vcc(5V for easyAVR6) and analog input from PINA0 (moisture sensor)
     3f8:	80 e4       	ldi	r24, 0x40	; 64
     3fa:	87 b9       	out	0x07, r24	; 7
    ADCSRA = ADCSRA | 0x40; // ADC Enable, ADC Interrupt Enable and f = CLK/128
     3fc:	86 b1       	in	r24, 0x06	; 6
     3fe:	80 64       	ori	r24, 0x40	; 64
     400:	86 b9       	out	0x06, r24	; 6

    TCNT1 = 3036;
     402:	8c ed       	ldi	r24, 0xDC	; 220
     404:	9b e0       	ldi	r25, 0x0B	; 11
     406:	9d bd       	out	0x2d, r25	; 45
     408:	8c bd       	out	0x2c, r24	; 44
}
     40a:	ff 91       	pop	r31
     40c:	ef 91       	pop	r30
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	bf 91       	pop	r27
     414:	af 91       	pop	r26
     416:	9f 91       	pop	r25
     418:	8f 91       	pop	r24
     41a:	7f 91       	pop	r23
     41c:	6f 91       	pop	r22
     41e:	5f 91       	pop	r21
     420:	4f 91       	pop	r20
     422:	3f 91       	pop	r19
     424:	2f 91       	pop	r18
     426:	0f 90       	pop	r0
     428:	0f be       	out	0x3f, r0	; 63
     42a:	0f 90       	pop	r0
     42c:	1f 90       	pop	r1
     42e:	18 95       	reti

00000430 <__vector_14>:

ISR(ADC_vect) {
     430:	1f 92       	push	r1
     432:	0f 92       	push	r0
     434:	0f b6       	in	r0, 0x3f	; 63
     436:	0f 92       	push	r0
     438:	11 24       	eor	r1, r1
     43a:	2f 93       	push	r18
     43c:	3f 93       	push	r19
     43e:	4f 93       	push	r20
     440:	5f 93       	push	r21
     442:	6f 93       	push	r22
     444:	7f 93       	push	r23
     446:	8f 93       	push	r24
     448:	9f 93       	push	r25
     44a:	af 93       	push	r26
     44c:	bf 93       	push	r27
     44e:	ef 93       	push	r30
     450:	ff 93       	push	r31
	PORTB=PORTB^0xFF;
     452:	88 b3       	in	r24, 0x18	; 24
     454:	80 95       	com	r24
     456:	88 bb       	out	0x18, r24	; 24
    moist_sensor = ADCW;
     458:	84 b1       	in	r24, 0x04	; 4
     45a:	95 b1       	in	r25, 0x05	; 5
     45c:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <moist_sensor+0x1>
     460:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <moist_sensor>
        tmp_sensor--;
        tmp_sensor = tmp_sensor&0x00FF;
        tmp_sensor = tmp_sensor^0x00FF;
        tmp_sensor = -tmp_sensor;
    }
    tmp_sensor = 20;
     464:	84 e1       	ldi	r24, 0x14	; 20
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <tmp_sensor+0x1>
     46c:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <tmp_sensor>
    //for debugging
	lcd_clear();
     470:	0e 94 07 01 	call	0x20e	; 0x20e <lcd_clear>
    sprintf(conv_buffer, "%.1f", tmp_sensor/2.0);
    for(int m=0; m<strlen(conv_buffer); ++m)
        print(conv_buffer[m]);
    //debugging end
	*/
}
     474:	ff 91       	pop	r31
     476:	ef 91       	pop	r30
     478:	bf 91       	pop	r27
     47a:	af 91       	pop	r26
     47c:	9f 91       	pop	r25
     47e:	8f 91       	pop	r24
     480:	7f 91       	pop	r23
     482:	6f 91       	pop	r22
     484:	5f 91       	pop	r21
     486:	4f 91       	pop	r20
     488:	3f 91       	pop	r19
     48a:	2f 91       	pop	r18
     48c:	0f 90       	pop	r0
     48e:	0f be       	out	0x3f, r0	; 63
     490:	0f 90       	pop	r0
     492:	1f 90       	pop	r1
     494:	18 95       	reti

00000496 <main>:


int main(){

    first = true;
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    moist_sensor=tmp_sensor=0;
     49c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <tmp_sensor+0x1>
     4a0:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <tmp_sensor>
     4a4:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <moist_sensor+0x1>
     4a8:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <moist_sensor>

    DDRA = 0x00; // Port A input
     4ac:	1a ba       	out	0x1a, r1	; 26
	DDRB= 0xFF;
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	87 bb       	out	0x17, r24	; 23
	
	DDRD=0xFF; //for debugging for lcd
     4b2:	81 bb       	out	0x11, r24	; 17
    //UCSRB = (1 << TXEN) | (1 << TXCIE) | (1 << RXEN) | (1 << RXCIE);
    //UCSRC = (1 << UCSZ1) | (1 << UCSZ0); //Char size(8 bits)
	
	

    TCCR1B = 0x05; //CK/1024
     4b4:	85 e0       	ldi	r24, 0x05	; 5
     4b6:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 3036; //8s between interrupts
     4b8:	8c ed       	ldi	r24, 0xDC	; 220
     4ba:	9b e0       	ldi	r25, 0x0B	; 11
     4bc:	9d bd       	out	0x2d, r25	; 45
     4be:	8c bd       	out	0x2c, r24	; 44
	TIMSK = 0x04; //enable overflow interrupt for TCNT1
     4c0:	84 e0       	ldi	r24, 0x04	; 4
     4c2:	89 bf       	out	0x39, r24	; 57

    ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADIE); //ADC enable, frequency = CLK/128 and enable interrupts
     4c4:	8f e8       	ldi	r24, 0x8F	; 143
     4c6:	86 b9       	out	0x06, r24	; 6

    lcd_init_sim();
     4c8:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_init_sim>
	
	usart_init(MYUBRR);
     4cc:	83 e3       	ldi	r24, 0x33	; 51
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 4d 01 	call	0x29a	; 0x29a <usart_init>
	usart_transmit('\n');
     4d4:	8a e0       	ldi	r24, 0x0A	; 10
     4d6:	0e 94 55 01 	call	0x2aa	; 0x2aa <usart_transmit>
    
    strcpy(string_to_send, "ESP:restart\n");
     4da:	8d e0       	ldi	r24, 0x0D	; 13
     4dc:	e9 ea       	ldi	r30, 0xA9	; 169
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	a8 e1       	ldi	r26, 0x18	; 24
     4e2:	b1 e0       	ldi	r27, 0x01	; 1
     4e4:	01 90       	ld	r0, Z+
     4e6:	0d 92       	st	X+, r0
     4e8:	8a 95       	dec	r24
     4ea:	e1 f7       	brne	.-8      	; 0x4e4 <main+0x4e>
    serialWrite(string_to_send);
     4ec:	88 e1       	ldi	r24, 0x18	; 24
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <serialWrite>
	
	usart_receive(); //wait until restart is complete
     4f4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
	while(UCSRA&(1<<RXC))
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <main+0x68>
		usart_receive();
     4fa:	0e 94 59 01 	call	0x2b2	; 0x2b2 <usart_receive>
    
    strcpy(string_to_send, "ESP:restart\n");
    serialWrite(string_to_send);
	
	usart_receive(); //wait until restart is complete
	while(UCSRA&(1<<RXC))
     4fe:	5f 99       	sbic	0x0b, 7	; 11
     500:	fc cf       	rjmp	.-8      	; 0x4fa <main+0x64>
		usart_receive();
	
	
    strcpy(string_to_send, "ESP:ssid:\"Sens_Board1\"\n");
     502:	88 e1       	ldi	r24, 0x18	; 24
     504:	e6 eb       	ldi	r30, 0xB6	; 182
     506:	f0 e0       	ldi	r31, 0x00	; 0
     508:	a8 e1       	ldi	r26, 0x18	; 24
     50a:	b1 e0       	ldi	r27, 0x01	; 1
     50c:	01 90       	ld	r0, Z+
     50e:	0d 92       	st	X+, r0
     510:	8a 95       	dec	r24
     512:	e1 f7       	brne	.-8      	; 0x50c <main+0x76>
    sendCommand(string_to_send);
     514:	88 e1       	ldi	r24, 0x18	; 24
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>

    strcpy(string_to_send, "ESP:addSensor: \"Moist_Sensor\"\n");
     51c:	8f e1       	ldi	r24, 0x1F	; 31
     51e:	ee ec       	ldi	r30, 0xCE	; 206
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	a8 e1       	ldi	r26, 0x18	; 24
     524:	b1 e0       	ldi	r27, 0x01	; 1
     526:	01 90       	ld	r0, Z+
     528:	0d 92       	st	X+, r0
     52a:	8a 95       	dec	r24
     52c:	e1 f7       	brne	.-8      	; 0x526 <main+0x90>
    sendCommand(string_to_send);
     52e:	88 e1       	ldi	r24, 0x18	; 24
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>
	

    strcpy(string_to_send, "ESP:addSensor: \"Tmp_Sensor\"\n");
     536:	8d e1       	ldi	r24, 0x1D	; 29
     538:	ed ee       	ldi	r30, 0xED	; 237
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	a8 e1       	ldi	r26, 0x18	; 24
     53e:	b1 e0       	ldi	r27, 0x01	; 1
     540:	01 90       	ld	r0, Z+
     542:	0d 92       	st	X+, r0
     544:	8a 95       	dec	r24
     546:	e1 f7       	brne	.-8      	; 0x540 <main+0xaa>
    sendCommand(string_to_send);
     548:	88 e1       	ldi	r24, 0x18	; 24
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>

    strcpy(string_to_send, "ESP:APStart\n");
     550:	8d e0       	ldi	r24, 0x0D	; 13
     552:	ea e0       	ldi	r30, 0x0A	; 10
     554:	f1 e0       	ldi	r31, 0x01	; 1
     556:	a8 e1       	ldi	r26, 0x18	; 24
     558:	b1 e0       	ldi	r27, 0x01	; 1
     55a:	01 90       	ld	r0, Z+
     55c:	0d 92       	st	X+, r0
     55e:	8a 95       	dec	r24
     560:	e1 f7       	brne	.-8      	; 0x55a <main+0xc4>
    sendCommand(string_to_send);
     562:	88 e1       	ldi	r24, 0x18	; 24
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <sendCommand>

    sei();
     56a:	78 94       	sei
	PORTB=0xFF;
     56c:	8f ef       	ldi	r24, 0xFF	; 255
     56e:	88 bb       	out	0x18, r24	; 24
     570:	ff cf       	rjmp	.-2      	; 0x570 <main+0xda>

00000572 <__floatunsisf>:
     572:	e8 94       	clt
     574:	09 c0       	rjmp	.+18     	; 0x588 <__floatsisf+0x12>

00000576 <__floatsisf>:
     576:	97 fb       	bst	r25, 7
     578:	3e f4       	brtc	.+14     	; 0x588 <__floatsisf+0x12>
     57a:	90 95       	com	r25
     57c:	80 95       	com	r24
     57e:	70 95       	com	r23
     580:	61 95       	neg	r22
     582:	7f 4f       	sbci	r23, 0xFF	; 255
     584:	8f 4f       	sbci	r24, 0xFF	; 255
     586:	9f 4f       	sbci	r25, 0xFF	; 255
     588:	99 23       	and	r25, r25
     58a:	a9 f0       	breq	.+42     	; 0x5b6 <__floatsisf+0x40>
     58c:	f9 2f       	mov	r31, r25
     58e:	96 e9       	ldi	r25, 0x96	; 150
     590:	bb 27       	eor	r27, r27
     592:	93 95       	inc	r25
     594:	f6 95       	lsr	r31
     596:	87 95       	ror	r24
     598:	77 95       	ror	r23
     59a:	67 95       	ror	r22
     59c:	b7 95       	ror	r27
     59e:	f1 11       	cpse	r31, r1
     5a0:	f8 cf       	rjmp	.-16     	; 0x592 <__floatsisf+0x1c>
     5a2:	fa f4       	brpl	.+62     	; 0x5e2 <__floatsisf+0x6c>
     5a4:	bb 0f       	add	r27, r27
     5a6:	11 f4       	brne	.+4      	; 0x5ac <__floatsisf+0x36>
     5a8:	60 ff       	sbrs	r22, 0
     5aa:	1b c0       	rjmp	.+54     	; 0x5e2 <__floatsisf+0x6c>
     5ac:	6f 5f       	subi	r22, 0xFF	; 255
     5ae:	7f 4f       	sbci	r23, 0xFF	; 255
     5b0:	8f 4f       	sbci	r24, 0xFF	; 255
     5b2:	9f 4f       	sbci	r25, 0xFF	; 255
     5b4:	16 c0       	rjmp	.+44     	; 0x5e2 <__floatsisf+0x6c>
     5b6:	88 23       	and	r24, r24
     5b8:	11 f0       	breq	.+4      	; 0x5be <__floatsisf+0x48>
     5ba:	96 e9       	ldi	r25, 0x96	; 150
     5bc:	11 c0       	rjmp	.+34     	; 0x5e0 <__floatsisf+0x6a>
     5be:	77 23       	and	r23, r23
     5c0:	21 f0       	breq	.+8      	; 0x5ca <__floatsisf+0x54>
     5c2:	9e e8       	ldi	r25, 0x8E	; 142
     5c4:	87 2f       	mov	r24, r23
     5c6:	76 2f       	mov	r23, r22
     5c8:	05 c0       	rjmp	.+10     	; 0x5d4 <__floatsisf+0x5e>
     5ca:	66 23       	and	r22, r22
     5cc:	71 f0       	breq	.+28     	; 0x5ea <__floatsisf+0x74>
     5ce:	96 e8       	ldi	r25, 0x86	; 134
     5d0:	86 2f       	mov	r24, r22
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	2a f0       	brmi	.+10     	; 0x5e2 <__floatsisf+0x6c>
     5d8:	9a 95       	dec	r25
     5da:	66 0f       	add	r22, r22
     5dc:	77 1f       	adc	r23, r23
     5de:	88 1f       	adc	r24, r24
     5e0:	da f7       	brpl	.-10     	; 0x5d8 <__floatsisf+0x62>
     5e2:	88 0f       	add	r24, r24
     5e4:	96 95       	lsr	r25
     5e6:	87 95       	ror	r24
     5e8:	97 f9       	bld	r25, 7
     5ea:	08 95       	ret

000005ec <__mulsf3>:
     5ec:	0e 94 09 03 	call	0x612	; 0x612 <__mulsf3x>
     5f0:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__fp_round>
     5f4:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_pscA>
     5f8:	38 f0       	brcs	.+14     	; 0x608 <__mulsf3+0x1c>
     5fa:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fp_pscB>
     5fe:	20 f0       	brcs	.+8      	; 0x608 <__mulsf3+0x1c>
     600:	95 23       	and	r25, r21
     602:	11 f0       	breq	.+4      	; 0x608 <__mulsf3+0x1c>
     604:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <__fp_inf>
     608:	0c 94 69 03 	jmp	0x6d2	; 0x6d2 <__fp_nan>
     60c:	11 24       	eor	r1, r1
     60e:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_szero>

00000612 <__mulsf3x>:
     612:	0e 94 8b 03 	call	0x716	; 0x716 <__fp_split3>
     616:	70 f3       	brcs	.-36     	; 0x5f4 <__mulsf3+0x8>

00000618 <__mulsf3_pse>:
     618:	95 9f       	mul	r25, r21
     61a:	c1 f3       	breq	.-16     	; 0x60c <__mulsf3+0x20>
     61c:	95 0f       	add	r25, r21
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	55 1f       	adc	r21, r21
     622:	62 9f       	mul	r22, r18
     624:	f0 01       	movw	r30, r0
     626:	72 9f       	mul	r23, r18
     628:	bb 27       	eor	r27, r27
     62a:	f0 0d       	add	r31, r0
     62c:	b1 1d       	adc	r27, r1
     62e:	63 9f       	mul	r22, r19
     630:	aa 27       	eor	r26, r26
     632:	f0 0d       	add	r31, r0
     634:	b1 1d       	adc	r27, r1
     636:	aa 1f       	adc	r26, r26
     638:	64 9f       	mul	r22, r20
     63a:	66 27       	eor	r22, r22
     63c:	b0 0d       	add	r27, r0
     63e:	a1 1d       	adc	r26, r1
     640:	66 1f       	adc	r22, r22
     642:	82 9f       	mul	r24, r18
     644:	22 27       	eor	r18, r18
     646:	b0 0d       	add	r27, r0
     648:	a1 1d       	adc	r26, r1
     64a:	62 1f       	adc	r22, r18
     64c:	73 9f       	mul	r23, r19
     64e:	b0 0d       	add	r27, r0
     650:	a1 1d       	adc	r26, r1
     652:	62 1f       	adc	r22, r18
     654:	83 9f       	mul	r24, r19
     656:	a0 0d       	add	r26, r0
     658:	61 1d       	adc	r22, r1
     65a:	22 1f       	adc	r18, r18
     65c:	74 9f       	mul	r23, r20
     65e:	33 27       	eor	r19, r19
     660:	a0 0d       	add	r26, r0
     662:	61 1d       	adc	r22, r1
     664:	23 1f       	adc	r18, r19
     666:	84 9f       	mul	r24, r20
     668:	60 0d       	add	r22, r0
     66a:	21 1d       	adc	r18, r1
     66c:	82 2f       	mov	r24, r18
     66e:	76 2f       	mov	r23, r22
     670:	6a 2f       	mov	r22, r26
     672:	11 24       	eor	r1, r1
     674:	9f 57       	subi	r25, 0x7F	; 127
     676:	50 40       	sbci	r21, 0x00	; 0
     678:	9a f0       	brmi	.+38     	; 0x6a0 <__mulsf3_pse+0x88>
     67a:	f1 f0       	breq	.+60     	; 0x6b8 <__mulsf3_pse+0xa0>
     67c:	88 23       	and	r24, r24
     67e:	4a f0       	brmi	.+18     	; 0x692 <__mulsf3_pse+0x7a>
     680:	ee 0f       	add	r30, r30
     682:	ff 1f       	adc	r31, r31
     684:	bb 1f       	adc	r27, r27
     686:	66 1f       	adc	r22, r22
     688:	77 1f       	adc	r23, r23
     68a:	88 1f       	adc	r24, r24
     68c:	91 50       	subi	r25, 0x01	; 1
     68e:	50 40       	sbci	r21, 0x00	; 0
     690:	a9 f7       	brne	.-22     	; 0x67c <__mulsf3_pse+0x64>
     692:	9e 3f       	cpi	r25, 0xFE	; 254
     694:	51 05       	cpc	r21, r1
     696:	80 f0       	brcs	.+32     	; 0x6b8 <__mulsf3_pse+0xa0>
     698:	0c 94 63 03 	jmp	0x6c6	; 0x6c6 <__fp_inf>
     69c:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_szero>
     6a0:	5f 3f       	cpi	r21, 0xFF	; 255
     6a2:	e4 f3       	brlt	.-8      	; 0x69c <__mulsf3_pse+0x84>
     6a4:	98 3e       	cpi	r25, 0xE8	; 232
     6a6:	d4 f3       	brlt	.-12     	; 0x69c <__mulsf3_pse+0x84>
     6a8:	86 95       	lsr	r24
     6aa:	77 95       	ror	r23
     6ac:	67 95       	ror	r22
     6ae:	b7 95       	ror	r27
     6b0:	f7 95       	ror	r31
     6b2:	e7 95       	ror	r30
     6b4:	9f 5f       	subi	r25, 0xFF	; 255
     6b6:	c1 f7       	brne	.-16     	; 0x6a8 <__mulsf3_pse+0x90>
     6b8:	fe 2b       	or	r31, r30
     6ba:	88 0f       	add	r24, r24
     6bc:	91 1d       	adc	r25, r1
     6be:	96 95       	lsr	r25
     6c0:	87 95       	ror	r24
     6c2:	97 f9       	bld	r25, 7
     6c4:	08 95       	ret

000006c6 <__fp_inf>:
     6c6:	97 f9       	bld	r25, 7
     6c8:	9f 67       	ori	r25, 0x7F	; 127
     6ca:	80 e8       	ldi	r24, 0x80	; 128
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	60 e0       	ldi	r22, 0x00	; 0
     6d0:	08 95       	ret

000006d2 <__fp_nan>:
     6d2:	9f ef       	ldi	r25, 0xFF	; 255
     6d4:	80 ec       	ldi	r24, 0xC0	; 192
     6d6:	08 95       	ret

000006d8 <__fp_pscA>:
     6d8:	00 24       	eor	r0, r0
     6da:	0a 94       	dec	r0
     6dc:	16 16       	cp	r1, r22
     6de:	17 06       	cpc	r1, r23
     6e0:	18 06       	cpc	r1, r24
     6e2:	09 06       	cpc	r0, r25
     6e4:	08 95       	ret

000006e6 <__fp_pscB>:
     6e6:	00 24       	eor	r0, r0
     6e8:	0a 94       	dec	r0
     6ea:	12 16       	cp	r1, r18
     6ec:	13 06       	cpc	r1, r19
     6ee:	14 06       	cpc	r1, r20
     6f0:	05 06       	cpc	r0, r21
     6f2:	08 95       	ret

000006f4 <__fp_round>:
     6f4:	09 2e       	mov	r0, r25
     6f6:	03 94       	inc	r0
     6f8:	00 0c       	add	r0, r0
     6fa:	11 f4       	brne	.+4      	; 0x700 <__fp_round+0xc>
     6fc:	88 23       	and	r24, r24
     6fe:	52 f0       	brmi	.+20     	; 0x714 <__fp_round+0x20>
     700:	bb 0f       	add	r27, r27
     702:	40 f4       	brcc	.+16     	; 0x714 <__fp_round+0x20>
     704:	bf 2b       	or	r27, r31
     706:	11 f4       	brne	.+4      	; 0x70c <__fp_round+0x18>
     708:	60 ff       	sbrs	r22, 0
     70a:	04 c0       	rjmp	.+8      	; 0x714 <__fp_round+0x20>
     70c:	6f 5f       	subi	r22, 0xFF	; 255
     70e:	7f 4f       	sbci	r23, 0xFF	; 255
     710:	8f 4f       	sbci	r24, 0xFF	; 255
     712:	9f 4f       	sbci	r25, 0xFF	; 255
     714:	08 95       	ret

00000716 <__fp_split3>:
     716:	57 fd       	sbrc	r21, 7
     718:	90 58       	subi	r25, 0x80	; 128
     71a:	44 0f       	add	r20, r20
     71c:	55 1f       	adc	r21, r21
     71e:	59 f0       	breq	.+22     	; 0x736 <__fp_splitA+0x10>
     720:	5f 3f       	cpi	r21, 0xFF	; 255
     722:	71 f0       	breq	.+28     	; 0x740 <__fp_splitA+0x1a>
     724:	47 95       	ror	r20

00000726 <__fp_splitA>:
     726:	88 0f       	add	r24, r24
     728:	97 fb       	bst	r25, 7
     72a:	99 1f       	adc	r25, r25
     72c:	61 f0       	breq	.+24     	; 0x746 <__fp_splitA+0x20>
     72e:	9f 3f       	cpi	r25, 0xFF	; 255
     730:	79 f0       	breq	.+30     	; 0x750 <__fp_splitA+0x2a>
     732:	87 95       	ror	r24
     734:	08 95       	ret
     736:	12 16       	cp	r1, r18
     738:	13 06       	cpc	r1, r19
     73a:	14 06       	cpc	r1, r20
     73c:	55 1f       	adc	r21, r21
     73e:	f2 cf       	rjmp	.-28     	; 0x724 <__fp_split3+0xe>
     740:	46 95       	lsr	r20
     742:	f1 df       	rcall	.-30     	; 0x726 <__fp_splitA>
     744:	08 c0       	rjmp	.+16     	; 0x756 <__fp_splitA+0x30>
     746:	16 16       	cp	r1, r22
     748:	17 06       	cpc	r1, r23
     74a:	18 06       	cpc	r1, r24
     74c:	99 1f       	adc	r25, r25
     74e:	f1 cf       	rjmp	.-30     	; 0x732 <__fp_splitA+0xc>
     750:	86 95       	lsr	r24
     752:	71 05       	cpc	r23, r1
     754:	61 05       	cpc	r22, r1
     756:	08 94       	sec
     758:	08 95       	ret

0000075a <__fp_zero>:
     75a:	e8 94       	clt

0000075c <__fp_szero>:
     75c:	bb 27       	eor	r27, r27
     75e:	66 27       	eor	r22, r22
     760:	77 27       	eor	r23, r23
     762:	cb 01       	movw	r24, r22
     764:	97 f9       	bld	r25, 7
     766:	08 95       	ret

00000768 <vfprintf>:
     768:	a0 e1       	ldi	r26, 0x10	; 16
     76a:	b0 e0       	ldi	r27, 0x00	; 0
     76c:	ea eb       	ldi	r30, 0xBA	; 186
     76e:	f3 e0       	ldi	r31, 0x03	; 3
     770:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__prologue_saves__>
     774:	7c 01       	movw	r14, r24
     776:	1b 01       	movw	r2, r22
     778:	6a 01       	movw	r12, r20
     77a:	fc 01       	movw	r30, r24
     77c:	17 82       	std	Z+7, r1	; 0x07
     77e:	16 82       	std	Z+6, r1	; 0x06
     780:	83 81       	ldd	r24, Z+3	; 0x03
     782:	81 ff       	sbrs	r24, 1
     784:	44 c3       	rjmp	.+1672   	; 0xe0e <vfprintf+0x6a6>
     786:	9e 01       	movw	r18, r28
     788:	2f 5f       	subi	r18, 0xFF	; 255
     78a:	3f 4f       	sbci	r19, 0xFF	; 255
     78c:	39 01       	movw	r6, r18
     78e:	f7 01       	movw	r30, r14
     790:	93 81       	ldd	r25, Z+3	; 0x03
     792:	f1 01       	movw	r30, r2
     794:	93 fd       	sbrc	r25, 3
     796:	85 91       	lpm	r24, Z+
     798:	93 ff       	sbrs	r25, 3
     79a:	81 91       	ld	r24, Z+
     79c:	1f 01       	movw	r2, r30
     79e:	88 23       	and	r24, r24
     7a0:	09 f4       	brne	.+2      	; 0x7a4 <vfprintf+0x3c>
     7a2:	31 c3       	rjmp	.+1634   	; 0xe06 <vfprintf+0x69e>
     7a4:	85 32       	cpi	r24, 0x25	; 37
     7a6:	39 f4       	brne	.+14     	; 0x7b6 <vfprintf+0x4e>
     7a8:	93 fd       	sbrc	r25, 3
     7aa:	85 91       	lpm	r24, Z+
     7ac:	93 ff       	sbrs	r25, 3
     7ae:	81 91       	ld	r24, Z+
     7b0:	1f 01       	movw	r2, r30
     7b2:	85 32       	cpi	r24, 0x25	; 37
     7b4:	39 f4       	brne	.+14     	; 0x7c4 <vfprintf+0x5c>
     7b6:	b7 01       	movw	r22, r14
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     7be:	56 01       	movw	r10, r12
     7c0:	65 01       	movw	r12, r10
     7c2:	e5 cf       	rjmp	.-54     	; 0x78e <vfprintf+0x26>
     7c4:	10 e0       	ldi	r17, 0x00	; 0
     7c6:	51 2c       	mov	r5, r1
     7c8:	91 2c       	mov	r9, r1
     7ca:	ff e1       	ldi	r31, 0x1F	; 31
     7cc:	f9 15       	cp	r31, r9
     7ce:	d8 f0       	brcs	.+54     	; 0x806 <vfprintf+0x9e>
     7d0:	8b 32       	cpi	r24, 0x2B	; 43
     7d2:	79 f0       	breq	.+30     	; 0x7f2 <vfprintf+0x8a>
     7d4:	38 f4       	brcc	.+14     	; 0x7e4 <vfprintf+0x7c>
     7d6:	80 32       	cpi	r24, 0x20	; 32
     7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x90>
     7da:	83 32       	cpi	r24, 0x23	; 35
     7dc:	a1 f4       	brne	.+40     	; 0x806 <vfprintf+0x9e>
     7de:	f9 2d       	mov	r31, r9
     7e0:	f0 61       	ori	r31, 0x10	; 16
     7e2:	2e c0       	rjmp	.+92     	; 0x840 <vfprintf+0xd8>
     7e4:	8d 32       	cpi	r24, 0x2D	; 45
     7e6:	61 f0       	breq	.+24     	; 0x800 <vfprintf+0x98>
     7e8:	80 33       	cpi	r24, 0x30	; 48
     7ea:	69 f4       	brne	.+26     	; 0x806 <vfprintf+0x9e>
     7ec:	29 2d       	mov	r18, r9
     7ee:	21 60       	ori	r18, 0x01	; 1
     7f0:	2d c0       	rjmp	.+90     	; 0x84c <vfprintf+0xe4>
     7f2:	39 2d       	mov	r19, r9
     7f4:	32 60       	ori	r19, 0x02	; 2
     7f6:	93 2e       	mov	r9, r19
     7f8:	89 2d       	mov	r24, r9
     7fa:	84 60       	ori	r24, 0x04	; 4
     7fc:	98 2e       	mov	r9, r24
     7fe:	2a c0       	rjmp	.+84     	; 0x854 <vfprintf+0xec>
     800:	e9 2d       	mov	r30, r9
     802:	e8 60       	ori	r30, 0x08	; 8
     804:	15 c0       	rjmp	.+42     	; 0x830 <vfprintf+0xc8>
     806:	97 fc       	sbrc	r9, 7
     808:	2d c0       	rjmp	.+90     	; 0x864 <vfprintf+0xfc>
     80a:	20 ed       	ldi	r18, 0xD0	; 208
     80c:	28 0f       	add	r18, r24
     80e:	2a 30       	cpi	r18, 0x0A	; 10
     810:	88 f4       	brcc	.+34     	; 0x834 <vfprintf+0xcc>
     812:	96 fe       	sbrs	r9, 6
     814:	06 c0       	rjmp	.+12     	; 0x822 <vfprintf+0xba>
     816:	3a e0       	ldi	r19, 0x0A	; 10
     818:	13 9f       	mul	r17, r19
     81a:	20 0d       	add	r18, r0
     81c:	11 24       	eor	r1, r1
     81e:	12 2f       	mov	r17, r18
     820:	19 c0       	rjmp	.+50     	; 0x854 <vfprintf+0xec>
     822:	8a e0       	ldi	r24, 0x0A	; 10
     824:	58 9e       	mul	r5, r24
     826:	20 0d       	add	r18, r0
     828:	11 24       	eor	r1, r1
     82a:	52 2e       	mov	r5, r18
     82c:	e9 2d       	mov	r30, r9
     82e:	e0 62       	ori	r30, 0x20	; 32
     830:	9e 2e       	mov	r9, r30
     832:	10 c0       	rjmp	.+32     	; 0x854 <vfprintf+0xec>
     834:	8e 32       	cpi	r24, 0x2E	; 46
     836:	31 f4       	brne	.+12     	; 0x844 <vfprintf+0xdc>
     838:	96 fc       	sbrc	r9, 6
     83a:	e5 c2       	rjmp	.+1482   	; 0xe06 <vfprintf+0x69e>
     83c:	f9 2d       	mov	r31, r9
     83e:	f0 64       	ori	r31, 0x40	; 64
     840:	9f 2e       	mov	r9, r31
     842:	08 c0       	rjmp	.+16     	; 0x854 <vfprintf+0xec>
     844:	8c 36       	cpi	r24, 0x6C	; 108
     846:	21 f4       	brne	.+8      	; 0x850 <vfprintf+0xe8>
     848:	29 2d       	mov	r18, r9
     84a:	20 68       	ori	r18, 0x80	; 128
     84c:	92 2e       	mov	r9, r18
     84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0xec>
     850:	88 36       	cpi	r24, 0x68	; 104
     852:	41 f4       	brne	.+16     	; 0x864 <vfprintf+0xfc>
     854:	f1 01       	movw	r30, r2
     856:	93 fd       	sbrc	r25, 3
     858:	85 91       	lpm	r24, Z+
     85a:	93 ff       	sbrs	r25, 3
     85c:	81 91       	ld	r24, Z+
     85e:	1f 01       	movw	r2, r30
     860:	81 11       	cpse	r24, r1
     862:	b3 cf       	rjmp	.-154    	; 0x7ca <vfprintf+0x62>
     864:	9b eb       	ldi	r25, 0xBB	; 187
     866:	98 0f       	add	r25, r24
     868:	93 30       	cpi	r25, 0x03	; 3
     86a:	20 f4       	brcc	.+8      	; 0x874 <vfprintf+0x10c>
     86c:	99 2d       	mov	r25, r9
     86e:	90 61       	ori	r25, 0x10	; 16
     870:	80 5e       	subi	r24, 0xE0	; 224
     872:	07 c0       	rjmp	.+14     	; 0x882 <vfprintf+0x11a>
     874:	9b e9       	ldi	r25, 0x9B	; 155
     876:	98 0f       	add	r25, r24
     878:	93 30       	cpi	r25, 0x03	; 3
     87a:	08 f0       	brcs	.+2      	; 0x87e <vfprintf+0x116>
     87c:	66 c1       	rjmp	.+716    	; 0xb4a <vfprintf+0x3e2>
     87e:	99 2d       	mov	r25, r9
     880:	9f 7e       	andi	r25, 0xEF	; 239
     882:	96 ff       	sbrs	r25, 6
     884:	16 e0       	ldi	r17, 0x06	; 6
     886:	9f 73       	andi	r25, 0x3F	; 63
     888:	99 2e       	mov	r9, r25
     88a:	85 36       	cpi	r24, 0x65	; 101
     88c:	19 f4       	brne	.+6      	; 0x894 <vfprintf+0x12c>
     88e:	90 64       	ori	r25, 0x40	; 64
     890:	99 2e       	mov	r9, r25
     892:	08 c0       	rjmp	.+16     	; 0x8a4 <vfprintf+0x13c>
     894:	86 36       	cpi	r24, 0x66	; 102
     896:	21 f4       	brne	.+8      	; 0x8a0 <vfprintf+0x138>
     898:	39 2f       	mov	r19, r25
     89a:	30 68       	ori	r19, 0x80	; 128
     89c:	93 2e       	mov	r9, r19
     89e:	02 c0       	rjmp	.+4      	; 0x8a4 <vfprintf+0x13c>
     8a0:	11 11       	cpse	r17, r1
     8a2:	11 50       	subi	r17, 0x01	; 1
     8a4:	97 fe       	sbrs	r9, 7
     8a6:	07 c0       	rjmp	.+14     	; 0x8b6 <vfprintf+0x14e>
     8a8:	1c 33       	cpi	r17, 0x3C	; 60
     8aa:	50 f4       	brcc	.+20     	; 0x8c0 <vfprintf+0x158>
     8ac:	44 24       	eor	r4, r4
     8ae:	43 94       	inc	r4
     8b0:	41 0e       	add	r4, r17
     8b2:	27 e0       	ldi	r18, 0x07	; 7
     8b4:	0b c0       	rjmp	.+22     	; 0x8cc <vfprintf+0x164>
     8b6:	18 30       	cpi	r17, 0x08	; 8
     8b8:	38 f0       	brcs	.+14     	; 0x8c8 <vfprintf+0x160>
     8ba:	27 e0       	ldi	r18, 0x07	; 7
     8bc:	17 e0       	ldi	r17, 0x07	; 7
     8be:	05 c0       	rjmp	.+10     	; 0x8ca <vfprintf+0x162>
     8c0:	27 e0       	ldi	r18, 0x07	; 7
     8c2:	9c e3       	ldi	r25, 0x3C	; 60
     8c4:	49 2e       	mov	r4, r25
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x164>
     8c8:	21 2f       	mov	r18, r17
     8ca:	41 2c       	mov	r4, r1
     8cc:	56 01       	movw	r10, r12
     8ce:	84 e0       	ldi	r24, 0x04	; 4
     8d0:	a8 0e       	add	r10, r24
     8d2:	b1 1c       	adc	r11, r1
     8d4:	f6 01       	movw	r30, r12
     8d6:	60 81       	ld	r22, Z
     8d8:	71 81       	ldd	r23, Z+1	; 0x01
     8da:	82 81       	ldd	r24, Z+2	; 0x02
     8dc:	93 81       	ldd	r25, Z+3	; 0x03
     8de:	04 2d       	mov	r16, r4
     8e0:	a3 01       	movw	r20, r6
     8e2:	0e 94 68 07 	call	0xed0	; 0xed0 <__ftoa_engine>
     8e6:	6c 01       	movw	r12, r24
     8e8:	f9 81       	ldd	r31, Y+1	; 0x01
     8ea:	fc 87       	std	Y+12, r31	; 0x0c
     8ec:	f0 ff       	sbrs	r31, 0
     8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <vfprintf+0x18c>
     8f0:	f3 ff       	sbrs	r31, 3
     8f2:	06 c0       	rjmp	.+12     	; 0x900 <vfprintf+0x198>
     8f4:	91 fc       	sbrc	r9, 1
     8f6:	06 c0       	rjmp	.+12     	; 0x904 <vfprintf+0x19c>
     8f8:	92 fe       	sbrs	r9, 2
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <vfprintf+0x1a0>
     8fc:	00 e2       	ldi	r16, 0x20	; 32
     8fe:	05 c0       	rjmp	.+10     	; 0x90a <vfprintf+0x1a2>
     900:	0d e2       	ldi	r16, 0x2D	; 45
     902:	03 c0       	rjmp	.+6      	; 0x90a <vfprintf+0x1a2>
     904:	0b e2       	ldi	r16, 0x2B	; 43
     906:	01 c0       	rjmp	.+2      	; 0x90a <vfprintf+0x1a2>
     908:	00 e0       	ldi	r16, 0x00	; 0
     90a:	8c 85       	ldd	r24, Y+12	; 0x0c
     90c:	8c 70       	andi	r24, 0x0C	; 12
     90e:	19 f0       	breq	.+6      	; 0x916 <vfprintf+0x1ae>
     910:	01 11       	cpse	r16, r1
     912:	5a c2       	rjmp	.+1204   	; 0xdc8 <vfprintf+0x660>
     914:	9b c2       	rjmp	.+1334   	; 0xe4c <vfprintf+0x6e4>
     916:	97 fe       	sbrs	r9, 7
     918:	10 c0       	rjmp	.+32     	; 0x93a <vfprintf+0x1d2>
     91a:	4c 0c       	add	r4, r12
     91c:	fc 85       	ldd	r31, Y+12	; 0x0c
     91e:	f4 ff       	sbrs	r31, 4
     920:	04 c0       	rjmp	.+8      	; 0x92a <vfprintf+0x1c2>
     922:	8a 81       	ldd	r24, Y+2	; 0x02
     924:	81 33       	cpi	r24, 0x31	; 49
     926:	09 f4       	brne	.+2      	; 0x92a <vfprintf+0x1c2>
     928:	4a 94       	dec	r4
     92a:	14 14       	cp	r1, r4
     92c:	74 f5       	brge	.+92     	; 0x98a <vfprintf+0x222>
     92e:	28 e0       	ldi	r18, 0x08	; 8
     930:	24 15       	cp	r18, r4
     932:	78 f5       	brcc	.+94     	; 0x992 <vfprintf+0x22a>
     934:	88 e0       	ldi	r24, 0x08	; 8
     936:	48 2e       	mov	r4, r24
     938:	2c c0       	rjmp	.+88     	; 0x992 <vfprintf+0x22a>
     93a:	96 fc       	sbrc	r9, 6
     93c:	2a c0       	rjmp	.+84     	; 0x992 <vfprintf+0x22a>
     93e:	81 2f       	mov	r24, r17
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	8c 15       	cp	r24, r12
     944:	9d 05       	cpc	r25, r13
     946:	9c f0       	brlt	.+38     	; 0x96e <vfprintf+0x206>
     948:	3c ef       	ldi	r19, 0xFC	; 252
     94a:	c3 16       	cp	r12, r19
     94c:	3f ef       	ldi	r19, 0xFF	; 255
     94e:	d3 06       	cpc	r13, r19
     950:	74 f0       	brlt	.+28     	; 0x96e <vfprintf+0x206>
     952:	89 2d       	mov	r24, r9
     954:	80 68       	ori	r24, 0x80	; 128
     956:	98 2e       	mov	r9, r24
     958:	0a c0       	rjmp	.+20     	; 0x96e <vfprintf+0x206>
     95a:	e2 e0       	ldi	r30, 0x02	; 2
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	ec 0f       	add	r30, r28
     960:	fd 1f       	adc	r31, r29
     962:	e1 0f       	add	r30, r17
     964:	f1 1d       	adc	r31, r1
     966:	80 81       	ld	r24, Z
     968:	80 33       	cpi	r24, 0x30	; 48
     96a:	19 f4       	brne	.+6      	; 0x972 <vfprintf+0x20a>
     96c:	11 50       	subi	r17, 0x01	; 1
     96e:	11 11       	cpse	r17, r1
     970:	f4 cf       	rjmp	.-24     	; 0x95a <vfprintf+0x1f2>
     972:	97 fe       	sbrs	r9, 7
     974:	0e c0       	rjmp	.+28     	; 0x992 <vfprintf+0x22a>
     976:	44 24       	eor	r4, r4
     978:	43 94       	inc	r4
     97a:	41 0e       	add	r4, r17
     97c:	81 2f       	mov	r24, r17
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	c8 16       	cp	r12, r24
     982:	d9 06       	cpc	r13, r25
     984:	2c f4       	brge	.+10     	; 0x990 <vfprintf+0x228>
     986:	1c 19       	sub	r17, r12
     988:	04 c0       	rjmp	.+8      	; 0x992 <vfprintf+0x22a>
     98a:	44 24       	eor	r4, r4
     98c:	43 94       	inc	r4
     98e:	01 c0       	rjmp	.+2      	; 0x992 <vfprintf+0x22a>
     990:	10 e0       	ldi	r17, 0x00	; 0
     992:	97 fe       	sbrs	r9, 7
     994:	06 c0       	rjmp	.+12     	; 0x9a2 <vfprintf+0x23a>
     996:	1c 14       	cp	r1, r12
     998:	1d 04       	cpc	r1, r13
     99a:	34 f4       	brge	.+12     	; 0x9a8 <vfprintf+0x240>
     99c:	c6 01       	movw	r24, r12
     99e:	01 96       	adiw	r24, 0x01	; 1
     9a0:	05 c0       	rjmp	.+10     	; 0x9ac <vfprintf+0x244>
     9a2:	85 e0       	ldi	r24, 0x05	; 5
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <vfprintf+0x244>
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	01 11       	cpse	r16, r1
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	11 23       	and	r17, r17
     9b2:	31 f0       	breq	.+12     	; 0x9c0 <vfprintf+0x258>
     9b4:	21 2f       	mov	r18, r17
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	2f 5f       	subi	r18, 0xFF	; 255
     9ba:	3f 4f       	sbci	r19, 0xFF	; 255
     9bc:	82 0f       	add	r24, r18
     9be:	93 1f       	adc	r25, r19
     9c0:	25 2d       	mov	r18, r5
     9c2:	30 e0       	ldi	r19, 0x00	; 0
     9c4:	82 17       	cp	r24, r18
     9c6:	93 07       	cpc	r25, r19
     9c8:	14 f4       	brge	.+4      	; 0x9ce <vfprintf+0x266>
     9ca:	58 1a       	sub	r5, r24
     9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <vfprintf+0x268>
     9ce:	51 2c       	mov	r5, r1
     9d0:	89 2d       	mov	r24, r9
     9d2:	89 70       	andi	r24, 0x09	; 9
     9d4:	49 f4       	brne	.+18     	; 0x9e8 <vfprintf+0x280>
     9d6:	55 20       	and	r5, r5
     9d8:	39 f0       	breq	.+14     	; 0x9e8 <vfprintf+0x280>
     9da:	b7 01       	movw	r22, r14
     9dc:	80 e2       	ldi	r24, 0x20	; 32
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     9e4:	5a 94       	dec	r5
     9e6:	f7 cf       	rjmp	.-18     	; 0x9d6 <vfprintf+0x26e>
     9e8:	00 23       	and	r16, r16
     9ea:	29 f0       	breq	.+10     	; 0x9f6 <vfprintf+0x28e>
     9ec:	b7 01       	movw	r22, r14
     9ee:	80 2f       	mov	r24, r16
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     9f6:	93 fc       	sbrc	r9, 3
     9f8:	09 c0       	rjmp	.+18     	; 0xa0c <vfprintf+0x2a4>
     9fa:	55 20       	and	r5, r5
     9fc:	39 f0       	breq	.+14     	; 0xa0c <vfprintf+0x2a4>
     9fe:	b7 01       	movw	r22, r14
     a00:	80 e3       	ldi	r24, 0x30	; 48
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     a08:	5a 94       	dec	r5
     a0a:	f7 cf       	rjmp	.-18     	; 0x9fa <vfprintf+0x292>
     a0c:	97 fe       	sbrs	r9, 7
     a0e:	4c c0       	rjmp	.+152    	; 0xaa8 <vfprintf+0x340>
     a10:	46 01       	movw	r8, r12
     a12:	d7 fe       	sbrs	r13, 7
     a14:	02 c0       	rjmp	.+4      	; 0xa1a <vfprintf+0x2b2>
     a16:	81 2c       	mov	r8, r1
     a18:	91 2c       	mov	r9, r1
     a1a:	c6 01       	movw	r24, r12
     a1c:	88 19       	sub	r24, r8
     a1e:	99 09       	sbc	r25, r9
     a20:	f3 01       	movw	r30, r6
     a22:	e8 0f       	add	r30, r24
     a24:	f9 1f       	adc	r31, r25
     a26:	fe 87       	std	Y+14, r31	; 0x0e
     a28:	ed 87       	std	Y+13, r30	; 0x0d
     a2a:	96 01       	movw	r18, r12
     a2c:	24 19       	sub	r18, r4
     a2e:	31 09       	sbc	r19, r1
     a30:	38 8b       	std	Y+16, r19	; 0x10
     a32:	2f 87       	std	Y+15, r18	; 0x0f
     a34:	01 2f       	mov	r16, r17
     a36:	10 e0       	ldi	r17, 0x00	; 0
     a38:	11 95       	neg	r17
     a3a:	01 95       	neg	r16
     a3c:	11 09       	sbc	r17, r1
     a3e:	3f ef       	ldi	r19, 0xFF	; 255
     a40:	83 16       	cp	r8, r19
     a42:	93 06       	cpc	r9, r19
     a44:	29 f4       	brne	.+10     	; 0xa50 <vfprintf+0x2e8>
     a46:	b7 01       	movw	r22, r14
     a48:	8e e2       	ldi	r24, 0x2E	; 46
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     a50:	c8 14       	cp	r12, r8
     a52:	d9 04       	cpc	r13, r9
     a54:	4c f0       	brlt	.+18     	; 0xa68 <vfprintf+0x300>
     a56:	8f 85       	ldd	r24, Y+15	; 0x0f
     a58:	98 89       	ldd	r25, Y+16	; 0x10
     a5a:	88 15       	cp	r24, r8
     a5c:	99 05       	cpc	r25, r9
     a5e:	24 f4       	brge	.+8      	; 0xa68 <vfprintf+0x300>
     a60:	ed 85       	ldd	r30, Y+13	; 0x0d
     a62:	fe 85       	ldd	r31, Y+14	; 0x0e
     a64:	81 81       	ldd	r24, Z+1	; 0x01
     a66:	01 c0       	rjmp	.+2      	; 0xa6a <vfprintf+0x302>
     a68:	80 e3       	ldi	r24, 0x30	; 48
     a6a:	f1 e0       	ldi	r31, 0x01	; 1
     a6c:	8f 1a       	sub	r8, r31
     a6e:	91 08       	sbc	r9, r1
     a70:	2d 85       	ldd	r18, Y+13	; 0x0d
     a72:	3e 85       	ldd	r19, Y+14	; 0x0e
     a74:	2f 5f       	subi	r18, 0xFF	; 255
     a76:	3f 4f       	sbci	r19, 0xFF	; 255
     a78:	3e 87       	std	Y+14, r19	; 0x0e
     a7a:	2d 87       	std	Y+13, r18	; 0x0d
     a7c:	80 16       	cp	r8, r16
     a7e:	91 06       	cpc	r9, r17
     a80:	2c f0       	brlt	.+10     	; 0xa8c <vfprintf+0x324>
     a82:	b7 01       	movw	r22, r14
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     a8a:	d9 cf       	rjmp	.-78     	; 0xa3e <vfprintf+0x2d6>
     a8c:	c8 14       	cp	r12, r8
     a8e:	d9 04       	cpc	r13, r9
     a90:	41 f4       	brne	.+16     	; 0xaa2 <vfprintf+0x33a>
     a92:	9a 81       	ldd	r25, Y+2	; 0x02
     a94:	96 33       	cpi	r25, 0x36	; 54
     a96:	20 f4       	brcc	.+8      	; 0xaa0 <vfprintf+0x338>
     a98:	95 33       	cpi	r25, 0x35	; 53
     a9a:	19 f4       	brne	.+6      	; 0xaa2 <vfprintf+0x33a>
     a9c:	3c 85       	ldd	r19, Y+12	; 0x0c
     a9e:	34 ff       	sbrs	r19, 4
     aa0:	81 e3       	ldi	r24, 0x31	; 49
     aa2:	b7 01       	movw	r22, r14
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	4e c0       	rjmp	.+156    	; 0xb44 <vfprintf+0x3dc>
     aa8:	8a 81       	ldd	r24, Y+2	; 0x02
     aaa:	81 33       	cpi	r24, 0x31	; 49
     aac:	19 f0       	breq	.+6      	; 0xab4 <vfprintf+0x34c>
     aae:	9c 85       	ldd	r25, Y+12	; 0x0c
     ab0:	9f 7e       	andi	r25, 0xEF	; 239
     ab2:	9c 87       	std	Y+12, r25	; 0x0c
     ab4:	b7 01       	movw	r22, r14
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     abc:	11 11       	cpse	r17, r1
     abe:	05 c0       	rjmp	.+10     	; 0xaca <vfprintf+0x362>
     ac0:	94 fc       	sbrc	r9, 4
     ac2:	18 c0       	rjmp	.+48     	; 0xaf4 <vfprintf+0x38c>
     ac4:	85 e6       	ldi	r24, 0x65	; 101
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	17 c0       	rjmp	.+46     	; 0xaf8 <vfprintf+0x390>
     aca:	b7 01       	movw	r22, r14
     acc:	8e e2       	ldi	r24, 0x2E	; 46
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     ad4:	1e 5f       	subi	r17, 0xFE	; 254
     ad6:	82 e0       	ldi	r24, 0x02	; 2
     ad8:	01 e0       	ldi	r16, 0x01	; 1
     ada:	08 0f       	add	r16, r24
     adc:	f3 01       	movw	r30, r6
     ade:	e8 0f       	add	r30, r24
     ae0:	f1 1d       	adc	r31, r1
     ae2:	80 81       	ld	r24, Z
     ae4:	b7 01       	movw	r22, r14
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     aec:	80 2f       	mov	r24, r16
     aee:	01 13       	cpse	r16, r17
     af0:	f3 cf       	rjmp	.-26     	; 0xad8 <vfprintf+0x370>
     af2:	e6 cf       	rjmp	.-52     	; 0xac0 <vfprintf+0x358>
     af4:	85 e4       	ldi	r24, 0x45	; 69
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	b7 01       	movw	r22, r14
     afa:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     afe:	d7 fc       	sbrc	r13, 7
     b00:	06 c0       	rjmp	.+12     	; 0xb0e <vfprintf+0x3a6>
     b02:	c1 14       	cp	r12, r1
     b04:	d1 04       	cpc	r13, r1
     b06:	41 f4       	brne	.+16     	; 0xb18 <vfprintf+0x3b0>
     b08:	ec 85       	ldd	r30, Y+12	; 0x0c
     b0a:	e4 ff       	sbrs	r30, 4
     b0c:	05 c0       	rjmp	.+10     	; 0xb18 <vfprintf+0x3b0>
     b0e:	d1 94       	neg	r13
     b10:	c1 94       	neg	r12
     b12:	d1 08       	sbc	r13, r1
     b14:	8d e2       	ldi	r24, 0x2D	; 45
     b16:	01 c0       	rjmp	.+2      	; 0xb1a <vfprintf+0x3b2>
     b18:	8b e2       	ldi	r24, 0x2B	; 43
     b1a:	b7 01       	movw	r22, r14
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     b22:	80 e3       	ldi	r24, 0x30	; 48
     b24:	2a e0       	ldi	r18, 0x0A	; 10
     b26:	c2 16       	cp	r12, r18
     b28:	d1 04       	cpc	r13, r1
     b2a:	2c f0       	brlt	.+10     	; 0xb36 <vfprintf+0x3ce>
     b2c:	8f 5f       	subi	r24, 0xFF	; 255
     b2e:	fa e0       	ldi	r31, 0x0A	; 10
     b30:	cf 1a       	sub	r12, r31
     b32:	d1 08       	sbc	r13, r1
     b34:	f7 cf       	rjmp	.-18     	; 0xb24 <vfprintf+0x3bc>
     b36:	b7 01       	movw	r22, r14
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     b3e:	b7 01       	movw	r22, r14
     b40:	c6 01       	movw	r24, r12
     b42:	c0 96       	adiw	r24, 0x30	; 48
     b44:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     b48:	54 c1       	rjmp	.+680    	; 0xdf2 <vfprintf+0x68a>
     b4a:	83 36       	cpi	r24, 0x63	; 99
     b4c:	31 f0       	breq	.+12     	; 0xb5a <vfprintf+0x3f2>
     b4e:	83 37       	cpi	r24, 0x73	; 115
     b50:	79 f0       	breq	.+30     	; 0xb70 <vfprintf+0x408>
     b52:	83 35       	cpi	r24, 0x53	; 83
     b54:	09 f0       	breq	.+2      	; 0xb58 <vfprintf+0x3f0>
     b56:	56 c0       	rjmp	.+172    	; 0xc04 <vfprintf+0x49c>
     b58:	20 c0       	rjmp	.+64     	; 0xb9a <vfprintf+0x432>
     b5a:	56 01       	movw	r10, r12
     b5c:	32 e0       	ldi	r19, 0x02	; 2
     b5e:	a3 0e       	add	r10, r19
     b60:	b1 1c       	adc	r11, r1
     b62:	f6 01       	movw	r30, r12
     b64:	80 81       	ld	r24, Z
     b66:	89 83       	std	Y+1, r24	; 0x01
     b68:	01 e0       	ldi	r16, 0x01	; 1
     b6a:	10 e0       	ldi	r17, 0x00	; 0
     b6c:	63 01       	movw	r12, r6
     b6e:	12 c0       	rjmp	.+36     	; 0xb94 <vfprintf+0x42c>
     b70:	56 01       	movw	r10, r12
     b72:	f2 e0       	ldi	r31, 0x02	; 2
     b74:	af 0e       	add	r10, r31
     b76:	b1 1c       	adc	r11, r1
     b78:	f6 01       	movw	r30, r12
     b7a:	c0 80       	ld	r12, Z
     b7c:	d1 80       	ldd	r13, Z+1	; 0x01
     b7e:	96 fe       	sbrs	r9, 6
     b80:	03 c0       	rjmp	.+6      	; 0xb88 <vfprintf+0x420>
     b82:	61 2f       	mov	r22, r17
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	02 c0       	rjmp	.+4      	; 0xb8c <vfprintf+0x424>
     b88:	6f ef       	ldi	r22, 0xFF	; 255
     b8a:	7f ef       	ldi	r23, 0xFF	; 255
     b8c:	c6 01       	movw	r24, r12
     b8e:	0e 94 4b 08 	call	0x1096	; 0x1096 <strnlen>
     b92:	8c 01       	movw	r16, r24
     b94:	f9 2d       	mov	r31, r9
     b96:	ff 77       	andi	r31, 0x7F	; 127
     b98:	14 c0       	rjmp	.+40     	; 0xbc2 <vfprintf+0x45a>
     b9a:	56 01       	movw	r10, r12
     b9c:	22 e0       	ldi	r18, 0x02	; 2
     b9e:	a2 0e       	add	r10, r18
     ba0:	b1 1c       	adc	r11, r1
     ba2:	f6 01       	movw	r30, r12
     ba4:	c0 80       	ld	r12, Z
     ba6:	d1 80       	ldd	r13, Z+1	; 0x01
     ba8:	96 fe       	sbrs	r9, 6
     baa:	03 c0       	rjmp	.+6      	; 0xbb2 <vfprintf+0x44a>
     bac:	61 2f       	mov	r22, r17
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <vfprintf+0x44e>
     bb2:	6f ef       	ldi	r22, 0xFF	; 255
     bb4:	7f ef       	ldi	r23, 0xFF	; 255
     bb6:	c6 01       	movw	r24, r12
     bb8:	0e 94 40 08 	call	0x1080	; 0x1080 <strnlen_P>
     bbc:	8c 01       	movw	r16, r24
     bbe:	f9 2d       	mov	r31, r9
     bc0:	f0 68       	ori	r31, 0x80	; 128
     bc2:	9f 2e       	mov	r9, r31
     bc4:	f3 fd       	sbrc	r31, 3
     bc6:	1a c0       	rjmp	.+52     	; 0xbfc <vfprintf+0x494>
     bc8:	85 2d       	mov	r24, r5
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	08 17       	cp	r16, r24
     bce:	19 07       	cpc	r17, r25
     bd0:	a8 f4       	brcc	.+42     	; 0xbfc <vfprintf+0x494>
     bd2:	b7 01       	movw	r22, r14
     bd4:	80 e2       	ldi	r24, 0x20	; 32
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     bdc:	5a 94       	dec	r5
     bde:	f4 cf       	rjmp	.-24     	; 0xbc8 <vfprintf+0x460>
     be0:	f6 01       	movw	r30, r12
     be2:	97 fc       	sbrc	r9, 7
     be4:	85 91       	lpm	r24, Z+
     be6:	97 fe       	sbrs	r9, 7
     be8:	81 91       	ld	r24, Z+
     bea:	6f 01       	movw	r12, r30
     bec:	b7 01       	movw	r22, r14
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     bf4:	51 10       	cpse	r5, r1
     bf6:	5a 94       	dec	r5
     bf8:	01 50       	subi	r16, 0x01	; 1
     bfa:	11 09       	sbc	r17, r1
     bfc:	01 15       	cp	r16, r1
     bfe:	11 05       	cpc	r17, r1
     c00:	79 f7       	brne	.-34     	; 0xbe0 <vfprintf+0x478>
     c02:	f7 c0       	rjmp	.+494    	; 0xdf2 <vfprintf+0x68a>
     c04:	84 36       	cpi	r24, 0x64	; 100
     c06:	11 f0       	breq	.+4      	; 0xc0c <vfprintf+0x4a4>
     c08:	89 36       	cpi	r24, 0x69	; 105
     c0a:	61 f5       	brne	.+88     	; 0xc64 <vfprintf+0x4fc>
     c0c:	56 01       	movw	r10, r12
     c0e:	97 fe       	sbrs	r9, 7
     c10:	09 c0       	rjmp	.+18     	; 0xc24 <vfprintf+0x4bc>
     c12:	24 e0       	ldi	r18, 0x04	; 4
     c14:	a2 0e       	add	r10, r18
     c16:	b1 1c       	adc	r11, r1
     c18:	f6 01       	movw	r30, r12
     c1a:	60 81       	ld	r22, Z
     c1c:	71 81       	ldd	r23, Z+1	; 0x01
     c1e:	82 81       	ldd	r24, Z+2	; 0x02
     c20:	93 81       	ldd	r25, Z+3	; 0x03
     c22:	0a c0       	rjmp	.+20     	; 0xc38 <vfprintf+0x4d0>
     c24:	f2 e0       	ldi	r31, 0x02	; 2
     c26:	af 0e       	add	r10, r31
     c28:	b1 1c       	adc	r11, r1
     c2a:	f6 01       	movw	r30, r12
     c2c:	60 81       	ld	r22, Z
     c2e:	71 81       	ldd	r23, Z+1	; 0x01
     c30:	07 2e       	mov	r0, r23
     c32:	00 0c       	add	r0, r0
     c34:	88 0b       	sbc	r24, r24
     c36:	99 0b       	sbc	r25, r25
     c38:	f9 2d       	mov	r31, r9
     c3a:	ff 76       	andi	r31, 0x6F	; 111
     c3c:	9f 2e       	mov	r9, r31
     c3e:	97 ff       	sbrs	r25, 7
     c40:	09 c0       	rjmp	.+18     	; 0xc54 <vfprintf+0x4ec>
     c42:	90 95       	com	r25
     c44:	80 95       	com	r24
     c46:	70 95       	com	r23
     c48:	61 95       	neg	r22
     c4a:	7f 4f       	sbci	r23, 0xFF	; 255
     c4c:	8f 4f       	sbci	r24, 0xFF	; 255
     c4e:	9f 4f       	sbci	r25, 0xFF	; 255
     c50:	f0 68       	ori	r31, 0x80	; 128
     c52:	9f 2e       	mov	r9, r31
     c54:	2a e0       	ldi	r18, 0x0A	; 10
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	a3 01       	movw	r20, r6
     c5a:	0e 94 b4 08 	call	0x1168	; 0x1168 <__ultoa_invert>
     c5e:	c8 2e       	mov	r12, r24
     c60:	c6 18       	sub	r12, r6
     c62:	3f c0       	rjmp	.+126    	; 0xce2 <vfprintf+0x57a>
     c64:	09 2d       	mov	r16, r9
     c66:	85 37       	cpi	r24, 0x75	; 117
     c68:	21 f4       	brne	.+8      	; 0xc72 <vfprintf+0x50a>
     c6a:	0f 7e       	andi	r16, 0xEF	; 239
     c6c:	2a e0       	ldi	r18, 0x0A	; 10
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	1d c0       	rjmp	.+58     	; 0xcac <vfprintf+0x544>
     c72:	09 7f       	andi	r16, 0xF9	; 249
     c74:	8f 36       	cpi	r24, 0x6F	; 111
     c76:	91 f0       	breq	.+36     	; 0xc9c <vfprintf+0x534>
     c78:	18 f4       	brcc	.+6      	; 0xc80 <vfprintf+0x518>
     c7a:	88 35       	cpi	r24, 0x58	; 88
     c7c:	59 f0       	breq	.+22     	; 0xc94 <vfprintf+0x52c>
     c7e:	c3 c0       	rjmp	.+390    	; 0xe06 <vfprintf+0x69e>
     c80:	80 37       	cpi	r24, 0x70	; 112
     c82:	19 f0       	breq	.+6      	; 0xc8a <vfprintf+0x522>
     c84:	88 37       	cpi	r24, 0x78	; 120
     c86:	11 f0       	breq	.+4      	; 0xc8c <vfprintf+0x524>
     c88:	be c0       	rjmp	.+380    	; 0xe06 <vfprintf+0x69e>
     c8a:	00 61       	ori	r16, 0x10	; 16
     c8c:	04 ff       	sbrs	r16, 4
     c8e:	09 c0       	rjmp	.+18     	; 0xca2 <vfprintf+0x53a>
     c90:	04 60       	ori	r16, 0x04	; 4
     c92:	07 c0       	rjmp	.+14     	; 0xca2 <vfprintf+0x53a>
     c94:	94 fe       	sbrs	r9, 4
     c96:	08 c0       	rjmp	.+16     	; 0xca8 <vfprintf+0x540>
     c98:	06 60       	ori	r16, 0x06	; 6
     c9a:	06 c0       	rjmp	.+12     	; 0xca8 <vfprintf+0x540>
     c9c:	28 e0       	ldi	r18, 0x08	; 8
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	05 c0       	rjmp	.+10     	; 0xcac <vfprintf+0x544>
     ca2:	20 e1       	ldi	r18, 0x10	; 16
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <vfprintf+0x544>
     ca8:	20 e1       	ldi	r18, 0x10	; 16
     caa:	32 e0       	ldi	r19, 0x02	; 2
     cac:	56 01       	movw	r10, r12
     cae:	07 ff       	sbrs	r16, 7
     cb0:	09 c0       	rjmp	.+18     	; 0xcc4 <vfprintf+0x55c>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	a8 0e       	add	r10, r24
     cb6:	b1 1c       	adc	r11, r1
     cb8:	f6 01       	movw	r30, r12
     cba:	60 81       	ld	r22, Z
     cbc:	71 81       	ldd	r23, Z+1	; 0x01
     cbe:	82 81       	ldd	r24, Z+2	; 0x02
     cc0:	93 81       	ldd	r25, Z+3	; 0x03
     cc2:	08 c0       	rjmp	.+16     	; 0xcd4 <vfprintf+0x56c>
     cc4:	f2 e0       	ldi	r31, 0x02	; 2
     cc6:	af 0e       	add	r10, r31
     cc8:	b1 1c       	adc	r11, r1
     cca:	f6 01       	movw	r30, r12
     ccc:	60 81       	ld	r22, Z
     cce:	71 81       	ldd	r23, Z+1	; 0x01
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	a3 01       	movw	r20, r6
     cd6:	0e 94 b4 08 	call	0x1168	; 0x1168 <__ultoa_invert>
     cda:	c8 2e       	mov	r12, r24
     cdc:	c6 18       	sub	r12, r6
     cde:	0f 77       	andi	r16, 0x7F	; 127
     ce0:	90 2e       	mov	r9, r16
     ce2:	96 fe       	sbrs	r9, 6
     ce4:	0b c0       	rjmp	.+22     	; 0xcfc <vfprintf+0x594>
     ce6:	09 2d       	mov	r16, r9
     ce8:	0e 7f       	andi	r16, 0xFE	; 254
     cea:	c1 16       	cp	r12, r17
     cec:	50 f4       	brcc	.+20     	; 0xd02 <vfprintf+0x59a>
     cee:	94 fe       	sbrs	r9, 4
     cf0:	0a c0       	rjmp	.+20     	; 0xd06 <vfprintf+0x59e>
     cf2:	92 fc       	sbrc	r9, 2
     cf4:	08 c0       	rjmp	.+16     	; 0xd06 <vfprintf+0x59e>
     cf6:	09 2d       	mov	r16, r9
     cf8:	0e 7e       	andi	r16, 0xEE	; 238
     cfa:	05 c0       	rjmp	.+10     	; 0xd06 <vfprintf+0x59e>
     cfc:	dc 2c       	mov	r13, r12
     cfe:	09 2d       	mov	r16, r9
     d00:	03 c0       	rjmp	.+6      	; 0xd08 <vfprintf+0x5a0>
     d02:	dc 2c       	mov	r13, r12
     d04:	01 c0       	rjmp	.+2      	; 0xd08 <vfprintf+0x5a0>
     d06:	d1 2e       	mov	r13, r17
     d08:	04 ff       	sbrs	r16, 4
     d0a:	0d c0       	rjmp	.+26     	; 0xd26 <vfprintf+0x5be>
     d0c:	fe 01       	movw	r30, r28
     d0e:	ec 0d       	add	r30, r12
     d10:	f1 1d       	adc	r31, r1
     d12:	80 81       	ld	r24, Z
     d14:	80 33       	cpi	r24, 0x30	; 48
     d16:	11 f4       	brne	.+4      	; 0xd1c <vfprintf+0x5b4>
     d18:	09 7e       	andi	r16, 0xE9	; 233
     d1a:	09 c0       	rjmp	.+18     	; 0xd2e <vfprintf+0x5c6>
     d1c:	02 ff       	sbrs	r16, 2
     d1e:	06 c0       	rjmp	.+12     	; 0xd2c <vfprintf+0x5c4>
     d20:	d3 94       	inc	r13
     d22:	d3 94       	inc	r13
     d24:	04 c0       	rjmp	.+8      	; 0xd2e <vfprintf+0x5c6>
     d26:	80 2f       	mov	r24, r16
     d28:	86 78       	andi	r24, 0x86	; 134
     d2a:	09 f0       	breq	.+2      	; 0xd2e <vfprintf+0x5c6>
     d2c:	d3 94       	inc	r13
     d2e:	03 fd       	sbrc	r16, 3
     d30:	11 c0       	rjmp	.+34     	; 0xd54 <vfprintf+0x5ec>
     d32:	00 ff       	sbrs	r16, 0
     d34:	06 c0       	rjmp	.+12     	; 0xd42 <vfprintf+0x5da>
     d36:	1c 2d       	mov	r17, r12
     d38:	d5 14       	cp	r13, r5
     d3a:	80 f4       	brcc	.+32     	; 0xd5c <vfprintf+0x5f4>
     d3c:	15 0d       	add	r17, r5
     d3e:	1d 19       	sub	r17, r13
     d40:	0d c0       	rjmp	.+26     	; 0xd5c <vfprintf+0x5f4>
     d42:	d5 14       	cp	r13, r5
     d44:	58 f4       	brcc	.+22     	; 0xd5c <vfprintf+0x5f4>
     d46:	b7 01       	movw	r22, r14
     d48:	80 e2       	ldi	r24, 0x20	; 32
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     d50:	d3 94       	inc	r13
     d52:	f7 cf       	rjmp	.-18     	; 0xd42 <vfprintf+0x5da>
     d54:	d5 14       	cp	r13, r5
     d56:	10 f4       	brcc	.+4      	; 0xd5c <vfprintf+0x5f4>
     d58:	5d 18       	sub	r5, r13
     d5a:	01 c0       	rjmp	.+2      	; 0xd5e <vfprintf+0x5f6>
     d5c:	51 2c       	mov	r5, r1
     d5e:	04 ff       	sbrs	r16, 4
     d60:	10 c0       	rjmp	.+32     	; 0xd82 <vfprintf+0x61a>
     d62:	b7 01       	movw	r22, r14
     d64:	80 e3       	ldi	r24, 0x30	; 48
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     d6c:	02 ff       	sbrs	r16, 2
     d6e:	17 c0       	rjmp	.+46     	; 0xd9e <vfprintf+0x636>
     d70:	01 fd       	sbrc	r16, 1
     d72:	03 c0       	rjmp	.+6      	; 0xd7a <vfprintf+0x612>
     d74:	88 e7       	ldi	r24, 0x78	; 120
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <vfprintf+0x616>
     d7a:	88 e5       	ldi	r24, 0x58	; 88
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	b7 01       	movw	r22, r14
     d80:	0c c0       	rjmp	.+24     	; 0xd9a <vfprintf+0x632>
     d82:	80 2f       	mov	r24, r16
     d84:	86 78       	andi	r24, 0x86	; 134
     d86:	59 f0       	breq	.+22     	; 0xd9e <vfprintf+0x636>
     d88:	01 ff       	sbrs	r16, 1
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x628>
     d8c:	8b e2       	ldi	r24, 0x2B	; 43
     d8e:	01 c0       	rjmp	.+2      	; 0xd92 <vfprintf+0x62a>
     d90:	80 e2       	ldi	r24, 0x20	; 32
     d92:	07 fd       	sbrc	r16, 7
     d94:	8d e2       	ldi	r24, 0x2D	; 45
     d96:	b7 01       	movw	r22, r14
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     d9e:	c1 16       	cp	r12, r17
     da0:	38 f4       	brcc	.+14     	; 0xdb0 <vfprintf+0x648>
     da2:	b7 01       	movw	r22, r14
     da4:	80 e3       	ldi	r24, 0x30	; 48
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     dac:	11 50       	subi	r17, 0x01	; 1
     dae:	f7 cf       	rjmp	.-18     	; 0xd9e <vfprintf+0x636>
     db0:	ca 94       	dec	r12
     db2:	f3 01       	movw	r30, r6
     db4:	ec 0d       	add	r30, r12
     db6:	f1 1d       	adc	r31, r1
     db8:	80 81       	ld	r24, Z
     dba:	b7 01       	movw	r22, r14
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     dc2:	c1 10       	cpse	r12, r1
     dc4:	f5 cf       	rjmp	.-22     	; 0xdb0 <vfprintf+0x648>
     dc6:	15 c0       	rjmp	.+42     	; 0xdf2 <vfprintf+0x68a>
     dc8:	f4 e0       	ldi	r31, 0x04	; 4
     dca:	f5 15       	cp	r31, r5
     dcc:	60 f5       	brcc	.+88     	; 0xe26 <vfprintf+0x6be>
     dce:	84 e0       	ldi	r24, 0x04	; 4
     dd0:	58 1a       	sub	r5, r24
     dd2:	93 fe       	sbrs	r9, 3
     dd4:	1f c0       	rjmp	.+62     	; 0xe14 <vfprintf+0x6ac>
     dd6:	01 11       	cpse	r16, r1
     dd8:	27 c0       	rjmp	.+78     	; 0xe28 <vfprintf+0x6c0>
     dda:	2c 85       	ldd	r18, Y+12	; 0x0c
     ddc:	23 ff       	sbrs	r18, 3
     dde:	2a c0       	rjmp	.+84     	; 0xe34 <vfprintf+0x6cc>
     de0:	04 e5       	ldi	r16, 0x54	; 84
     de2:	10 e0       	ldi	r17, 0x00	; 0
     de4:	39 2d       	mov	r19, r9
     de6:	30 71       	andi	r19, 0x10	; 16
     de8:	93 2e       	mov	r9, r19
     dea:	f8 01       	movw	r30, r16
     dec:	84 91       	lpm	r24, Z
     dee:	81 11       	cpse	r24, r1
     df0:	24 c0       	rjmp	.+72     	; 0xe3a <vfprintf+0x6d2>
     df2:	55 20       	and	r5, r5
     df4:	09 f4       	brne	.+2      	; 0xdf8 <vfprintf+0x690>
     df6:	e4 cc       	rjmp	.-1592   	; 0x7c0 <vfprintf+0x58>
     df8:	b7 01       	movw	r22, r14
     dfa:	80 e2       	ldi	r24, 0x20	; 32
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e02:	5a 94       	dec	r5
     e04:	f6 cf       	rjmp	.-20     	; 0xdf2 <vfprintf+0x68a>
     e06:	f7 01       	movw	r30, r14
     e08:	86 81       	ldd	r24, Z+6	; 0x06
     e0a:	97 81       	ldd	r25, Z+7	; 0x07
     e0c:	26 c0       	rjmp	.+76     	; 0xe5a <vfprintf+0x6f2>
     e0e:	8f ef       	ldi	r24, 0xFF	; 255
     e10:	9f ef       	ldi	r25, 0xFF	; 255
     e12:	23 c0       	rjmp	.+70     	; 0xe5a <vfprintf+0x6f2>
     e14:	b7 01       	movw	r22, r14
     e16:	80 e2       	ldi	r24, 0x20	; 32
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e1e:	5a 94       	dec	r5
     e20:	51 10       	cpse	r5, r1
     e22:	f8 cf       	rjmp	.-16     	; 0xe14 <vfprintf+0x6ac>
     e24:	d8 cf       	rjmp	.-80     	; 0xdd6 <vfprintf+0x66e>
     e26:	51 2c       	mov	r5, r1
     e28:	b7 01       	movw	r22, r14
     e2a:	80 2f       	mov	r24, r16
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e32:	d3 cf       	rjmp	.-90     	; 0xdda <vfprintf+0x672>
     e34:	08 e5       	ldi	r16, 0x58	; 88
     e36:	10 e0       	ldi	r17, 0x00	; 0
     e38:	d5 cf       	rjmp	.-86     	; 0xde4 <vfprintf+0x67c>
     e3a:	91 10       	cpse	r9, r1
     e3c:	80 52       	subi	r24, 0x20	; 32
     e3e:	b7 01       	movw	r22, r14
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e46:	0f 5f       	subi	r16, 0xFF	; 255
     e48:	1f 4f       	sbci	r17, 0xFF	; 255
     e4a:	cf cf       	rjmp	.-98     	; 0xdea <vfprintf+0x682>
     e4c:	23 e0       	ldi	r18, 0x03	; 3
     e4e:	25 15       	cp	r18, r5
     e50:	10 f4       	brcc	.+4      	; 0xe56 <vfprintf+0x6ee>
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	bd cf       	rjmp	.-134    	; 0xdd0 <vfprintf+0x668>
     e56:	51 2c       	mov	r5, r1
     e58:	c0 cf       	rjmp	.-128    	; 0xdda <vfprintf+0x672>
     e5a:	60 96       	adiw	r28, 0x10	; 16
     e5c:	e2 e1       	ldi	r30, 0x12	; 18
     e5e:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <__epilogue_restores__>

00000e62 <__prologue_saves__>:
     e62:	2f 92       	push	r2
     e64:	3f 92       	push	r3
     e66:	4f 92       	push	r4
     e68:	5f 92       	push	r5
     e6a:	6f 92       	push	r6
     e6c:	7f 92       	push	r7
     e6e:	8f 92       	push	r8
     e70:	9f 92       	push	r9
     e72:	af 92       	push	r10
     e74:	bf 92       	push	r11
     e76:	cf 92       	push	r12
     e78:	df 92       	push	r13
     e7a:	ef 92       	push	r14
     e7c:	ff 92       	push	r15
     e7e:	0f 93       	push	r16
     e80:	1f 93       	push	r17
     e82:	cf 93       	push	r28
     e84:	df 93       	push	r29
     e86:	cd b7       	in	r28, 0x3d	; 61
     e88:	de b7       	in	r29, 0x3e	; 62
     e8a:	ca 1b       	sub	r28, r26
     e8c:	db 0b       	sbc	r29, r27
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli
     e92:	de bf       	out	0x3e, r29	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	cd bf       	out	0x3d, r28	; 61
     e98:	09 94       	ijmp

00000e9a <__epilogue_restores__>:
     e9a:	2a 88       	ldd	r2, Y+18	; 0x12
     e9c:	39 88       	ldd	r3, Y+17	; 0x11
     e9e:	48 88       	ldd	r4, Y+16	; 0x10
     ea0:	5f 84       	ldd	r5, Y+15	; 0x0f
     ea2:	6e 84       	ldd	r6, Y+14	; 0x0e
     ea4:	7d 84       	ldd	r7, Y+13	; 0x0d
     ea6:	8c 84       	ldd	r8, Y+12	; 0x0c
     ea8:	9b 84       	ldd	r9, Y+11	; 0x0b
     eaa:	aa 84       	ldd	r10, Y+10	; 0x0a
     eac:	b9 84       	ldd	r11, Y+9	; 0x09
     eae:	c8 84       	ldd	r12, Y+8	; 0x08
     eb0:	df 80       	ldd	r13, Y+7	; 0x07
     eb2:	ee 80       	ldd	r14, Y+6	; 0x06
     eb4:	fd 80       	ldd	r15, Y+5	; 0x05
     eb6:	0c 81       	ldd	r16, Y+4	; 0x04
     eb8:	1b 81       	ldd	r17, Y+3	; 0x03
     eba:	aa 81       	ldd	r26, Y+2	; 0x02
     ebc:	b9 81       	ldd	r27, Y+1	; 0x01
     ebe:	ce 0f       	add	r28, r30
     ec0:	d1 1d       	adc	r29, r1
     ec2:	0f b6       	in	r0, 0x3f	; 63
     ec4:	f8 94       	cli
     ec6:	de bf       	out	0x3e, r29	; 62
     ec8:	0f be       	out	0x3f, r0	; 63
     eca:	cd bf       	out	0x3d, r28	; 61
     ecc:	ed 01       	movw	r28, r26
     ece:	08 95       	ret

00000ed0 <__ftoa_engine>:
     ed0:	28 30       	cpi	r18, 0x08	; 8
     ed2:	08 f0       	brcs	.+2      	; 0xed6 <__ftoa_engine+0x6>
     ed4:	27 e0       	ldi	r18, 0x07	; 7
     ed6:	33 27       	eor	r19, r19
     ed8:	da 01       	movw	r26, r20
     eda:	99 0f       	add	r25, r25
     edc:	31 1d       	adc	r19, r1
     ede:	87 fd       	sbrc	r24, 7
     ee0:	91 60       	ori	r25, 0x01	; 1
     ee2:	00 96       	adiw	r24, 0x00	; 0
     ee4:	61 05       	cpc	r22, r1
     ee6:	71 05       	cpc	r23, r1
     ee8:	39 f4       	brne	.+14     	; 0xef8 <__ftoa_engine+0x28>
     eea:	32 60       	ori	r19, 0x02	; 2
     eec:	2e 5f       	subi	r18, 0xFE	; 254
     eee:	3d 93       	st	X+, r19
     ef0:	30 e3       	ldi	r19, 0x30	; 48
     ef2:	2a 95       	dec	r18
     ef4:	e1 f7       	brne	.-8      	; 0xeee <__ftoa_engine+0x1e>
     ef6:	08 95       	ret
     ef8:	9f 3f       	cpi	r25, 0xFF	; 255
     efa:	30 f0       	brcs	.+12     	; 0xf08 <__ftoa_engine+0x38>
     efc:	80 38       	cpi	r24, 0x80	; 128
     efe:	71 05       	cpc	r23, r1
     f00:	61 05       	cpc	r22, r1
     f02:	09 f0       	breq	.+2      	; 0xf06 <__ftoa_engine+0x36>
     f04:	3c 5f       	subi	r19, 0xFC	; 252
     f06:	3c 5f       	subi	r19, 0xFC	; 252
     f08:	3d 93       	st	X+, r19
     f0a:	91 30       	cpi	r25, 0x01	; 1
     f0c:	08 f0       	brcs	.+2      	; 0xf10 <__ftoa_engine+0x40>
     f0e:	80 68       	ori	r24, 0x80	; 128
     f10:	91 1d       	adc	r25, r1
     f12:	df 93       	push	r29
     f14:	cf 93       	push	r28
     f16:	1f 93       	push	r17
     f18:	0f 93       	push	r16
     f1a:	ff 92       	push	r15
     f1c:	ef 92       	push	r14
     f1e:	19 2f       	mov	r17, r25
     f20:	98 7f       	andi	r25, 0xF8	; 248
     f22:	96 95       	lsr	r25
     f24:	e9 2f       	mov	r30, r25
     f26:	96 95       	lsr	r25
     f28:	96 95       	lsr	r25
     f2a:	e9 0f       	add	r30, r25
     f2c:	ff 27       	eor	r31, r31
     f2e:	ea 54       	subi	r30, 0x4A	; 74
     f30:	ff 4f       	sbci	r31, 0xFF	; 255
     f32:	99 27       	eor	r25, r25
     f34:	33 27       	eor	r19, r19
     f36:	ee 24       	eor	r14, r14
     f38:	ff 24       	eor	r15, r15
     f3a:	a7 01       	movw	r20, r14
     f3c:	e7 01       	movw	r28, r14
     f3e:	05 90       	lpm	r0, Z+
     f40:	08 94       	sec
     f42:	07 94       	ror	r0
     f44:	28 f4       	brcc	.+10     	; 0xf50 <__ftoa_engine+0x80>
     f46:	36 0f       	add	r19, r22
     f48:	e7 1e       	adc	r14, r23
     f4a:	f8 1e       	adc	r15, r24
     f4c:	49 1f       	adc	r20, r25
     f4e:	51 1d       	adc	r21, r1
     f50:	66 0f       	add	r22, r22
     f52:	77 1f       	adc	r23, r23
     f54:	88 1f       	adc	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	06 94       	lsr	r0
     f5a:	a1 f7       	brne	.-24     	; 0xf44 <__ftoa_engine+0x74>
     f5c:	05 90       	lpm	r0, Z+
     f5e:	07 94       	ror	r0
     f60:	28 f4       	brcc	.+10     	; 0xf6c <__ftoa_engine+0x9c>
     f62:	e7 0e       	add	r14, r23
     f64:	f8 1e       	adc	r15, r24
     f66:	49 1f       	adc	r20, r25
     f68:	56 1f       	adc	r21, r22
     f6a:	c1 1d       	adc	r28, r1
     f6c:	77 0f       	add	r23, r23
     f6e:	88 1f       	adc	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	66 1f       	adc	r22, r22
     f74:	06 94       	lsr	r0
     f76:	a1 f7       	brne	.-24     	; 0xf60 <__ftoa_engine+0x90>
     f78:	05 90       	lpm	r0, Z+
     f7a:	07 94       	ror	r0
     f7c:	28 f4       	brcc	.+10     	; 0xf88 <__ftoa_engine+0xb8>
     f7e:	f8 0e       	add	r15, r24
     f80:	49 1f       	adc	r20, r25
     f82:	56 1f       	adc	r21, r22
     f84:	c7 1f       	adc	r28, r23
     f86:	d1 1d       	adc	r29, r1
     f88:	88 0f       	add	r24, r24
     f8a:	99 1f       	adc	r25, r25
     f8c:	66 1f       	adc	r22, r22
     f8e:	77 1f       	adc	r23, r23
     f90:	06 94       	lsr	r0
     f92:	a1 f7       	brne	.-24     	; 0xf7c <__ftoa_engine+0xac>
     f94:	05 90       	lpm	r0, Z+
     f96:	07 94       	ror	r0
     f98:	20 f4       	brcc	.+8      	; 0xfa2 <__ftoa_engine+0xd2>
     f9a:	49 0f       	add	r20, r25
     f9c:	56 1f       	adc	r21, r22
     f9e:	c7 1f       	adc	r28, r23
     fa0:	d8 1f       	adc	r29, r24
     fa2:	99 0f       	add	r25, r25
     fa4:	66 1f       	adc	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	88 1f       	adc	r24, r24
     faa:	06 94       	lsr	r0
     fac:	a9 f7       	brne	.-22     	; 0xf98 <__ftoa_engine+0xc8>
     fae:	84 91       	lpm	r24, Z
     fb0:	10 95       	com	r17
     fb2:	17 70       	andi	r17, 0x07	; 7
     fb4:	41 f0       	breq	.+16     	; 0xfc6 <__ftoa_engine+0xf6>
     fb6:	d6 95       	lsr	r29
     fb8:	c7 95       	ror	r28
     fba:	57 95       	ror	r21
     fbc:	47 95       	ror	r20
     fbe:	f7 94       	ror	r15
     fc0:	e7 94       	ror	r14
     fc2:	1a 95       	dec	r17
     fc4:	c1 f7       	brne	.-16     	; 0xfb6 <__ftoa_engine+0xe6>
     fc6:	ec e5       	ldi	r30, 0x5C	; 92
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	68 94       	set
     fcc:	15 90       	lpm	r1, Z+
     fce:	15 91       	lpm	r17, Z+
     fd0:	35 91       	lpm	r19, Z+
     fd2:	65 91       	lpm	r22, Z+
     fd4:	95 91       	lpm	r25, Z+
     fd6:	05 90       	lpm	r0, Z+
     fd8:	7f e2       	ldi	r23, 0x2F	; 47
     fda:	73 95       	inc	r23
     fdc:	e1 18       	sub	r14, r1
     fde:	f1 0a       	sbc	r15, r17
     fe0:	43 0b       	sbc	r20, r19
     fe2:	56 0b       	sbc	r21, r22
     fe4:	c9 0b       	sbc	r28, r25
     fe6:	d0 09       	sbc	r29, r0
     fe8:	c0 f7       	brcc	.-16     	; 0xfda <__ftoa_engine+0x10a>
     fea:	e1 0c       	add	r14, r1
     fec:	f1 1e       	adc	r15, r17
     fee:	43 1f       	adc	r20, r19
     ff0:	56 1f       	adc	r21, r22
     ff2:	c9 1f       	adc	r28, r25
     ff4:	d0 1d       	adc	r29, r0
     ff6:	7e f4       	brtc	.+30     	; 0x1016 <__ftoa_engine+0x146>
     ff8:	70 33       	cpi	r23, 0x30	; 48
     ffa:	11 f4       	brne	.+4      	; 0x1000 <__ftoa_engine+0x130>
     ffc:	8a 95       	dec	r24
     ffe:	e6 cf       	rjmp	.-52     	; 0xfcc <__ftoa_engine+0xfc>
    1000:	e8 94       	clt
    1002:	01 50       	subi	r16, 0x01	; 1
    1004:	30 f0       	brcs	.+12     	; 0x1012 <__ftoa_engine+0x142>
    1006:	08 0f       	add	r16, r24
    1008:	0a f4       	brpl	.+2      	; 0x100c <__ftoa_engine+0x13c>
    100a:	00 27       	eor	r16, r16
    100c:	02 17       	cp	r16, r18
    100e:	08 f4       	brcc	.+2      	; 0x1012 <__ftoa_engine+0x142>
    1010:	20 2f       	mov	r18, r16
    1012:	23 95       	inc	r18
    1014:	02 2f       	mov	r16, r18
    1016:	7a 33       	cpi	r23, 0x3A	; 58
    1018:	28 f0       	brcs	.+10     	; 0x1024 <__ftoa_engine+0x154>
    101a:	79 e3       	ldi	r23, 0x39	; 57
    101c:	7d 93       	st	X+, r23
    101e:	2a 95       	dec	r18
    1020:	e9 f7       	brne	.-6      	; 0x101c <__ftoa_engine+0x14c>
    1022:	10 c0       	rjmp	.+32     	; 0x1044 <__ftoa_engine+0x174>
    1024:	7d 93       	st	X+, r23
    1026:	2a 95       	dec	r18
    1028:	89 f6       	brne	.-94     	; 0xfcc <__ftoa_engine+0xfc>
    102a:	06 94       	lsr	r0
    102c:	97 95       	ror	r25
    102e:	67 95       	ror	r22
    1030:	37 95       	ror	r19
    1032:	17 95       	ror	r17
    1034:	17 94       	ror	r1
    1036:	e1 18       	sub	r14, r1
    1038:	f1 0a       	sbc	r15, r17
    103a:	43 0b       	sbc	r20, r19
    103c:	56 0b       	sbc	r21, r22
    103e:	c9 0b       	sbc	r28, r25
    1040:	d0 09       	sbc	r29, r0
    1042:	98 f0       	brcs	.+38     	; 0x106a <__ftoa_engine+0x19a>
    1044:	23 95       	inc	r18
    1046:	7e 91       	ld	r23, -X
    1048:	73 95       	inc	r23
    104a:	7a 33       	cpi	r23, 0x3A	; 58
    104c:	08 f0       	brcs	.+2      	; 0x1050 <__ftoa_engine+0x180>
    104e:	70 e3       	ldi	r23, 0x30	; 48
    1050:	7c 93       	st	X, r23
    1052:	20 13       	cpse	r18, r16
    1054:	b8 f7       	brcc	.-18     	; 0x1044 <__ftoa_engine+0x174>
    1056:	7e 91       	ld	r23, -X
    1058:	70 61       	ori	r23, 0x10	; 16
    105a:	7d 93       	st	X+, r23
    105c:	30 f0       	brcs	.+12     	; 0x106a <__ftoa_engine+0x19a>
    105e:	83 95       	inc	r24
    1060:	71 e3       	ldi	r23, 0x31	; 49
    1062:	7d 93       	st	X+, r23
    1064:	70 e3       	ldi	r23, 0x30	; 48
    1066:	2a 95       	dec	r18
    1068:	e1 f7       	brne	.-8      	; 0x1062 <__ftoa_engine+0x192>
    106a:	11 24       	eor	r1, r1
    106c:	ef 90       	pop	r14
    106e:	ff 90       	pop	r15
    1070:	0f 91       	pop	r16
    1072:	1f 91       	pop	r17
    1074:	cf 91       	pop	r28
    1076:	df 91       	pop	r29
    1078:	99 27       	eor	r25, r25
    107a:	87 fd       	sbrc	r24, 7
    107c:	90 95       	com	r25
    107e:	08 95       	ret

00001080 <strnlen_P>:
    1080:	fc 01       	movw	r30, r24
    1082:	05 90       	lpm	r0, Z+
    1084:	61 50       	subi	r22, 0x01	; 1
    1086:	70 40       	sbci	r23, 0x00	; 0
    1088:	01 10       	cpse	r0, r1
    108a:	d8 f7       	brcc	.-10     	; 0x1082 <strnlen_P+0x2>
    108c:	80 95       	com	r24
    108e:	90 95       	com	r25
    1090:	8e 0f       	add	r24, r30
    1092:	9f 1f       	adc	r25, r31
    1094:	08 95       	ret

00001096 <strnlen>:
    1096:	fc 01       	movw	r30, r24
    1098:	61 50       	subi	r22, 0x01	; 1
    109a:	70 40       	sbci	r23, 0x00	; 0
    109c:	01 90       	ld	r0, Z+
    109e:	01 10       	cpse	r0, r1
    10a0:	d8 f7       	brcc	.-10     	; 0x1098 <strnlen+0x2>
    10a2:	80 95       	com	r24
    10a4:	90 95       	com	r25
    10a6:	8e 0f       	add	r24, r30
    10a8:	9f 1f       	adc	r25, r31
    10aa:	08 95       	ret

000010ac <fputc>:
    10ac:	0f 93       	push	r16
    10ae:	1f 93       	push	r17
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	fb 01       	movw	r30, r22
    10b6:	23 81       	ldd	r18, Z+3	; 0x03
    10b8:	21 fd       	sbrc	r18, 1
    10ba:	03 c0       	rjmp	.+6      	; 0x10c2 <fputc+0x16>
    10bc:	8f ef       	ldi	r24, 0xFF	; 255
    10be:	9f ef       	ldi	r25, 0xFF	; 255
    10c0:	2c c0       	rjmp	.+88     	; 0x111a <fputc+0x6e>
    10c2:	22 ff       	sbrs	r18, 2
    10c4:	16 c0       	rjmp	.+44     	; 0x10f2 <fputc+0x46>
    10c6:	46 81       	ldd	r20, Z+6	; 0x06
    10c8:	57 81       	ldd	r21, Z+7	; 0x07
    10ca:	24 81       	ldd	r18, Z+4	; 0x04
    10cc:	35 81       	ldd	r19, Z+5	; 0x05
    10ce:	42 17       	cp	r20, r18
    10d0:	53 07       	cpc	r21, r19
    10d2:	44 f4       	brge	.+16     	; 0x10e4 <fputc+0x38>
    10d4:	a0 81       	ld	r26, Z
    10d6:	b1 81       	ldd	r27, Z+1	; 0x01
    10d8:	9d 01       	movw	r18, r26
    10da:	2f 5f       	subi	r18, 0xFF	; 255
    10dc:	3f 4f       	sbci	r19, 0xFF	; 255
    10de:	31 83       	std	Z+1, r19	; 0x01
    10e0:	20 83       	st	Z, r18
    10e2:	8c 93       	st	X, r24
    10e4:	26 81       	ldd	r18, Z+6	; 0x06
    10e6:	37 81       	ldd	r19, Z+7	; 0x07
    10e8:	2f 5f       	subi	r18, 0xFF	; 255
    10ea:	3f 4f       	sbci	r19, 0xFF	; 255
    10ec:	37 83       	std	Z+7, r19	; 0x07
    10ee:	26 83       	std	Z+6, r18	; 0x06
    10f0:	14 c0       	rjmp	.+40     	; 0x111a <fputc+0x6e>
    10f2:	8b 01       	movw	r16, r22
    10f4:	ec 01       	movw	r28, r24
    10f6:	fb 01       	movw	r30, r22
    10f8:	00 84       	ldd	r0, Z+8	; 0x08
    10fa:	f1 85       	ldd	r31, Z+9	; 0x09
    10fc:	e0 2d       	mov	r30, r0
    10fe:	09 95       	icall
    1100:	89 2b       	or	r24, r25
    1102:	e1 f6       	brne	.-72     	; 0x10bc <fputc+0x10>
    1104:	d8 01       	movw	r26, r16
    1106:	16 96       	adiw	r26, 0x06	; 6
    1108:	8d 91       	ld	r24, X+
    110a:	9c 91       	ld	r25, X
    110c:	17 97       	sbiw	r26, 0x07	; 7
    110e:	01 96       	adiw	r24, 0x01	; 1
    1110:	17 96       	adiw	r26, 0x07	; 7
    1112:	9c 93       	st	X, r25
    1114:	8e 93       	st	-X, r24
    1116:	16 97       	sbiw	r26, 0x06	; 6
    1118:	ce 01       	movw	r24, r28
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	08 95       	ret

00001124 <sprintf>:
    1124:	ae e0       	ldi	r26, 0x0E	; 14
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e8 e9       	ldi	r30, 0x98	; 152
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__prologue_saves__+0x1c>
    1130:	0d 89       	ldd	r16, Y+21	; 0x15
    1132:	1e 89       	ldd	r17, Y+22	; 0x16
    1134:	86 e0       	ldi	r24, 0x06	; 6
    1136:	8c 83       	std	Y+4, r24	; 0x04
    1138:	1a 83       	std	Y+2, r17	; 0x02
    113a:	09 83       	std	Y+1, r16	; 0x01
    113c:	8f ef       	ldi	r24, 0xFF	; 255
    113e:	9f e7       	ldi	r25, 0x7F	; 127
    1140:	9e 83       	std	Y+6, r25	; 0x06
    1142:	8d 83       	std	Y+5, r24	; 0x05
    1144:	ae 01       	movw	r20, r28
    1146:	47 5e       	subi	r20, 0xE7	; 231
    1148:	5f 4f       	sbci	r21, 0xFF	; 255
    114a:	6f 89       	ldd	r22, Y+23	; 0x17
    114c:	78 8d       	ldd	r23, Y+24	; 0x18
    114e:	ce 01       	movw	r24, r28
    1150:	01 96       	adiw	r24, 0x01	; 1
    1152:	0e 94 b4 03 	call	0x768	; 0x768 <vfprintf>
    1156:	ef 81       	ldd	r30, Y+7	; 0x07
    1158:	f8 85       	ldd	r31, Y+8	; 0x08
    115a:	e0 0f       	add	r30, r16
    115c:	f1 1f       	adc	r31, r17
    115e:	10 82       	st	Z, r1
    1160:	2e 96       	adiw	r28, 0x0e	; 14
    1162:	e4 e0       	ldi	r30, 0x04	; 4
    1164:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__epilogue_restores__+0x1c>

00001168 <__ultoa_invert>:
    1168:	fa 01       	movw	r30, r20
    116a:	aa 27       	eor	r26, r26
    116c:	28 30       	cpi	r18, 0x08	; 8
    116e:	51 f1       	breq	.+84     	; 0x11c4 <__ultoa_invert+0x5c>
    1170:	20 31       	cpi	r18, 0x10	; 16
    1172:	81 f1       	breq	.+96     	; 0x11d4 <__ultoa_invert+0x6c>
    1174:	e8 94       	clt
    1176:	6f 93       	push	r22
    1178:	6e 7f       	andi	r22, 0xFE	; 254
    117a:	6e 5f       	subi	r22, 0xFE	; 254
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	8f 4f       	sbci	r24, 0xFF	; 255
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	af 4f       	sbci	r26, 0xFF	; 255
    1184:	b1 e0       	ldi	r27, 0x01	; 1
    1186:	3e d0       	rcall	.+124    	; 0x1204 <__ultoa_invert+0x9c>
    1188:	b4 e0       	ldi	r27, 0x04	; 4
    118a:	3c d0       	rcall	.+120    	; 0x1204 <__ultoa_invert+0x9c>
    118c:	67 0f       	add	r22, r23
    118e:	78 1f       	adc	r23, r24
    1190:	89 1f       	adc	r24, r25
    1192:	9a 1f       	adc	r25, r26
    1194:	a1 1d       	adc	r26, r1
    1196:	68 0f       	add	r22, r24
    1198:	79 1f       	adc	r23, r25
    119a:	8a 1f       	adc	r24, r26
    119c:	91 1d       	adc	r25, r1
    119e:	a1 1d       	adc	r26, r1
    11a0:	6a 0f       	add	r22, r26
    11a2:	71 1d       	adc	r23, r1
    11a4:	81 1d       	adc	r24, r1
    11a6:	91 1d       	adc	r25, r1
    11a8:	a1 1d       	adc	r26, r1
    11aa:	20 d0       	rcall	.+64     	; 0x11ec <__ultoa_invert+0x84>
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <__ultoa_invert+0x48>
    11ae:	68 94       	set
    11b0:	3f 91       	pop	r19
    11b2:	2a e0       	ldi	r18, 0x0A	; 10
    11b4:	26 9f       	mul	r18, r22
    11b6:	11 24       	eor	r1, r1
    11b8:	30 19       	sub	r19, r0
    11ba:	30 5d       	subi	r19, 0xD0	; 208
    11bc:	31 93       	st	Z+, r19
    11be:	de f6       	brtc	.-74     	; 0x1176 <__ultoa_invert+0xe>
    11c0:	cf 01       	movw	r24, r30
    11c2:	08 95       	ret
    11c4:	46 2f       	mov	r20, r22
    11c6:	47 70       	andi	r20, 0x07	; 7
    11c8:	40 5d       	subi	r20, 0xD0	; 208
    11ca:	41 93       	st	Z+, r20
    11cc:	b3 e0       	ldi	r27, 0x03	; 3
    11ce:	0f d0       	rcall	.+30     	; 0x11ee <__ultoa_invert+0x86>
    11d0:	c9 f7       	brne	.-14     	; 0x11c4 <__ultoa_invert+0x5c>
    11d2:	f6 cf       	rjmp	.-20     	; 0x11c0 <__ultoa_invert+0x58>
    11d4:	46 2f       	mov	r20, r22
    11d6:	4f 70       	andi	r20, 0x0F	; 15
    11d8:	40 5d       	subi	r20, 0xD0	; 208
    11da:	4a 33       	cpi	r20, 0x3A	; 58
    11dc:	18 f0       	brcs	.+6      	; 0x11e4 <__ultoa_invert+0x7c>
    11de:	49 5d       	subi	r20, 0xD9	; 217
    11e0:	31 fd       	sbrc	r19, 1
    11e2:	40 52       	subi	r20, 0x20	; 32
    11e4:	41 93       	st	Z+, r20
    11e6:	02 d0       	rcall	.+4      	; 0x11ec <__ultoa_invert+0x84>
    11e8:	a9 f7       	brne	.-22     	; 0x11d4 <__ultoa_invert+0x6c>
    11ea:	ea cf       	rjmp	.-44     	; 0x11c0 <__ultoa_invert+0x58>
    11ec:	b4 e0       	ldi	r27, 0x04	; 4
    11ee:	a6 95       	lsr	r26
    11f0:	97 95       	ror	r25
    11f2:	87 95       	ror	r24
    11f4:	77 95       	ror	r23
    11f6:	67 95       	ror	r22
    11f8:	ba 95       	dec	r27
    11fa:	c9 f7       	brne	.-14     	; 0x11ee <__ultoa_invert+0x86>
    11fc:	00 97       	sbiw	r24, 0x00	; 0
    11fe:	61 05       	cpc	r22, r1
    1200:	71 05       	cpc	r23, r1
    1202:	08 95       	ret
    1204:	9b 01       	movw	r18, r22
    1206:	ac 01       	movw	r20, r24
    1208:	0a 2e       	mov	r0, r26
    120a:	06 94       	lsr	r0
    120c:	57 95       	ror	r21
    120e:	47 95       	ror	r20
    1210:	37 95       	ror	r19
    1212:	27 95       	ror	r18
    1214:	ba 95       	dec	r27
    1216:	c9 f7       	brne	.-14     	; 0x120a <__ultoa_invert+0xa2>
    1218:	62 0f       	add	r22, r18
    121a:	73 1f       	adc	r23, r19
    121c:	84 1f       	adc	r24, r20
    121e:	95 1f       	adc	r25, r21
    1220:	a0 1d       	adc	r26, r0
    1222:	08 95       	ret

00001224 <_exit>:
    1224:	f8 94       	cli

00001226 <__stop_program>:
    1226:	ff cf       	rjmp	.-2      	; 0x1226 <__stop_program>
